{
  "openapi" : "3.0.1",
  "info" : {
    "contact" : {
      "email" : "developer@rhombussystems.com"
    },
    "description" : "This API is for use by Rhombus customers and partners.",
    "title" : "Rhombus API",
    "version" : "1.0"
  },
  "servers" : [ {
    "description" : "Production Server",
    "url" : "https://api2.rhombussystems.com"
  } ],
  "security" : [ {
    "ApiKeyAuth" : [ ]
  } ],
  "paths" : {
    "/api/accesscontrol/addUsersToAccessControlGroup" : {
      "post" : {
        "description" : "Adds specified users to an access control group",
        "operationId" : "addUsersToAccessControlGroup",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Group_AddUsersToOrgGroupWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Group_AddUsersToOrgGroupWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Add users to access control group",
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/assignAccessControlCredential" : {
      "post" : {
        "description" : "Assign a currently unassigned credential to a user",
        "operationId" : "assignAccessControlCredential",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_credentials_AssignAccessControlCredentialWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_credentials_AssignAccessControlCredentialWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Assign access control credential",
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/createAccessControlCredentialByHexValueAndType" : {
      "post" : {
        "description" : "Create a credential based on a hex value and credential type. Useful if you see an unauthorized badge event, know its type and want to import it",
        "operationId" : "createAccessControlCredentialByHexValueAndType",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_credentials_CreateAccessControlCredentialByHexValueAndTypeWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_credentials_CreateAccessControlCredentialByHexValueAndTypeWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create access control credential by hex value and type",
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/createAccessControlGroup" : {
      "post" : {
        "description" : "Creates an access control group",
        "operationId" : "createAccessControlGroup",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Group_CreateOrgGroupWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Group_CreateOrgGroupWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create access control group",
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/createAccessGrant" : {
      "post" : {
        "description" : "Create a location access grant",
        "operationId" : "createAccessGrant",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_accessgrant_CreateAccessGrantWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_accessgrant_CreateAccessGrantWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create access grant",
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/createAccessRevocation" : {
      "post" : {
        "description" : "Create a location access revocation",
        "operationId" : "createAccessRevocation",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_accessrevocation_CreateAccessRevocationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_accessrevocation_CreateAccessRevocationWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create access revocation",
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/createRhombusSecureCsnCredential" : {
      "post" : {
        "description" : "Create a rhombus secure csn credential (Rhombus Badge)",
        "operationId" : "createRhombusSecureCsnCredential",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_credentials_CreateRhombusSecureCsnCredentialWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_credentials_CreateRhombusSecureCsnCredentialWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create Rhombus Secure CSN credential",
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/createStandardCsnCredential" : {
      "post" : {
        "description" : "Create a standard csn credential (Third Party Badge)",
        "operationId" : "createStandardCsnCredential",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_credentials_CreateStandardCsnCredentialWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_credentials_CreateStandardCsnCredentialWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create standard CSN credential",
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/createWiegand64BitRawCredential" : {
      "post" : {
        "description" : "Create a 64bit raw wiegand credential. Used when an explicit endpoint for the wiegand format is not otherwise defined.",
        "operationId" : "createWiegand64BitRawCredential",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_credentials_CreateWiegand64BitRawCredentialWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_credentials_CreateWiegand64BitRawCredentialWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create 64-bit raw Wiegand credential",
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/createWiegandCredential" : {
      "post" : {
        "deprecated" : true,
        "description" : "Create a wiegand credential",
        "operationId" : "createWiegandCredential",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_credentials_CreateWiegandCredentialWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_credentials_CreateWiegandCredentialWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create Wiegand credential",
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/createWiegandD10202Credential" : {
      "post" : {
        "description" : "Create a D10202 wiegand credential",
        "operationId" : "createWiegandD10202Credential",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_credentials_CreateWiegandD10202CredentialWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_credentials_CreateWiegandD10202CredentialWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create D10202 Wiegand credential",
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/createWiegandH10301Credential" : {
      "post" : {
        "description" : "Create a H10301 wiegand credential",
        "operationId" : "createWiegandH10301Credential",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_credentials_CreateWiegandH10301CredentialWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_credentials_CreateWiegandH10301CredentialWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create H10301 Wiegand credential",
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/createWiegandH10304Credential" : {
      "post" : {
        "description" : "Create a H10304 wiegand credential",
        "operationId" : "createWiegandH10304Credential",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_credentials_CreateWiegandH10304CredentialWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_credentials_CreateWiegandH10304CredentialWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create H10304 Wiegand credential",
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/deleteAccessControlCredential" : {
      "post" : {
        "description" : "Delete an access control credential. It is recommended to revoke a credential rather than delete it to preserve credential history",
        "operationId" : "deleteAccessControlCredential",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_credentials_DeleteAccessControlCredentialWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_credentials_DeleteAccessControlCredentialWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete access control credential",
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/deleteAccessControlGroup" : {
      "post" : {
        "description" : "Delete an access control group",
        "operationId" : "deleteAccessControlGroup",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Group_DeleteOrgGroupWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Group_DeleteOrgGroupWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete access control group",
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/deleteLocationAccessGrant" : {
      "post" : {
        "description" : "Deletes a location access grant",
        "operationId" : "deleteLocationAccessGrant",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_accessgrant_DeleteLocationAccessGrantWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_accessgrant_DeleteLocationAccessGrantWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete location access grant",
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/deleteLocationAccessRevocation" : {
      "post" : {
        "description" : "Deletes a location access revocation",
        "operationId" : "deleteLocationAccessRevocation",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_accessrevocation_DeleteLocationAccessRevocationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_accessrevocation_DeleteLocationAccessRevocationWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete location access revocation",
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/deleteUnassignedAccessControlCredential" : {
      "post" : {
        "description" : "Delete an unassigned access control credential. The credential must be unassigned (revoked) before this method can be called. History of the credential is maintained but it will no longer be returned as an unassigned credential.",
        "operationId" : "deleteUnassignedAccessControlCredential",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_credentials_DeleteUnassignedAccessControlCredentialWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_credentials_DeleteUnassignedAccessControlCredentialWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete unassigned access control credential",
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/findAccessControlCredentialByOrg" : {
      "post" : {
        "description" : "Find all access control credentials in the org",
        "operationId" : "findAccessControlCredentialByOrg",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_credentials_FindAccessControlCredentialByOrgWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_credentials_FindAccessControlCredentialByOrgWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Find access control credentials by org",
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/findAccessControlCredentialByUser" : {
      "post" : {
        "description" : "Find all access control credentials for the specified user",
        "operationId" : "findAccessControlCredentialByUser",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_credentials_FindAccessControlCredentialByUserWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_credentials_FindAccessControlCredentialByUserWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Find access control credentials by user",
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/findAccessControlCredentialByUsers" : {
      "post" : {
        "description" : "Find all access control credentials for the specified users",
        "operationId" : "findAccessControlCredentialByUsers",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_credentials_FindAccessControlCredentialByUsersWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_credentials_FindAccessControlCredentialByUsersWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Find access control credentials by users",
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/findAccessControlGroupByExactName" : {
      "post" : {
        "description" : "Retrieve the access control group with the specified name",
        "operationId" : "findAccessControlGroupByExactName",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Group_FindOrgGroupsByExactNameWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Group_FindOrgGroupsByExactNameWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Find access control group by exact name",
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/findAccessControlGroupMembershipsByUser" : {
      "post" : {
        "description" : "Find all access control group memberships by user",
        "operationId" : "findAccessControlGroupMembershipsByUser",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Group_FindOrgGroupMembershipsByUserWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Group_FindOrgGroupMembershipsByUserWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Find access control group memberships by user",
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/findAccessControlGroupsByNamePrefix" : {
      "post" : {
        "description" : "Retrieve all access control groups with a name starting with the specified prefix",
        "operationId" : "findAccessControlGroupsByNamePrefix",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Group_FindOrgGroupsByNamePrefixWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Group_FindOrgGroupsByNamePrefixWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Find access control groups by name prefix",
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/findAccessControlGroupsByOrg" : {
      "post" : {
        "description" : "Retrieve all access control groups defined in the org",
        "operationId" : "findAccessControlGroupsByOrg",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Group_FindOrgGroupsByOrgWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Group_FindOrgGroupsByOrgWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Find access control groups by org",
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/findAccessControlGroupsByUserMembership" : {
      "post" : {
        "description" : "Find all access control groups a user belongs to",
        "operationId" : "findAccessControlGroupsByUserMembership",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Group_FindOrgGroupsByUserMembershipWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Group_FindOrgGroupsByUserMembershipWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Find access control groups by user membership",
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/findAllUsersForAccessControlGroup" : {
      "post" : {
        "description" : "Find all users belonging to an access control group",
        "operationId" : "findAllUsersForAccessControlGroup",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Group_FindAllUsersForOrgGroupWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Group_FindAllUsersForOrgGroupWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Find all users for access control group",
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/findCredentialHistoryByCredentialHexValue" : {
      "post" : {
        "description" : "Retrieves all credentials that have owned the credential hex value. Expect at most 1 valid/active credential and the rest are revoked",
        "operationId" : "findCredentialHistoryByCredentialHexValue",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_credentials_FindCredentialHistoryByCredentialHexValueWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_credentials_FindCredentialHistoryByCredentialHexValueWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Find credential history by credential hex value",
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/findCredentialHistoryByCredentialValue" : {
      "post" : {
        "description" : "Retrieves all credentials that have owned the credential value.",
        "operationId" : "findCredentialHistoryByCredentialValue",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_credentials_FindCredentialHistoryByCredentialValueWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_credentials_FindCredentialHistoryByCredentialValueWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Find credential history by credential value",
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/findCredentialHistoryByUser" : {
      "post" : {
        "description" : "Retrieves all credentials both current and revoked that were at some point assigned to the specified user",
        "operationId" : "findCredentialHistoryByUser",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_credentials_FindCredentialHistoryByUserWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_credentials_FindCredentialHistoryByUserWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Find credential history by user",
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/findLocationAccessGrantsByAccessControlledDoor" : {
      "post" : {
        "description" : "Finds location access grants by the specified access controlled door",
        "operationId" : "findLocationAccessGrantsByAccessControlledDoor",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_accessgrant_FindLocationAccessGrantsByAccessControlledDoorWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_accessgrant_FindLocationAccessGrantsByAccessControlledDoorWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Find location access grants by access controlled door",
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/findLocationAccessGrantsByDoorLabel" : {
      "post" : {
        "description" : "Finds location access grants by the specified door label",
        "operationId" : "findLocationAccessGrantsByDoorLabel",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_accessgrant_FindLocationAccessGrantsByDoorLabelWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_accessgrant_FindLocationAccessGrantsByDoorLabelWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Find location access grants by door label",
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/findLocationAccessGrantsByGroup" : {
      "post" : {
        "description" : "Finds location access grants by the specified group",
        "operationId" : "findLocationAccessGrantsByGroup",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_accessgrant_FindLocationAccessGrantsByGroupWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_accessgrant_FindLocationAccessGrantsByGroupWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Find location access grants by group",
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/findLocationAccessGrantsByLocation" : {
      "post" : {
        "description" : "Finds location access grants by the specified location",
        "operationId" : "findLocationAccessGrantsByLocation",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_accessgrant_FindLocationAccessGrantsByLocationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_accessgrant_FindLocationAccessGrantsByLocationWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Find location access grants by location",
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/findLocationAccessGrantsByLocationAndUser" : {
      "post" : {
        "description" : "Finds location access grants by the specified location and user",
        "operationId" : "findLocationAccessGrantsByLocationAndUser",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_accessgrant_FindLocationAccessGrantsByLocationAndUserWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_accessgrant_FindLocationAccessGrantsByLocationAndUserWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Find location access grants by location and user",
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/findLocationAccessGrantsByOrg" : {
      "post" : {
        "description" : "Finds all location access grants in the org",
        "operationId" : "findLocationAccessGrantsByOrg",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_accessgrant_FindLocationAccessGrantsByOrgWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_accessgrant_FindLocationAccessGrantsByOrgWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Find location access grants by org",
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/findLocationAccessGrantsByUser" : {
      "post" : {
        "description" : "Finds location access grants by the specified user",
        "operationId" : "findLocationAccessGrantsByUser",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_accessgrant_FindLocationAccessGrantsByUserWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_accessgrant_FindLocationAccessGrantsByUserWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Find location access grants by user",
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/findLocationAccessRevocationsByAccessControlledDoor" : {
      "post" : {
        "description" : "Finds location access revocations by the specified access controlled door",
        "operationId" : "findLocationAccessRevocationsByAccessControlledDoor",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_accessrevocation_FindLocationAccessRevocationsByAccessControlledDoorWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_accessrevocation_FindLocationAccessRevocationsByAccessControlledDoorWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Find location access revocations by access controlled door",
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/findLocationAccessRevocationsByDoorLabel" : {
      "post" : {
        "description" : "Finds location access revocation by the specified door label",
        "operationId" : "findLocationAccessRevocationsByDoorLabel",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_accessrevocation_FindLocationAccessRevocationsByDoorLabelWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_accessrevocation_FindLocationAccessRevocationsByDoorLabelWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Find location access revocations by door label",
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/findLocationAccessRevocationsByGroup" : {
      "post" : {
        "description" : "Finds location access revocations by the specified group",
        "operationId" : "findLocationAccessRevocationsByGroup",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_accessrevocation_FindLocationAccessRevocationsByGroupWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_accessrevocation_FindLocationAccessRevocationsByGroupWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Find location access revocations by group",
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/findLocationAccessRevocationsByOrg" : {
      "post" : {
        "description" : "Finds all location access revocations in the org",
        "operationId" : "findLocationAccessRevocationsByOrg",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_accessrevocation_FindLocationAccessRevocationsByOrgWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_accessrevocation_FindLocationAccessRevocationsByOrgWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Find location access revocations by org",
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/findLocationAccessRevocationsByUser" : {
      "post" : {
        "description" : "Finds location access revocations by the specified user",
        "operationId" : "findLocationAccessRevocationsByUser",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_accessrevocation_FindLocationAccessRevocationsByUserWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_accessrevocation_FindLocationAccessRevocationsByUserWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Find location access revocations by user",
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/getLocationAccessGrant" : {
      "post" : {
        "description" : "Retrieve a location access grant by id",
        "operationId" : "getLocationAccessGrant",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_accessgrant_GetLocationAccessGrantWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_accessgrant_GetLocationAccessGrantWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get location access grant",
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/getLocationAccessRevocation" : {
      "post" : {
        "description" : "Retrieve a location access revocation by id",
        "operationId" : "getLocationAccessRevocation",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_accessrevocation_GetLocationAccessRevocationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_accessrevocation_GetLocationAccessRevocationWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get location access revocation",
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/getRhombusSecureCsnCredentialDetails" : {
      "post" : {
        "description" : "Retrieves a rhombus secure csn credential including sensitive details",
        "operationId" : "getRhombusSecureCsnCredentialDetails",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_credentials_GetRhombusSecureCsnCredentialDetailsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_credentials_GetRhombusSecureCsnCredentialDetailsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get Rhombus Secure CSN credential details",
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/getStandardCsnCredentialDetails" : {
      "post" : {
        "description" : "Retrieves a standard csn credential including sensitive details",
        "operationId" : "getStandardCsnCredentialDetails",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_credentials_GetStandardCsnCredentialDetailsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_credentials_GetStandardCsnCredentialDetailsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get standard CSN credential details",
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/lockdownPlan/activateLockdownForLocation" : {
      "post" : {
        "description" : "Activate lockdown for the specified location",
        "operationId" : "activateLockdownForLocation",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_lockdownplan_ActivateLockdownForLocationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_lockdownplan_ActivateLockdownForLocationWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Activate lockdown for the specified location",
        "tags" : [ "Lockdown Plan Webservice" ]
      }
    },
    "/api/accesscontrol/lockdownPlan/createLocationLockdownPlan" : {
      "post" : {
        "description" : "Create location lockdown plan",
        "operationId" : "createLocationLockdownPlan",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_lockdownplan_CreateLocationLockdownPlanWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_lockdownplan_CreateLocationLockdownPlanWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create location lockdown plan",
        "tags" : [ "Lockdown Plan Webservice" ]
      }
    },
    "/api/accesscontrol/lockdownPlan/createLockdownRuleForLocation" : {
      "post" : {
        "description" : "Create (or update if ruleUuid is provided) a lockdown rule for the specified location",
        "operationId" : "createLockdownRuleForLocation",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_lockdownplan_CreateLockdownRuleForLocationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_lockdownplan_CreateLockdownRuleForLocationWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create lockdown rule for location",
        "tags" : [ "Lockdown Plan Webservice" ]
      }
    },
    "/api/accesscontrol/lockdownPlan/deactivateLockdownForLocation" : {
      "post" : {
        "description" : "Deactivate lockdown for the specified location",
        "operationId" : "deactivateLockdownForLocation",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_lockdownplan_DeactivateLockdownForLocationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_lockdownplan_DeactivateLockdownForLocationWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Deactivate lockdown for the specified location",
        "tags" : [ "Lockdown Plan Webservice" ]
      }
    },
    "/api/accesscontrol/lockdownPlan/deleteLocationLockdownState" : {
      "post" : {
        "description" : "Disables tracking lockdown state for the specified location",
        "operationId" : "deleteLocationLockdownState",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_lockdownplan_DeleteLocationLockdownStateWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_lockdownplan_DeleteLocationLockdownStateWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete location lockdown state",
        "tags" : [ "Lockdown Plan Webservice" ]
      }
    },
    "/api/accesscontrol/lockdownPlan/deleteLockdownPlan" : {
      "post" : {
        "description" : "Delete lockdown plan",
        "operationId" : "deleteLockdownPlan",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_lockdownplan_DeleteLockdownPlanWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_lockdownplan_DeleteLockdownPlanWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete lockdown plan",
        "tags" : [ "Lockdown Plan Webservice" ]
      }
    },
    "/api/accesscontrol/lockdownPlan/deleteLockdownRuleForLocation" : {
      "post" : {
        "description" : "Delete a lockdown rule for the specified location",
        "operationId" : "deleteLockdownRuleForLocation",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_lockdownplan_DeleteLockdownRuleForLocationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_lockdownplan_DeleteLockdownRuleForLocationWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete lockdown rule for location",
        "tags" : [ "Lockdown Plan Webservice" ]
      }
    },
    "/api/accesscontrol/lockdownPlan/disableLockdownTestModeForLocation" : {
      "post" : {
        "description" : "Disable test mode of lockdown for the specified location",
        "operationId" : "disableLockdownTestModeForLocation",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_lockdownplan_DisableLockdownTestModeForLocationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_lockdownplan_DisableLockdownTestModeForLocationWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Disable test mode of lockdown for the specified location",
        "tags" : [ "Lockdown Plan Webservice" ]
      }
    },
    "/api/accesscontrol/lockdownPlan/enableLockdownTestModeForLocation" : {
      "post" : {
        "description" : "Enable test mode of lockdown for the specified location",
        "operationId" : "enableLockdownTestModeForLocation",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_lockdownplan_EnableLockdownTestModeForLocationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_lockdownplan_EnableLockdownTestModeForLocationWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Enable test mode of lockdown for the specified location",
        "tags" : [ "Lockdown Plan Webservice" ]
      }
    },
    "/api/accesscontrol/lockdownPlan/findLocationLockdownEvents" : {
      "post" : {
        "description" : "Retrieve a list of lockdown events for the specified location",
        "operationId" : "findLocationLockdownEvents",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_lockdownplan_FindLocationLockdownEventsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_lockdownplan_FindLocationLockdownEventsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Find location lockdown events",
        "tags" : [ "Lockdown Plan Webservice" ]
      }
    },
    "/api/accesscontrol/lockdownPlan/findLocationLockdownStates" : {
      "post" : {
        "description" : "Finds the state of all lockdowns for the org",
        "operationId" : "findLocationLockdownStates",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_lockdownplan_FindLocationLockdownStatesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_lockdownplan_FindLocationLockdownStatesWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Find location lockdown states",
        "tags" : [ "Lockdown Plan Webservice" ]
      }
    },
    "/api/accesscontrol/lockdownPlan/findLockdownPlans" : {
      "post" : {
        "description" : "Find lockdown plans in the org",
        "operationId" : "findLockdownPlans",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_lockdownplan_FindLockdownPlansWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_lockdownplan_FindLockdownPlansWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Find lockdown plans in the org",
        "tags" : [ "Lockdown Plan Webservice" ]
      }
    },
    "/api/accesscontrol/lockdownPlan/findLockdownPlansByLocation" : {
      "post" : {
        "description" : "Find lockdown plans for the specified location",
        "operationId" : "findLockdownPlansByLocation",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_lockdownplan_FindLockdownPlansByLocationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_lockdownplan_FindLockdownPlansByLocationWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Find lockdown plans for the specified location",
        "tags" : [ "Lockdown Plan Webservice" ]
      }
    },
    "/api/accesscontrol/lockdownPlan/getLockdownPlan" : {
      "post" : {
        "description" : "Get lockdown plan",
        "operationId" : "getLockdownPlan",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_lockdownplan_GetLockdownPlanWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_lockdownplan_GetLockdownPlanWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get lockdown plan",
        "tags" : [ "Lockdown Plan Webservice" ]
      }
    },
    "/api/accesscontrol/lockdownPlan/getLockdownRulesForLocation" : {
      "post" : {
        "description" : "Get lockdown activation / deactivation rules for a location",
        "operationId" : "getLockdownRulesForLocation",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_lockdownplan_GetLockdownRulesForLocationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_lockdownplan_GetLockdownRulesForLocationWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get lockdown rules for location",
        "tags" : [ "Lockdown Plan Webservice" ]
      }
    },
    "/api/accesscontrol/lockdownPlan/getOrCreateLocationLockdownState" : {
      "post" : {
        "description" : "Retrieves an existing lockdown state or creates one for the specified location",
        "operationId" : "getOrCreateLocationLockdownState",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_lockdownplan_GetOrCreateLocationLockdownStateWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_lockdownplan_GetOrCreateLocationLockdownStateWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get or create location lockdown state",
        "tags" : [ "Lockdown Plan Webservice" ]
      }
    },
    "/api/accesscontrol/lockdownPlan/updateLocationLockdownPlan" : {
      "post" : {
        "description" : "Update location lockdown plan",
        "operationId" : "updateLocationLockdownPlan",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_lockdownplan_UpdateLocationLockdownPlanWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_lockdownplan_UpdateLocationLockdownPlanWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update location lockdown plan",
        "tags" : [ "Lockdown Plan Webservice" ]
      }
    },
    "/api/accesscontrol/removeUsersFromAccessControlGroup" : {
      "post" : {
        "description" : "Removes specified users from an access control group",
        "operationId" : "removeUsersFromAccessControlGroup",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Group_RemoveUsersFromOrgGroupWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Group_RemoveUsersFromOrgGroupWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Remove users from access control group",
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/revokeAccessControlCredential" : {
      "post" : {
        "description" : "Revokes an access control credential. Unlike suspension this will give up its claim on the credential value allowing another cred to claim it as its identifier",
        "operationId" : "revokeAccessControlCredential",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_credentials_RevokeAccessControlCredentialWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_credentials_RevokeAccessControlCredentialWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Revoke access control credential",
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/suspendAccessControlCredential" : {
      "post" : {
        "description" : "Mark an access control credential as suspended",
        "operationId" : "suspendAccessControlCredential",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_credentials_SuspendAccessControlCredentialWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_credentials_SuspendAccessControlCredentialWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Suspend access control credential",
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/unlockAccessControlledDoor" : {
      "post" : {
        "description" : "Unlock an access controlled door",
        "operationId" : "unlockAccessControlledDoor",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_UnlockAccessControlledDoorWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_credentials_BaseUnlockAccessControlledDoorWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Unlock access controlled door",
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/unsuspendAccessControlCredential" : {
      "post" : {
        "description" : "Mark an access control credential as no longer suspended",
        "operationId" : "unsuspendAccessControlCredential",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_credentials_UnsuspendAccessControlCredentialWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_credentials_UnsuspendAccessControlCredentialWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Unsuspend access control credential",
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/updateAccessControlGroup" : {
      "post" : {
        "description" : "Updates an access control group's meta information like name and description",
        "operationId" : "updateAccessControlGroup",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Group_UpdateOrgGroupWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Group_UpdateOrgGroupWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update access control group",
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/updateAccessGrant" : {
      "post" : {
        "description" : "Updates a location access grant",
        "operationId" : "updateAccessGrant",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_accessgrant_UpdateAccessGrantWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_accessgrant_UpdateAccessGrantWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update access grant",
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/updateAccessRevocation" : {
      "post" : {
        "description" : "Updates a location access revocation",
        "operationId" : "updateAccessRevocation",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_accessrevocation_UpdateAccessRevocationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_accessrevocation_UpdateAccessRevocationWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update access revocation",
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/updateRhombusSecureCsnCredential" : {
      "post" : {
        "description" : "Update a rhombus secure csn credential (Rhombus Badge)",
        "operationId" : "updateRhombusSecureCsnCredential",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_credentials_UpdateRhombusSecureCsnCredentialWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_credentials_UpdateRhombusSecureCsnCredentialWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update Rhombus Secure CSN credential",
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/updateRhombusSecureMobileCredential" : {
      "post" : {
        "description" : "Update a rhombus secure mobile credential (RhombusKey App w/ BLE or NFC)",
        "operationId" : "updateRhombusSecureMobileCredential",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_credentials_UpdateRhombusSecureMobileCredentialWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_credentials_UpdateRhombusSecureMobileCredentialWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update Rhombus Secure mobile credential",
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/updateStandardCsnCredential" : {
      "post" : {
        "description" : "Update a standard csn credential (Third Party Badge)",
        "operationId" : "updateStandardCsnCredential",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_credentials_UpdateStandardCsnCredentialWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_credentials_UpdateStandardCsnCredentialWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update standard CSN credential",
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/accesscontrol/updateWiegandCredential" : {
      "post" : {
        "description" : "Update a wiegand credential (Third Party Badge)",
        "operationId" : "updateWiegandCredential",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accesscontrol_credentials_UpdateWiegandCredentialWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Accesscontrol_credentials_UpdateWiegandCredentialWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update Wiegand credential",
        "tags" : [ "Access Control Webservice" ]
      }
    },
    "/api/alertmonitoring/cancelThreatCase" : {
      "post" : {
        "description" : "Cancel a threat case in alert monitoring.",
        "operationId" : "cancelThreatCase",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Alertmonitoring_CancelThreatCaseWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Alertmonitoring_CancelThreatCaseWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Cancel threat case",
        "tags" : [ "Alert Monitoring Webservice" ]
      }
    },
    "/api/alertmonitoring/createCustomPinForLocation" : {
      "post" : {
        "description" : "Create a custom PIN for alert monitoring at a specific location.",
        "operationId" : "createCustomPinForLocation",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Alertmonitoring_CreateCustomPinForNoonlightWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Alertmonitoring_CreateCustomPinForNoonlightWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create custom PIN for location",
        "tags" : [ "Alert Monitoring Webservice" ]
      }
    },
    "/api/alertmonitoring/createPinForLocation" : {
      "post" : {
        "description" : "Create a PIN for alert monitoring at a specific location.",
        "operationId" : "createPinForLocation",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Alertmonitoring_CreatePinForNoonlightWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Alertmonitoring_CreatePinForNoonlightWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create PIN for location",
        "tags" : [ "Alert Monitoring Webservice" ]
      }
    },
    "/api/alertmonitoring/deletePinForLocation" : {
      "post" : {
        "description" : "Delete a PIN for alert monitoring at a specific location.",
        "operationId" : "deletePinForLocation",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Alertmonitoring_DeletePinForNoonlightWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Alertmonitoring_DeletePinForNoonlightWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete PIN for location",
        "tags" : [ "Alert Monitoring Webservice" ]
      }
    },
    "/api/alertmonitoring/dismissThreatCase" : {
      "post" : {
        "description" : "Dismiss a threat case in alert monitoring.",
        "operationId" : "dismissThreatCase",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Alertmonitoring_DismissThreatCaseWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Alertmonitoring_DismissThreatCaseWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Dismiss threat case",
        "tags" : [ "Alert Monitoring Webservice" ]
      }
    },
    "/api/alertmonitoring/escalateThreatCaseToAlarm" : {
      "post" : {
        "description" : "Escalate a threat case to an alarm for alert monitoring.",
        "operationId" : "escalateThreatCaseToAlarm",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Alertmonitoring_EscalateThreatCaseToAlarmWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Alertmonitoring_EscalateThreatCaseToAlarmWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Escalate threat case to alarm",
        "tags" : [ "Alert Monitoring Webservice" ]
      }
    },
    "/api/alertmonitoring/getAlertMonitoringSettingsForLocation" : {
      "post" : {
        "description" : "Retrieve alert monitoring settings by location.",
        "operationId" : "getAlertMonitoringSettingsForLocation",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Alertmonitoring_GetNoonlightSettingsForLocationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Alertmonitoring_GetNoonlightSettingsForLocationWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get alert monitoring settings for location",
        "tags" : [ "Alert Monitoring Webservice" ]
      }
    },
    "/api/alertmonitoring/locationStatus" : {
      "post" : {
        "description" : "Retrieve summary of the alarm monitoring status for the specified location",
        "operationId" : "locationStatus",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Alertmonitoring_LocationStatusWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Alertmonitoring_LocationStatusWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get location status",
        "tags" : [ "Alert Monitoring Webservice" ]
      }
    },
    "/api/alertmonitoring/orgStatus" : {
      "post" : {
        "description" : "Retrieve summary of the alarm monitoring status for all locations",
        "operationId" : "orgStatus",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Alertmonitoring_OrgStatusWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Alertmonitoring_OrgStatusWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get organization status",
        "tags" : [ "Alert Monitoring Webservice" ]
      }
    },
    "/api/audiogateway/delete" : {
      "post" : {
        "description" : "Remove an audio gateway from organization",
        "operationId" : "deleteAudioGateway",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Audiogateway_DeleteAudioGatewayWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Audiogateway_DeleteAudioGatewayWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete audio gateway",
        "tags" : [ "AudioGateway Webservice" ]
      }
    },
    "/api/audiogateway/getAudioSeekpoints" : {
      "post" : {
        "description" : "Get audio seek points",
        "operationId" : "getAudioSeekpoints",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Audiogateway_GetAudioSeekpointsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Audiogateway_GetAudioSeekpointsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get audio seek points",
        "tags" : [ "AudioGateway Webservice" ]
      }
    },
    "/api/audiogateway/getConfig" : {
      "post" : {
        "description" : "Get an audio gateway config",
        "operationId" : "getAudioGatewayConfig",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Audiogateway_GetAudioGatewayConfigWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Audiogateway_GetAudioGatewayConfigWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get audio gateway config",
        "tags" : [ "AudioGateway Webservice" ]
      }
    },
    "/api/audiogateway/getFullAudioGatewayState" : {
      "post" : {
        "description" : "Get detailed information about state of specified audio gateway",
        "operationId" : "getFullAudioGatewayState",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Audiogateway_GetFullAudioGatewayStateWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Audiogateway_GetFullAudioGatewayStateWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get full audio gateway state",
        "tags" : [ "AudioGateway Webservice" ]
      }
    },
    "/api/audiogateway/getMediaUris" : {
      "post" : {
        "description" : "Get media uris for audio gateway to retrieve footage",
        "operationId" : "getAudioGatewayMediaUris",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Audiogateway_GetMediaUrisWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Audiogateway_GetMediaUrisWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get media URIs for audio gateway",
        "tags" : [ "AudioGateway Webservice" ]
      }
    },
    "/api/audiogateway/getMinimalAudioGatewayStateList" : {
      "post" : {
        "description" : "Get basic state information for all audio gateways",
        "operationId" : "getMinimalAudioGatewayStateList",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Audiogateway_GetMinimalAudioGatewayStatesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Audiogateway_GetMinimalAudioGatewayStatesWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get minimal audio gateway state list",
        "tags" : [ "AudioGateway Webservice" ]
      }
    },
    "/api/audiogateway/getPresenceWindows" : {
      "post" : {
        "description" : "Get stored video information for an audio gateway",
        "operationId" : "getAudioGatewayPresenceWindows",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Common_devices_GetPresenceWindowsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Common_devices_GetPresenceWindowsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get audio gateway presence windows",
        "tags" : [ "AudioGateway Webservice" ]
      }
    },
    "/api/audiogateway/getUptimeWindows" : {
      "post" : {
        "description" : "Get uptime information for an audio gateway",
        "operationId" : "getAudioGatewayUptimeWindows",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Common_devices_GetUptimeWindowsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Common_devices_GetUptimeWindowsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get audio gateway uptime windows",
        "tags" : [ "AudioGateway Webservice" ]
      }
    },
    "/api/audiogateway/updateConfig" : {
      "post" : {
        "description" : "Update config for audio gateway",
        "operationId" : "updateAudioGatewayConfig",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Audiogateway_UpdateAudioGatewayConfigWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Audiogateway_UpdateAudioGatewayConfigWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update audio gateway config",
        "tags" : [ "AudioGateway Webservice" ]
      }
    },
    "/api/audiogateway/updateDetails" : {
      "post" : {
        "description" : "Update details for audio gateway. Note: uuid is a required field",
        "operationId" : "updateAudioGatewayDetails",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Audiogateway_UpdateAudioGatewayDetailsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Audiogateway_UpdateAudioGatewayDetailsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update audio gateway details",
        "tags" : [ "AudioGateway Webservice" ]
      }
    },
    "/api/audioplayback/cancelLoopingAudioPlayback" : {
      "post" : {
        "description" : "Cancel any currently playing looping audio for an audio device",
        "operationId" : "cancelLoopingAudioPlayback",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Audioplayback_CancelLoopingAudioPlaybackWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Audioplayback_CancelLoopingAudioPlaybackWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Cancel looping audio playback",
        "tags" : [ "AudioPlayback Webservice" ]
      }
    },
    "/api/audioplayback/deleteAudioUploadMetadata" : {
      "post" : {
        "description" : "Delete an uploaded audio clip metadata",
        "operationId" : "deleteAudioUploadMetadata",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Audioplayback_DeleteAudioUploadMetadataWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Audioplayback_DeleteAudioUploadMetadataWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete audio upload metadata",
        "tags" : [ "AudioPlayback Webservice" ]
      }
    },
    "/api/audioplayback/getAudioUploadMetadataForOrg" : {
      "post" : {
        "description" : "Get list of uploaded audio clip metadata",
        "operationId" : "getAudioUploadMetadataForOrg",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Audioplayback_GetAudioUploadMetadataForOrgWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Audioplayback_GetAudioUploadMetadataForOrgWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get audio upload metadata for organization",
        "tags" : [ "AudioPlayback Webservice" ]
      }
    },
    "/api/audioplayback/playAudioUpload" : {
      "post" : {
        "description" : "Play an uploaded audio clip through an audio device",
        "operationId" : "playAudioUpload",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Audioplayback_PlayAudioUploadWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Audioplayback_PlayAudioUploadWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Play audio upload",
        "tags" : [ "AudioPlayback Webservice" ]
      }
    },
    "/api/audioplayback/updateAudioUploadMetadata" : {
      "post" : {
        "description" : "Update an uploaded audio clip metadata",
        "operationId" : "updateAudioUploadMetadata",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Audioplayback_UpdateAudioUploadMetadataWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Audioplayback_UpdateAudioUploadMetadataWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update audio upload metadata",
        "tags" : [ "AudioPlayback Webservice" ]
      }
    },
    "/api/audioplayback/uploadAudioText" : {
      "post" : {
        "description" : "Upload text to synthesize audio",
        "operationId" : "uploadAudioText",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Audioplayback_UploadAudioTextWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Audioplayback_UploadAudioTextWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Upload text to synthesize audio",
        "tags" : [ "AudioPlayback Webservice" ]
      }
    },
    "/api/badgereader/delete" : {
      "post" : {
        "description" : "Remove the badge reader from the organization",
        "operationId" : "deleteBadgeReader",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Badgereader_DeleteBadgeReaderWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Badgereader_DeleteBadgeReaderWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete badge reader",
        "tags" : [ "Badge Reader Webservice" ]
      }
    },
    "/api/badgereader/reboot" : {
      "post" : {
        "description" : "Reboot the specified badge reader",
        "operationId" : "rebootBadgeReader",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Badgereader_RebootBadgeReaderWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Common_devices_RebootDeviceWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Reboot badge reader",
        "tags" : [ "Badge Reader Webservice" ]
      }
    },
    "/api/ble/getBaseStations" : {
      "post" : {
        "description" : "Retrieve list of available base stations for BLE sensors",
        "operationId" : "getBaseStations",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Ble_GetBaseStationsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Ble_GetBaseStationsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get base stations",
        "tags" : [ "BLE Webservice" ]
      }
    },
    "/api/button/createRuleForButton" : {
      "post" : {
        "description" : "Create rule for a button sensor.",
        "operationId" : "createRuleForButton",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Button_CreateRuleForButtonWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Button_CreateRuleForButtonWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create rule for button",
        "tags" : [ "Button Webservice" ]
      }
    },
    "/api/button/deleteRuleForButton" : {
      "post" : {
        "description" : "Delete rule for a button sensor.",
        "operationId" : "deleteRuleForButton",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Button_DeleteRuleForButtonWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Button_DeleteRuleForButtonWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete rule for button",
        "tags" : [ "Button Webservice" ]
      }
    },
    "/api/button/getButtonPressEventsForSensor" : {
      "post" : {
        "description" : "Get list of button press events for button sensor",
        "operationId" : "getButtonPressEventsForSensor",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Button_GetButtonPressEventsForSensorWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Button_GetButtonPressEventsForSensorWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get button press events for sensor",
        "tags" : [ "Button Webservice" ]
      }
    },
    "/api/button/getButtonRulesForOrg" : {
      "post" : {
        "description" : "Get rules for all buttons in an org.",
        "operationId" : "getButtonRulesForOrg",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Button_GetButtonRulesForOrgWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Button_GetButtonRulesForOrgWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get button rules for organization",
        "tags" : [ "Button Webservice" ]
      }
    },
    "/api/button/getMinimalButtonStateList" : {
      "post" : {
        "description" : "Get basic state information for all button sensors",
        "operationId" : "getMinimalButtonStateList",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Button_GetMinimalButtonStatesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Button_GetMinimalButtonStatesWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get minimal button state list",
        "tags" : [ "Button Webservice" ]
      }
    },
    "/api/button/getRulesForButton" : {
      "post" : {
        "description" : "Get all rules for a button sensor.",
        "operationId" : "getRulesForButton",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Button_GetRulesForButtonWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Button_GetRulesForButtonWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get rules for button",
        "tags" : [ "Button Webservice" ]
      }
    },
    "/api/button/updateConfig" : {
      "post" : {
        "description" : "Update config for a button sensor.",
        "operationId" : "updateButtonConfig",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Button_UpdateButtonConfigWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Common_devices_UpdateConfigWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update button config",
        "tags" : [ "Button Webservice" ]
      }
    },
    "/api/button/updateDetails" : {
      "post" : {
        "description" : "Update details for a button sensor.",
        "operationId" : "updateButtonDetails",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Button_UpdateButtonDetailsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Common_devices_UpdateDeviceDetailsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update button details",
        "tags" : [ "Button Webservice" ]
      }
    },
    "/api/camera/calibrateFloorplanProjection" : {
      "post" : {
        "description" : "Generate the homography to project detections onto a floorplan.",
        "operationId" : "cameraCalibrateFloorplanProjection",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Common_devices_CalibrateFloorplanProjectionWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Common_devices_CalibrateFloorplanProjectionWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Calibrate floorplan projection",
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/createCustomFootageSeekpoints" : {
      "post" : {
        "description" : "Create custom activity seekpoints for a specified camera",
        "operationId" : "createCustomFootageSeekpoints",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_CreateCustomFootageSeekpointsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_CreateFootageSeekpointsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create custom footage seekpoints",
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/createFootageBoundingBoxes" : {
      "post" : {
        "description" : "Create an activity bounding box for specified camera",
        "operationId" : "createFootageBoundingBoxes",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_CreateFootageBoundingBoxesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_CreateFootageBoundingBoxesWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create footage bounding boxes",
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/createProtectedSharedLiveVideoStream" : {
      "post" : {
        "description" : "Share a password protected live video stream for a camera",
        "operationId" : "createProtectedSharedLiveVideoStream",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_CreateSharedLiveVideoStreamWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_CreateSharedLiveVideoStreamWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create protected shared live video stream",
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/createProtectedSharedVideoWall" : {
      "post" : {
        "description" : "Share a password protected video wall",
        "operationId" : "createProtectedSharedVideoWall",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_CreateSharedVideoWallWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_CreateSharedVideoWallWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create protected shared video wall",
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/createRawHttpStream" : {
      "post" : {
        "description" : "Create a raw HTTP stream for a camera",
        "operationId" : "createCameraRawHttpStream",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Common_devices_rawstream_CreateRawHttpStreamWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Common_devices_rawstream_CreateRawHttpStreamWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create camera raw HTTP stream",
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/createSharedLiveVideoStream" : {
      "post" : {
        "description" : "Share an unprotected live video stream for a camera",
        "operationId" : "createCameraSharedLiveVideoStream",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_CreateSharedLiveVideoStreamWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_CreateSharedLiveVideoStreamWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create shared live video stream",
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/createSharedVideoWall" : {
      "post" : {
        "description" : "Share an unprotected video wall",
        "operationId" : "createSharedVideoWall",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_CreateSharedVideoWallWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_CreateSharedVideoWallWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create shared video wall",
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/createVideoWall" : {
      "post" : {
        "description" : "Create a video wall for user",
        "operationId" : "createVideoWall",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_CreateVideoWallWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_CreateVideoWallWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create video wall",
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/delete" : {
      "post" : {
        "description" : "Remove a camera from organization",
        "operationId" : "deleteCamera",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_DeleteCameraWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_DeleteCameraWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete camera",
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/deleteCustomFootageSeekpoints" : {
      "post" : {
        "description" : "Delete custom seekpoints for specified cameras",
        "operationId" : "deleteCustomFootageSeekpoints",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_DeleteCustomFootageSeekpointsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_DeleteCustomFootageSeekpointsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete custom footage seekpoints",
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/deleteRawHttpStream" : {
      "post" : {
        "description" : "Delete a raw HTTP stream for a camera",
        "operationId" : "deleteCameraRawHttpStream",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Common_devices_rawstream_DeleteRawHttpStreamWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Common_devices_rawstream_DeleteRawHttpStreamWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete camera raw HTTP stream",
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/deleteSharedLiveVideoStream" : {
      "post" : {
        "description" : "Remove a shared live stream from camera",
        "operationId" : "deleteSharedLiveVideoStream",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_DeleteSharedLiveVideoStreamWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeleteSharedLiveVideoStreamForDeviceResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete shared live video stream",
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/deleteSharedVideoWall" : {
      "post" : {
        "description" : "Remove a shared video wall",
        "operationId" : "deleteSharedVideoWall",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_DeleteSharedVideoWallWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_DeleteSharedVideoWallWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete shared video wall",
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/deleteVideoWall" : {
      "post" : {
        "description" : "Delete a video wall",
        "operationId" : "deleteVideoWall",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_DeleteVideoWallWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_DeleteVideoWallWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete video wall",
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/erase" : {
      "post" : {
        "description" : "Wipes the SD card on a camera",
        "operationId" : "eraseCamera",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_EraseCameraWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_EraseCameraWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Erase camera",
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/findAllRawHttpStreams" : {
      "post" : {
        "description" : "Get a list of all cameras raw HTTP streams",
        "operationId" : "findAllCameraRawHttpStreams",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Common_devices_rawstream_FindAllRawHttpStreamsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Common_devices_rawstream_FindAllRawHttpStreamsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Find all camera raw HTTP streams",
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/findAllSharedLiveVideoStreams" : {
      "post" : {
        "description" : "Get list of all shared live streams",
        "operationId" : "findAllSharedLiveVideoStreams",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_FindAllSharedLiveVideoStreamsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_FindAllSharedLiveVideoStreamsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Find all shared live video streams",
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/findSharedLiveVideoStreams" : {
      "post" : {
        "description" : "Get list of all shared live streams for camera",
        "operationId" : "findCameraSharedLiveVideoStreams",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_FindSharedLiveVideoStreamsForWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_FindSharedLiveVideoStreamsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Find camera shared live video streams",
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/findSharedVideoWalls" : {
      "post" : {
        "description" : "Get list of all shares for a video wall",
        "operationId" : "findSharedVideoWalls",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_FindSharedVideoWallsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_FindSharedVideoWallsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Find shared video walls",
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/generateBatchRegistrationInfo" : {
      "post" : {
        "description" : "Create camera registration information for QR code generation",
        "operationId" : "generateBatchRegistrationInfo",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_GenerateBatchRegistrationInfoRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_GenerateBatchRegistrationInfoResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Generate batch registration info",
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/generateWifiChangeAuthorizationToken" : {
      "post" : {
        "description" : "Create a change wifi request for QR code generation",
        "operationId" : "generateWifiChangeAuthorizationToken",
        "parameters" : [ {
          "in" : "header",
          "name" : "RHOMBUS_MY_IP",
          "schema" : {
            "type" : "string",
            "default" : "",
            "nullable" : true
          }
        }, {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_GenerateWifiChangeAuthorizationTokenWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_GenerateWifiChangeAuthorizationTokenWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Generate WiFi change authorization token",
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/getBatchRegistrationUsage" : {
      "post" : {
        "description" : "Get detailed usage information for a registration token",
        "operationId" : "getBatchRegistrationUsage",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_GetBatchRegistrationTokenUsageRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_GetBatchRegistrationTokenUsageResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get batch registration usage",
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/getCameraAIThresholds" : {
      "post" : {
        "description" : "Get AI normalized confidence thresholds for a camera",
        "operationId" : "getCameraAIThresholds",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_GetCameraAIThresholdsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_GetCameraAIThresholdsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get camera AI thresholds",
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/getCloudArchivedMediaInfo" : {
      "post" : {
        "description" : "Get information on archived video for specified camera",
        "operationId" : "getCloudArchivedMediaInfo",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_GetCloudArchivedMediaInfoWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_GetCloudArchivedMediaInfoWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get cloud archived media info",
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/getCloudArchivingConfig" : {
      "post" : {
        "description" : "Get the cloud archiving scheduling config applicable to a camera",
        "operationId" : "getCloudArchivingConfig",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_GetCloudArchivingConfigWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_GetCloudArchivingConfigWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get cloud archiving config",
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/getConfig" : {
      "post" : {
        "deprecated" : true,
        "description" : "Get a camera's config",
        "operationId" : "getCameraConfig",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_GetConfigWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_GetConfigWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get camera config",
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/getCurrentState" : {
      "post" : {
        "deprecated" : true,
        "description" : "Use /getFullCameraState instead",
        "operationId" : "getCurrentCameraState",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_GetCurrentStateWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_GetCurrentStateWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get current camera state",
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/getCustomFootageSeekpointsV2" : {
      "post" : {
        "description" : "Get activity seekpoints for specified camera",
        "operationId" : "getCustomFootageSeekpointsV2",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_GetCustomFootageSeekpointsV2WSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_GetCustomFootageSeekpointsV2WSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get custom footage seekpoints V2",
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/getDetails" : {
      "post" : {
        "description" : "Get hardware details of multiple cameras",
        "operationId" : "getCameraDetails",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_GetCameraDetailsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_GetCameraDetailsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get camera details",
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/getFootageBoundingBoxes" : {
      "post" : {
        "description" : "Get object bounding boxes for a specified camera. Note: bounding box values are given as permyriad shorts relative to image.  To convert to absolute pixel values, use the following: abs_pix = (rel_permyriad / 10000) * image_dim",
        "operationId" : "getCameraFootageBoundingBoxes",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_GetFootageBoundingBoxesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_GetFootageBoundingBoxesWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get footage bounding boxes",
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/getFootageBoundingBoxesForMultiple" : {
      "post" : {
        "description" : "Get object bounding boxes for multiple cameras. Note: bounding box values are given as permyriad shorts relative to image.  To convert to absolute pixel values, use the following: abs_pix = (rel_permyriad / 10000) * image_dim",
        "operationId" : "getFootageBoundingBoxesForMultiple",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_GetFootageBoundingBoxesForMultipleWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_GetFootageBoundingBoxesForMultipleWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get footage bounding boxes for multiple cameras",
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/getFootageSeekpointsForMultiple" : {
      "post" : {
        "description" : "Get activity seekpoints for multiple cameras",
        "operationId" : "getFootageSeekpointsForMultiple",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_GetFootageSeekpointsForMultipleWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_GetFootageSeekpointsForMultipleWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get footage seekpoints for multiple cameras",
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/getFootageSeekpointsV2" : {
      "post" : {
        "description" : "Get activity seekpoints for specified camera",
        "operationId" : "getCameraFootageSeekpointsV2",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_GetFootageSeekpointsV2WSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_GetFootageSeekpointsV2WSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get footage seekpoints V2",
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/getFullCameraState" : {
      "post" : {
        "description" : "Get detailed information about state of specified camera",
        "operationId" : "getFullCameraState",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_GetFullCameraStateWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_GetFullCameraStateWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get full camera state",
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/getMediaUris" : {
      "post" : {
        "description" : "Get media uris for camera to retrieve footage",
        "operationId" : "getCameraMediaUris",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_GetMediaUrisWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_GetMediaUrisWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get camera media URIs",
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/getMinimalCameraLocationMap" : {
      "post" : {
        "description" : "Get basic information about all cameras and their locations in organization",
        "operationId" : "getMinimalCameraLocationMap",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_GetMinimalCameraLocationMapWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_GetMinimalCameraLocationMapWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get minimal camera location map",
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/getMinimalCameraStateList" : {
      "post" : {
        "description" : "Get basic state information about all cameras in organization",
        "operationId" : "getMinimalCameraStateList",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_GetMinimalCameraStateListWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_GetMinimalCameraStateListWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get minimal camera state list",
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/getMinimalList" : {
      "post" : {
        "deprecated" : true,
        "description" : "Use /getMinimalCameraStateList instead",
        "operationId" : "getCameraMinimalList",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_GetMinimalListWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_GetMinimalListWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get minimal camera list",
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/getOfflineLanStreamingInfo" : {
      "post" : {
        "description" : "Get required information for offline lan streaming on all cameras",
        "operationId" : "getCameraOfflineLanStreamingInfo",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_GetOfflineLanStreamingInfoWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_GetOfflineLanStreamingInfoWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get camera offline LAN streaming info",
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/getPresenceWindows" : {
      "post" : {
        "description" : "Get stored video information for camera",
        "operationId" : "getCameraPresenceWindows",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_GetPresenceWindowsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_GetPresenceWindowsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get camera presence windows",
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/getRawHttpStreams" : {
      "post" : {
        "description" : "Get info for all raw HTTP streams from a camera",
        "operationId" : "getCameraRawHttpStreams",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Common_devices_rawstream_GetRawHttpStreamsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Common_devices_rawstream_GetRawHttpStreamsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get camera raw HTTP streams",
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/getStorageRecoveryFile" : {
      "post" : {
        "description" : "Get a file that contains information required to recover the media from the SD card of a damaged camera",
        "operationId" : "getStorageRecoveryFile",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_GetStorageRecoveryFileWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_GetStorageRecoveryFileWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get storage recovery file",
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/getUptimeWindows" : {
      "post" : {
        "description" : "Get uptime information for camera",
        "operationId" : "getUptimeWindows",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_GetUptimeWindowsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_GetUptimeWindowsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get camera uptime windows",
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/getVideoWalls" : {
      "post" : {
        "description" : "Get list of video walls available for client",
        "operationId" : "getVideoWalls",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_GetVideoWallsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_GetVideoWallsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get video walls",
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/reboot" : {
      "post" : {
        "description" : "Send reboot command to camera",
        "operationId" : "rebootCamera",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_RebootCameraWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_RebootCameraWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Reboot camera",
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/revertCameraSettingsToDefaults" : {
      "post" : {
        "operationId" : "revertCameraSettingsToDefaults",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_RevertCameraToDefaultsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_RevertCameraToDefaultsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/revertDayImageSettingsToDefaults" : {
      "post" : {
        "operationId" : "revertDayImageSettingsToDefaults",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_RevertCameraToDefaultsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_RevertCameraToDefaultsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/revertNightImageSettingsToDefaults" : {
      "post" : {
        "operationId" : "revertNightImageSettingsToDefaults",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_RevertCameraToDefaultsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_RevertCameraToDefaultsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/revertToDefaults" : {
      "post" : {
        "operationId" : "revertToDefaults",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_RevertCameraToDefaultsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_RevertCameraToDefaultsWSResponse"
                }
              }
            },
            "description" : "default response"
          }
        },
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/updateCameraAIThresholds" : {
      "post" : {
        "description" : "Update AI confidence thresholds for a camera",
        "operationId" : "updateCameraAIThresholds",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_UpdateCameraAIThresholdsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_UpdateCameraAIThresholdsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update camera AI thresholds",
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/updateCameraLineCrossingThresholds" : {
      "post" : {
        "description" : "Updates the line-crossing feature for a camera. Accepts two points which define a line that determines the threshold for which INGRESS and EGRESS events will be generated. Consider the top-left corner of a camera's image to be the origin (0,0).",
        "operationId" : "updateCameraLineCrossingThresholds",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_UpdateCameraLineCrossingThresholdsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_UpdateCameraLineCrossingThresholdsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update camera line crossing thresholds",
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/updateConfig" : {
      "post" : {
        "deprecated" : true,
        "description" : "Update a camera's config",
        "operationId" : "updateCameraConfig",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_UpdateConfigWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Common_devices_UpdateConfigWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update camera config",
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/updateDetails" : {
      "post" : {
        "deprecated" : true,
        "description" : "Update hardware details of camera",
        "operationId" : "updateCameraDetails",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_UpdateCameraWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_UpdateCameraWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update camera details",
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/updateDetailsBulkV2" : {
      "post" : {
        "description" : "Update hardware details of multiple cameras in bulk",
        "operationId" : "updateDetailsBulkV2",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_UpdateCamerasBulkV2WSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_UpdateCameraV2WSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update camera details bulk V2",
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/updateDetailsV2" : {
      "post" : {
        "description" : "Update hardware details of camera.",
        "operationId" : "updateCameraDetailsV2",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_UpdateCameraV2WSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_UpdateCameraV2WSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update camera details V2",
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/updateFirmware" : {
      "post" : {
        "description" : "Send command to update firmware to camera",
        "operationId" : "updateFirmware",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_UpdateCameraFirmwareWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_UpdateCameraFirmwareWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update camera firmware",
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/updateVideoWalls" : {
      "post" : {
        "description" : "Update a video wall",
        "operationId" : "updateVideoWalls",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_UpdateVideoWallWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_UpdateVideoWallWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update video walls",
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/camera/updateWifi" : {
      "post" : {
        "description" : "Send a command to update wifi on specified connected cameras",
        "operationId" : "updateCameraWifi",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Camera_UpdateWifiWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Camera_UpdateWifiWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update camera WiFi",
        "tags" : [ "Camera Webservice" ]
      }
    },
    "/api/climate/deleteEnvironmentalGateway" : {
      "post" : {
        "description" : "Remove an environmental gateway from the org",
        "operationId" : "deleteEnvironmentalGateway",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Climate_DeleteEnvironmentalGatewayWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Climate_DeleteEnvironmentalGatewayWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete environmental gateway",
        "tags" : [ "Climate Webservice" ]
      }
    },
    "/api/climate/getClimateEventsForSensor" : {
      "post" : {
        "description" : "Get list of climate events for environmental sensor",
        "operationId" : "getClimateEventsForSensor",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Climate_GetClimateEventsForSensorWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Climate_GetClimateEventsForSensorWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get climate events for environmental sensor",
        "tags" : [ "Climate Webservice" ]
      }
    },
    "/api/climate/getClimatePresenceWindows" : {
      "post" : {
        "description" : "Get stored video information for sensor",
        "operationId" : "getClimatePresenceWindows",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Sensor_GetSensorPresenceWindowsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Sensor_GetSensorPresenceWindowsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get climate presence windows",
        "tags" : [ "Climate Webservice" ]
      }
    },
    "/api/climate/getConfig" : {
      "post" : {
        "description" : "Get the config for a climate sensor",
        "operationId" : "getConfig",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Climate_GetClimateSensorConfigWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Climate_GetClimateSensorConfigWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get climate sensor config",
        "tags" : [ "Climate Webservice" ]
      }
    },
    "/api/climate/getEnvironmentalGatewayShadows" : {
      "post" : {
        "description" : "Get list of shadows of all environmental gateways of an org",
        "operationId" : "getEnvironmentalGatewayShadows",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Climate_GetEnvironmentalGatewayShadowsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Climate_GetEnvironmentalGatewayShadowsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get environmental gateway shadows",
        "tags" : [ "Climate Webservice" ]
      }
    },
    "/api/climate/getEventsForEnvironmentalGateway" : {
      "post" : {
        "description" : "Get list of events for environmental gateway",
        "operationId" : "getEventsForEnvironmentalGateway",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Climate_GetEventsForEnvironmentalGatewayWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Climate_GetEventsForEnvironmentalGatewayWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get events for environmental gateway",
        "tags" : [ "Climate Webservice" ]
      }
    },
    "/api/climate/getMinimalClimateStateList" : {
      "post" : {
        "description" : "Get basic state information of all environmental sensors",
        "operationId" : "getMinimalClimateStateList",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Climate_GetMinimalClimateStatesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Climate_GetMinimalClimateStatesWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get minimal climate state list",
        "tags" : [ "Climate Webservice" ]
      }
    },
    "/api/climate/getMinimalEnvironmentalGatewayStates" : {
      "post" : {
        "description" : "Get list of basic states of all environmental gateways of an org",
        "operationId" : "getMinimalEnvironmentalGatewayStates",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Climate_GetMinimalEnvironmentalGatewayStatesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Climate_GetMinimalEnvironmentalGatewayStatesWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get minimal environmental gateway states",
        "tags" : [ "Climate Webservice" ]
      }
    },
    "/api/climate/getMinimalStateEventsForEnvironmentalGateway" : {
      "post" : {
        "description" : "Get list of events for environmental gateways in minimal state",
        "operationId" : "getMinimalStateEventsForEnvironmentalGateway",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Climate_GetEventsForEnvironmentalGatewayWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Climate_GetMinimalEnvironmentalGatewayStatesWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get minimal state events for environmental gateway",
        "tags" : [ "Climate Webservice" ]
      }
    },
    "/api/climate/reboot" : {
      "post" : {
        "description" : "Send reboot command to environmental gateway",
        "operationId" : "rebootEnvironmentalGateway",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Climate_RebootEnvironmentalGatewayWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Common_devices_RebootDeviceWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Reboot environmental gateway",
        "tags" : [ "Climate Webservice" ]
      }
    },
    "/api/climate/updateDetails" : {
      "post" : {
        "description" : "Update details for environmental sensor. Note: uuid is a required field",
        "operationId" : "updateClimateSensorDetails",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Climate_UpdateClimateSensorDetailsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Climate_UpdateClimateSensorDetailsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update climate sensor details",
        "tags" : [ "Climate Webservice" ]
      }
    },
    "/api/climate/updateEnvironmentalGatewayDetails" : {
      "post" : {
        "description" : "Update details for environmental gateway. Note: uuid is a required field",
        "operationId" : "updateEnvironmentalGatewayDetails",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Climate_UpdateEnvironmentalGatewayDetailsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Climate_UpdateEnvironmentalGatewayDetailsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update environmental gateway details",
        "tags" : [ "Climate Webservice" ]
      }
    },
    "/api/component/addAccessControlledDoorLabel" : {
      "post" : {
        "description" : "Create a label that can be assigned to an access controlled door and referenced by an access grant or access revocation",
        "operationId" : "addAccessControlledDoorLabel",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_AddAccessControlledDoorLabelWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_AddAccessControlledDoorLabelWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create a label that can be assigned to an access controlled door",
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/createAccessControlledDoor" : {
      "post" : {
        "description" : "Create an access controlled door",
        "operationId" : "createAccessControlledDoor",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_CreateAccessControlledDoorWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_CreateAccessControlledDoorWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create an access controlled door",
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/createAccessControlledDoorSeekpoints" : {
      "post" : {
        "description" : "Create custom activity seekpoints for a specified access controlled door",
        "operationId" : "createAccessControlledDoorSeekpoints",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_CreateAccessControlledDoorSeekpointsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_CreateAccessControlledDoorSeekpointsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create custom activity seekpoints for a specified access controlled door",
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/createIntegratedDoorPositionIndicator" : {
      "post" : {
        "description" : "Create a door position indicator component",
        "operationId" : "createIntegratedDoorPositionIndicator",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_CreateIntegratedDoorPositionIndicatorWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_CreateIntegratedDoorPositionIndicatorWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create a door position indicator component",
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/createIntegratedDoorRelay" : {
      "post" : {
        "description" : "Create a door relay component",
        "operationId" : "createIntegratedDoorRelay",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_CreateIntegratedDoorRelayWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_CreateIntegratedDoorRelayWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create a door relay component",
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/createIntegratedGenericButton" : {
      "post" : {
        "description" : "Create a generic button component",
        "operationId" : "createIntegratedGenericButton",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_CreateIntegratedGenericButtonWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_CreateIntegratedGenericButtonWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create a generic button component",
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/createIntegratedGenericInput" : {
      "post" : {
        "description" : "Create a generic input component",
        "operationId" : "createIntegratedGenericInput",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_CreateIntegratedGenericInputWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_CreateIntegratedGenericInputWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create a generic input component",
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/createIntegratedGenericRelay" : {
      "post" : {
        "description" : "Create a generic relay component",
        "operationId" : "createIntegratedGenericRelay",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_CreateIntegratedGenericRelayWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_CreateIntegratedGenericRelayWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create a generic relay component",
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/createIntegratedRequestToExit" : {
      "post" : {
        "description" : "Create a request to exit component",
        "operationId" : "createIntegratedRequestToExit",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_CreateIntegratedRequestToExitWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_CreateIntegratedRequestToExitWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create a request to exit component",
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/createOsdpDoorReader" : {
      "post" : {
        "description" : "Create a third party OSDP Reader component",
        "operationId" : "createOsdpDoorReader",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_CreateOsdpReaderWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_CreateOsdpReaderWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create a third party OSDP Reader component",
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/createRhombusOsdpDoorReader" : {
      "post" : {
        "description" : "Create a Rhombus OSDP Reader component",
        "operationId" : "createRhombusOsdpDoorReader",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_CreateRhombusOsdpReaderWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_CreateRhombusOsdpReaderWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create a Rhombus OSDP Reader component",
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/createWiegandReader" : {
      "post" : {
        "description" : "Create a third party Wiegand Reader component",
        "operationId" : "createWiegandReader",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_CreateWiegandReaderWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_CreateWiegandReaderWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create a third party Wiegand Reader component",
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/deleteAccessControlledDoor" : {
      "post" : {
        "description" : "Delete the specified access controlled door",
        "operationId" : "deleteAccessControlledDoor",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_DeleteAccessControlledDoorWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_DeleteAccessControlledDoorWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete the specified access controlled door",
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/deleteComponent" : {
      "post" : {
        "description" : "Delete a component",
        "operationId" : "deleteComponent",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_DeleteComponentWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_DeleteComponentWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete a component",
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/deleteComponentsByOwnerDevice" : {
      "post" : {
        "description" : "Delete all components owned by the specified device",
        "operationId" : "deleteComponentsByOwnerDevice",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_DeleteComponentsByOwnerDeviceWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_DeleteComponentsByOwnerDeviceWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete all components owned by the specified device",
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/findAccessControlledDoorShadows" : {
      "post" : {
        "description" : "Find access controlled door shadows within the org",
        "operationId" : "findAccessControlledDoorShadows",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_FindAccessControlledDoorShadowsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_FindAccessControlledDoorShadowsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Find access controlled door shadows within the org",
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/findAccessControlledDoorShadowsByLocation" : {
      "post" : {
        "description" : "Find access controlled door shadows within the specified location",
        "operationId" : "findAccessControlledDoorShadowsByLocation",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_FindAccessControlledDoorShadowsByLocationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_FindAccessControlledDoorShadowsByLocationWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Find access controlled door shadows within the specified location",
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/findAccessControlledDoors" : {
      "post" : {
        "description" : "Find access controlled doors within the org",
        "operationId" : "findAccessControlledDoors",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_FindAccessControlledDoorsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_FindAccessControlledDoorsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Find access controlled doors within the org",
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/findAccessControlledDoorsByLocation" : {
      "post" : {
        "description" : "Find access controlled doors within the specified location",
        "operationId" : "findAccessControlledDoorsByLocation",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_FindAccessControlledDoorsByLocationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_FindAccessControlledDoorsByLocationWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Find access controlled doors within the specified location",
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/findAccessControlledDoorsByOwnerDevice" : {
      "post" : {
        "description" : "Find access controlled doors for the specified owner device",
        "operationId" : "findAccessControlledDoorsByOwnerDevice",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_FindAccessControlledDoorsByOwnerDeviceWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_FindAccessControlledDoorsByOwnerDeviceWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Find access controlled doors for the specified owner device",
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/findAllComponentShadows" : {
      "post" : {
        "description" : "Retrieve all component shadows for the specified component uuids",
        "operationId" : "findAllComponentShadows",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_FindAllComponentShadowsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_FindAllComponentShadowsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Retrieve all component shadows for the specified component uuids",
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/findComponentEventsByAccessControlledDoor" : {
      "post" : {
        "description" : "Retrieve all component events relevant to the specified AccessControlledDoor",
        "operationId" : "findComponentEventsByAccessControlledDoor",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_FindComponentEventsByAccessControlledDoorWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_FindComponentEventsByAccessControlledDoorWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Retrieve all component events relevant to the specified AccessControlledDoor",
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/findComponentEventsByApiToken" : {
      "post" : {
        "description" : "Retrieve all component events relevant to the specified api token",
        "operationId" : "findComponentEventsByApiToken",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_FindComponentEventsByApiTokenWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_FindComponentEventsByApiTokenWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Retrieve all component events relevant to the specified api token",
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/findComponentEventsByComponent" : {
      "post" : {
        "description" : "Retrieve all component events relevant to the specified component",
        "operationId" : "findComponentEventsByComponent",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_FindComponentEventsByComponentWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_FindComponentEventsByComponentWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Retrieve all component events relevant to the specified component",
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/findComponentEventsByCorrelation" : {
      "post" : {
        "description" : "Retrieve all component events relevant to the specified correlation id",
        "operationId" : "findComponentEventsByCorrelation",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_FindComponentEventsByCorrelationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_FindComponentEventsByCorrelationWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Retrieve all component events relevant to the specified correlation id",
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/findComponentEventsByCredentialHexValue" : {
      "post" : {
        "description" : "Retrieve all component events relevant to the specified credential hex value",
        "operationId" : "findComponentEventsByCredentialHexValue",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_FindComponentEventsByCredentialHexValueWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_FindComponentEventsByCredentialHexValueWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Retrieve all component events relevant to the specified credential hex value",
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/findComponentEventsByCredentialUuid" : {
      "post" : {
        "description" : "Retrieve all component events relevant to the specified credential uuid",
        "operationId" : "findComponentEventsByCredentialUuid",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_FindComponentEventsByCredentialUuidWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_FindComponentEventsByCredentialUuidWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Retrieve all component events relevant to the specified credential uuid",
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/findComponentEventsByCredentialValue" : {
      "post" : {
        "description" : "Retrieve all component events relevant to the specified credential value",
        "operationId" : "findComponentEventsByCredentialValue",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_FindComponentEventsByCredentialValueWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_FindComponentEventsByCredentialValueWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Retrieve all component events relevant to the specified credential value",
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/findComponentEventsByLocation" : {
      "post" : {
        "description" : "Retrieve all component events relevant to the specified location",
        "operationId" : "findComponentEventsByLocation",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_FindComponentEventsByLocationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_FindComponentEventsByLocationWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Retrieve all component events relevant to the specified location",
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/findComponentEventsByOwnerDevice" : {
      "post" : {
        "deprecated" : true,
        "description" : "Retrieve all component events relevant to the specified owner device (i.e. DC20's device uuid)",
        "operationId" : "findComponentEventsByOwnerDevice",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_FindComponentEventsByOwnerDeviceWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_FindComponentEventsByOwnerDeviceWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Retrieve all component events relevant to the specified owner device (deprecated)",
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/findComponentEventsBySupportAuthority" : {
      "post" : {
        "description" : "Retrieve all component events relevant to the specified api token",
        "operationId" : "findComponentEventsBySupportAuthority",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_FindComponentEventsBySupportAuthorityWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_FindComponentEventsBySupportAuthorityWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Retrieve all component events relevant to the specified support authority",
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/findComponentEventsByUser" : {
      "post" : {
        "description" : "Retrieve all component events relevant to the specified User",
        "operationId" : "findComponentEventsByUser",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_FindComponentEventsByUserWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_FindComponentEventsByUserWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Retrieve all component events relevant to the specified User",
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/findComponentEventsForVideoIntercom" : {
      "post" : {
        "description" : "Retrieve all component events relevant to the specified Video Intercom and optional AccessControlledDoor",
        "operationId" : "findComponentEventsForVideoIntercom",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_FindComponentEventsForVideoIntercomWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_FindComponentEventsForVideoIntercomWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Retrieve all component events relevant to the specified Video Intercom and optional AccessControlledDoor",
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/findComponentSeekPointsByAccessControlledDoor" : {
      "post" : {
        "description" : "Find component seekpoints by access controlled door",
        "operationId" : "findComponentSeekPointsByAccessControlledDoor",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_FindComponentSeekPointsByAccessControlledDoorWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_FindComponentSeekPointsByAccessControlledDoorWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Find component seekpoints by access controlled door",
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/findComponentSeekPointsByAccessControlledDoors" : {
      "post" : {
        "description" : "Find component seekpoints by access controlled doors",
        "operationId" : "findComponentSeekPointsByAccessControlledDoors",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_FindComponentSeekPointsByAccessControlledDoorsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_FindComponentSeekPointsByAccessControlledDoorsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Find component seekpoints by access controlled doors",
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/findComponentSeekPointsByComponent" : {
      "post" : {
        "description" : "Find component seekpoints by component",
        "operationId" : "findComponentSeekPointsByComponent",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_FindComponentSeekPointsByComponentWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_FindComponentSeekPointsByComponentWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Find component seekpoints by component",
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/findComponentSeekPointsByLocation" : {
      "post" : {
        "description" : "Find component seekpoints by location",
        "operationId" : "findComponentSeekPointsByLocation",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_FindComponentSeekPointsByLocationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_FindComponentSeekPointsByLocationWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Find component seekpoints by location",
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/findComponentSeekPointsByOwnerDevice" : {
      "post" : {
        "description" : "Find component seekpoints by owner device",
        "operationId" : "findComponentSeekPointsByOwnerDevice",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_FindComponentSeekPointsByOwnerDeviceWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_FindComponentSeekPointsByOwnerDeviceWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Find component seekpoints by owner device",
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/findComponentSeekPointsByUser" : {
      "post" : {
        "description" : "Find component seekpoints by user",
        "operationId" : "findComponentSeekPointsByUser",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_FindComponentSeekPointsByUserWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_FindComponentSeekPointsByUserWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Find component seekpoints by user",
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/findComponentShadowsByOwnerDevice" : {
      "post" : {
        "description" : "Retrieve component shadows by the specified owner device uuid",
        "operationId" : "findComponentShadowsByOwnerDevice",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_FindComponentShadowsByOwnerDeviceWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_FindComponentShadowsByOwnerDeviceWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Retrieve component shadows by the specified owner device uuid",
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/findComponentsByOwnerDevice" : {
      "post" : {
        "description" : "Retrieve a list of components owned by a Rhombus device (i.e. DC20's device uuid)",
        "operationId" : "findComponentsByOwnerDevice",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_FindComponentsByOwnerDeviceWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_FindComponentsByOwnerDeviceWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Retrieve a list of components owned by a Rhombus device",
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/findMinimalStateAccessControlledDoors" : {
      "post" : {
        "description" : "Find minimal state access controlled doors within the org",
        "operationId" : "findMinimalStateAccessControlledDoors",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_FindMinimalStateAccessControlledDoorsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_FindMinimalStateAccessControlledDoorsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Find minimal state access controlled doors within the org",
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/findMinimalStateAccessControlledDoorsByLocation" : {
      "post" : {
        "description" : "Find minimal state access controlled doors within the specified location",
        "operationId" : "findMinimalStateAccessControlledDoorsByLocation",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_FindMinimalStateAccessControlledDoorsByLocationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_FindMinimalStateAccessControlledDoorsByLocationWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Find minimal state access controlled doors within the specified location",
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/getAccessControlledDoorLabelsForOrg" : {
      "post" : {
        "description" : "Get all access controlled door labels for the organization",
        "operationId" : "getAccessControlledDoorLabelsForOrg",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_GetAccessControlledDoorLabelsForOrgWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_GetAccessControlledDoorLabelsForOrgWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get all access controlled door labels for the organization",
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/getOrCreateDevicePhysicalPortConfig" : {
      "post" : {
        "description" : "Gets a physical port layout for the specified device, components owned by that device and details about the port configuration validity. Map is instantiated if it doesn't currently exist as part of the call.",
        "operationId" : "getOrCreateDevicePhysicalPortConfig",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_GetOrCreateDevicePhysicalPortConfigWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_GetOrCreateDevicePhysicalPortConfigWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get or create device physical port config",
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/removeAccessControlledDoorLabel" : {
      "post" : {
        "description" : "Remove a label to an access controlled door",
        "operationId" : "removeAccessControlledDoorLabel",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_RemoveAccessControlledDoorLabelWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_RemoveAccessControlledDoorLabelWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Remove a label to an access controlled door",
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/updateAccessControlledDoor" : {
      "post" : {
        "description" : "Updates an access controlled door",
        "operationId" : "updateAccessControlledDoor",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_UpdateAccessControlledDoorWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_UpdateAccessControlledDoorWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Updates an access controlled door",
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/updateIntegratedDoorPositionIndicator" : {
      "post" : {
        "description" : "Update a door position indicator component",
        "operationId" : "updateIntegratedDoorPositionIndicator",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_UpdateIntegratedDoorPositionIndicatorWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_UpdateIntegratedDoorPositionIndicatorWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update a door position indicator component",
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/updateIntegratedDoorRelay" : {
      "post" : {
        "description" : "Update a door relay component",
        "operationId" : "updateIntegratedDoorRelay",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_UpdateIntegratedDoorRelayWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_UpdateIntegratedDoorRelayWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update a door relay component",
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/updateIntegratedGenericButton" : {
      "post" : {
        "description" : "Update a generic button component",
        "operationId" : "updateIntegratedGenericButton",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_UpdateIntegratedGenericButtonWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_UpdateIntegratedGenericButtonWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update a generic button component",
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/updateIntegratedGenericInput" : {
      "post" : {
        "description" : "Update a generic input component",
        "operationId" : "updateIntegratedGenericInput",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_UpdateIntegratedGenericInputWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_UpdateIntegratedGenericInputWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update a generic input component",
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/updateIntegratedGenericRelay" : {
      "post" : {
        "description" : "Update a generic relay component",
        "operationId" : "updateIntegratedGenericRelay",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_UpdateIntegratedGenericRelayWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_UpdateIntegratedGenericRelayWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update a generic relay component",
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/updateIntegratedGenericRelaySteadyState" : {
      "post" : {
        "description" : "Update a generic relay component's steady state",
        "operationId" : "updateIntegratedGenericRelaySteadyState",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_UpdateIntegratedGenericRelaySteadyStateWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_UpdateIntegratedGenericRelaySteadyStateWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update a generic relay component's steady state",
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/updateIntegratedGenericRelayTransientState" : {
      "post" : {
        "description" : "Activate a generic relay for a brief period",
        "operationId" : "updateIntegratedGenericRelayTransientState",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_UpdateIntegratedGenericRelayTransientStateWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_UpdateIntegratedGenericRelayTransientStateWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Activate a generic relay for a brief period",
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/updateIntegratedRequestToExit" : {
      "post" : {
        "description" : "Update a request to exit component",
        "operationId" : "updateIntegratedRequestToExit",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_UpdateIntegratedRequestToExitWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_UpdateIntegratedRequestToExitWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update a request to exit component",
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/updateOsdpDoorReader" : {
      "post" : {
        "description" : "Update a third party OSDP Reader component",
        "operationId" : "updateOsdpDoorReader",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_UpdateOsdpReaderWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_UpdateOsdpReaderWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update a third party OSDP Reader component",
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/updateRhombusOsdpDoorReader" : {
      "post" : {
        "description" : "Update a Rhombus OSDP Reader component",
        "operationId" : "updateRhombusOsdpDoorReader",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_UpdateRhombusOsdpReaderWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_UpdateRhombusOsdpReaderWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update a Rhombus OSDP Reader component",
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/component/updateWiegandDoorReader" : {
      "post" : {
        "description" : "Update a third party Wiegand Reader component",
        "operationId" : "updateWiegandDoorReader",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Component_UpdateWiegandReaderWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Component_UpdateWiegandReaderWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update a third party Wiegand Reader component",
        "tags" : [ "Component Webservice" ]
      }
    },
    "/api/customer/deleteAllNotificationSnoozeSettings" : {
      "post" : {
        "description" : "Delete a policy pause setting for a device",
        "operationId" : "deleteAllNotificationSnoozeSettings",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Customer_DeleteNotificationSnoozeSettingWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer_DeleteNotificationSnoozeSettingWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete all notification snooze settings",
        "tags" : [ "Customer Webservice" ]
      }
    },
    "/api/customer/deleteNotificationSnoozeSettingForComponentComposite" : {
      "post" : {
        "description" : "Delete a policy pause setting for a component composite",
        "operationId" : "deleteNotificationSnoozeSettingForComponentComposite",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Customer_DeleteNotificationSnoozeSettingWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer_DeleteNotificationSnoozeSettingWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete a policy pause setting for a component composite",
        "tags" : [ "Customer Webservice" ]
      }
    },
    "/api/customer/deleteNotificationSnoozeSettingForDevice" : {
      "post" : {
        "description" : "Delete a policy pause setting for a device",
        "operationId" : "deleteNotificationSnoozeSettingForDevice",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Customer_DeleteNotificationSnoozeSettingWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer_DeleteNotificationSnoozeSettingWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete a policy pause setting for a device",
        "tags" : [ "Customer Webservice" ]
      }
    },
    "/api/customer/deleteNotificationSnoozeSettingForLocation" : {
      "post" : {
        "description" : "Delete a policy pause setting for a location",
        "operationId" : "deleteNotificationSnoozeSettingForLocation",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Customer_DeleteNotificationSnoozeSettingWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer_DeleteNotificationSnoozeSettingWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete a policy pause setting for a location",
        "tags" : [ "Customer Webservice" ]
      }
    },
    "/api/customer/getUserSnoozedNotificationSettings" : {
      "post" : {
        "description" : "Get the current and planned user notification snooze details",
        "operationId" : "getUserSnoozedNotificationSettings",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Customer_GetUserSnoozedNotificationSettingsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer_GetUserSnoozedNotificationSettingsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get the current and planned user notification snooze details",
        "tags" : [ "Customer Webservice" ]
      }
    },
    "/api/customer/updateCurrentUserNotificationSettings" : {
      "post" : {
        "description" : "Update notification settings for user",
        "operationId" : "updateCurrentUserNotificationSettings",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User_UpdateUserNotificationSettingsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User_UpdateUserNotificationSettingsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update notification settings for user",
        "tags" : [ "User Webservice", "Customer Webservice" ]
      }
    },
    "/api/developer/createEventListener" : {
      "post" : {
        "description" : "Create an event listener",
        "operationId" : "createEventListener",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Developer_CreateEventListenerWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Developer_CreateEventListenerWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create an event listener",
        "tags" : [ "Developer Webservice" ]
      }
    },
    "/api/developer/deleteEventListener" : {
      "post" : {
        "description" : "Delete an event listener",
        "operationId" : "deleteEventListener",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Developer_DeleteEventListenerWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Developer_DeleteEventListenerWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete an event listener",
        "tags" : [ "Developer Webservice" ]
      }
    },
    "/api/developer/getAllEventListeners" : {
      "post" : {
        "description" : "Get a list of all event listeners",
        "operationId" : "getAllEventListeners",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Developer_GetAllEventListenersWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Developer_GetAllEventListenersWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get a list of all event listeners",
        "tags" : [ "Developer Webservice" ]
      }
    },
    "/api/developer/getEventListenersForDevice" : {
      "post" : {
        "description" : "Get a list of event listeners for a device",
        "operationId" : "getEventListenersForDevice",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Developer_GetEventListenersForDeviceWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Developer_GetEventListenersForDeviceWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get a list of event listeners for a device",
        "tags" : [ "Developer Webservice" ]
      }
    },
    "/api/deviceconfig/getFacetedConfig" : {
      "post" : {
        "description" : "Get a device's config",
        "operationId" : "getFacetedConfig",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Deviceconfig_GetConfigWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Deviceconfig_GetFacetedUserConfigWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get a device's config",
        "tags" : [ "Device Config Webservice" ]
      }
    },
    "/api/deviceconfig/updateFacetedConfig" : {
      "post" : {
        "description" : "Update a device's config",
        "operationId" : "updateFacetedConfig",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Deviceconfig_UpdateFacetedUserConfigWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Common_devices_UpdateConfigWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update a device's config",
        "tags" : [ "Device Config Webservice" ]
      }
    },
    "/api/door/getDoorEventsForSensor" : {
      "post" : {
        "description" : "Get list of door open/close events for door sensor",
        "operationId" : "getDoorEventsForSensor",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Door_GetDoorEventsForSensorWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Door_GetDoorEventsForSensorWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get list of door open/close events for door sensor",
        "tags" : [ "Door Webservice" ]
      }
    },
    "/api/door/getDoorPresenceWindows" : {
      "post" : {
        "description" : "Get stored video information for sensor",
        "operationId" : "getDoorPresenceWindows",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Sensor_GetSensorPresenceWindowsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Sensor_GetSensorPresenceWindowsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get stored video information for sensor",
        "tags" : [ "Door Webservice" ]
      }
    },
    "/api/door/getMinimalDoorStateList" : {
      "post" : {
        "description" : "Get basic state information for all door sensors",
        "operationId" : "getMinimalDoorStateList",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Door_GetMinimalDoorStatesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Door_GetMinimalDoorStatesWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get basic state information for all door sensors",
        "tags" : [ "Door Webservice" ]
      }
    },
    "/api/door/updateDetails" : {
      "post" : {
        "description" : "Update details for door sensor. Note: uuid is a required field",
        "operationId" : "updateDoorSensorDetails",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Door_UpdateDoorSensorDetailsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Door_UpdateDoorSensorDetailsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update details for door sensor",
        "tags" : [ "Door Webservice" ]
      }
    },
    "/api/doorbellcamera/calibrateFloorplanProjection" : {
      "post" : {
        "description" : "Generate the homography to project detections onto a floorplan.",
        "operationId" : "doorbellCameraCalibrateFloorplanProjection",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Common_devices_CalibrateFloorplanProjectionWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Common_devices_CalibrateFloorplanProjectionWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Generate the homography to project detections onto a floorplan",
        "tags" : [ "Doorbell Camera Webservice" ]
      }
    },
    "/api/doorbellcamera/createRuleForDoorbellCamera" : {
      "post" : {
        "description" : "Create rule for a doorbell camera.",
        "operationId" : "createRuleForDoorbellCamera",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Doorbellcamera_CreateRuleForDoorbellCameraWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Doorbellcamera_CreateRuleForDoorbellCameraWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create rule for a doorbell camera",
        "tags" : [ "Doorbell Camera Webservice" ]
      }
    },
    "/api/doorbellcamera/createSharedLiveVideoStream" : {
      "post" : {
        "description" : "Share an live video stream for a doorbell camera",
        "operationId" : "createDoorbellCameraSharedLiveVideoStream",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Doorbellcamera_CreateSharedLiveVideoStreamWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Doorbellcamera_CreateSharedLiveVideoStreamWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Share an live video stream for a doorbell camera",
        "tags" : [ "Doorbell Camera Webservice" ]
      }
    },
    "/api/doorbellcamera/delete" : {
      "post" : {
        "description" : "Remove the doorbell camera from the organization",
        "operationId" : "deleteDoorbellCamera",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Doorbellcamera_DeleteDoorbellCameraWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Doorbellcamera_DeleteDoorbellCameraWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Remove the doorbell camera from the organization",
        "tags" : [ "Doorbell Camera Webservice" ]
      }
    },
    "/api/doorbellcamera/deleteRuleForDoorbellCamera" : {
      "post" : {
        "description" : "Delete rule for a doorbell camera.",
        "operationId" : "deleteRuleForDoorbellCamera",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Doorbellcamera_DeleteRuleForDoorbellCameraWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Doorbellcamera_DeleteRuleForDoorbellCameraWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete rule for a doorbell camera",
        "tags" : [ "Doorbell Camera Webservice" ]
      }
    },
    "/api/doorbellcamera/findComponentEventsForDoorbellCamera" : {
      "post" : {
        "description" : "Retrieve all component events relevant to the specified Doorbell Camera",
        "operationId" : "findComponentEventsForDoorbellCamera",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Doorbellcamera_FindComponentEventsForDoorbellCameraWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Doorbellcamera_FindComponentEventsForDoorbellCameraWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Retrieve all component events relevant to the specified Doorbell Camera",
        "tags" : [ "Doorbell Camera Webservice" ]
      }
    },
    "/api/doorbellcamera/findComponentSeekPointsForDoorbellCamera" : {
      "post" : {
        "description" : "Retrieve all component seekpoints relevant to the specified Doorbell Camera",
        "operationId" : "findComponentSeekPointsForDoorbellCamera",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Doorbellcamera_FindComponentSeekPointsForDoorbellCameraWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Doorbellcamera_FindComponentSeekPointsForDoorbellCameraWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Retrieve all component seekpoints relevant to the specified Doorbell Camera",
        "tags" : [ "Doorbell Camera Webservice" ]
      }
    },
    "/api/doorbellcamera/findSharedLiveVideoStreams" : {
      "post" : {
        "description" : "Get list of all shared live streams for doorbell camera",
        "operationId" : "findDoorbellCameraSharedLiveVideoStreams",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Doorbellcamera_FindSharedLiveVideoStreamsForWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Doorbellcamera_FindSharedLiveVideoStreamsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get list of all shared live streams for doorbell camera",
        "tags" : [ "Doorbell Camera Webservice" ]
      }
    },
    "/api/doorbellcamera/getDoorbellCameraRulesForOrg" : {
      "post" : {
        "description" : "Get rules for all doorbell cameras in an org.",
        "operationId" : "getDoorbellCameraRulesForOrg",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Doorbellcamera_GetDoorbellCameraRulesForOrgWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Doorbellcamera_GetDoorbellCameraRulesForOrgWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get rules for all doorbell cameras in an org",
        "tags" : [ "Doorbell Camera Webservice" ]
      }
    },
    "/api/doorbellcamera/getRulesForDoorbellCamera" : {
      "post" : {
        "description" : "Get all rules for a doorbell camera.",
        "operationId" : "getRulesForDoorbellCamera",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Doorbellcamera_GetRulesForDoorbellCameraWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Doorbellcamera_GetRulesForDoorbellCameraWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get all rules for a doorbell camera",
        "tags" : [ "Doorbell Camera Webservice" ]
      }
    },
    "/api/doorcontroller/registerDiscoveredRhombusReader" : {
      "post" : {
        "description" : "Register a Rhombus reader that a Door Controller has discovered",
        "operationId" : "registerDiscoveredRhombusReader",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Doorcontroller_RegisterDiscoveredRhombusReaderWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Doorcontroller_RegisterDiscoveredRhombusReaderWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Register a Rhombus reader that a Door Controller has discovered",
        "tags" : [ "Door Controller Webservice" ]
      }
    },
    "/api/doorcontroller/updateDetails" : {
      "post" : {
        "description" : "Update details for door controller. Note: uuid is a required field",
        "operationId" : "updateDoorControllerDetails",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Doorcontroller_UpdateDoorControllerDetailsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Doorcontroller_UpdateDoorControllerDetailsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update details for door controller",
        "tags" : [ "Door Controller Webservice" ]
      }
    },
    "/api/event/createSharedClipGroupV3" : {
      "post" : {
        "description" : "Share multiple clips in a single page",
        "operationId" : "createSharedClipGroupV3",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_CreateSharedClipGroupWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_CreateSharedClipGroupWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Share multiple clips in a single page",
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/deleteAlertMonitoringThreatCase" : {
      "post" : {
        "description" : "Delete alert monitoring threat case",
        "operationId" : "deleteAlertMonitoringThreatCase",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_DeleteAlertMonitoringThreatCaseWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_DeleteAlertMonitoringThreatCaseWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete alert monitoring threat case",
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/deleteAlertMonitoringThreatCaseByStatus" : {
      "post" : {
        "description" : "Delete alert monitoring threat case by status",
        "operationId" : "deleteAlertMonitoringThreatCaseByStatus",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_DeleteAlertMonitoringThreatCaseByStatusWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_DeleteAlertMonitoringThreatCaseByStatusWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete alert monitoring threat case by status",
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/deleteSavedClip" : {
      "post" : {
        "description" : "Delete all types of saved clips (splices in progress, completed splices, saved alerts)",
        "operationId" : "deleteSavedClip",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_DeleteSavedClipWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_DeleteSavedClipWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete all types of saved clips (splices in progress, completed splices, saved alerts)",
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/deleteSharedClipGroupV2" : {
      "post" : {
        "description" : "Delete a shared clip page",
        "operationId" : "deleteSharedClipGroupV2",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_DeleteSharedClipGroupWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_DeleteSharedClipGroupWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete a shared clip page",
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/dismissAllPolicyAlertsForDevice" : {
      "post" : {
        "description" : "Dismiss all policy alerts for each specified device(s)",
        "operationId" : "dismissAllPolicyAlertsForDevice",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_DismissAllPolicyAlertsForDeviceWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_DismissAllPolicyAlertsForDeviceWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Dismiss all policy alerts for each specified device(s)",
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/dismissAllPolicyAlertsV2" : {
      "post" : {
        "description" : "Dismiss all policy alerts in organization",
        "operationId" : "dismissAllPolicyAlertsV2",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_DismissAllPolicyAlertsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_DismissAllPolicyAlertsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Dismiss all policy alerts in organization",
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/dismissPolicyAlertV2" : {
      "post" : {
        "description" : "Dismiss a policy alert",
        "operationId" : "dismissPolicyAlertV2",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_DismissPolicyAlertWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_DismissPolicyAlertWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Dismiss a policy alert",
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/dismissPolicyAlertsV2" : {
      "post" : {
        "description" : "Dismiss multiple policy alerts",
        "operationId" : "dismissPolicyAlertsV2",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_DismissPolicyAlertsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_DismissPolicyAlertsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Dismiss multiple policy alerts",
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/getAlertMonitoringThreatCase" : {
      "post" : {
        "description" : "Get alert monitoring threat case",
        "operationId" : "getAlertMonitoringThreatCase",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_GetAlertMonitoringThreatCaseWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_GetAlertMonitoringThreatCaseWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get alert monitoring threat case",
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/getAlertMonitoringThreatCases" : {
      "post" : {
        "description" : "Get alert monitoring threat cases",
        "operationId" : "getAlertMonitoringThreatCases",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_GetAlertMonitoringThreatCasesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_GetAlertMonitoringThreatCasesWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get alert monitoring threat cases",
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/getClipWithProgress" : {
      "post" : {
        "description" : "Get a specified saved clip with current progress",
        "operationId" : "getClipWithProgress",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_GetClipWithProgressWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_GetClipWithProgressWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get a specified saved clip with current progress",
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/getClipsWithProgress" : {
      "post" : {
        "description" : "Get list of saved clips in organization, with current progress",
        "operationId" : "getClipsWithProgress",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_GetClipsWithProgressWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_GetClipsWithProgressWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get list of saved clips in organization, with current progress",
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/getExpiringClipsForOrg" : {
      "post" : {
        "description" : "Get list of expiring saved clips in organization.",
        "operationId" : "getExpiringClipsForOrg",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_GetClipsWithProgressWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_GetClipsWithProgressWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get list of expiring saved clips in organization",
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/getMotionGrid" : {
      "post" : {
        "description" : "Get motion data for specified camera",
        "operationId" : "getMotionGrid",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_GetMotionGridWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_GetMotionGridWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get motion data for specified camera",
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/getMotionHeatMap" : {
      "post" : {
        "description" : "Get aggregated motion heatmap for specified time period and camera. Divides a camera's resolution into a 36x64 grid and counts the number of motion events that occurred in each cell.",
        "operationId" : "getMotionHeatMap",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_GetMotionGridWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_GetMotionGridCountsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get aggregated motion heatmap for specified time period and camera",
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/getPolicyAlert" : {
      "post" : {
        "description" : "Get information about a policy alert",
        "operationId" : "getPolicyAlert",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_GetPolicyAlertWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_GetPolicyAlertWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get information about a policy alert",
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/getPolicyAlertCount" : {
      "post" : {
        "description" : "Get count of policy alerts",
        "operationId" : "getPolicyAlertCount",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_GetPolicyAlertCountWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_GetPolicyAlertCountWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get count of policy alerts",
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/getPolicyAlertDetails" : {
      "post" : {
        "description" : "Get detailed information about policy alert, including seekpoints and bounding boxes",
        "operationId" : "getPolicyAlertDetails",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_GetPolicyAlertDetailsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_GetPolicyAlertDetailsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get detailed information about policy alert, including seekpoints and bounding boxes",
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/getPolicyAlertGroupsForDevice" : {
      "post" : {
        "description" : "Get recent policy alerts for device, grouped by time. Groups are constructed of alerts that occur within 2 minutes of the previous alert, up to a maximum of 50. Results are returned in reverse-chronological order, so all fields are relative to that ordering.",
        "operationId" : "getPolicyAlertGroupsForDevice",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_GetPolicyAlertGroupsForDeviceWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_GetPolicyAlertGroupsForDeviceWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get recent policy alerts for device, grouped by time",
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/getPolicyAlertGroupsForLocation" : {
      "post" : {
        "description" : "Get recent policy alerts for a location, grouped by time. Groups are constructed of alerts that occur within 2 minutes of the previous alert, up to a maximum of 50. Results are returned in reverse-chronological order, so all fields are relative to that ordering.",
        "operationId" : "getPolicyAlertGroupsForLocation",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_GetPolicyAlertGroupsForLocationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_GetPolicyAlertGroupsForLocationWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get recent policy alerts for a location, grouped by time",
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/getPolicyAlertGroupsV2" : {
      "post" : {
        "deprecated" : true,
        "description" : "Get recent policy alerts for organization, grouped by time. Groups are constructed of alerts that occur within 2 minutes of the previous alert, up to a maximum of 50. Results are returned in reverse-chronological order, so all fields are relative to that ordering.",
        "operationId" : "getPolicyAlertGroupsV2",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_GetPolicyAlertGroupsV2WSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_GetPolicyAlertGroupsV2WSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get recent policy alerts for organization, grouped by time",
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/getPolicyAlertV2" : {
      "post" : {
        "deprecated" : true,
        "description" : "Get information about a policy alert",
        "operationId" : "getPolicyAlertV2",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_GetPolicyAlertV2WSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_GetPolicyAlertV2WSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get information about a policy alert",
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/getPolicyAlerts" : {
      "post" : {
        "description" : "Get recent policy alerts for organization",
        "operationId" : "getPolicyAlerts",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_GetPolicyAlertsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_GetPolicyAlertsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get recent policy alerts for organization",
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/getPolicyAlertsV2" : {
      "post" : {
        "deprecated" : true,
        "description" : "Get recent policy alerts for organization",
        "operationId" : "getPolicyAlertsV2",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_GetPolicyAlertsV2WSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_GetPolicyAlertsV2WSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get recent policy alerts for organization",
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/getSavedClipCount" : {
      "post" : {
        "description" : "Get a count of saved clips in and organization",
        "operationId" : "getSavedClipCount",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_GetSavedClipCountWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_GetSavedClipCountWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get a count of saved clips in an organization",
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/getSavedClipDetails" : {
      "post" : {
        "description" : "Get detailed information about a saved clip, including seekpoints and bounding boxes",
        "operationId" : "getSavedClipDetails",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_GetSavedClipDetailsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_GetSavedClipDetailsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get detailed information about a saved clip, including seekpoints and bounding boxes",
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/getSavedClips" : {
      "post" : {
        "deprecated" : true,
        "description" : "Use /getSavedClipsV2 instead",
        "operationId" : "getSavedClips",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_GetSavedClipsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_GetSavedClipsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Use /getSavedClipsV2 instead",
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/getSavedClipsByExternalTransactionId" : {
      "post" : {
        "description" : "Get list of saved clips matching the external transaction id",
        "operationId" : "getSavedClipsByExternalTransactionId",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_GetSavedClipsByExternalTransactionIdWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_GetSavedClipsByExternalTransactionIdWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get list of saved clips matching the external transaction id",
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/getSavedClipsV2" : {
      "post" : {
        "description" : "Get list of saved clips in organization",
        "operationId" : "getSavedClipsV2",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_GetSavedClipsV2WSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_GetSavedClipsV2WSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get list of saved clips in organization",
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/getSharedClipGroupDetails" : {
      "post" : {
        "description" : "Get detailed information about a shared clip page, including seekpoints and bounding boxes",
        "operationId" : "getSharedClipGroupDetails",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_GetSharedClipGroupDetailsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_GetSharedClipGroupDetailsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get detailed information about a shared clip page, including seekpoints and bounding boxes",
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/getSharedClipGroupsV2" : {
      "post" : {
        "description" : "Get list of shared clip pages in organization",
        "operationId" : "getSharedClipGroupsV2",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_GetSharedClipGroupsV2WSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_GetSharedClipGroupsV2WSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get list of shared clip pages in organization",
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/getSplicedClipsInProgress" : {
      "post" : {
        "deprecated" : true,
        "description" : "Get spliced clips in progress",
        "operationId" : "DEPRECATED_getSplicedClipsInProgress",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_GetSplicedClipsInProgressWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_GetSplicedClipsInProgressWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get spliced clips in progress",
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/getUnhealthyDeviceAlerts" : {
      "post" : {
        "description" : "Get list of unhealthy devices in organization",
        "operationId" : "getUnhealthyDeviceAlerts",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_GetUnhealthyDeviceAlertsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_GetUnhealthyDeviceAlertsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get list of unhealthy devices in organization",
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/muteNotificationsForDevice" : {
      "post" : {
        "description" : "Mute notifications from a device for specified number of seconds",
        "operationId" : "muteNotificationsForDevice",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_MuteNotificationsForDevicetWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_MuteNotificationsForDevicetWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Mute notifications from a device for specified number of seconds",
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/reportBadPolicyAlert" : {
      "post" : {
        "description" : "Report a bad policy event (AI false positive) and send information for feedback. Note: this adds the clip to our AI training data set",
        "operationId" : "reportBadPolicyAlert",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_ReportBadPolicyAlertWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_ReportBadPolicyAlertWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Report a bad policy event (AI false positive) and send information for feedback",
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/savePolicyAlertV2" : {
      "post" : {
        "description" : "Save a policy alert as a saved clip",
        "operationId" : "savePolicyAlertV2",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_SavePolicyAlertWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_SavePolicyAlertWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Save a policy alert as a saved clip",
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/searchMotionGrid" : {
      "post" : {
        "description" : "Search motion grid for motion events occuring in specified grid cells. Note: motion grid is a 64x36 grid of cells with the upper left hand corner being (0, 0)",
        "operationId" : "searchMotionGrid",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_SearchMotionGridWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_SearchMotionGridWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Search motion grid for motion events occuring in specified grid cells",
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/searchMotionGridWithActivities" : {
      "post" : {
        "description" : "Search motion grid for motion events occuring in specified grid cells. Note: motion grid is a 64x36 grid of cells with the upper left hand corner being (0, 0)",
        "operationId" : "searchMotionGridWithActivities",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_SearchMotionGridWithActivitiesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_SearchMotionGridWithActivitiesWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Search motion grid for motion events occuring in specified grid cells",
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/unSavePolicyAlertV2" : {
      "post" : {
        "deprecated" : true,
        "description" : "Unsave policy alert and remove associated saved clip",
        "operationId" : "unSavePolicyAlertV2",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_UnSavePolicyAlertWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_UnSavePolicyAlertWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Unsave policy alert and remove associated saved clip",
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/updateSavedClip" : {
      "post" : {
        "description" : "Selectively updates a saved clip",
        "operationId" : "updateSavedClip",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_UpdateSavedClipWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_UpdateSavedClipWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Selectively update a saved clip",
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/event/updateSharedClipGroupV2" : {
      "post" : {
        "description" : "Update shared clip page title, description, password, or expiration time",
        "operationId" : "updateSharedClipGroupV2",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Event_UpdateSharedClipGroupWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Event_UpdateSharedClipGroupWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update shared clip page title, description, password, or expiration time",
        "tags" : [ "Event Webservice" ]
      }
    },
    "/api/eventSearch/getCameraOrDoorbellCameraSeekpoints" : {
      "post" : {
        "deprecated" : true,
        "description" : "Get camera or doorbell camera seekpoints",
        "operationId" : "getCameraOrDoorbellCameraSeekpoints",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Common_devices_GetCameraOrDoorbellCameraSeekpointsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Eventsearch_GetCameraOrDoorbellCameraSeekpointsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get camera or doorbell camera seekpoints",
        "tags" : [ "Event Search Webservice" ]
      }
    },
    "/api/eventSearch/getEventSeekpoints" : {
      "post" : {
        "deprecated" : true,
        "description" : "Get normal seekpoint events and access control seekpoint events",
        "operationId" : "getDeprecatedEventSeekpoints",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Eventsearch_GetEventSeekpointsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Eventsearch_GetEventSeekpointsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get normal seekpoint events and access control seekpoint events",
        "tags" : [ "Event Search Webservice" ]
      }
    },
    "/api/export/audit" : {
      "post" : {
        "description" : "Download audit log",
        "operationId" : "exportAudit",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Export_ExportAuditEventsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "text/csv; charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StreamingOutput"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Download audit log",
        "tags" : [ "Export Webservice" ]
      }
    },
    "/api/export/climateEvents" : {
      "post" : {
        "description" : "Download climate event log",
        "operationId" : "exportClimateEvents",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Export_ExportClimateEventsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StreamingOutput"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Download climate event log",
        "tags" : [ "Export Webservice" ]
      }
    },
    "/api/export/countReports" : {
      "post" : {
        "description" : "Download count report",
        "operationId" : "exportCountReports",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Export_ExportCountReportsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "text/csv; charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StreamingOutput"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Download count report",
        "tags" : [ "Export Webservice" ]
      }
    },
    "/api/export/diagnostic" : {
      "post" : {
        "description" : "Download diagnostic log",
        "operationId" : "exportDiagnostic",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Export_ExportDiagnosticEventsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "text/csv; charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StreamingOutput"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Download diagnostic log",
        "tags" : [ "Export Webservice" ]
      }
    },
    "/api/export/doorEvents" : {
      "post" : {
        "description" : "Download door event log",
        "operationId" : "exportDoorEvents",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Export_ExportDoorEventsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StreamingOutput"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Download door event log",
        "tags" : [ "Export Webservice" ]
      }
    },
    "/api/export/environmentalGatewayEvents" : {
      "post" : {
        "description" : "Download environmental gateway event log",
        "operationId" : "exportEnvironmentalGatewayEvents",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Export_ExportEnvironmentalGatewayEventsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StreamingOutput"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Download environmental gateway event log",
        "tags" : [ "Export Webservice" ]
      }
    },
    "/api/export/inventory" : {
      "post" : {
        "description" : "Download device inventory",
        "operationId" : "exportInventory",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Export_ExportInventoryWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "text/csv; charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StreamingOutput"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Download device inventory",
        "tags" : [ "Export Webservice" ]
      }
    },
    "/api/export/motionEvents" : {
      "post" : {
        "description" : "Download motion event log for motion sensors",
        "operationId" : "exportMotionEvents",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Export_ExportMotionEventsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StreamingOutput"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Download motion event log for motion sensors",
        "tags" : [ "Export Webservice" ]
      }
    },
    "/api/export/peopleCountEvents" : {
      "post" : {
        "description" : "Download people count report",
        "operationId" : "exportPeopleCountEvents",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Export_ExportPeopleCountEventsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "text/csv; charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StreamingOutput"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Download people count report",
        "tags" : [ "Export Webservice" ]
      }
    },
    "/api/export/peopleEvents" : {
      "post" : {
        "description" : "Download people event log",
        "operationId" : "exportPeopleEvents",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Export_ExportPeopleEventsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StreamingOutput"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Download people event log",
        "tags" : [ "Export Webservice" ]
      }
    },
    "/api/export/proximityEvents" : {
      "post" : {
        "description" : "Download proximity tag event log",
        "operationId" : "exportProximityEvents",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Export_ExportProximityEventsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StreamingOutput"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Download proximity tag event log",
        "tags" : [ "Export Webservice" ]
      }
    },
    "/api/export/proximityLocomotionEvents" : {
      "post" : {
        "description" : "Download proximity tag event log",
        "operationId" : "exportProximityLocomotionEvents",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Export_ExportProximityLocomotionEventsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StreamingOutput"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Download proximity tag event log",
        "tags" : [ "Export Webservice" ]
      }
    },
    "/api/export/uptime" : {
      "post" : {
        "description" : "Download device uptime reports",
        "operationId" : "exportUptime",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Export_ExportUptimeWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/zip" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StreamingOutput"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Download device uptime reports",
        "tags" : [ "Export Webservice" ]
      }
    },
    "/api/export/users" : {
      "post" : {
        "description" : "Download org users",
        "operationId" : "exportUsers",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Export_ExportUsersWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "text/csv; charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StreamingOutput"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Download org users",
        "tags" : [ "Export Webservice" ]
      }
    },
    "/api/export/vehicleEvents" : {
      "post" : {
        "deprecated" : true,
        "description" : "Download vehicle event log.  Use /export/vehicleEventsV2 instead for more functionality",
        "operationId" : "exportVehicleEvents",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Export_ExportVehicleEventsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "text/csv; charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StreamingOutput"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Download vehicle event log",
        "tags" : [ "Export Webservice" ]
      }
    },
    "/api/export/vehicleEventsV2" : {
      "post" : {
        "description" : "Download vehicle event log",
        "operationId" : "exportVehicleEventsV2",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Vehicle_GetVehicleEventsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "text/csv; charset=UTF-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StreamingOutput"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Download vehicle event log",
        "tags" : [ "Export Webservice" ]
      }
    },
    "/api/faceRecognition/faceEvent/deleteFaceEvent" : {
      "post" : {
        "description" : "Delete face event.",
        "operationId" : "deleteFaceEvent",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Facerecognition_faceevent_DeleteFaceEventWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Facerecognition_faceevent_DeleteFaceEventWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete face event",
        "tags" : [ "Face Recognition Event Webservice" ]
      }
    },
    "/api/faceRecognition/faceEvent/findFaceEventsByOrg" : {
      "post" : {
        "description" : "Find face events for an organization. The events are returned in reverse chronological order, with the latest events appearing first.",
        "operationId" : "findFaceEventsByOrg",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Facerecognition_faceevent_FindFaceEventsByOrgWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Facerecognition_faceevent_FindFaceEventsByOrgWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Find face events by organization",
        "tags" : [ "Face Recognition Event Webservice" ]
      }
    },
    "/api/faceRecognition/faceEvent/getFaceEvent" : {
      "post" : {
        "description" : "Get face event.",
        "operationId" : "getFaceEvent",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Facerecognition_faceevent_GetFaceEventWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Facerecognition_faceevent_GetFaceEventWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get face event",
        "tags" : [ "Face Recognition Event Webservice" ]
      }
    },
    "/api/faceRecognition/faceEvent/updateFaceEvent" : {
      "post" : {
        "description" : "Update face event.",
        "operationId" : "updateFaceEvent",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Facerecognition_faceevent_UpdateFaceEventWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Facerecognition_faceevent_UpdateFaceEventWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update face event",
        "tags" : [ "Face Recognition Event Webservice" ]
      }
    },
    "/api/faceRecognition/matchmaker/createFaceMatchmakerFromSighting" : {
      "post" : {
        "description" : "Create face matchmaker from face sighting.",
        "operationId" : "createFaceMatchmakerFromSighting",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Facerecognition_matchmaker_CreateFaceMatchmakerFromSightingWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Facerecognition_matchmaker_CreateFaceMatchmakerFromSightingWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create face matchmaker from sighting",
        "tags" : [ "Face Recognition Matchmaker Webservice" ]
      }
    },
    "/api/faceRecognition/matchmaker/deleteFaceMatchmaker" : {
      "post" : {
        "description" : "Delete face matchmaker.",
        "operationId" : "deleteFaceMatchmaker",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Facerecognition_matchmaker_DeleteFaceMatchmakerWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Facerecognition_matchmaker_DeleteFaceMatchmakerWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete face matchmaker",
        "tags" : [ "Face Recognition Matchmaker Webservice" ]
      }
    },
    "/api/faceRecognition/matchmaker/findFaceMatchmakersByOrg" : {
      "post" : {
        "description" : "Find face matchmakers by org.",
        "operationId" : "findFaceMatchmakersByOrg",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Facerecognition_matchmaker_FindFaceMatchmakersByOrgWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Facerecognition_matchmaker_FindFaceMatchmakersByOrgWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Find face matchmakers by org",
        "tags" : [ "Face Recognition Matchmaker Webservice" ]
      }
    },
    "/api/faceRecognition/matchmaker/findFaceMatchmakersByPerson" : {
      "post" : {
        "description" : "Find face matchmakers by person.",
        "operationId" : "findFaceMatchmakersByPerson",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Facerecognition_matchmaker_FindFaceMatchmakersByPersonWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Facerecognition_matchmaker_FindFaceMatchmakersByPersonWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Find face matchmakers by person",
        "tags" : [ "Face Recognition Matchmaker Webservice" ]
      }
    },
    "/api/faceRecognition/matchmaker/findFaceUploadMetadataByTransaction" : {
      "post" : {
        "description" : "Find face upload metadata by transaction.",
        "operationId" : "findFaceUploadMetadataByTransaction",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Facerecognition_matchmaker_FindFaceUploadMetadataByTransactionWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Facerecognition_matchmaker_FindFaceUploadMetadataByTransactionWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Find face upload metadata by transaction",
        "tags" : [ "Face Recognition Matchmaker Webservice" ]
      }
    },
    "/api/faceRecognition/matchmaker/getFaceMatchingConfig" : {
      "post" : {
        "description" : "Get face matching configuration.",
        "operationId" : "getFaceMatchingConfig",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Facerecognition_matchmaker_GetFaceMatchingConfigWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Facerecognition_matchmaker_GetFaceMatchingConfigWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get face matching configuration",
        "tags" : [ "Face Recognition Matchmaker Webservice" ]
      }
    },
    "/api/faceRecognition/matchmaker/getFaceMatchmaker" : {
      "post" : {
        "description" : "Get face matchmaker.",
        "operationId" : "getFaceMatchmaker",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Facerecognition_matchmaker_GetFaceMatchmakerWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Facerecognition_matchmaker_GetFaceMatchmakerWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get face matchmaker",
        "tags" : [ "Face Recognition Matchmaker Webservice" ]
      }
    },
    "/api/faceRecognition/matchmaker/updateFaceMatchingConfig" : {
      "post" : {
        "description" : "Update face matching configuration.",
        "operationId" : "updateFaceMatchingConfig",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Facerecognition_matchmaker_UpdateFaceMatchingConfigWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Facerecognition_matchmaker_UpdateFaceMatchingConfigWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update face matching configuration",
        "tags" : [ "Face Recognition Matchmaker Webservice" ]
      }
    },
    "/api/faceRecognition/matchmaker/uploadFaceMatchmakers" : {
      "post" : {
        "description" : "Upload face matchmaker images for one or more people. The uploaded file name is matched to a person's name. If a person is not found and createPersonIfNotFound is set to true, a new person is created. ",
        "operationId" : "uploadFaceMatchmakers",
        "parameters" : [ {
          "description" : "Unique transaction id to track the face matchmakers upload progress. If not specified, the system will generate it.",
          "in" : "query",
          "name" : "transaction",
          "schema" : {
            "type" : "string",
            "nullable" : true
          }
        }, {
          "description" : "If a person is not found and createPersonIfNotFound is set to true, a new person is created",
          "in" : "query",
          "name" : "createPersonIfNotFound",
          "schema" : {
            "type" : "boolean",
            "nullable" : true
          }
        }, {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/FormDataMultiPart"
              }
            }
          },
          "description" : "Multipart form-data containing a .jpg or .png file. Maximum file size: 5MB."
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Facerecognition_matchmaker_UploadFaceMatchmakersWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Upload face matchmakers",
        "tags" : [ "Face Recognition Matchmaker Webservice" ]
      }
    },
    "/api/faceRecognition/person/addPersonLabel" : {
      "post" : {
        "description" : "Add a label to a person",
        "operationId" : "addPersonLabel",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Facerecognition_person_AddPersonLabelWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Facerecognition_person_AddPersonLabelWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Add a label to a person",
        "tags" : [ "Face Recognition Person Webservice" ]
      }
    },
    "/api/faceRecognition/person/createPerson" : {
      "post" : {
        "description" : "Create a person for face recognition purposes.",
        "operationId" : "createPerson",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Facerecognition_person_CreatePersonWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Facerecognition_person_CreatePersonWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create a person",
        "tags" : [ "Face Recognition Person Webservice" ]
      }
    },
    "/api/faceRecognition/person/deletePerson" : {
      "post" : {
        "description" : "Delete person created for face recognition purposes.",
        "operationId" : "deletePerson",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Facerecognition_person_DeletePersonWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Facerecognition_person_DeletePersonWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete person",
        "tags" : [ "Face Recognition Person Webservice" ]
      }
    },
    "/api/faceRecognition/person/findPeopleByOrg" : {
      "post" : {
        "description" : "Find people created for face recognition purposes in an organization.",
        "operationId" : "findPeopleByOrg",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Facerecognition_person_FindPeopleByOrgWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Facerecognition_person_FindPeopleByOrgWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Find people by organization",
        "tags" : [ "Face Recognition Person Webservice" ]
      }
    },
    "/api/faceRecognition/person/findPersonLabelsByOrg" : {
      "post" : {
        "description" : "Find all person labels for organization.",
        "operationId" : "findPersonLabelsByOrg",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Facerecognition_person_FindPersonLabelsByOrgWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Facerecognition_person_FindPersonLabelsByOrgWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Find all person labels for organization",
        "tags" : [ "Face Recognition Person Webservice" ]
      }
    },
    "/api/faceRecognition/person/getPerson" : {
      "post" : {
        "description" : "Get a person created for face recognition purposes.",
        "operationId" : "getPerson",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Facerecognition_person_GetPersonWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Facerecognition_person_GetPersonWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get a person",
        "tags" : [ "Face Recognition Person Webservice" ]
      }
    },
    "/api/faceRecognition/person/removePersonLabel" : {
      "post" : {
        "description" : "Remove a label from a person.",
        "operationId" : "removePersonLabel",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Facerecognition_person_RemovePersonLabelWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Facerecognition_person_RemovePersonLabelWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Remove a label from a person",
        "tags" : [ "Face Recognition Person Webservice" ]
      }
    },
    "/api/faceRecognition/person/updatePerson" : {
      "post" : {
        "description" : "Update person created for face recognition purposes.",
        "operationId" : "updatePerson",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Facerecognition_person_UpdatePersonWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Facerecognition_person_UpdatePersonWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update person",
        "tags" : [ "Face Recognition Person Webservice" ]
      }
    },
    "/api/feature/getDeviceEventTypes" : {
      "post" : {
        "description" : "Get possible event types for specified device dependent on features enabled",
        "operationId" : "getDeviceEventTypes",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Feature_GetDeviceEventTypesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Feature_GetDeviceEventTypesWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get possible event types for specified device",
        "tags" : [ "Feature Webservice" ]
      }
    },
    "/api/feature/getDeviceFeatures" : {
      "post" : {
        "description" : "Get enabled features for a device",
        "operationId" : "getDeviceFeatures",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Feature_GetDeviceFeaturesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Feature_GetDeviceFeaturesWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get enabled features for a device",
        "tags" : [ "Feature Webservice" ]
      }
    },
    "/api/feature/getDeviceFeaturesList" : {
      "post" : {
        "description" : "Get enabled features for all devices in an org",
        "operationId" : "getDeviceFeaturesList",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Feature_GetDeviceFeaturesListWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Feature_GetDeviceFeaturesListWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get enabled features for all devices in an org",
        "tags" : [ "Feature Webservice" ]
      }
    },
    "/api/feature/getFeatureCompatabilityMatrix" : {
      "post" : {
        "description" : "Get feature compatability matrix",
        "operationId" : "getFeatureCompatabilityMatrix",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Feature_GetFeatureCompatabilityMatrixWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Feature_GetFeatureCompatabilityMatrixWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get feature compatibility matrix",
        "tags" : [ "Feature Webservice" ]
      }
    },
    "/api/feature/updateDeviceFeatures" : {
      "post" : {
        "description" : "Update enabled features for a device",
        "operationId" : "updateDeviceFeatures",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Feature_UpdateDeviceFeaturesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Feature_UpdateDeviceFeaturesWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update enabled features for a device",
        "tags" : [ "Feature Webservice" ]
      }
    },
    "/api/help/feedback" : {
      "post" : {
        "description" : "Leave feedback of our system",
        "operationId" : "sendFeedback",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Help_SendFeedbackWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Help_SendFeedbackWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Leave feedback of our system",
        "tags" : [ "Help Webservice" ]
      }
    },
    "/api/help/openTickets" : {
      "post" : {
        "deprecated" : true,
        "description" : "Get Open Support Tickets For A Client Organization. Tickets are associated to an organziation based on the requester's organization association.\nThis endpoint returns a paginated response sorted by the request date. The first page is indexed at 1 and each page has up to 100 ticket entries.",
        "operationId" : "getOpenTickets",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Help_GetOpenTicketsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Help_GetOpenTicketsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get open support tickets for a client organization",
        "tags" : [ "Help Webservice" ]
      }
    },
    "/api/help/openTicketsV2" : {
      "post" : {
        "description" : "Get Open Support Tickets For A Client Organization. Tickets are associated to an organziation based on the requester's organization association.",
        "operationId" : "getOpenTicketsV2",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Help_GetOpenTicketsV2WSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Help_GetOpenTicketsV2WSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get open support tickets for a client organization V2",
        "tags" : [ "Help Webservice" ]
      }
    },
    "/api/help/rma" : {
      "post" : {
        "description" : "Open an RMA for a camera",
        "operationId" : "processRMA",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Help_ProcessRMAWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Help_ProcessRMAWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Open an RMA for a camera",
        "tags" : [ "Help Webservice" ]
      }
    },
    "/api/help/ticket" : {
      "post" : {
        "description" : "Open a support ticket",
        "operationId" : "createTicket",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Help_CreateTicketWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Help_CreateTicketWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Open a support ticket",
        "tags" : [ "Help Webservice" ]
      }
    },
    "/api/help/ticketWithFile" : {
      "post" : {
        "description" : "Open a support ticket and optionally include a file upload. Uploading multiple Files are not supported throught this call.",
        "operationId" : "createTicketWithFile",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/FormDataMultiPart"
              }
            }
          },
          "description" : "multipart/form-data with field 'file' for the file and 'request' for the CreateTicketWSRequest(see '/ticket' for details on CreateTicketWSRequest)"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Help_CreateTicketWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Open a support ticket with file upload",
        "tags" : [ "Help Webservice" ]
      }
    },
    "/api/help/triageDevice" : {
      "post" : {
        "description" : "Triage a device connection/recording issue",
        "operationId" : "triageDevice",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Help_TriageDeviceWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Help_TriageDeviceWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Triage a device connection/recording issue",
        "tags" : [ "Help Webservice" ]
      }
    },
    "/api/integrations/IoT/deleteHaloIntegration" : {
      "post" : {
        "description" : "Delete Halo Smart Sensor integration",
        "operationId" : "deleteHaloIntegration",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete Halo Integration",
        "tags" : [ "IoT Integrations Webservice" ]
      }
    },
    "/api/integrations/IoT/deleteIntuifaceIntegration" : {
      "post" : {
        "description" : "Delete Intuiface integration",
        "operationId" : "deleteIntuifaceIntegration",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete Intuiface Integration",
        "tags" : [ "IoT Integrations Webservice" ]
      }
    },
    "/api/integrations/IoT/deleteOmnialertIntegration" : {
      "post" : {
        "description" : "Delete Omnialert integration",
        "operationId" : "deleteOmnialertIntegration",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete Omnialert Integration",
        "tags" : [ "IoT Integrations Webservice" ]
      }
    },
    "/api/integrations/IoT/deleteShellyIntegration" : {
      "post" : {
        "description" : "Delete Shelly integration",
        "operationId" : "deleteShellyIntegration",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete Shelly Integration",
        "tags" : [ "IoT Integrations Webservice" ]
      }
    },
    "/api/integrations/IoT/getOmnialertIntegration" : {
      "post" : {
        "description" : "Get Omnialert integration",
        "operationId" : "getOmnialertIntegration",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetOrgIntegrationsV2WSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get Omnialert Integration",
        "tags" : [ "IoT Integrations Webservice" ]
      }
    },
    "/api/integrations/IoT/getShellyIntegration" : {
      "post" : {
        "description" : "Get Shelly integration",
        "operationId" : "getShellyIntegration",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetOrgIntegrationsV2WSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get Shelly Integration",
        "tags" : [ "IoT Integrations Webservice" ]
      }
    },
    "/api/integrations/IoT/updateHaloIntegration" : {
      "post" : {
        "description" : "Update Halo Smart Sensor integration",
        "operationId" : "updateHaloIntegration",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateHaloIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update Halo Integration",
        "tags" : [ "IoT Integrations Webservice" ]
      }
    },
    "/api/integrations/IoT/updateIntuifaceIntegration" : {
      "post" : {
        "description" : "Update Intuiface integration",
        "operationId" : "updateIntuifaceIntegration",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateIntuifaceIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update Intuiface Integration",
        "tags" : [ "IoT Integrations Webservice" ]
      }
    },
    "/api/integrations/IoT/updateOmnialertIntegration" : {
      "post" : {
        "description" : "Update Omnialert integration",
        "operationId" : "updateOmnialertIntegration",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateOmnialertIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOmnialertIntegrationWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update Omnialert Integration",
        "tags" : [ "IoT Integrations Webservice" ]
      }
    },
    "/api/integrations/IoT/updateShellyIntegration" : {
      "post" : {
        "description" : "Update Shelly rules engine integration",
        "operationId" : "updateShellyIntegration",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateShellyIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update Shelly Integration",
        "tags" : [ "IoT Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/deleteAmtIntegration" : {
      "post" : {
        "description" : "Delete Amt badge integration",
        "operationId" : "deleteAmtIntegration",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete AMT badge integration",
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/deleteAvigilonAltaIntegrationV2" : {
      "post" : {
        "description" : "Delete Avigilon Alta badge integration V2",
        "operationId" : "deleteAvigilonAltaIntegrationV2",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete Avigilon Alta badge integration V2",
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/deleteBrivoIntegration" : {
      "post" : {
        "description" : "Delete Brivo badge integration",
        "operationId" : "deleteBrivoIntegration",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete Brivo badge integration",
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/deleteBrivoIntegrationV2" : {
      "post" : {
        "description" : "Delete Brivo badge integration V2",
        "operationId" : "deleteBrivoIntegrationV2",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete Brivo badge integration V2",
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/deleteButterflymxIntegration" : {
      "post" : {
        "description" : "Delete ButterflyMX badge integration",
        "operationId" : "deleteButterflymxIntegration",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete ButterflyMX badge integration",
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/deleteButterflymxIntegrationV2" : {
      "post" : {
        "description" : "Delete ButterflyMX badge integration V2",
        "operationId" : "deleteButterflymxIntegrationV2",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete ButterflyMX badge integration V2",
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/deleteGeneaIntegration" : {
      "post" : {
        "description" : "Delete Genea badge integration",
        "operationId" : "deleteGeneaIntegration",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete Genea badge integration",
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/deleteGeneaIntegrationV2" : {
      "post" : {
        "description" : "Delete Genea badge integration V2",
        "operationId" : "deleteGeneaIntegrationV2",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete Genea badge integration V2",
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/deleteInnerRangeIntegration" : {
      "post" : {
        "description" : "Delete Inner Range integration",
        "operationId" : "deleteInnerRangeIntegration",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete Inner Range integration",
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/deleteKisiIntegration" : {
      "post" : {
        "description" : "Delete Kisi badge integration",
        "operationId" : "deleteKisiIntegration",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete Kisi badge integration",
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/deleteKisiIntegrationV2" : {
      "post" : {
        "description" : "Delete Kisi badge integration V2",
        "operationId" : "deleteKisiIntegrationV2",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete Kisi badge integration V2",
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/deleteOpenpathIntegration" : {
      "post" : {
        "description" : "Delete Openpath badge integration",
        "operationId" : "deleteOpenpathIntegration",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete Openpath badge integration",
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/deleteOpentechAllianceIntegration" : {
      "post" : {
        "description" : "Delete Opentech Alliance integration",
        "operationId" : "deleteOpentechAllianceIntegration",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete Opentech Alliance integration",
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/deleteOpentechAllianceIntegrationV2" : {
      "post" : {
        "description" : "Delete Opentech Alliance integration",
        "operationId" : "deleteOpentechAllianceIntegrationV2",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete Opentech Alliance integration V2",
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/deletePdkIntegration" : {
      "post" : {
        "description" : "Delete ProDataKey badge integration",
        "operationId" : "deletePdkIntegration",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete ProDataKey badge integration",
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/deletePdkIntegrationV2" : {
      "post" : {
        "description" : "Delete ProDataKey badge integration",
        "operationId" : "deletePdkIntegrationV2",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete ProDataKey badge integration V2",
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/deletePlaceOsIntegration" : {
      "post" : {
        "description" : "Delete PlaceOs badge integration",
        "operationId" : "deletePlaceOsIntegration",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete PlaceOs badge integration",
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/deletePlaceOsIntegrationV2" : {
      "post" : {
        "description" : "Delete PlaceOs badge integration",
        "operationId" : "deletePlaceOsIntegrationV2",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete PlaceOs badge integration V2",
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/getAmtReaders" : {
      "post" : {
        "description" : "Get list of AMT readers to assign cameras",
        "operationId" : "getAmtReaders",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetAmtReadersWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetBadgeIntegrationDoorsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get list of AMT readers to assign cameras",
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/getAvigilonAltaIntegration" : {
      "post" : {
        "description" : "Get Avigilon Alta integration",
        "operationId" : "getAvigilonAltaIntegration",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetOrgIntegrationsV2WSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get Avigilon Alta integration",
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/getBrivoDoors" : {
      "post" : {
        "description" : "Get list of available Brivo doors to assign cameras",
        "operationId" : "getBrivoDoors",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetBrivoDoorsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetBrivoDoorsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get list of available Brivo doors to assign cameras",
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/getBrivoDoorsV2" : {
      "post" : {
        "description" : "Get list of available Brivo doors to assign cameras",
        "operationId" : "getBrivoDoorsV2",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetBrivoDoorsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetBrivoDoorsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get list of available Brivo doors to assign cameras V2",
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/getBrivoDoorsV3" : {
      "post" : {
        "description" : "Get list of available Brivo doors to assign cameras",
        "operationId" : "getBrivoDoorsV3",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetBrivoDoorsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetBrivoDoorsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get list of available Brivo doors to assign cameras V3",
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/getBrivoIntegrationV2" : {
      "post" : {
        "description" : "Get Brivo badge integration",
        "operationId" : "getBrivoIntegrationV2",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetOrgIntegrationsV2WSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get Brivo badge integration V2",
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/getButterflymxIntegrationV2" : {
      "post" : {
        "description" : "Get ButterflyMX badge integration",
        "operationId" : "getButterflymxIntegrationV2",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetOrgIntegrationsV2WSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get ButterflyMX badge integration V2",
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/getButterflymxPanels" : {
      "post" : {
        "description" : "Get list of available ButterflyMX panels to assign cameras",
        "operationId" : "getButterflymxPanels",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetButterflymxPanelsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetButterflymxPanelsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get list of available ButterflyMX panels to assign cameras",
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/getButterflymxPanelsV2" : {
      "post" : {
        "description" : "Get list of available ButterflyMX panels to assign cameras",
        "operationId" : "getButterflymxPanelsV2",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetButterflymxPanelsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetButterflymxPanelsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get list of available ButterflyMX panels to assign cameras V2",
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/getGeneaDoors" : {
      "post" : {
        "description" : "Get list of Genea doors to assign cameras",
        "operationId" : "getGeneaDoors",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetGeneaDoorsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetGeneaDoorsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get list of Genea doors to assign cameras",
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/getGeneaIntegration" : {
      "post" : {
        "description" : "Get Genea integration",
        "operationId" : "getGeneaIntegration",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetOrgIntegrationsV2WSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get Genea integration",
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/getInnerRangeConsoles" : {
      "post" : {
        "description" : "Get Inner Range console settings",
        "operationId" : "getInnerRangeConsoles",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetInnerRangeConsolesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetInnerRangeConsolesWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get Inner Range console settings",
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/getInnerRangeDoors" : {
      "post" : {
        "deprecated" : true,
        "description" : "Get list of Inner Range doors",
        "operationId" : "getInnerRangeDoors",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetInnerRangeDoorsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetInnerRangeDoorsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get list of Inner Range doors",
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/getInnerRangeIntegration" : {
      "post" : {
        "description" : "Get Inner Range integration",
        "operationId" : "getInnerRangeIntegration",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetOrgIntegrationsV2WSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get Inner Range integration",
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/getKisiDoors" : {
      "post" : {
        "description" : "Get list of Kisi doors to assign cameras",
        "operationId" : "getKisiDoors",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetKisiDoorsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetKisiDoorsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get list of Kisi doors to assign cameras",
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/getKisiIntegration" : {
      "post" : {
        "description" : "Get Kisi badge integration",
        "operationId" : "getKisiIntegration",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetOrgIntegrationsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetKisiIntegrationWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get Kisi badge integration",
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/getKisiIntegrationV2" : {
      "post" : {
        "description" : "Get Kisi badge integration V2",
        "operationId" : "getKisiIntegrationV2",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetOrgIntegrationsV2WSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get Kisi badge integration V2",
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/getKisiPlaces" : {
      "post" : {
        "description" : "Get list of Kisi places to assign cameras",
        "operationId" : "getKisiPlaces",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetKisiPlacesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetBadgeIntegrationPlacesWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get list of Kisi places to assign cameras",
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/getOpenpathDoors" : {
      "post" : {
        "description" : "Get list of Openpath doors to assign cameras",
        "operationId" : "getOpenpathDoors",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetOpenpathDoorsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetBadgeIntegrationDoorsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get list of Openpath doors to assign cameras",
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/getOpenpathLockdownPlans" : {
      "post" : {
        "description" : "Get list of Openpath lockdown plans to trigger",
        "operationId" : "getOpenpathLockdownPlans",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetOpenpathDoorsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetOpenpathLockdownsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get list of Openpath lockdown plans to trigger",
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/getOpentechAllianceFacilities" : {
      "post" : {
        "description" : "Get list of Opentech Alliance facilities",
        "operationId" : "getOpentechAllianceFacilities",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetOpentechAllianceFacilitiesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetOpentechAllianceFacilitiesWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get list of Opentech Alliance facilities",
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/getOpentechAllianceFacilitiesV2" : {
      "post" : {
        "description" : "Get list of Opentech Alliance facilities",
        "operationId" : "getOpentechAllianceFacilitiesV2",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetOpentechAllianceFacilitiesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetOpentechAllianceFacilitiesWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get list of Opentech Alliance facilities V2",
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/getOpentechAllianceIntegrationV2" : {
      "post" : {
        "description" : "Get Opentech Alliance integration",
        "operationId" : "getOpentechAllianceIntegrationV2",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetOrgIntegrationsV2WSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get Opentech Alliance integration V2",
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/getPdkDoors" : {
      "post" : {
        "description" : "Get list of ProDataKey doors to assign cameras",
        "operationId" : "getPdkDoors",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetPdkDoorsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetPdkDoorsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get list of ProDataKey doors to assign cameras",
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/getPdkIntegration" : {
      "post" : {
        "description" : "Get ProDataKey badge integration",
        "operationId" : "getPdkIntegration",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetOrgIntegrationsV2WSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get ProDataKey badge integration",
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/getPlaceOsDoors" : {
      "post" : {
        "description" : "Get list of PlaceOs doors to assign cameras",
        "operationId" : "getPlaceOsDoors",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetPlaceOsDoorsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetBadgeIntegrationGenericDoorsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get list of PlaceOs doors to assign cameras",
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/getPlaceOsIntegrationV2" : {
      "post" : {
        "description" : "Get PlaceOs integration",
        "operationId" : "getPlaceOsIntegrationV2",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetOrgIntegrationsV2WSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get PlaceOs integration V2",
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/revertOpenpathLockdown" : {
      "post" : {
        "description" : "Revert Openpath lockdown plan",
        "operationId" : "revertOpenpathLockdown",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UnlockOpenpathDoorWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UnlockDoorWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Revert Openpath lockdown plan",
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/triggerOpenpathLockdown" : {
      "post" : {
        "description" : "Trigger Openpath lockdown plan",
        "operationId" : "triggerOpenpathLockdown",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UnlockOpenpathDoorWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UnlockDoorWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Trigger Openpath lockdown plan",
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/unlockBrivoDoor" : {
      "post" : {
        "description" : "Unlock Brivo door",
        "operationId" : "unlockBrivoDoor",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UnlockIntegrationGenericDoorWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UnlockDoorWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Unlock Brivo door",
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/unlockBrivoDoorV2" : {
      "post" : {
        "description" : "Unlock Brivo door",
        "operationId" : "unlockBrivoDoorV2",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UnlockIntegrationGenericDoorWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UnlockDoorWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Unlock Brivo door V2",
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/unlockGeneaDoor" : {
      "post" : {
        "description" : "Unlock Genea door",
        "operationId" : "unlockGeneaDoor",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UnlockGeneaDoorWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UnlockDoorWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Unlock Genea door",
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/unlockInnerRangeDoor" : {
      "post" : {
        "description" : "Unlock Inner Range door",
        "operationId" : "unlockInnerRangeDoor",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UnlockIntegrationGenericDoorWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UnlockDoorWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Unlock Inner Range door",
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/unlockKisiDoor" : {
      "post" : {
        "description" : "Unlock Kisi door",
        "operationId" : "unlockKisiDoor",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UnlockKisiDoorWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UnlockDoorWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Unlock Kisi door",
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/unlockOpenpathDoor" : {
      "post" : {
        "description" : "Unlock Openpath door",
        "operationId" : "unlockOpenpathDoor",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UnlockOpenpathDoorWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UnlockDoorWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Unlock Openpath door",
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/unlockOpentechAllianceDoor" : {
      "post" : {
        "description" : "Unlock Opentech Alliance door",
        "operationId" : "unlockOpentechAllianceDoor",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UnlockIntegrationGenericDoorWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UnlockDoorWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Unlock Opentech Alliance door",
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/unlockOpentechAllianceDoorV2" : {
      "post" : {
        "description" : "Unlock Opentech Alliance door",
        "operationId" : "unlockOpentechAllianceDoorV2",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UnlockIntegrationGenericDoorWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UnlockDoorWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Unlock Opentech Alliance door V2",
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/unlockPdkDoor" : {
      "post" : {
        "description" : "Unlock ProDataKey door",
        "operationId" : "unlockPdkDoor",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UnlockIntegrationGenericDoorWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UnlockDoorWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Unlock ProDataKey door",
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/unlockPlaceOsDoor" : {
      "post" : {
        "description" : "Unlock PlaceOs door",
        "operationId" : "unlockPlaceOsDoor",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UnlockIntegrationGenericDoorWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UnlockDoorWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Unlock PlaceOs door",
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/updateAmtIntegration" : {
      "post" : {
        "description" : "Update Amt badge integration",
        "operationId" : "updateAmtIntegration",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateAmtIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update AMT badge integration",
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/updateAvigilonAltaIntegrationV2" : {
      "post" : {
        "description" : "Update Avigilon Alta badge integration V2",
        "operationId" : "updateAvigilonAltaIntegrationV2",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateAvigilonAltaV2WSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update Avigilon Alta badge integration V2",
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/updateBrivoIntegration" : {
      "post" : {
        "description" : "Update Brivo badge integration",
        "operationId" : "updateBrivoIntegration",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateBrivoIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update Brivo badge integration",
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/updateBrivoIntegrationV2" : {
      "post" : {
        "description" : "Update Brivo badge integration",
        "operationId" : "updateBrivoIntegrationV2",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateBrivoIntegrationV2WSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update Brivo badge integration V2",
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/updateButterflymxIntegration" : {
      "post" : {
        "description" : "Update ButterflyMX badge integration",
        "operationId" : "updateButterflymxIntegration",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateButterflymxIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update ButterflyMX badge integration",
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/updateButterflymxIntegrationV2" : {
      "post" : {
        "description" : "Update ButterflyMX badge integration V2",
        "operationId" : "updateButterflymxIntegrationV2",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateButterflymxIntegrationV2WSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update ButterflyMX badge integration V2",
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/updateGeneaIntegration" : {
      "post" : {
        "description" : "Update Genea badge integration",
        "operationId" : "updateGeneaIntegration",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateGeneaIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update Genea badge integration",
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/updateGeneaIntegrationV2" : {
      "post" : {
        "description" : "Update Genea badge integration V2",
        "operationId" : "updateGeneaIntegrationV2",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateGeneaIntegrationV2WSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update Genea badge integration V2",
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/updateInnerRangeIntegration" : {
      "post" : {
        "description" : "Update Inner Range integration",
        "operationId" : "updateInnerRangeIntegration",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateInnerRangeIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update Inner Range integration",
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/updateKisiIntegration" : {
      "post" : {
        "description" : "Update Kisi badge integration",
        "operationId" : "updateKisiIntegration",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateKisiIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update Kisi badge integration",
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/updateKisiIntegrationV2" : {
      "post" : {
        "description" : "Update Kisi badge integration V2",
        "operationId" : "updateKisiIntegrationV2",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateKisiIntegrationV2WSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update Kisi badge integration V2",
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/updateOpenpathIntegration" : {
      "post" : {
        "description" : "Update Openpath badge integration",
        "operationId" : "updateOpenpathIntegration",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateOpenpathIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update Openpath badge integration",
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/updateOpentechAllianceIntegration" : {
      "post" : {
        "description" : "Update Opentech Alliance integration",
        "operationId" : "updateOpentechAllianceIntegration",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateOpentechAllianceIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update Opentech Alliance integration",
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/updateOpentechAllianceIntegrationV2" : {
      "post" : {
        "description" : "Update Opentech Alliance integration",
        "operationId" : "updateOpentechAllianceIntegrationV2",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateOpentechAllianceIntegrationV2WSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update Opentech Alliance integration V2",
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/updatePdkIntegration" : {
      "post" : {
        "description" : "Update ProDataKey badge integration",
        "operationId" : "updatePdkIntegration",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdatePdkIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update ProDataKey badge integration",
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/updatePdkIntegrationV2" : {
      "post" : {
        "description" : "Update ProDataKey badge integration",
        "operationId" : "updatePdkIntegrationV2",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdatePdkIntegrationV2WSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update ProDataKey badge integration V2",
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/updatePlaceOsSettings" : {
      "post" : {
        "description" : "Update PlaceOs badge integration",
        "operationId" : "updatePlaceOsSettings",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdatePlaceOsSettingsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update PlaceOs badge integration",
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/accessControl/updatePlaceOsSettingsV2" : {
      "post" : {
        "description" : "Update PlaceOs badge integration",
        "operationId" : "updatePlaceOsSettingsV2",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdatePlaceOsSettingsV2WSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update PlaceOs badge integration V2",
        "tags" : [ "Access Control Integrations Webservice" ]
      }
    },
    "/api/integrations/deleteAmtIntegration" : {
      "post" : {
        "deprecated" : true,
        "description" : "Delete Amt badge integration",
        "operationId" : "deleteAmtIntegrationDep",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete AMT Integration",
        "tags" : [ "Integrations Webservice" ]
      }
    },
    "/api/integrations/deleteDeviceIntegration" : {
      "post" : {
        "deprecated" : true,
        "description" : "Delete Device integration",
        "operationId" : "deleteDeviceIntegrationDep",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete Device Integration",
        "tags" : [ "Integrations Webservice" ]
      }
    },
    "/api/integrations/deleteMattermostIntegration" : {
      "post" : {
        "deprecated" : true,
        "description" : "Delete Mattermost alert integration",
        "operationId" : "deleteMattermostIntegrationDep",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete Mattermost Integration",
        "tags" : [ "Integrations Webservice" ]
      }
    },
    "/api/integrations/deleteOpenAIIntegration" : {
      "post" : {
        "deprecated" : true,
        "description" : "Delete OpenAI integration",
        "operationId" : "deleteOpenAIIntegrationDep",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete OpenAI Integration",
        "tags" : [ "Integrations Webservice" ]
      }
    },
    "/api/integrations/deleteWebhookIntegration" : {
      "post" : {
        "deprecated" : true,
        "description" : "Delete outbound webhook alert integration",
        "operationId" : "deleteWebhookIntegrationDep",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete Webhook Integration",
        "tags" : [ "Integrations Webservice" ]
      }
    },
    "/api/integrations/deleteWebhookIntegrationV2" : {
      "post" : {
        "deprecated" : true,
        "description" : "Delete entire webhook integration",
        "operationId" : "deleteWebhookIntegrationV2Dep",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete Webhook Integration V2",
        "tags" : [ "Integrations Webservice" ]
      }
    },
    "/api/integrations/getAmtReaders" : {
      "post" : {
        "deprecated" : true,
        "description" : "Get list of AMT readers to assign cameras",
        "operationId" : "getAmtReadersDep",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetAmtReadersWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetBadgeIntegrationDoorsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get AMT Readers",
        "tags" : [ "Integrations Webservice" ]
      }
    },
    "/api/integrations/getApiTokenApplications" : {
      "post" : {
        "deprecated" : true,
        "description" : "Get details of all open api token requests for organization",
        "operationId" : "getApiTokenApplicationsDep",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetApiTokenApplicationsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetApiTokenApplicationsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get API Token Applications",
        "tags" : [ "Integrations Webservice" ]
      }
    },
    "/api/integrations/getApiTokens" : {
      "post" : {
        "deprecated" : true,
        "description" : "Get list of all api tokens for organization",
        "operationId" : "getApiTokensDep",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetApiTokensWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetApiTokensWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get API Tokens",
        "tags" : [ "Integrations Webservice" ]
      }
    },
    "/api/integrations/getCalendlyEventDetails" : {
      "post" : {
        "deprecated" : true,
        "description" : "Get Calendly event details",
        "operationId" : "getCalendlyEventDetailsDep",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetCalendlyEventDetailsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetCalendlyEventDetailsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get Calendly Event Details",
        "tags" : [ "Integrations Webservice" ]
      }
    },
    "/api/integrations/getDeviceIntegration" : {
      "post" : {
        "deprecated" : true,
        "description" : "Get Device integration",
        "operationId" : "getDeviceIntegrationDep",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetOrgIntegrationsV2WSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get Device Integration",
        "tags" : [ "Integrations Webservice" ]
      }
    },
    "/api/integrations/getOpenAIIntegration" : {
      "post" : {
        "deprecated" : true,
        "description" : "Get OpenAI integration",
        "operationId" : "getOpenAIIntegrationDep",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetOrgIntegrationsV2WSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get OpenAI Integration",
        "tags" : [ "Integrations Webservice" ]
      }
    },
    "/api/integrations/getOpenAIModels" : {
      "post" : {
        "deprecated" : true,
        "description" : "Get list of OpenAI models",
        "operationId" : "getOpenAIModelsDep",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetOpenAIModelsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetOpenAIModelsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get OpenAI Models",
        "tags" : [ "Integrations Webservice" ]
      }
    },
    "/api/integrations/getOrgIntegrations" : {
      "post" : {
        "deprecated" : true,
        "description" : "Get details of all third-party integrations for organization",
        "operationId" : "getOrgIntegrationsDep",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetOrgIntegrationsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get Organization Integrations",
        "tags" : [ "Integrations Webservice" ]
      }
    },
    "/api/integrations/getOrgIntegrationsV2" : {
      "post" : {
        "deprecated" : true,
        "description" : "Get details of all V2 third-party integrations for an organization",
        "operationId" : "getOrgIntegrationsV2Dep",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetOrgIntegrationsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetAllOrgIntegrationsV2WSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get Organization Integrations V2",
        "tags" : [ "Integrations Webservice" ]
      }
    },
    "/api/integrations/getWebhookIntegration" : {
      "post" : {
        "deprecated" : true,
        "description" : "Get webhook integration",
        "operationId" : "getWebhookIntegrationDep",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetOrgIntegrationsV2WSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get Webhook Integration",
        "tags" : [ "Integrations Webservice" ]
      }
    },
    "/api/integrations/incidentManagement/deleteDiceIntegration" : {
      "post" : {
        "description" : "Delete Dice integration",
        "operationId" : "deleteDiceIntegration",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete Dice Integration",
        "tags" : [ "Incident Management Integrations Webservice" ]
      }
    },
    "/api/integrations/incidentManagement/deleteEmailIntegration" : {
      "post" : {
        "description" : "Delete email alert integration",
        "operationId" : "deleteEmailIntegration",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete Email Integration",
        "tags" : [ "Incident Management Integrations Webservice" ]
      }
    },
    "/api/integrations/incidentManagement/deleteInformacastIntegration" : {
      "post" : {
        "description" : "Delete Informacast integration",
        "operationId" : "deleteInformacastIntegration",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete Informacast Integration",
        "tags" : [ "Incident Management Integrations Webservice" ]
      }
    },
    "/api/integrations/incidentManagement/deleteLumeoIntegration" : {
      "post" : {
        "description" : "Delete Lumeo integration",
        "operationId" : "deleteLumeoIntegration",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete Lumeo Integration",
        "tags" : [ "Incident Management Integrations Webservice" ]
      }
    },
    "/api/integrations/incidentManagement/deleteMattermostIntegration" : {
      "post" : {
        "description" : "Delete Mattermost alert integration",
        "operationId" : "deleteMattermostIntegration",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete Mattermost Integration",
        "tags" : [ "Incident Management Integrations Webservice" ]
      }
    },
    "/api/integrations/incidentManagement/deleteMicrosoftTeamsIntegrationV2" : {
      "post" : {
        "description" : "Delete Microsoft Teams alert integration",
        "operationId" : "deleteMicrosoftTeamsIntegrationV2",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete Microsoft Teams Integration V2",
        "tags" : [ "Incident Management Integrations Webservice" ]
      }
    },
    "/api/integrations/incidentManagement/deleteMicrosoftTeamsUser" : {
      "post" : {
        "description" : "Remove configurations for Microsoft Teams user",
        "operationId" : "deleteMicrosoftTeamsUser",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete Microsoft Teams User",
        "tags" : [ "Incident Management Integrations Webservice" ]
      }
    },
    "/api/integrations/incidentManagement/deleteOpenAIIntegration" : {
      "post" : {
        "description" : "Delete OpenAI integration",
        "operationId" : "deleteOpenAIIntegration",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete OpenAI Integration",
        "tags" : [ "Incident Management Integrations Webservice" ]
      }
    },
    "/api/integrations/incidentManagement/deletePagerDutyIntegration" : {
      "post" : {
        "description" : "Delete PagerDuty alert integration",
        "operationId" : "deletePagerDutyIntegration",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete PagerDuty Integration",
        "tags" : [ "Incident Management Integrations Webservice" ]
      }
    },
    "/api/integrations/incidentManagement/deleteServiceNowIntegration" : {
      "post" : {
        "description" : "Delete ServiceNow alert integration",
        "operationId" : "deleteServiceNowIntegration",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete ServiceNow Integration",
        "tags" : [ "Incident Management Integrations Webservice" ]
      }
    },
    "/api/integrations/incidentManagement/deleteSlackIntegrationV2" : {
      "post" : {
        "description" : "Delete Slack alert integration v2",
        "operationId" : "deleteSlackIntegrationV2",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete Slack Integration V2",
        "tags" : [ "Incident Management Integrations Webservice" ]
      }
    },
    "/api/integrations/incidentManagement/getDiceIntegration" : {
      "post" : {
        "description" : "Get Dice integration",
        "operationId" : "getDiceIntegration",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetOrgIntegrationsV2WSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get Dice Integration",
        "tags" : [ "Incident Management Integrations Webservice" ]
      }
    },
    "/api/integrations/incidentManagement/getInformacastIntegration" : {
      "post" : {
        "description" : "Get Informacast integration",
        "operationId" : "getInformacastIntegration",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetOrgIntegrationsV2WSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get Informacast Integration",
        "tags" : [ "Incident Management Integrations Webservice" ]
      }
    },
    "/api/integrations/incidentManagement/getInformacastScenarios" : {
      "post" : {
        "description" : "Get Informacast scenarios",
        "operationId" : "getInformacastScenarios",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetInformacastScenariosWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get Informacast Scenarios",
        "tags" : [ "Incident Management Integrations Webservice" ]
      }
    },
    "/api/integrations/incidentManagement/getLumeoIntegration" : {
      "post" : {
        "description" : "Get Lumeo integration",
        "operationId" : "getLumeoIntegration",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetOrgIntegrationsV2WSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get Lumeo Integration",
        "tags" : [ "Incident Management Integrations Webservice" ]
      }
    },
    "/api/integrations/incidentManagement/getMicrosoftTeamsIntegration" : {
      "post" : {
        "description" : "Get Microsoft Teams alert integration",
        "operationId" : "getMicrosoftTeamsIntegration",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetOrgIntegrationsV2WSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get Microsoft Teams Integration",
        "tags" : [ "Incident Management Integrations Webservice" ]
      }
    },
    "/api/integrations/incidentManagement/getMicrosoftUsersJoinedTeams" : {
      "post" : {
        "description" : "Get a list of teams a Microsoft Teams user joined",
        "operationId" : "getMicrosoftUsersJoinedTeams",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetMicrosoftUsersJoinedTeamsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get Microsoft Users Joined Teams",
        "tags" : [ "Incident Management Integrations Webservice" ]
      }
    },
    "/api/integrations/incidentManagement/getOpenAIIntegration" : {
      "post" : {
        "description" : "Get OpenAI integration",
        "operationId" : "getOpenAIIntegration",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetOrgIntegrationsV2WSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get OpenAI Integration",
        "tags" : [ "Incident Management Integrations Webservice" ]
      }
    },
    "/api/integrations/incidentManagement/getOpenAIModels" : {
      "post" : {
        "description" : "Get list of OpenAI models",
        "operationId" : "getOpenAIModels",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetOpenAIModelsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetOpenAIModelsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get OpenAI Models",
        "tags" : [ "Incident Management Integrations Webservice" ]
      }
    },
    "/api/integrations/incidentManagement/installMicrosoftTeamsBotForTeam" : {
      "post" : {
        "description" : "Install notification bot for Microsoft Teams team",
        "operationId" : "installMicrosoftTeamsBotForTeam",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateMicrosoftTeamsBotForTeamWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Install Microsoft Teams Bot For Team",
        "tags" : [ "Incident Management Integrations Webservice" ]
      }
    },
    "/api/integrations/incidentManagement/installMicrosoftTeamsBotForUser" : {
      "post" : {
        "description" : "Install notification bot for Microsoft Teams user",
        "operationId" : "installMicrosoftTeamsBotForUser",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Install Microsoft Teams Bot For User",
        "tags" : [ "Incident Management Integrations Webservice" ]
      }
    },
    "/api/integrations/incidentManagement/uninstallMicrosoftTeamsBotForTeam" : {
      "post" : {
        "description" : "Uninstall notification bot for Microsoft Teams team",
        "operationId" : "uninstallMicrosoftTeamsBotForTeam",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateMicrosoftTeamsBotForTeamWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Uninstall Microsoft Teams Bot For Team",
        "tags" : [ "Incident Management Integrations Webservice" ]
      }
    },
    "/api/integrations/incidentManagement/uninstallMicrosoftTeamsBotForUser" : {
      "post" : {
        "description" : "Uninstall notification bot for Microsoft Teams user",
        "operationId" : "uninstallMicrosoftTeamsBotForUser",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Uninstall Microsoft Teams Bot For User",
        "tags" : [ "Incident Management Integrations Webservice" ]
      }
    },
    "/api/integrations/incidentManagement/updateDiceIntegration" : {
      "post" : {
        "description" : "Update Dice integration",
        "operationId" : "updateDiceIntegration",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateDiceIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update Dice Integration",
        "tags" : [ "Incident Management Integrations Webservice" ]
      }
    },
    "/api/integrations/incidentManagement/updateEmailIntegration" : {
      "post" : {
        "description" : "Update email alert integration",
        "operationId" : "updateEmailIntegration",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateEmailIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update Email Integration",
        "tags" : [ "Incident Management Integrations Webservice" ]
      }
    },
    "/api/integrations/incidentManagement/updateInformacastIntegration" : {
      "post" : {
        "description" : "Update Informacast rules engine integration",
        "operationId" : "updateInformacastIntegration",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateInformacastIntegrationRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update Informacast Integration",
        "tags" : [ "Incident Management Integrations Webservice" ]
      }
    },
    "/api/integrations/incidentManagement/updateLumeoIntegration" : {
      "post" : {
        "description" : "Update Lumeo integration",
        "operationId" : "updateLumeoIntegration",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateLumeoIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update Lumeo Integration",
        "tags" : [ "Incident Management Integrations Webservice" ]
      }
    },
    "/api/integrations/incidentManagement/updateMattermostIntegration" : {
      "post" : {
        "description" : "Update Mattermost alert integration",
        "operationId" : "updateMattermostIntegration",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateMattermostIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update Mattermost Integration",
        "tags" : [ "Incident Management Integrations Webservice" ]
      }
    },
    "/api/integrations/incidentManagement/updateMicrosoftTeamsIntegrationV2" : {
      "post" : {
        "description" : "Update Microsoft Teams alert integration",
        "operationId" : "updateMicrosoftTeamsIntegrationV2",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateMicrosoftTeamsIntegrationV2WSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update Microsoft Teams Integration V2",
        "tags" : [ "Incident Management Integrations Webservice" ]
      }
    },
    "/api/integrations/incidentManagement/updateOpenAIIntegration" : {
      "post" : {
        "description" : "Update OpenAI integration",
        "operationId" : "updateOpenAIIntegration",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateOpenAIIntegrationRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update OpenAI Integration",
        "tags" : [ "Incident Management Integrations Webservice" ]
      }
    },
    "/api/integrations/incidentManagement/updatePagerDutyIntegration" : {
      "post" : {
        "description" : "Update PagerDuty alert integration",
        "operationId" : "updatePagerDutyIntegration",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdatePagerDutyIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update PagerDuty Integration",
        "tags" : [ "Incident Management Integrations Webservice" ]
      }
    },
    "/api/integrations/incidentManagement/updateServiceNowIntegration" : {
      "post" : {
        "description" : "Update ServiceNow alert integration",
        "operationId" : "updateServiceNowIntegration",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateServiceNowIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update ServiceNow Integration",
        "tags" : [ "Incident Management Integrations Webservice" ]
      }
    },
    "/api/integrations/incidentManagement/updateSlackIntegration" : {
      "post" : {
        "description" : "Update Slack alert integration",
        "operationId" : "updateSlackIntegration",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateSlackIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update Slack Integration",
        "tags" : [ "Incident Management Integrations Webservice" ]
      }
    },
    "/api/integrations/incidentManagement/updateSlackIntegrationV2" : {
      "post" : {
        "description" : "Update Slack alert integration v2",
        "operationId" : "updateSlackIntegrationV2",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateSlackIntegrationV2WSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update Slack Integration V2",
        "tags" : [ "Incident Management Integrations Webservice" ]
      }
    },
    "/api/integrations/org/getApiTokens" : {
      "post" : {
        "description" : "Get list of all api tokens for organization",
        "operationId" : "getApiTokens",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetApiTokensWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetApiTokensWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get API tokens",
        "tags" : [ "Org Integrations Webservice" ]
      }
    },
    "/api/integrations/org/getOrgIntegrations" : {
      "post" : {
        "description" : "Get details of all third-party integrations for organization",
        "operationId" : "getOrgIntegrations",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetOrgIntegrationsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get organization integrations",
        "tags" : [ "Org Integrations Webservice" ]
      }
    },
    "/api/integrations/org/getOrgIntegrationsV2" : {
      "post" : {
        "description" : "Get details of all V2 third-party integrations for an organization",
        "operationId" : "getOrgIntegrationsV2",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetOrgIntegrationsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetAllOrgIntegrationsV2WSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get organization integrations V2",
        "tags" : [ "Org Integrations Webservice" ]
      }
    },
    "/api/integrations/org/revokeApiToken" : {
      "post" : {
        "description" : "Remove an api token from organization. Note: this is irreversible",
        "operationId" : "revokeApiToken",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_RevokeApiTokenWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_RevokeApiTokenWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Revoke API token",
        "tags" : [ "Org Integrations Webservice" ]
      }
    },
    "/api/integrations/revokeApiToken" : {
      "post" : {
        "deprecated" : true,
        "description" : "Remove an api token from organization. Note: this is irreversible",
        "operationId" : "revokeApiTokenDep",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_RevokeApiTokenWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_RevokeApiTokenWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Revoke API Token",
        "tags" : [ "Integrations Webservice" ]
      }
    },
    "/api/integrations/serviceManagement/createEnvoyInvite" : {
      "post" : {
        "description" : "Create an invite with Envoy",
        "operationId" : "createEnvoyInvite",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_CreateEnvoyInviteWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create Envoy invite",
        "tags" : [ "Service Management Integrations Webservice" ]
      }
    },
    "/api/integrations/serviceManagement/deleteEnvoyIntegration" : {
      "post" : {
        "deprecated" : true,
        "description" : "Delete Envoy badge integration",
        "operationId" : "deleteEnvoyIntegration",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete Envoy integration",
        "tags" : [ "Service Management Integrations Webservice" ]
      }
    },
    "/api/integrations/serviceManagement/deleteEnvoyIntegrationV2" : {
      "post" : {
        "description" : "Delete Envoy integration",
        "operationId" : "deleteEnvoyIntegrationV2",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete Envoy integration V2",
        "tags" : [ "Service Management Integrations Webservice" ]
      }
    },
    "/api/integrations/serviceManagement/deleteToastIntegration" : {
      "post" : {
        "deprecated" : true,
        "description" : "Delete Toast integration",
        "operationId" : "deleteToastIntegration",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete Toast integration",
        "tags" : [ "Service Management Integrations Webservice" ]
      }
    },
    "/api/integrations/serviceManagement/deleteToastIntegrationV2" : {
      "post" : {
        "description" : "Delete Toast integration",
        "operationId" : "deleteToastIntegrationV2",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete Toast integration V2",
        "tags" : [ "Service Management Integrations Webservice" ]
      }
    },
    "/api/integrations/serviceManagement/getCalendlyEventDetails" : {
      "post" : {
        "description" : "Get Calendly event details",
        "operationId" : "getCalendlyEventDetails",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetCalendlyEventDetailsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetCalendlyEventDetailsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get Calendly event details",
        "tags" : [ "Service Management Integrations Webservice" ]
      }
    },
    "/api/integrations/serviceManagement/getEnvoyIntegration" : {
      "post" : {
        "description" : "Get Envoy integration",
        "operationId" : "getEnvoyIntegration",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetOrgIntegrationsV2WSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get Envoy integration",
        "tags" : [ "Service Management Integrations Webservice" ]
      }
    },
    "/api/integrations/serviceManagement/getToastIntegration" : {
      "post" : {
        "description" : "Get Toast integration",
        "operationId" : "getToastIntegration",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetOrgIntegrationsV2WSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get Toast integration",
        "tags" : [ "Service Management Integrations Webservice" ]
      }
    },
    "/api/integrations/serviceManagement/getToastServiceAreas" : {
      "post" : {
        "description" : "Get list of Toast service areas to assign cameras",
        "operationId" : "getToastServiceAreas",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetToastServiceAreasWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetToastServiceAreasWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get Toast service areas",
        "tags" : [ "Service Management Integrations Webservice" ]
      }
    },
    "/api/integrations/serviceManagement/initiateEnvoyOAuth" : {
      "post" : {
        "description" : "Initiate the Envoy OAuth Process",
        "operationId" : "initiateEnvoyOAuth",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_InitiateOAuthWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_InitiateOAuthWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Initiate Envoy OAuth",
        "tags" : [ "Service Management Integrations Webservice" ]
      }
    },
    "/api/integrations/serviceManagement/updateEnvoyIntegration" : {
      "post" : {
        "deprecated" : true,
        "description" : "Update Envoy badge integration",
        "operationId" : "updateEnvoyIntegration",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateEnvoyIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update Envoy integration",
        "tags" : [ "Service Management Integrations Webservice" ]
      }
    },
    "/api/integrations/serviceManagement/updateEnvoyIntegrationV2" : {
      "post" : {
        "description" : "Update Envoy integration",
        "operationId" : "updateEnvoyIntegrationV2",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateEnvoyIntegrationV2WSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update Envoy integration V2",
        "tags" : [ "Service Management Integrations Webservice" ]
      }
    },
    "/api/integrations/serviceManagement/updateToastIntegration" : {
      "post" : {
        "deprecated" : true,
        "description" : "Update Toast integration",
        "operationId" : "updateToastIntegration",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateToastIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update Toast integration",
        "tags" : [ "Service Management Integrations Webservice" ]
      }
    },
    "/api/integrations/serviceManagement/updateToastIntegrationV2" : {
      "post" : {
        "description" : "Update Toast integration",
        "operationId" : "updateToastIntegrationV2",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateToastIntegrationV2WSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update Toast integration V2",
        "tags" : [ "Service Management Integrations Webservice" ]
      }
    },
    "/api/integrations/storage/deleteAwsIntegration" : {
      "post" : {
        "description" : "Delete AWS S3 clip storage integration",
        "operationId" : "deleteAwsIntegration",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete AWS integration",
        "tags" : [ "Storage Integrations Webservice" ]
      }
    },
    "/api/integrations/storage/deleteBoxIntegration" : {
      "post" : {
        "description" : "Delete Box clip storage integration",
        "operationId" : "deleteBoxIntegration",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete Box integration",
        "tags" : [ "Storage Integrations Webservice" ]
      }
    },
    "/api/integrations/storage/deleteDropboxIntegration" : {
      "post" : {
        "description" : "Delete Dropbox clip storage integration",
        "operationId" : "deleteDropboxIntegration",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete Dropbox integration",
        "tags" : [ "Storage Integrations Webservice" ]
      }
    },
    "/api/integrations/storage/deleteGoogleIntegration" : {
      "post" : {
        "deprecated" : true,
        "description" : "Delete Google Drive clip storage integration",
        "operationId" : "deleteGoogleIntegration",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete Google integration",
        "tags" : [ "Storage Integrations Webservice" ]
      }
    },
    "/api/integrations/storage/deleteGoogleIntegrationV2" : {
      "post" : {
        "description" : "Delete Google Drive clip storage integration",
        "operationId" : "deleteGoogleIntegrationV2",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete Google integration V2",
        "tags" : [ "Storage Integrations Webservice" ]
      }
    },
    "/api/integrations/storage/deleteOffice365Integration" : {
      "post" : {
        "description" : "Delete Office365 Sharepoint clip storage integration",
        "operationId" : "deleteOffice365Integration",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete Office365 integration",
        "tags" : [ "Storage Integrations Webservice" ]
      }
    },
    "/api/integrations/storage/getGoogleIntegration" : {
      "post" : {
        "description" : "Get Google Drive clip storage integration",
        "operationId" : "getGoogleIntegration",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetOrgIntegrationsV2WSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get Google integration",
        "tags" : [ "Storage Integrations Webservice" ]
      }
    },
    "/api/integrations/storage/initiateDropboxOAuth" : {
      "post" : {
        "description" : "Initiate the Dropbox OAuth Process",
        "operationId" : "initiateDropboxOAuth",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_InitiateOAuthWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_InitiateOAuthWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Initiate Dropbox OAuth",
        "tags" : [ "Storage Integrations Webservice" ]
      }
    },
    "/api/integrations/storage/initiateGoogleOAuth" : {
      "post" : {
        "description" : "Initiate the Google OAuth Process",
        "operationId" : "initiateGoogleOAuth",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_InitiateOAuthWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_InitiateOAuthWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Initiate Google OAuth",
        "tags" : [ "Storage Integrations Webservice" ]
      }
    },
    "/api/integrations/storage/initiateOffice365OAuth" : {
      "post" : {
        "description" : "Initiate the Office365 OAuth Process",
        "operationId" : "initiateOffice365OAuth",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_InitiateOAuthWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_InitiateOAuthWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Initiate Office365 OAuth",
        "tags" : [ "Storage Integrations Webservice" ]
      }
    },
    "/api/integrations/storage/refreshGoogleAccessToken" : {
      "post" : {
        "description" : "Refresh Google access token",
        "operationId" : "refreshGoogleAccessToken",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_RefreshGoogleAccessTokenWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_RefreshGoogleAccessTokenWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Refresh Google access token",
        "tags" : [ "Storage Integrations Webservice" ]
      }
    },
    "/api/integrations/storage/revokeGoogleDriveAccess" : {
      "post" : {
        "description" : "Revokes access to a Google Drive account",
        "operationId" : "revokeGoogleDriveAccess",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_RevokeGoogleDriveAccessWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Revoke Google Drive access",
        "tags" : [ "Storage Integrations Webservice" ]
      }
    },
    "/api/integrations/storage/updateAwsIntegration" : {
      "post" : {
        "description" : "Update AWS S3 clip storage integration",
        "operationId" : "updateAwsIntegration",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateAwsIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update AWS integration",
        "tags" : [ "Storage Integrations Webservice" ]
      }
    },
    "/api/integrations/storage/updateBoxIntegration" : {
      "post" : {
        "description" : "Update Box clip storage integration",
        "operationId" : "updateBoxIntegration",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateBoxIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update Box integration",
        "tags" : [ "Storage Integrations Webservice" ]
      }
    },
    "/api/integrations/storage/updateDropboxIntegration" : {
      "post" : {
        "description" : "Update Dropbox clip storage integration",
        "operationId" : "updateDropboxIntegration",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateDropboxIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update Dropbox integration",
        "tags" : [ "Storage Integrations Webservice" ]
      }
    },
    "/api/integrations/storage/updateGoogleIntegration" : {
      "post" : {
        "deprecated" : true,
        "description" : "Update Google Drive clip storage integration",
        "operationId" : "updateGoogleIntegration",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateGoogleIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update Google integration",
        "tags" : [ "Storage Integrations Webservice" ]
      }
    },
    "/api/integrations/storage/updateGoogleIntegrationV2" : {
      "post" : {
        "description" : "Update Google Drive clip storage integration",
        "operationId" : "updateGoogleIntegrationV2",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateGoogleIntegrationV2WSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update Google integration V2",
        "tags" : [ "Storage Integrations Webservice" ]
      }
    },
    "/api/integrations/storage/updateOffice365Integration" : {
      "post" : {
        "description" : "Update Office365 Sharepoint clip storage integration",
        "operationId" : "updateOffice365Integration",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateOffice365IntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update Office365 integration",
        "tags" : [ "Storage Integrations Webservice" ]
      }
    },
    "/api/integrations/submitApiTokenApplication" : {
      "post" : {
        "deprecated" : true,
        "description" : "Request an api token for organization",
        "operationId" : "submitApiTokenApplicationDep",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_SubmitApiTokenApplicationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_SubmitApiTokenApplicationWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Submit API Token Application",
        "tags" : [ "Integrations Webservice" ]
      }
    },
    "/api/integrations/subscribeZapierWebhook" : {
      "post" : {
        "deprecated" : true,
        "description" : "Setup a Zapier webhook",
        "operationId" : "subscribeZapierWebhookDep",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_SubscribeZapierWebhookWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_SubscribeZapierWebhookWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Subscribe Zapier Webhook",
        "tags" : [ "Integrations Webservice" ]
      }
    },
    "/api/integrations/unsubscribeZapierWebhook" : {
      "post" : {
        "deprecated" : true,
        "description" : "Delete a Zapier webhook",
        "operationId" : "unsubscribeZapierWebhookDep",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UnsubscribeZapierWebhookWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Unsubscribe Zapier Webhook",
        "tags" : [ "Integrations Webservice" ]
      }
    },
    "/api/integrations/updateAmtIntegration" : {
      "post" : {
        "deprecated" : true,
        "description" : "Update Amt badge integration",
        "operationId" : "updateAmtIntegrationDep",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateAmtIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update AMT Integration",
        "tags" : [ "Integrations Webservice" ]
      }
    },
    "/api/integrations/updateDeviceIntegration" : {
      "post" : {
        "deprecated" : true,
        "description" : "Update Device integration",
        "operationId" : "updateDeviceIntegrationDep",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateDeviceIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update Device Integration",
        "tags" : [ "Integrations Webservice" ]
      }
    },
    "/api/integrations/updateMattermostIntegration" : {
      "post" : {
        "deprecated" : true,
        "description" : "Update Mattermost alert integration",
        "operationId" : "updateMattermostIntegrationDep",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateMattermostIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update Mattermost Integration",
        "tags" : [ "Integrations Webservice" ]
      }
    },
    "/api/integrations/updateNoonlightSettings" : {
      "post" : {
        "deprecated" : true,
        "description" : "Update Noonlight integration",
        "operationId" : "updateNoonlightSettings",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateNoonlightSettingsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update Noonlight Settings",
        "tags" : [ "Integrations Webservice" ]
      }
    },
    "/api/integrations/updateOpenAIIntegration" : {
      "post" : {
        "deprecated" : true,
        "description" : "Update OpenAI integration",
        "operationId" : "updateOpenAIIntegrationDep",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateOpenAIIntegrationRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update OpenAI Integration",
        "tags" : [ "Integrations Webservice" ]
      }
    },
    "/api/integrations/updateWebhookIntegration" : {
      "post" : {
        "deprecated" : true,
        "description" : "Update outbound webhook alert integration",
        "operationId" : "updateWebhookIntegrationDep",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateWebhookIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update Webhook Integration",
        "tags" : [ "Integrations Webservice" ]
      }
    },
    "/api/integrations/updateWebhookIntegrationV2" : {
      "post" : {
        "deprecated" : true,
        "description" : "Update preexisting webhooks",
        "operationId" : "updateWebhookIntegrationV2Dep",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateWebhookIntegrationV2WSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateWebhookIntegrationV2WSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update Webhook Integration V2",
        "tags" : [ "Integrations Webservice" ]
      }
    },
    "/api/integrations/validateToken" : {
      "post" : {
        "description" : "Verifies an API token is still active",
        "operationId" : "validateTokenDep",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Validate API Token",
        "tags" : [ "Integrations Webservice" ]
      }
    },
    "/api/integrations/webhooks/deleteWebhookIntegration" : {
      "post" : {
        "description" : "Delete outbound webhook alert integration",
        "operationId" : "deleteWebhookIntegration",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete webhook integration",
        "tags" : [ "Webhook Integrations Webservice" ]
      }
    },
    "/api/integrations/webhooks/deleteWebhookIntegrationV2" : {
      "post" : {
        "description" : "Delete entire webhook integration",
        "operationId" : "deleteWebhookIntegrationV2",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete webhook integration V2",
        "tags" : [ "Webhook Integrations Webservice" ]
      }
    },
    "/api/integrations/webhooks/getWebhookIntegration" : {
      "post" : {
        "description" : "Get webhook integration",
        "operationId" : "getWebhookIntegration",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_BaseIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetOrgIntegrationsV2WSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get webhook integration",
        "tags" : [ "Webhook Integrations Webservice" ]
      }
    },
    "/api/integrations/webhooks/subscribeZapierWebhook" : {
      "post" : {
        "description" : "Setup a Zapier webhook",
        "operationId" : "subscribeZapierWebhook",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_SubscribeZapierWebhookWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_SubscribeZapierWebhookWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Subscribe Zapier webhook",
        "tags" : [ "Webhook Integrations Webservice" ]
      }
    },
    "/api/integrations/webhooks/unsubscribeZapierWebhook" : {
      "post" : {
        "description" : "Delete a Zapier webhook",
        "operationId" : "unsubscribeZapierWebhook",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UnsubscribeZapierWebhookWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Unsubscribe Zapier webhook",
        "tags" : [ "Webhook Integrations Webservice" ]
      }
    },
    "/api/integrations/webhooks/updateWebhookIntegration" : {
      "post" : {
        "description" : "Update outbound webhook alert integration",
        "operationId" : "updateWebhookIntegration",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateWebhookIntegrationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update webhook integration",
        "tags" : [ "Webhook Integrations Webservice" ]
      }
    },
    "/api/integrations/webhooks/updateWebhookIntegrationV2" : {
      "post" : {
        "description" : "Update preexisting webhooks",
        "operationId" : "updateWebhookIntegrationV2",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_UpdateWebhookIntegrationV2WSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_UpdateWebhookIntegrationV2WSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update webhook integration V2",
        "tags" : [ "Webhook Integrations Webservice" ]
      }
    },
    "/api/keypad/claimKeypadActivationToken" : {
      "post" : {
        "description" : "Connects a keypad to Rhombus services",
        "operationId" : "claimKeypadActivationToken",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Keypad_ClaimKeypadActivationTokenRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Keypad_ClaimKeypadActivationTokenResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Claim keypad activation token",
        "tags" : [ "Alarm Monitoring Keypad Webservice" ]
      }
    },
    "/api/keypad/getKeypadsForLocation" : {
      "post" : {
        "description" : "Get a list of all registered keypads for a location",
        "operationId" : "getKeypadsForLocation",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Keypad_GetKeypadsForLocationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Keypad_GetKeypadsForLocationWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get keypads for location",
        "tags" : [ "Alarm Monitoring Keypad Webservice" ]
      }
    },
    "/api/keypad/getKeypadsForOrg" : {
      "post" : {
        "description" : "Get a list of all registered keypads for an org",
        "operationId" : "getKeypadsForOrg",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Keypad_GetKeypadsForOrgWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Keypad_GetKeypadsForOrgWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get keypads for organization",
        "tags" : [ "Alarm Monitoring Keypad Webservice" ]
      }
    },
    "/api/keypad/unregisterKeypad" : {
      "post" : {
        "description" : "Unregister a keypad",
        "operationId" : "unregisterKeypad",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Keypad_UnregisterKeypadRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Keypad_UnregisterKeypadResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Unregister keypad",
        "tags" : [ "Alarm Monitoring Keypad Webservice" ]
      }
    },
    "/api/keypad/updateKeypad" : {
      "post" : {
        "description" : "Update keypad settings",
        "operationId" : "updateKeypad",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Keypad_UpdateKeypadRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Keypad_UpdateKeypadResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update keypad",
        "tags" : [ "Alarm Monitoring Keypad Webservice" ]
      }
    },
    "/api/kiosk/updateKiosk" : {
      "post" : {
        "description" : "Update kiosk settings",
        "operationId" : "updateKiosk",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Kiosk_UpdateKioskSelectiveRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Kiosk_UpdateKioskResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update kiosk",
        "tags" : [ "Guest Management Kiosk Webservice" ]
      }
    },
    "/api/license/assignACUDoorLicense" : {
      "post" : {
        "description" : "Assign ACU door license",
        "operationId" : "assignACUDoorLicense",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/License_AssignACUDoorLicenseWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/License_AssignACUDoorLicenseWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Assign ACU door license",
        "tags" : [ "License Webservice" ]
      }
    },
    "/api/license/assignAlertMonitoringLicense" : {
      "post" : {
        "description" : "Assign alert monitoring license",
        "operationId" : "assignAlertMonitoringLicense",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/License_AssignAlertMonitoringLicenseWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/License_AssignAlertMonitoringLicenseWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Assign alert monitoring license",
        "tags" : [ "License Webservice" ]
      }
    },
    "/api/license/assignDeviceLicense" : {
      "post" : {
        "description" : "Assign or unassign a device license.",
        "operationId" : "assignDeviceLicense",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/License_AssignDeviceLicenseWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/License_AssignDeviceLicenseWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Assign device license",
        "tags" : [ "License Webservice" ]
      }
    },
    "/api/license/assignLicense" : {
      "post" : {
        "description" : "Assign an add-on license to a device",
        "operationId" : "assignLicense",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/License_AssignLicenseWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/License_AssignLicenseWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Assign license",
        "tags" : [ "License Webservice" ]
      }
    },
    "/api/license/getACUDoorLicenses" : {
      "post" : {
        "description" : "Get list of access controlled door licenses licenses available in organization",
        "operationId" : "getACUDoorLicenses",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/License_GetACUDoorLicensesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/License_GetACUDoorLicensesWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get ACU door licenses",
        "tags" : [ "License Webservice" ]
      }
    },
    "/api/license/getACUDoorLicensesForClientOrg" : {
      "post" : {
        "description" : "Get list of access controlled door licenses licenses available for a client organization",
        "operationId" : "getACUDoorLicensesForClientOrg",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/License_GetACUDoorLicensesForClientOrgWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/License_GetACUDoorLicensesForClientOrgWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get ACU door licenses for client org",
        "tags" : [ "License Webservice" ]
      }
    },
    "/api/license/getAlertMonitoringLicenses" : {
      "post" : {
        "description" : "Get list of alert monitoring licenses available in organization",
        "operationId" : "getAlertMonitoringLicenses",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/License_GetAlertMonitoringLicensesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/License_GetAlertMonitoringLicensesWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get alert monitoring licenses",
        "tags" : [ "License Webservice" ]
      }
    },
    "/api/license/getAlertMonitoringLicensesForClientOrg" : {
      "post" : {
        "description" : "Get list of alert monitoring licenses available for a client organization",
        "operationId" : "getAlertMonitoringLicensesForClientOrg",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/License_GetAlertMonitoringLicensesForClientOrgWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/License_GetAlertMonitoringLicensesForClientOrgWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get alert monitoring licenses for client org",
        "tags" : [ "License Webservice" ]
      }
    },
    "/api/license/getDeviceLicenses" : {
      "post" : {
        "description" : "Get list of device licenses available in organization",
        "operationId" : "getDeviceLicenses",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/License_GetDeviceLicensesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/License_GetDeviceLicensesWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get device licenses",
        "tags" : [ "License Webservice" ]
      }
    },
    "/api/license/getDeviceLicensesForClientOrg" : {
      "post" : {
        "description" : "Get list of device licenses available for a client organization",
        "operationId" : "getDeviceLicensesForClientOrg",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/License_GetDeviceLicensesForClientOrgWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/License_GetDeviceLicensesForClientOrgWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get device licenses for client org",
        "tags" : [ "License Webservice" ]
      }
    },
    "/api/license/getLicenses" : {
      "post" : {
        "description" : "Get list of add-on licenses available in organization",
        "operationId" : "getLicenses",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/License_GetLicensesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/License_GetLicensesWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get licenses",
        "tags" : [ "License Webservice" ]
      }
    },
    "/api/license/getLicensesForClientOrg" : {
      "post" : {
        "description" : "Get a list of licenses available for a client organization",
        "operationId" : "getLicensesForClientOrg",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/License_GetLicensesForClientOrgWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/License_GetLicensesForClientOrgWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get licenses for client org",
        "tags" : [ "License Webservice" ]
      }
    },
    "/api/location/addLocationLabel" : {
      "post" : {
        "description" : "Add a label to a location",
        "operationId" : "addLocationLabel",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Location_AddLocationLabelWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Location_AddLocationLabelWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Add location label",
        "tags" : [ "Location Webservice" ]
      }
    },
    "/api/location/createLocation" : {
      "post" : {
        "description" : "Create a location",
        "operationId" : "createlocation",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Location_CreateLocationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Location_CreateLocationWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create location",
        "tags" : [ "Location Webservice" ]
      }
    },
    "/api/location/deleteLocation" : {
      "post" : {
        "description" : "Remove a location",
        "operationId" : "deleteLocation",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Location_DeleteLocationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Location_DeleteLocationWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete location",
        "tags" : [ "Location Webservice" ]
      }
    },
    "/api/location/geoCode" : {
      "post" : {
        "description" : "Get the latitude and longitude of an address",
        "operationId" : "geoCode",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Location_GeoCodeWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Location_GeoCodeWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Geocode address",
        "tags" : [ "Location Webservice" ]
      }
    },
    "/api/location/getLocation" : {
      "post" : {
        "description" : "Get location by id",
        "operationId" : "getLocation",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Location_GetLocationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Location_GetLocationWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get location",
        "tags" : [ "Location Webservice" ]
      }
    },
    "/api/location/getLocationLabelsForOrg" : {
      "post" : {
        "description" : "Get all location labels for an organization",
        "operationId" : "getLocationLabelsForOrg",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Location_GetLocationLabelsForOrgWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Location_GetLocationLabelsForOrgWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get location labels for org",
        "tags" : [ "Location Webservice" ]
      }
    },
    "/api/location/getLocations" : {
      "post" : {
        "description" : "Get list of locations in organization",
        "operationId" : "getLocations",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Location_GetLocationsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Location_GetLocationsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get locations",
        "tags" : [ "Location Webservice" ]
      }
    },
    "/api/location/getLocationsAssociatedToLocationLabelsByOrg" : {
      "post" : {
        "description" : "Get all locations associated to location labels for an organization",
        "operationId" : "getLocationsAssociatedToLocationLabelsByOrg",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Location_GetLocationLabelsForOrgWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Location_GetLocationLabelsForOrgWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get locations by labels",
        "tags" : [ "Location Webservice" ]
      }
    },
    "/api/location/getLocationsByGeo" : {
      "post" : {
        "description" : "Get list of locations given latitude and longitude",
        "operationId" : "getLocationsByGeo",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Location_GetLocationsByGeoRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Location_GetLocationsByGeoResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get locations by geo",
        "tags" : [ "Location Webservice" ]
      }
    },
    "/api/location/getLocationsBySubLocationsHierarchyKey" : {
      "post" : {
        "description" : "Get nested locations by subLocationHierarchyKey",
        "operationId" : "getLocationsBySubLocationsHierarchyKey",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Location_GetLocationsBySubLocationsHierarchyKeyWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Location_GetLocationsBySubLocationsHierarchyKeyWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get locations by hierarchy key",
        "tags" : [ "Location Webservice" ]
      }
    },
    "/api/location/removeLocationLabel" : {
      "post" : {
        "description" : "Remove a label from a location",
        "operationId" : "removeLocationLabel",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Location_RemoveLocationLabelWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Location_RemoveLocationLabelWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Remove location label",
        "tags" : [ "Location Webservice" ]
      }
    },
    "/api/location/selectiveUpdateLocation" : {
      "post" : {
        "description" : "Selectively update a location",
        "operationId" : "selectiveUpdateLocation",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Location_SelectiveUpdateLocationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Location_SelectiveUpdateLocationWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Selective update location",
        "tags" : [ "Location Webservice" ]
      }
    },
    "/api/location/updateLocation" : {
      "post" : {
        "description" : "Update a location **NOTE: This will replace old settings meaning if you leave a field blank it will be overrode to blank. For selective field updates use the endpoint /selectiveUpdateLocation",
        "operationId" : "updateLocation",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Location_UpdateLocationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Location_UpdateLocationWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update location",
        "tags" : [ "Location Webservice" ]
      }
    },
    "/api/logistics/getRMAs" : {
      "post" : {
        "description" : "Get RMAs",
        "operationId" : "getRMAs",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Logistics_GetRMAsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Logistics_GetRMAsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get RMAs",
        "tags" : [ "Logistics Webservice" ]
      }
    },
    "/api/logistics/getShipments" : {
      "post" : {
        "description" : "Get shipments",
        "operationId" : "getShipments",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Logistics_GetShipmentsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Logistics_GetShipmentsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get shipments",
        "tags" : [ "Logistics Webservice" ]
      }
    },
    "/api/logistics/getWarrantyApprovedRMAs" : {
      "post" : {
        "description" : "Get warranty approved RMAs",
        "operationId" : "getWarrantyApprovedRMAs",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Internal_GetWarrantyApprovedRMAsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Internal_GetWarrantyApprovedRMAsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get warranty approved RMAs",
        "tags" : [ "Logistics Webservice" ]
      }
    },
    "/api/mediadevice/getBulkMediaDeviceDetails" : {
      "post" : {
        "description" : "Get media information of any video-supporting media device",
        "operationId" : "getBulkMediaDeviceDetails",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Mediadevice_GetBulkMediaDeviceDetailsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Mediadevice_GetBulkMediaDeviceDetailsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get bulk media device details",
        "tags" : [ "Media Device Webservice" ]
      }
    },
    "/api/oauth/authorize" : {
      "get" : {
        "description" : "User authorizes to share permission and ac settings, receives temporary authorization code",
        "operationId" : "authorize",
        "parameters" : [ {
          "in" : "query",
          "name" : "clientId",
          "schema" : {
            "type" : "string",
            "nullable" : true
          }
        }, {
          "in" : "query",
          "name" : "redirectUri",
          "schema" : {
            "type" : "string",
            "nullable" : true
          }
        }, {
          "in" : "query",
          "name" : "responseType",
          "schema" : {
            "type" : "string",
            "nullable" : true
          }
        }, {
          "in" : "query",
          "name" : "state",
          "schema" : {
            "type" : "string",
            "nullable" : true
          }
        }, {
          "in" : "query",
          "name" : "consentGiven",
          "schema" : {
            "type" : "boolean",
            "nullable" : true
          }
        }, {
          "in" : "query",
          "name" : "codeChallenge",
          "schema" : {
            "type" : "string",
            "nullable" : true
          }
        }, {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Authorize OAuth application",
        "tags" : [ "OAuth Webservice" ]
      }
    },
    "/api/oauth/deleteApplication" : {
      "post" : {
        "description" : "Delete application",
        "operationId" : "deleteApplication",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Oauth_OAuthApplicationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete OAuth application",
        "tags" : [ "OAuth Webservice" ]
      }
    },
    "/api/oauth/getAllApplicationsForOrg" : {
      "post" : {
        "description" : "Get all applications for org",
        "operationId" : "getAllApplicationsForOrg",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Oauth_GetAllApplicationsForOrgWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Oauth_GetAllApplicationsForOrgWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get all applications for organization",
        "tags" : [ "OAuth Webservice" ]
      }
    },
    "/api/oauth/getApplicationByClientId" : {
      "post" : {
        "description" : "Get application by clientId",
        "operationId" : "getApplicationByClientId",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Oauth_GetApplicationByClientIdWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Oauth_GetApplicationByClientIdWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get application by client ID",
        "tags" : [ "OAuth Webservice" ]
      }
    },
    "/api/oauth/submitApplication" : {
      "post" : {
        "description" : "Application for client_id and client_secret",
        "operationId" : "submitApplication",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Oauth_OAuthApplicationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Oauth_OAuthApplicationWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Submit OAuth application",
        "tags" : [ "OAuth Webservice" ]
      }
    },
    "/api/oauth/updateApplication" : {
      "post" : {
        "description" : "Update application",
        "operationId" : "updateApplication",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Oauth_OAuthApplicationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BaseApiResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update OAuth application",
        "tags" : [ "OAuth Webservice" ]
      }
    },
    "/api/occupancy/getMinimalOccupancySensorStateList" : {
      "post" : {
        "description" : "Get basic state information about all proximity tags in organization",
        "operationId" : "getMinimalOccupancySensorStateList",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Occupancysensor_GetMinimalOccupancySensorStatesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Occupancysensor_GetMinimalOccupancySensorStatesWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get minimal occupancy sensor state list",
        "tags" : [ "Occupancy Webservice" ]
      }
    },
    "/api/occupancy/getOccupancyEventsForSensor" : {
      "post" : {
        "description" : "Get recent events for specified proximity tag",
        "operationId" : "getOccupancyEventsForSensor",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Occupancysensor_GetOccupancyEventsForSensorWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Occupancysensor_GetOccupancyEventsForSensorWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get occupancy events for sensor",
        "tags" : [ "Occupancy Webservice" ]
      }
    },
    "/api/occupancy/getOccupancyPresenceWindows" : {
      "post" : {
        "description" : "Get stored video information for sensor",
        "operationId" : "getOccupancyPresenceWindows",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Sensor_GetSensorPresenceWindowsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Sensor_GetSensorPresenceWindowsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get occupancy presence windows",
        "tags" : [ "Occupancy Webservice" ]
      }
    },
    "/api/occupancy/updateDetails" : {
      "post" : {
        "description" : "Update the details of an occupancy sensor",
        "operationId" : "updateOccupancySensorDetails",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Occupancysensor_UpdateOccupancySensorDetailsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Occupancysensor_UpdateOccupancySensorDetailsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update occupancy sensor details",
        "tags" : [ "Occupancy Webservice" ]
      }
    },
    "/api/org/claimActivationToken" : {
      "post" : {
        "description" : "Claim activation token for organization",
        "operationId" : "claimActivationToken",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_ClaimActivationTokenWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_ClaimActivationTokenWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Claim activation token",
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/claimShipmentRegistrationToken" : {
      "post" : {
        "description" : "Claim shipment registration token for an organization",
        "operationId" : "claimShipmentRegistrationToken",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_ClaimShipmentRegistrationTokenWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_ClaimShipmentRegistrationTokenWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Claim shipment registration token",
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/createPendingRegistration" : {
      "post" : {
        "description" : "Create a pending registration. Registration will be completed when the hardware establishes connectivity",
        "operationId" : "createPendingRegistration",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_CreatePendingRegistrationRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_CreatePendingRegistrationResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create pending registration",
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/deleteCloudArchivingConfig" : {
      "post" : {
        "description" : "Delete scoped cloud archiving config.  Note that the priority of scoping is Org > Location > Device",
        "operationId" : "deleteCloudArchivingConfig",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_DeleteCloudArchivingConfigWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_DeleteCloudArchivingConfigWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete cloud archiving config",
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/deleteKeypadLogo" : {
      "post" : {
        "description" : "Delete keypad logo.",
        "operationId" : "deleteKeypadLogo",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_DeleteKeypadLogoWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_DeleteKeypadLogoWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete keypad logo",
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/deleteRhombusKeyLogo" : {
      "post" : {
        "description" : "Delete rhombus key logo.",
        "operationId" : "deleteRhombusKeyLogo",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_DeleteRhombusKeyLogoWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_DeleteRhombusKeyLogoWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete rhombus key logo",
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/findAllHardwareWithPendingRegistration" : {
      "post" : {
        "description" : "Find all hardware for which a pending registrations exists",
        "operationId" : "findAllHardwareWithPendingRegistration",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_FindAllHardwareWithPendingRegistrationRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_FindAllHardwareWithPendingRegistrationResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Find all hardware with pending registration",
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/findHardwareAvailableForPendingRegistration" : {
      "post" : {
        "description" : "Find hardware for which pending registrations can be created",
        "operationId" : "findHardwareAvailableForPendingRegistration",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_FindHardwareAvailableForPendingRegistrationRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_FindHardwareAvailableForPendingRegistrationResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Find hardware available for pending registration",
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/findIfTeamNameAvailable" : {
      "post" : {
        "description" : "Get organization team name if it is available",
        "operationId" : "findIfTeamNameAvailable",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_FindIfTeamNameAvailableRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_FindIfTeamNameAvailableResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Find if team name available",
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/findSCIMSettingsForOrg" : {
      "post" : {
        "description" : "Get SCIM configuration for organization",
        "operationId" : "findSCIMSettingsForOrg",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_FindSCIMSettingsForOrgWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_FindSCIMSettingsForOrgWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Find SCIM settings for organization",
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/generateFederatedSessionToken" : {
      "post" : {
        "description" : "Generate a federated session token login for organization",
        "operationId" : "generateFederatedSessionToken",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_GenerateFederatedSessionTokenRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_GenerateFederatedSessionTokenResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Generate federated session token",
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/getClientOrg" : {
      "post" : {
        "description" : "Get details about the client organization",
        "operationId" : "getClientOrg",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_GetClientOrgWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_GetClientOrgWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get client organization details",
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/getCloudArchivingConfigs" : {
      "post" : {
        "description" : "Get scoped cloud archiving configs.  Note that the priority of scoping is Org > Location > Device",
        "operationId" : "getCloudArchivingConfigs",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_GetCloudArchivingConfigsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_GetCloudArchivingConfigsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get cloud archiving configs",
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/getFeatures" : {
      "post" : {
        "description" : "Get organization wide features",
        "operationId" : "getFeatures",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_GetFeaturesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_GetFeaturesWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get organization features",
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/getOrg" : {
      "post" : {
        "deprecated" : true,
        "description" : "Get details about organization",
        "operationId" : "getOrg",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_GetOrgWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_GetOrgWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get organization details",
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/getOrgIntegrations" : {
      "post" : {
        "deprecated" : true,
        "description" : "Use endpoints in Integrations Webservice instead",
        "operationId" : "DEPRECATED_getOrgIntegrations",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_GetOrgIntegrationsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_GetOrgIntegrationsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get organization integrations",
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/getOrgNotificationTemplate" : {
      "post" : {
        "deprecated" : true,
        "description" : "This endpoint is no longer in use. Please use getOrgNotificationTemplateV2 instead.",
        "operationId" : "getOrgNotificationTemplate",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_GetOrgNotificationTemplateWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_GetOrgNotificationTemplateWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get organization notification template",
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/getOrgNotificationTemplateV2" : {
      "post" : {
        "description" : "Get organization's default notification schedule template",
        "operationId" : "getOrgNotificationTemplateV2",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_GetOrgNotificationTemplateWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_GetOrgNotificationTemplateV2WSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get organization notification template V2",
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/getOrgV2" : {
      "post" : {
        "description" : "Get details about organization",
        "operationId" : "getOrgV2",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_GetOrgV2WSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_GetOrgV2WSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get organization details V2",
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/getSAMLSettings" : {
      "post" : {
        "deprecated" : true,
        "description" : "Deprecated. Use getSAMLSettingsV2",
        "operationId" : "getSAMLSettings",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_GetSAMLSettingsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_GetSAMLSettingsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get SAML settings",
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/getSAMLSettingsV2" : {
      "post" : {
        "description" : "Get details about organization",
        "operationId" : "getSAMLSettingsV2",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_GetSAMLSettingsV2WSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_GetSAMLSettingsV2WSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get SAML settings V2",
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/getScimDisplayInfo" : {
      "post" : {
        "description" : "Get SCIM display info for organization",
        "operationId" : "getScimDisplayInfo",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_GetScimDisplayInfoResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get SCIM display info",
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/getTemporaryOrgToken" : {
      "post" : {
        "description" : "Generate a temporary org token for use in OAuth flows",
        "operationId" : "getTemporaryOrgToken",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_GetTemporaryOrgTokenWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetTemporaryOrgTokenResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get temporary org token",
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/peekShipmentRegistrationToken" : {
      "post" : {
        "description" : "Peek at a shipping registration token for an organization",
        "operationId" : "peekShipmentRegistrationToken",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_PeekShipmentRegistrationTokenWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_PeekShipmentRegistrationTokenWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Peek shipment registration token",
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/removePendingRegistration" : {
      "post" : {
        "description" : "Remove a pending registration",
        "operationId" : "removePendingRegistration",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_RemovePendingRegistrationRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_RemovePendingRegistrationResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Remove pending registration",
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/revokeSCIMAccessForOrg" : {
      "post" : {
        "description" : "Revoke SCIM access for organization",
        "operationId" : "revokeSCIMAccessForOrg",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_RevokeSCIMAccessForOrgWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_RevokeSCIMAccessForOrgWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Revoke SCIM access for organization",
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/setupSCIMAccessForOrg" : {
      "post" : {
        "description" : "Initially configure SCIM access for organization",
        "operationId" : "setupSCIMAccessForOrg",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_SetupSCIMAccessForOrgWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_SetupSCIMAccessForOrgWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Setup SCIM access for organization",
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/updateAiTrainingSettings" : {
      "post" : {
        "description" : "Update organization AI training settings",
        "operationId" : "updateAiTrainingSettings",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_UpdateAiTrainingSettingsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_UpdateAiTrainingSettingsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update AI training settings",
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/updateCloudArchivingConfig" : {
      "post" : {
        "description" : "Update scoped cloud archiving config.  Note that the priority of scoping is Org > Location > Device",
        "operationId" : "updateCloudArchivingConfig",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_UpdateCloudArchivingConfigWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_UpdateCloudArchivingConfigWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update cloud archiving config",
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/updateFirmwareSettings" : {
      "post" : {
        "description" : "Update organization firmware schedule settings",
        "operationId" : "updateFirmwareSettings",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_UpdateFirmwareSettingsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_UpdateFirmwareSettingsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update firmware settings",
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/updateGeneralSettings" : {
      "post" : {
        "description" : "Update organization General settings",
        "operationId" : "updateGeneralSettings",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_UpdateGeneralSettingsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_UpdateGeneralSettingsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update general settings",
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/updateMFASettings" : {
      "post" : {
        "description" : "Update organization MFA settings",
        "operationId" : "updateMFASettings",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_UpdateMFASettingsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_UpdateMFASettingsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update MFA settings",
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/updateOrg" : {
      "post" : {
        "deprecated" : true,
        "description" : "Update organization details",
        "operationId" : "updateOrg",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_UpdateOrgWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_UpdateOrgWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update organization details",
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/updateOrgAudioAnalysisPolicy" : {
      "post" : {
        "description" : "Update organization AI audio analysis policy",
        "operationId" : "updateOrgAudioAnalysisPolicy",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_UpdateOrgAudioAnalysisPolicyWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_UpdateOrgAudioAnalysisPolicyWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update organization AI audio analysis policy",
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/updateOrgAudioRecordingPolicy" : {
      "post" : {
        "description" : "Update organization audio recording policy",
        "operationId" : "updateOrgAudioRecordingPolicy",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_UpdateOrgAudioRecordingPolicyWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_UpdateOrgAudioRecordingPolicyWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update organization audio recording policy",
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/updateOrgLLMUsagePolicy" : {
      "post" : {
        "description" : "Update organization's LLM usage opt-in policy",
        "operationId" : "updateOrgLLMUsagePolicy",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_UpdateOrgLLMUsagePolicyWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_UpdateOrgLLMUsagePolicyWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update organization's LLM usage opt-in policy",
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/updateOrgNotificationTemplate" : {
      "post" : {
        "deprecated" : true,
        "description" : "This endpoint is no longer in use. Please use updateOrgNotificationTemplateV2 instead.",
        "operationId" : "updateOrgNotificationTemplate",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_UpdateOrgNotificationTemplateWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_UpdateOrgNotificationTemplateWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update organization notification template",
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/updateOrgNotificationTemplateV2" : {
      "post" : {
        "description" : "Update default notification schedule template for newly created Users in Org",
        "operationId" : "updateOrgNotificationTemplateV2",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_UpdateOrgNotificationTemplateV2WSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_UpdateOrgNotificationTemplateV2WSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update organization notification template V2",
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/updatePendingRegistration" : {
      "post" : {
        "description" : "Update pending registration for hardware",
        "operationId" : "updatePendingRegistration",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_UpdatePendingRegistrationRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_UpdatePendingRegistrationResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update pending registration",
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/updateSAMLSettings" : {
      "post" : {
        "deprecated" : true,
        "description" : "Deprecated. Use updateSAMLSettingsV2",
        "operationId" : "updateSAMLSettings",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_UpdateSAMLSettingsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_UpdateSAMLSettingsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update SAML settings",
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/updateSAMLSettingsV2" : {
      "post" : {
        "description" : "Update organization SAML settings",
        "operationId" : "updateSAMLSettingsV2",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_UpdateSAMLSettingsV2WSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_UpdateSAMLSettingsV2WSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update SAML settings V2",
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/org/updateSCIMSettingsForOrg" : {
      "post" : {
        "description" : "Update SCIM configuration for organization",
        "operationId" : "updateSCIMSettingsForOrg",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_UpdateSCIMSettingsForOrgWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_UpdateSCIMSettingsForOrgWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update SCIM settings for organization",
        "tags" : [ "Org Webservice" ]
      }
    },
    "/api/partner/createPartnerClient" : {
      "post" : {
        "description" : "Create a client account",
        "operationId" : "createPartnerClient",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Partner_CreatePartnerClientWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Partner_CreatePartnerClientWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create partner client",
        "tags" : [ "Partner Webservice" ]
      }
    },
    "/api/partner/customizeClient" : {
      "post" : {
        "description" : "Customize a client account",
        "operationId" : "customizeClient",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Partner_CustomizeClientWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Partner_CustomizeClientWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Customize client",
        "tags" : [ "Partner Webservice" ]
      }
    },
    "/api/partner/customizeClientDevice" : {
      "post" : {
        "description" : "Customize a client device",
        "operationId" : "customizeClientDevice",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Partner_CustomizeClientDeviceWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Partner_CustomizeClientDeviceWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Customize client device",
        "tags" : [ "Partner Webservice" ]
      }
    },
    "/api/partner/deleteClient" : {
      "post" : {
        "description" : "Delete a client account",
        "operationId" : "deletePartnerClient",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Partner_DeleteClientWebRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Partner_DeleteClientWebResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete partner client",
        "tags" : [ "Partner Webservice" ]
      }
    },
    "/api/partner/getApiTokenApplications" : {
      "post" : {
        "deprecated" : true,
        "description" : "Get details of all open api token requests for organization",
        "operationId" : "partner_getApiTokenApplications",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetApiTokenApplicationsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetApiTokenApplicationsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get API token applications",
        "tags" : [ "Partner Webservice" ]
      }
    },
    "/api/partner/getApiTokens" : {
      "post" : {
        "description" : "Get list of all api tokens for a partner",
        "operationId" : "partner_getApiTokens",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetPartnerApiTokensWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetApiTokensWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get API tokens",
        "tags" : [ "Partner Webservice" ]
      }
    },
    "/api/partner/getClientDevices" : {
      "post" : {
        "description" : "Retrieve a list of devices for a specific client.",
        "operationId" : "getClientDevices",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Partner_GetClientDevicesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Partner_GetClientDevicesWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get client devices",
        "tags" : [ "Partner Webservice" ]
      }
    },
    "/api/partner/getClientStatusMap" : {
      "post" : {
        "description" : "Get a map of all client accounts to device and location info",
        "operationId" : "getPartnerClientsStatusMap",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Partner_GetPartnerClientsStatusMapWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Partner_GetPartnerClientsStatusMapWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get client status map",
        "tags" : [ "Partner Webservice" ]
      }
    },
    "/api/partner/getClientSummaryInfo" : {
      "post" : {
        "description" : "Get information about a client",
        "operationId" : "getClientSummaryInfo",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Partner_GetClientSummaryInfoWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Partner_GetClientSummaryInfoWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get client summary info",
        "tags" : [ "Partner Webservice" ]
      }
    },
    "/api/partner/getClients" : {
      "post" : {
        "description" : "Get a list of all client accounts",
        "operationId" : "getPartnerClients",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Partner_GetPartnerClientsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Partner_GetPartnerClientsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get partner clients",
        "tags" : [ "Partner Webservice" ]
      }
    },
    "/api/partner/getClientsV2" : {
      "post" : {
        "description" : "Get a list of all client accounts. NOTICE: This is the same as getPartnerClients, but only returns the basic info so partners can login to clients quickly. The other info will be returned by getPartnerClientsStatusMap.",
        "operationId" : "getPartnerClientsV2",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Partner_GetPartnerClientsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Partner_GetPartnerClientsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get partner clients V2",
        "tags" : [ "Partner Webservice" ]
      }
    },
    "/api/partner/getDeviceLicensesForOrg" : {
      "post" : {
        "deprecated" : true,
        "description" : "Get a list of licenses available for a client organization",
        "operationId" : "getDeviceLicensesForOrg",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/License_GetDeviceLicensesForClientOrgWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/License_GetDeviceLicensesForClientOrgWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get device licenses for organization",
        "tags" : [ "Partner Webservice" ]
      }
    },
    "/api/partner/getLicensesForOrg" : {
      "post" : {
        "deprecated" : true,
        "description" : "Get a list of licenses available for a client organization",
        "operationId" : "getLicensesForOrg",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/License_GetLicensesForClientOrgWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/License_GetLicensesForClientOrgWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get licenses for organization",
        "tags" : [ "Partner Webservice" ]
      }
    },
    "/api/partner/getListOfAllClientDevices" : {
      "post" : {
        "description" : "Retrieve list of all devices registered across all clients",
        "operationId" : "getListOfAllClientDevices",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Partner_GetListOfAllClientDevicesRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Partner_GetListOfAllClientDevicesResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get list of all client devices",
        "tags" : [ "Partner Webservice" ]
      }
    },
    "/api/partner/getListOfAvailableHardware" : {
      "post" : {
        "description" : "Retrieve a list of hardware available for remote registration. Any hardware originally registered by a Partner is available for re-registration after being removed from an active client account.",
        "operationId" : "getListOfControlledHardware",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Partner_GetListOfControlledHardwareRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Partner_GetListOfControlledHardwareResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get list of available hardware",
        "tags" : [ "Partner Webservice" ]
      }
    },
    "/api/partner/getShipments" : {
      "post" : {
        "description" : "Get client shipments",
        "operationId" : "PartnerGetShipments",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Partner_GetShipmentsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Partner_GetShipmentsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get client shipments",
        "tags" : [ "Partner Webservice" ]
      }
    },
    "/api/partner/reassignDeviceOrg" : {
      "post" : {
        "description" : "Reassign device(s) to a different organization. Only devices which hardware is controlled by the partner can be reassigned",
        "operationId" : "reassignDeviceOrg",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Partner_ReassignDeviceOrgWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Partner_ReassignDeviceOrgWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Reassign device organization",
        "tags" : [ "Partner Webservice" ]
      }
    },
    "/api/partner/registerCameraToClient" : {
      "post" : {
        "description" : "Register a controlled camera to a client",
        "operationId" : "registerCameraToClient",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Org_CreatePendingRegistrationRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Org_CreatePendingRegistrationResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Register camera to client",
        "tags" : [ "Partner Webservice" ]
      }
    },
    "/api/partner/registerDeal" : {
      "post" : {
        "description" : "Register a deal",
        "operationId" : "registerDeal",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Partner_RegisterDealWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Partner_RegisterDealWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Register deal",
        "tags" : [ "Partner Webservice" ]
      }
    },
    "/api/partner/revokeApiToken" : {
      "post" : {
        "description" : "Remove an api token from organization. Note: this is irreversible",
        "operationId" : "partner_revokeApiToken",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_RevokeApiTokenWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_RevokeApiTokenWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Revoke API token",
        "tags" : [ "Partner Webservice" ]
      }
    },
    "/api/partner/updateSendLicenseExpirationEmail" : {
      "post" : {
        "description" : "Update send license expiration email feature flag by org",
        "operationId" : "updateManuallySendLicenseExpirationEmail",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Partner_UpdateManuallySendLicenseExpirationEmailWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Partner_UpdateManuallySendLicenseExpirationEmailWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update send license expiration email",
        "tags" : [ "Partner Webservice" ]
      }
    },
    "/api/permission/createPartnerPermissionGroup" : {
      "post" : {
        "description" : "Create a permission group",
        "operationId" : "createPartnerPermissionGroup",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Permission_CreatePartnerPermissionGroupWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Permission_CreatePartnerPermissionGroupWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create partner permission group",
        "tags" : [ "Permission Webservice" ]
      }
    },
    "/api/permission/createPermissionGroup" : {
      "post" : {
        "description" : "Create a permission group",
        "operationId" : "createPermissionGroup",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Permission_CreatePermissionGroupWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Permission_CreatePermissionGroupWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create permission group",
        "tags" : [ "Permission Webservice" ]
      }
    },
    "/api/permission/deletePartnerPermissionGroup" : {
      "post" : {
        "description" : "Delete a permission group",
        "operationId" : "deletePartnerPermissionGroup",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Permission_DeletePartnerPermissionGroupWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Permission_DeletePartnerPermissionGroupWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete partner permission group",
        "tags" : [ "Permission Webservice" ]
      }
    },
    "/api/permission/deletePermissionGroup" : {
      "post" : {
        "description" : "Delete a permission group",
        "operationId" : "deletePermissionGroup",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Permission_DeletePermissionGroupWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Permission_DeletePermissionGroupWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete permission group",
        "tags" : [ "Permission Webservice" ]
      }
    },
    "/api/permission/getPartnerPermissionGroups" : {
      "post" : {
        "description" : "Get partner permission groups for the organization",
        "operationId" : "getPartnerPermissionGroups",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Permission_GetPartnerPermissionGroupsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Permission_GetPartnerPermissionGroupWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get partner permission groups",
        "tags" : [ "Permission Webservice" ]
      }
    },
    "/api/permission/getPermissionGroups" : {
      "post" : {
        "description" : "Get details about all permission groups in organization",
        "operationId" : "getPermissionGroups",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Permission_GetPermissionGroupsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Permission_GetPermissionGroupsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get permission groups",
        "tags" : [ "Permission Webservice" ]
      }
    },
    "/api/permission/getPermissionsForCurrentPartner" : {
      "post" : {
        "description" : "Get permissions for the current partner user",
        "operationId" : "getPermissionsForCurrentPartner",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Permission_GetPermissionsForCurrentPartnerWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Permission_GetPermissionsForCurrentPartnerWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get permissions for current partner",
        "tags" : [ "Permission Webservice" ]
      }
    },
    "/api/permission/getPermissionsForCurrentUser" : {
      "post" : {
        "description" : "Get device and functionality permissions for user or API token",
        "operationId" : "getPermissionsForCurrentUser",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Permission_GetPermissionsForCurrentUserWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Permission_GetPermissionsForCurrentUserWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get permissions for current user",
        "tags" : [ "Permission Webservice" ]
      }
    },
    "/api/permission/updatePartnerPermissionGroup" : {
      "post" : {
        "description" : "Update a partner permission group",
        "operationId" : "updatePartnerPermissionGroup",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Permission_UpdatePartnerPermissionGroupWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Permission_UpdatePartnerPermissionGroupWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update partner permission group",
        "tags" : [ "Permission Webservice" ]
      }
    },
    "/api/permission/updatePermissionGroup" : {
      "post" : {
        "description" : "Update a permission group",
        "operationId" : "updatePermissionGroup",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Permission_UpdatePermissionGroupWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Permission_UpdatePermissionGroupWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update permission group",
        "tags" : [ "Permission Webservice" ]
      }
    },
    "/api/policy/createAccessControlledDoorPolicy" : {
      "post" : {
        "description" : "Create a policy to be assigned to a access controlled door",
        "operationId" : "createAccessControlledDoorPolicy",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_CreateAccessControlledDoorPolicyWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_CreateAccessControlledDoorPolicyWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create access controlled door policy",
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/createAudioPolicy" : {
      "post" : {
        "description" : "Create a policy to be assigned to audio gateways",
        "operationId" : "createAudioPolicy",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_CreateAudioPolicyWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_CreateAudioPolicyWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create audio policy",
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/createCameraPolicy" : {
      "post" : {
        "description" : "Create a policy to be assigned to cameras",
        "operationId" : "createCameraPolicy",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_CreateCameraPolicyWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_CreateCameraPolicyWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create camera policy",
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/createClimatePolicy" : {
      "post" : {
        "description" : "Create a policy to be assigned to a climate sensor",
        "operationId" : "createClimatePolicy",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_CreateClimatePolicyWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_CreateClimatePolicyWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create climate policy",
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/createDoorPolicy" : {
      "post" : {
        "description" : "Create a policy to be assigned to a door sensor",
        "operationId" : "createDoorPolicy",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_CreateDoorPolicyWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_CreateDoorPolicyWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create door policy",
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/createOccupancyPolicy" : {
      "post" : {
        "description" : "Create a policy to be assigned to a occupancy sensor",
        "operationId" : "createOccupancyPolicy",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_CreateOccupancyPolicyWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_CreateOccupancyPolicyWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create occupancy policy",
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/createPolicyAddendumForLocation" : {
      "post" : {
        "description" : "Create policy addendum for location",
        "operationId" : "createPolicyAddendumForLocation",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_CreatePolicyAddendumForLocationRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_CreatePolicyAddendumForLocationResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create policy addendum for location",
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/createPolicyAddendumsForDevices" : {
      "post" : {
        "description" : "Create policy addendums for devices",
        "operationId" : "createPolicyAddendumsForDevices",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_CreatePolicyAddendumsForDevicesRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_CreatePolicyAddendumsForDevicesResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create policy addendums for devices",
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/createProximityPolicy" : {
      "post" : {
        "description" : "Create a policy to be assigned to an asset tag",
        "operationId" : "createProximityPolicy",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_CreateProximityPolicyWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_CreateProximityPolicyWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create proximity policy",
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/createSchedule" : {
      "post" : {
        "description" : "Create a schedule to be used for policy creation",
        "operationId" : "createSchedule",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_CreateScheduleWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_CreateScheduleWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create schedule",
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/createVideoIntercomPolicy" : {
      "post" : {
        "description" : "Create a video intercom policy",
        "operationId" : "createVideoIntercomPolicy",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_CreateVideoIntercomPolicyWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_CreateVideoIntercomPolicyWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create video intercom policy",
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/deleteAccessControlledDoorPolicy" : {
      "post" : {
        "description" : "Delete an access controlled door policy",
        "operationId" : "deleteAccessControlledDoorPolicy",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_DeleteAccessControlledDoorPolicyWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_DeleteAccessControlledDoorPolicyWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete access controlled door policy",
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/deleteAudioPolicy" : {
      "post" : {
        "description" : "Delete a audio gateway policy",
        "operationId" : "deleteAudioPolicy",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_DeleteAudioPolicyWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_DeleteAudioPolicyWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete audio policy",
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/deleteCameraPolicy" : {
      "post" : {
        "description" : "Delete a camera policy",
        "operationId" : "deleteCameraPolicy",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_DeleteCameraPolicyWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_DeleteCameraPolicyWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete camera policy",
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/deleteClimatePolicy" : {
      "post" : {
        "description" : "Delete a climate policy",
        "operationId" : "deleteClimatePolicy",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_DeleteClimatePolicyWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_DeleteClimatePolicyWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete climate policy",
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/deleteDevicePolicyAddendums" : {
      "post" : {
        "description" : "Delete a policy addendums",
        "operationId" : "deleteDevicePolicyAddendums",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_DeleteDevicePolicyAddendumsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_DeleteDevicePolicyAddendumsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete device policy addendums",
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/deleteDoorPolicy" : {
      "post" : {
        "description" : "Delete a door sensor policy",
        "operationId" : "deleteDoorPolicy",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_DeleteDoorPolicyWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_DeleteDoorPolicyWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete door policy",
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/deleteLocationPolicyAddendum" : {
      "post" : {
        "description" : "Delete a policy addendums",
        "operationId" : "deleteLocationPolicyAddendum",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_DeleteLocationPolicyAddendumWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_DeleteLocationPolicyAddendumWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete location policy addendum",
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/deleteOccupancyPolicy" : {
      "post" : {
        "description" : "Delete an Occupancy policy",
        "operationId" : "deleteOccupancyPolicy",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_DeleteOccupancyPolicyWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_DeleteOccupancyPolicyWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete occupancy policy",
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/deletePolicyPauseSettingForComponentComposite" : {
      "post" : {
        "description" : "Delete a policy pause setting for a component composite",
        "operationId" : "deletePolicyPauseSettingForComponentComposite",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_DeletePolicyPauseSettingWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_DeletePolicyPauseSettingWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete policy pause setting for component composite",
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/deletePolicyPauseSettingForDevice" : {
      "post" : {
        "description" : "Delete a policy pause setting for a device",
        "operationId" : "deletePolicyPauseSettingForDevice",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_DeletePolicyPauseSettingWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_DeletePolicyPauseSettingWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete policy pause setting for device",
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/deletePolicyPauseSettingForLocation" : {
      "post" : {
        "description" : "Delete a policy pause setting for a location",
        "operationId" : "deletePolicyPauseSettingForLocation",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_DeletePolicyPauseSettingWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_DeletePolicyPauseSettingWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete policy pause setting for location",
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/deleteProximityPolicy" : {
      "post" : {
        "description" : "Delete an asset tag policy",
        "operationId" : "deleteProximityPolicy",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_DeleteProximityPolicyWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_DeleteProximityPolicyWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete proximity policy",
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/deleteSchedule" : {
      "post" : {
        "description" : "Delete a schedule used for policy creation",
        "operationId" : "deleteSchedule",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_DeleteScheduleWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_DeleteScheduleWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete schedule",
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/deleteVideoIntercomPolicy" : {
      "post" : {
        "description" : "Delete a video intercom policy",
        "operationId" : "deleteVideoIntercomPolicy",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_DeleteVideoIntercomPolicyWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_DeleteVideoIntercomPolicyWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete video intercom policy",
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/findSchedules" : {
      "post" : {
        "description" : "Find all schedules in organization",
        "operationId" : "findSchedules",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_FindSchedulesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_FindSchedulesWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Find schedules",
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/getAccessControlledDoorPolicies" : {
      "post" : {
        "description" : "Get details about all access controlled door policies in organization",
        "operationId" : "getAccessControlledDoorPolicies",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_GetAccessControlledDoorPoliciesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_GetAccessControlledDoorPoliciesWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get access controlled door policies",
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/getAudioPolicies" : {
      "post" : {
        "description" : "Get details about all audio gateway policies in organization",
        "operationId" : "getAudioPolicies",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_GetAudioPoliciesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_GetAudioPoliciesWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get audio policies",
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/getCameraPolicies" : {
      "post" : {
        "description" : "Get details about all camera policies in organization",
        "operationId" : "getCameraPolicies",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_GetCameraPoliciesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_GetCameraPoliciesWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get camera policies",
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/getClimatePolicies" : {
      "post" : {
        "description" : "Get details about all climate policies in organization",
        "operationId" : "getClimatePolicies",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_GetClimatePoliciesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_GetClimatePoliciesWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get climate policies",
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/getDoorPolicies" : {
      "post" : {
        "description" : "Get details about all door sensor policies in organization",
        "operationId" : "getDoorPolicies",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_GetDoorPoliciesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_GetDoorPoliciesWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get door policies",
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/getOccupancyPolicies" : {
      "post" : {
        "description" : "Get details about all occupancy policies in organization",
        "operationId" : "getOccupancyPolicies",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_GetOccupancyPoliciesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_GetOccupancyPoliciesWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get occupancy policies",
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/getPoliciesUsingSchedule" : {
      "post" : {
        "description" : "Get details about all climate policies in organization",
        "operationId" : "getPoliciesUsingSchedule",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_GetPoliciesUsingScheduleWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_GetPoliciesUsingScheduleWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get policies using schedule",
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/getPolicyAddendums" : {
      "post" : {
        "description" : "Get the current and planned policy alert addendums",
        "operationId" : "getPolicyAddendums",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_GetPolicyAddendumsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_GetPolicyAddendumsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get policy addendums",
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/getPolicyPauseSettings" : {
      "post" : {
        "description" : "Get the current and planned policy alert pause details",
        "operationId" : "getPolicyPauseSettings",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_GetPolicyPauseSettingsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_GetPolicyPauseSettingsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get policy pause settings",
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/getProximityPolicies" : {
      "post" : {
        "description" : "Get details about all asset tag policies in organization",
        "operationId" : "getProximityPolicies",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_GetProximityPoliciesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_GetProximityPoliciesWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get proximity policies",
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/getVideoIntercomPolicies" : {
      "post" : {
        "description" : "Get details about all video intercom policies in organization",
        "operationId" : "getVideoIntercomPolicies",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_GetVideoIntercomPoliciesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_GetVideoIntercomPoliciesWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get video intercom policies",
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/pauseAlertPolicyForComponentComposite" : {
      "post" : {
        "description" : "Pause alert policy for component composite",
        "operationId" : "pauseAlertPolicyForComponentComposite",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_PauseAlertPolicyWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_PauseAlertPolicyWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Pause alert policy for component composite",
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/pauseAlertPolicyForDevice" : {
      "post" : {
        "description" : "Pause alert policy for device",
        "operationId" : "pauseAlertPolicyForDevice",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_PauseAlertPolicyWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_PauseAlertPolicyWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Pause alert policy for device",
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/pauseAlertPolicyForLocation" : {
      "post" : {
        "description" : "Pause alert policy for location",
        "operationId" : "pauseAlertPolicyForLocation",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_PauseAlertPolicyWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_PauseAlertPolicyWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Pause alert policy for location",
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/updateAccessControlledDoorPolicy" : {
      "post" : {
        "description" : "Update an access controlled door policy",
        "operationId" : "updateAccessControlledDoorPolicy",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_UpdateAccessControlledDoorPolicyWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_UpdateAccessControlledDoorPolicyWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update access controlled door policy",
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/updateAudioPolicy" : {
      "post" : {
        "description" : "Update a audio gateway policy",
        "operationId" : "updateAudioPolicy",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_UpdateAudioPolicyWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_UpdateAudioPolicyWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update audio policy",
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/updateCameraPolicy" : {
      "post" : {
        "description" : "Update a camera policy",
        "operationId" : "updateCameraPolicy",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_UpdateCameraPolicyWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_UpdateCameraPolicyWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update camera policy",
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/updateClimatePolicy" : {
      "post" : {
        "description" : "Update a climate policy",
        "operationId" : "updateClimatePolicy",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_UpdateClimatePolicyWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_UpdateClimatePolicyWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update climate policy",
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/updateDoorPolicy" : {
      "post" : {
        "description" : "Update a door sensor policy",
        "operationId" : "updateDoorPolicy",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_UpdateDoorPolicyWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_UpdateDoorPolicyWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update door policy",
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/updateOccupancyPolicy" : {
      "post" : {
        "description" : "Update an occupancy policy",
        "operationId" : "updateOccupancyPolicy",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_UpdateOccupancyPolicyWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_UpdateOccupancyPolicyWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update occupancy policy",
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/updateProximityPolicy" : {
      "post" : {
        "description" : "Update an asset tag policy",
        "operationId" : "updateProximityPolicy",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_UpdateProximityPolicyWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_UpdateProximityPolicyWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update proximity policy",
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/updateSchedule" : {
      "post" : {
        "description" : "Update a schedule to be used for policy creation",
        "operationId" : "updateSchedule",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_UpdateScheduleWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_UpdateScheduleWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update schedule",
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/policy/updateVideoIntercomPolicy" : {
      "post" : {
        "description" : "Update video intercom policy",
        "operationId" : "updateVideoIntercomPolicy",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_UpdateVideoIntercomPolicyWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_UpdateVideoIntercomPolicyWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update video intercom policy",
        "tags" : [ "Policy Webservice" ]
      }
    },
    "/api/proximity/getLocomotionEventsForTag" : {
      "post" : {
        "description" : "Get locomotion events for specified proximity tag",
        "operationId" : "getLocomotionEventsForTag",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Proximity_GetLocomotionEventsForTagWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Proximity_GetLocomotionEventsForTagWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get locomotion events for tag",
        "tags" : [ "Proximity Webservice" ]
      }
    },
    "/api/proximity/getMinimalProximityStateList" : {
      "post" : {
        "description" : "Get basic state information about all proximity tags in organization",
        "operationId" : "getMinimalProximityStateList",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Proximity_GetMinimalProximityStatesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Proximity_GetMinimalProximityStatesWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get minimal proximity state list",
        "tags" : [ "Proximity Webservice" ]
      }
    },
    "/api/proximity/getProximityEventsForTag" : {
      "post" : {
        "description" : "Get recent events for specified proximity tag",
        "operationId" : "getProximityEventsForTags",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Proximity_GetProximityEventsForTagWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Proximity_GetProximityEventsForTagWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get proximity events for tag",
        "tags" : [ "Proximity Webservice" ]
      }
    },
    "/api/proximity/updateDetails" : {
      "post" : {
        "description" : "Update details for a proximity tag",
        "operationId" : "updateProximitySensorDetails",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Proximity_UpdateProximitySensorDetailsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Proximity_UpdateProximitySensorDetailsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update proximity sensor details",
        "tags" : [ "Proximity Webservice" ]
      }
    },
    "/api/rapidsos/getNearbyFeeds" : {
      "post" : {
        "description" : "Get closest 10 feeds by lat and long",
        "operationId" : "getNearbyFeeds",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Rapidsos_GetNearbyFeedsRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Rapidsos_GetNearbyFeedsResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get nearby feeds",
        "tags" : [ "RapidSOS Webservice" ]
      }
    },
    "/api/relay/assignThirdPartyCameraToNVR" : {
      "post" : {
        "description" : "Assign a third party camera to an NVR",
        "operationId" : "assignThirdPartyCameraToNVR",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Relay_AssignThirdPartyCameraToNVRWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Relay_AssignThirdPartyCameraToNVRWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Assign third party camera to NVR",
        "tags" : [ "Relay Webservice" ]
      }
    },
    "/api/relay/assignThirdPartyCameraToRelayCamera" : {
      "post" : {
        "description" : "Assign a third party camera to a relay Camera",
        "operationId" : "assignThirdPartyCameraToRelayCamera",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Relay_AssignThirdPartyCameraToRelayCameraWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Relay_AssignThirdPartyCameraToRelayCameraWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Assign third party camera to relay camera",
        "tags" : [ "Relay Webservice" ]
      }
    },
    "/api/relay/authenticateThirdPartyCamera" : {
      "post" : {
        "description" : "Authenticate a third party camera, effectively validating the credentials specified to be used for it.",
        "operationId" : "authenticateThirdPartyCamera",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Relay_AuthenticateThirdPartyCameraWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Relay_AuthenticateThirdPartyCameraWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Authenticate third party camera",
        "tags" : [ "Relay Webservice" ]
      }
    },
    "/api/relay/createThirdPartyCameraPassword" : {
      "post" : {
        "description" : "Create a third party camera password",
        "operationId" : "createThirdPartyCameraPassword",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Relay_CreateThirdPartyCameraPasswordWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Relay_CreateThirdPartyCameraPasswordWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create third party camera password",
        "tags" : [ "Relay Webservice" ]
      }
    },
    "/api/relay/deleteThirdPartyCameraPassword" : {
      "post" : {
        "description" : "Delete a third party camera password",
        "operationId" : "deleteThirdPartyCameraPasswords",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Relay_DeleteThirdPartyCameraPasswordWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Relay_DeleteThirdPartyCameraPasswordWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete third party camera password",
        "tags" : [ "Relay Webservice" ]
      }
    },
    "/api/relay/getAssignedThirdPartyCameras" : {
      "post" : {
        "description" : "Get a list of the third party cameras assigned to an NVR",
        "operationId" : "getAssignedThirdPartyCameras",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Relay_GetAssignedThirdPartyCamerasWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Relay_GetAssignedThirdPartyCamerasWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get assigned third party cameras",
        "tags" : [ "Relay Webservice" ]
      }
    },
    "/api/relay/getThirdPartyCameraPasswords" : {
      "post" : {
        "description" : "Get a list of the third party camera passwords",
        "operationId" : "getThirdPartyCameraPasswords",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Relay_GetThirdPartyCameraPasswordsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Relay_GetThirdPartyCameraPasswordsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get third party camera passwords",
        "tags" : [ "Relay Webservice" ]
      }
    },
    "/api/relay/ptzMove" : {
      "post" : {
        "description" : "Trigger a pan, tilt, or zoom",
        "operationId" : "ptzMove",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Relay_PTZMoveWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Relay_PTZMoveWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "PTZ move",
        "tags" : [ "Relay Webservice" ]
      }
    },
    "/api/relay/ptzStatus" : {
      "post" : {
        "description" : "Trigger a pan, tilt, or zoom",
        "operationId" : "ptz",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Relay_PTZStatusWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Relay_PTZStatusWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "PTZ status",
        "tags" : [ "Relay Webservice" ]
      }
    },
    "/api/relay/reboot" : {
      "post" : {
        "description" : "Reboot an NVR",
        "operationId" : "rebootNVR",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Relay_RebootNVRVWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Relay_RebootNVRVWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Reboot NVR",
        "tags" : [ "Relay Webservice" ]
      }
    },
    "/api/relay/unassignThirdPartyCamera" : {
      "post" : {
        "description" : "Unassign a third party camera from an NVR",
        "operationId" : "unassignThirdPartyCamera",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Relay_UnassignThirdPartyCameraWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Relay_UnassignThirdPartyCameraWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Unassign third party camera",
        "tags" : [ "Relay Webservice" ]
      }
    },
    "/api/report/getAuditFeed" : {
      "post" : {
        "description" : "Get the latest audit logs for organization",
        "operationId" : "getAuditFeed",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Report_GetAuditFeedWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Report_GetAuditFeedWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get audit feed",
        "tags" : [ "Report Webservice" ]
      }
    },
    "/api/report/getCountReport" : {
      "post" : {
        "deprecated" : true,
        "description" : "Use /getCountReportV2 instead",
        "operationId" : "getCountReport",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Report_GetCountReportWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Report_GetCountReportWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get count report",
        "tags" : [ "Report Webservice" ]
      }
    },
    "/api/report/getCountReportV2" : {
      "post" : {
        "description" : "Get the specified count reports",
        "operationId" : "getCountReportV2",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Report_GetCountReportV2WSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Report_GetCountReportWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get count report V2",
        "tags" : [ "Report Webservice" ]
      }
    },
    "/api/report/getCountReports" : {
      "post" : {
        "description" : "Get multiple specified count reports",
        "operationId" : "getCountReports",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Report_GetCountReportsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Report_GetCountReportsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get count reports",
        "tags" : [ "Report Webservice" ]
      }
    },
    "/api/report/getCountReportsForDevicesAtLocation" : {
      "post" : {
        "description" : "Get count reports by device for a specified location",
        "operationId" : "getCountReportsForDevicesAtLocation",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Report_GetCountReportsForDevicesAtLocationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Report_GetCountReportsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get count reports for devices at location",
        "tags" : [ "Report Webservice" ]
      }
    },
    "/api/report/getDiagnosticFeed" : {
      "post" : {
        "description" : "Get the latest diagnostic logs for organization",
        "operationId" : "getDiagnosticFeed",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Report_GetDiagnosticFeedWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Report_GetDiagnosticFeedWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get diagnostic feed",
        "tags" : [ "Report Webservice" ]
      }
    },
    "/api/report/getEnvoyDeliveries" : {
      "post" : {
        "description" : "Get a list of deliveries from Envoy to populate reporting logs",
        "operationId" : "getEnvoyDeliveries",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetEnvoyDeliveriesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetEnvoyDeliveriesWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get Envoy deliveries",
        "tags" : [ "Integrations Webservice", "Report Webservice" ]
      }
    },
    "/api/report/getEnvoyEmployees" : {
      "post" : {
        "description" : "Get a list of employees from Envoy",
        "operationId" : "getEnvoyEmployees",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetEnvoyEmployeesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetEnvoyEmployeesWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get Envoy employees",
        "tags" : [ "Integrations Webservice", "Report Webservice" ]
      }
    },
    "/api/report/getEnvoyLocations" : {
      "post" : {
        "description" : "Get list of Envoy locations",
        "operationId" : "getEnvoyLocations",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetEnvoyLocationsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetEnvoyLocationsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get Envoy locations",
        "tags" : [ "Integrations Webservice", "Report Webservice" ]
      }
    },
    "/api/report/getEnvoyVisitors" : {
      "post" : {
        "description" : "Get a list of visitors from Envoy to populate reporting logs",
        "operationId" : "getEnvoyVisitors",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetEnvoyVisitorsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetEnvoyVisitorsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get Envoy visitors",
        "tags" : [ "Integrations Webservice", "Report Webservice" ]
      }
    },
    "/api/report/getIntegrationDiagnosticEvents" : {
      "post" : {
        "description" : "Get the diagnostic logs of supported third-party devices for organization",
        "operationId" : "getIntegrationDiagnosticEvents",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetIntegrationDiagnosticEventsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetIntegrationDiagnosticEventsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get integration diagnostic events",
        "tags" : [ "Report Webservice" ]
      }
    },
    "/api/report/getLicensePlatesByDevice" : {
      "post" : {
        "description" : "Get license plate counting events for a specified camera",
        "operationId" : "getLicensePlatesByDevice",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Report_GetLicensePlatesByDeviceWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Report_GetLicensePlatesByDeviceWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get license plates by device",
        "tags" : [ "Report Webservice" ]
      }
    },
    "/api/report/getMostRecentPeopleCountEvents" : {
      "post" : {
        "description" : "Get the X most recent people counting events for a specified device",
        "operationId" : "getMostRecentPeopleCountEvents",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Report_GetMostRecentPeopleCountWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Report_GetMostRecentPeopleCountWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get most recent people count events",
        "tags" : [ "Report Webservice" ]
      }
    },
    "/api/report/getOccupancyCounts" : {
      "post" : {
        "description" : "Returns the estimated occupancy count for a specified room or area within a given time range. This endpoint allows you to monitor occupancy trends over time or retrieve a single count for a defined interval.\nImportant: An occupancy region must be defined in the Rhombus Console before using this endpoint.\nYou can optionally specify an interval (e.g., MINUTELY, QUARTERHOURLY, HOURLY ...) to retrieve occupancy counts broken down by sub-intervals between startTime and endTime.\nIf no interval is provided, a single occupancy count is returned for the entire duration between startTime and endTime.",
        "operationId" : "getOccupancyCounts",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Report_GetOccupancyCountsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Report_GetOccupancyCountsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get occupancy counts",
        "tags" : [ "Report Webservice" ]
      }
    },
    "/api/report/getProximityTagLocationsByDate" : {
      "post" : {
        "description" : "Get proximity tag locations by date",
        "operationId" : "getProximityTagLocationsByDate",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Report_GetProximityTagLocationsByDateWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Report_GetProximityTagLocationsByDateWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get proximity tag locations by date",
        "tags" : [ "Report Webservice" ]
      }
    },
    "/api/report/getRunningAverage" : {
      "post" : {
        "description" : "Get the running average for the specified count report if it is available, based on recent data",
        "operationId" : "getRunningAverage",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Report_GetRunningAverageWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Report_GetRunningAverageWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get running average",
        "tags" : [ "Report Webservice" ]
      }
    },
    "/api/report/getSummaryCountReport" : {
      "post" : {
        "description" : "Get a summary report for a camera, location, or organization",
        "operationId" : "getSummaryCountReport",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Report_GetSummaryCountReportWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Report_GetSummaryCountReportWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get summary count report",
        "tags" : [ "Report Webservice" ]
      }
    },
    "/api/report/getThresholdCrossingCountReport" : {
      "post" : {
        "description" : "Get threshold crossing count report",
        "operationId" : "getThresholdCrossingCountReport",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Report_GetThresholdCrossingCountReportWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Report_GetThresholdCrossingCountReportWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get threshold crossing count report",
        "tags" : [ "Report Webservice" ]
      }
    },
    "/api/report/getThresholdCrossingCounts" : {
      "post" : {
        "deprecated" : true,
        "description" : "Get the occupancy counts from threshold crossing for a group of cameras over a period of time",
        "operationId" : "getThresholdCrossingCounts",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Report_GetThresholdCrossingCountsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Report_GetThresholdCrossingCountsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get threshold crossing counts",
        "tags" : [ "Report Webservice" ]
      }
    },
    "/api/report/getThresholdCrossingEvents" : {
      "post" : {
        "description" : "Get the raw threshold crossing events for a group of cameras over a period of time",
        "operationId" : "getThresholdCrossingEvents",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Report_GetThresholdCrossingEventsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Report_GetThresholdCrossingEventsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get threshold crossing events",
        "tags" : [ "Report Webservice" ]
      }
    },
    "/api/report/getThresholdCrossingEventsForDevice" : {
      "post" : {
        "description" : "Get threshold crossing events for device",
        "operationId" : "getThresholdCrossingEventsForDevice",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Report_GetThresholdCrossingEventsForDeviceWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Report_GetThresholdCrossingEventsForDeviceWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get threshold crossing events for device",
        "tags" : [ "Report Webservice" ]
      }
    },
    "/api/report/getToastEventsTable" : {
      "post" : {
        "description" : "Get list of Toast orders to populate events table",
        "operationId" : "getToastEventsTable",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetToastEventsTableWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetToastEventsTableWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get Toast events table",
        "tags" : [ "Report Webservice" ]
      }
    },
    "/api/report/getToastEventsTableAllLocations" : {
      "post" : {
        "description" : "Get list of Toast orders from all restaurants to populate events table",
        "operationId" : "getToastEventsTableAllLocations",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Integration_GetToastEventsTableAllLocationsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Integration_GetToastEventsTableAllLocationsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get Toast events table all locations",
        "tags" : [ "Report Webservice" ]
      }
    },
    "/api/report/resetRunningAverage" : {
      "post" : {
        "description" : "Reset the running average for the specified count report",
        "operationId" : "resetRunningAverage",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Report_ResetRunningAverageWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Report_ResetRunningAverageWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Reset running average",
        "tags" : [ "Report Webservice" ]
      }
    },
    "/api/rules/createRule" : {
      "post" : {
        "description" : "Create a rule",
        "operationId" : "createRule",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Rules_CreateRuleWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Rules_CreateRuleWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create rule",
        "tags" : [ "Rules Webservice" ]
      }
    },
    "/api/rules/deleteRule" : {
      "post" : {
        "description" : "Delete a rule",
        "operationId" : "deleteRule",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Rules_DeleteRuleWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Rules_DeleteRuleWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete rule",
        "tags" : [ "Rules Webservice" ]
      }
    },
    "/api/rules/deleteRulePauseSetting" : {
      "post" : {
        "description" : "Delete a rule pause setting",
        "operationId" : "deleteRulePauseSetting",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Rules_DeleteRulePauseSettingWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Rules_DeleteRulePauseSettingWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete rule pause setting",
        "tags" : [ "Rules Webservice" ]
      }
    },
    "/api/rules/getRulePauseSettings" : {
      "post" : {
        "description" : "Get the current and planned rule pause details",
        "operationId" : "getRulePauseSettings",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Rules_GetRulePauseSettingsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Rules_GetRulePauseSettingsResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get rule pause settings",
        "tags" : [ "Rules Webservice" ]
      }
    },
    "/api/rules/getRulesFiltered" : {
      "post" : {
        "description" : "Get rules with Uuid and Type filtering",
        "operationId" : "getRulesFiltered",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Rules_records_GetRulesFilteredWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Rules_GetRulesForOrgWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get rules filtered",
        "tags" : [ "Rules Webservice" ]
      }
    },
    "/api/rules/getRulesForOrg" : {
      "post" : {
        "description" : "List rules for org",
        "operationId" : "getRulesForOrg",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Rules_GetRulesForOrgWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Rules_GetRulesForOrgWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get rules for org",
        "tags" : [ "Rules Webservice" ]
      }
    },
    "/api/rules/pauseRule" : {
      "post" : {
        "description" : "Pause rule",
        "operationId" : "pauseRule",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Rules_PauseRuleWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Rules_PauseRuleWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Pause rule",
        "tags" : [ "Rules Webservice" ]
      }
    },
    "/api/rules/updateRule" : {
      "post" : {
        "description" : "Update a rule",
        "operationId" : "updateRule",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Rules_UpdateRuleWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Rules_UpdateRuleWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update rule",
        "tags" : [ "Rules Webservice" ]
      }
    },
    "/api/rulesRecords/deleteRulesEventRecord" : {
      "post" : {
        "description" : "Delete a rules event historical record",
        "operationId" : "deleteRulesEventRecord",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Rules_records_DeleteRulesEventRecordWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Rules_records_DeleteRulesEventRecordWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete rules event record",
        "tags" : [ "Rules Records Webservice" ]
      }
    },
    "/api/rulesRecords/getLatestRulesEventRecords" : {
      "post" : {
        "description" : "Get N latest rules event historical records",
        "operationId" : "getLatestRulesEventRecords",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Rules_records_GetLatestRulesEventRecordsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Rules_records_GetLatestRulesEventRecordsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get latest rules event records",
        "tags" : [ "Rules Records Webservice" ]
      }
    },
    "/api/rulesRecords/getRulesEventRecords" : {
      "post" : {
        "description" : "Find rules event historical records",
        "operationId" : "getRulesEventRecords",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Rules_records_GetRulesEventRecordsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Rules_records_GetRulesEventRecordsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get rules event records",
        "tags" : [ "Rules Records Webservice" ]
      }
    },
    "/api/schedule/createAbsoluteSchedule" : {
      "post" : {
        "description" : "Create a absolute schedule",
        "operationId" : "createAbsoluteSchedule",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Schedule_CreateAbsoluteScheduleWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Schedule_CreateAbsoluteScheduleWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create absolute schedule",
        "tags" : [ "Schedule Webservice" ]
      }
    },
    "/api/schedule/createRelativeDateTimeIntervalsSchedule" : {
      "post" : {
        "description" : "Create a one-time relative datetime schedule",
        "operationId" : "createRelativeDateTimeIntervalsSchedule",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Schedule_CreateRelativeDateTimeIntervalsScheduleWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Schedule_CreateRelativeDateTimeIntervalsScheduleWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create relative datetime intervals schedule",
        "tags" : [ "Schedule Webservice" ]
      }
    },
    "/api/schedule/createRelativeSchedule" : {
      "post" : {
        "description" : "Create a realtime relative schedule",
        "operationId" : "createRelativeSchedule",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Schedule_CreateRelativeScheduleWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Schedule_CreateRelativeScheduleWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create relative schedule",
        "tags" : [ "Schedule Webservice" ]
      }
    },
    "/api/schedule/createWeeklySchedule" : {
      "post" : {
        "description" : "Create a weekly schedule",
        "operationId" : "createWeeklySchedule",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Schedule_CreateWeeklyScheduleWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Schedule_CreateWeeklyScheduleWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create weekly schedule",
        "tags" : [ "Schedule Webservice" ]
      }
    },
    "/api/schedule/deleteSchedule" : {
      "post" : {
        "description" : "Delete a schedule",
        "operationId" : "deleteScheduleV2",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Policy_DeleteScheduleWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Policy_DeleteScheduleWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete schedule",
        "tags" : [ "Schedule Webservice" ]
      }
    },
    "/api/schedule/findAbsoluteSchedule" : {
      "post" : {
        "description" : "Find an absolute schedule",
        "operationId" : "findAbsoluteSchedule",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Schedule_FindAbsoluteScheduleWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Schedule_FindAbsoluteScheduleWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Find absolute schedule",
        "tags" : [ "Schedule Webservice" ]
      }
    },
    "/api/schedule/findRelativeDateTimeIntervalsSchedule" : {
      "post" : {
        "description" : "Find a one-time relative datetime schedule",
        "operationId" : "findRelativeDateTimeIntervalsSchedule",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Schedule_FindRelativeDateTimeIntervalsScheduleWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Schedule_FindRelativeDateTimeIntervalsScheduleWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Find relative datetime intervals schedule",
        "tags" : [ "Schedule Webservice" ]
      }
    },
    "/api/schedule/findRelativeSchedule" : {
      "post" : {
        "description" : "Find a relative schedule",
        "operationId" : "findRelativeSchedule",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Schedule_FindRelativeScheduleWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Schedule_FindRelativeScheduleWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Find relative schedule",
        "tags" : [ "Schedule Webservice" ]
      }
    },
    "/api/schedule/findWeeklySchedule" : {
      "post" : {
        "description" : "Find a weekly schedule",
        "operationId" : "findWeeklySchedule",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Schedule_FindWeeklyScheduleWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Schedule_FindWeeklyScheduleWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Find weekly schedule",
        "tags" : [ "Schedule Webservice" ]
      }
    },
    "/api/schedule/getScheduleData" : {
      "post" : {
        "description" : "Get weekly schedules in org with usage data",
        "operationId" : "getScheduleData",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Schedule_GetSchedulesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Schedule_GetScheduleDataWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get schedule data",
        "tags" : [ "Schedule Webservice" ]
      }
    },
    "/api/schedule/getScheduleDataV2" : {
      "post" : {
        "description" : "Get weekly schedules in org with usage data",
        "operationId" : "getScheduleDataV2",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Schedule_GetScheduleDataV2WSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Schedule_GetScheduleDataV2WSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get schedule data V2",
        "tags" : [ "Schedule Webservice" ]
      }
    },
    "/api/schedule/getSchedules" : {
      "post" : {
        "description" : "Get schedules in org",
        "operationId" : "getSchedules",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Schedule_GetSchedulesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Schedule_GetSchedulesWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get schedules",
        "tags" : [ "Schedule Webservice" ]
      }
    },
    "/api/search/searchLicensePlates" : {
      "post" : {
        "deprecated" : true,
        "description" : "Fuzzy search for license plate sightings based on a partial or full plate number. Use /vehicle/getVehicleEvents instead.",
        "operationId" : "searchLicensePlates",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Search_SearchLicensePlatesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Search_SearchLicensePlatesWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Search license plates",
        "tags" : [ "Search Webservice" ]
      }
    },
    "/api/search/searchObjectsByColor" : {
      "post" : {
        "description" : "Search for objects by color",
        "operationId" : "searchObjectsByColor",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Search_SearchObjectsByColorWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Search_SearchObjectsByColorWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Search objects by color",
        "tags" : [ "Search Webservice" ]
      }
    },
    "/api/search/searchSimilarObjectEmbeddings" : {
      "post" : {
        "description" : "Search for similar objects by embedding",
        "operationId" : "searchSimilarObjectEmbeddings",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Search_SearchSimilarObjectEmbeddingsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Search_SearchSimilarObjectEmbeddingsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Search similar object embeddings",
        "tags" : [ "Search Webservice" ]
      }
    },
    "/api/search/searchSimilarObjectEmbeddingsByText" : {
      "post" : {
        "description" : "Search for similar objects by text",
        "operationId" : "searchSimilarObjectEmbeddingsByText",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Search_SearchSimilarObjectEmbeddingsByTextWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Search_SearchSimilarObjectEmbeddingsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Search similar object embeddings by text",
        "tags" : [ "Search Webservice" ]
      }
    },
    "/api/sensors/getFootageSensorSeekpointsForCamera" : {
      "post" : {
        "description" : "Retrieves sensor activity seekpoints for a specific camera within a given time range. Returns footage seekpoints that correspond to sensor events detected by the camera.",
        "operationId" : "getSensorFootageSensorSeekpointsForCamera",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Sensor_GetFootageSensorSeekpointsForCameraWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Sensor_GetFootageSensorSeekpointsForCameraWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get sensor activity seekpoints for camera",
        "tags" : [ "Sensor Webservice" ]
      }
    },
    "/api/sensors/getFootageSensorSeekpointsForLocation" : {
      "post" : {
        "description" : "Retrieves sensor activity seekpoints for a specific location within a given time range. Returns footage seekpoints that correspond to sensor events detected at the specified location.",
        "operationId" : "getFootageSensorSeekpointsForLocation",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Sensor_GetFootageSensorSeekpointsForLocationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Sensor_GetFootageSensorSeekpointsForLocationWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get sensor activity seekpoints for location",
        "tags" : [ "Sensor Webservice" ]
      }
    },
    "/api/sensors/getFootageSensorSeekpointsForSensor" : {
      "post" : {
        "description" : "Retrieves sensor activity seekpoints for a specific sensor within a given time range. Returns footage seekpoints that correspond to events detected by the specified sensor device.",
        "operationId" : "getFootageSensorSeekpointsForSensor",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Sensor_GetFootageSensorSeekpointsForSensorWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Sensor_GetFootageSensorSeekpointsForSensorWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get sensor activity seekpoints for sensor",
        "tags" : [ "Sensor Webservice" ]
      }
    },
    "/api/tvos/getTvOsConfig" : {
      "post" : {
        "description" : "Retrieves a specific tvOs configuration by UUID, returning the detailed settings and parameters for a particular Apple TV client.",
        "operationId" : "getTvOsConfig",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Tvos_GetTvOsConfigWsRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Tvos_GetTvOsConfigWsResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get specific tvOs config",
        "tags" : [ "TvOs Config Webservice" ]
      }
    },
    "/api/tvos/getTvOsConfigsForOrg" : {
      "post" : {
        "description" : "Retrieves all tvOs configurations for the organization, providing a list of all Apple TV client configurations and their settings.",
        "operationId" : "getTvOsConfigsForOrg",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Tvos_GetTvOsConfigsForOrgWsRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Tvos_GetTvOsConfigsForOrgWsResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get tvOs configs for organization",
        "tags" : [ "TvOs Config Webservice" ]
      }
    },
    "/api/tvos/updateTvOsConfig" : {
      "post" : {
        "description" : "Updates the configuration for a tvOs client, allowing modification of settings and parameters for Apple TV applications.",
        "operationId" : "updateTvOsConfig",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Tvos_UpdateTvOsConfigWsRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Tvos_UpdateTvOsConfigWsResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update tvOs config",
        "tags" : [ "TvOs Config Webservice" ]
      }
    },
    "/api/upload/badgeTemplate/images" : {
      "post" : {
        "description" : "Uploads images for badge templates with associated metadata, supporting JPEG and PNG formats with size validation and automatic S3 storage.",
        "operationId" : "uploadBadgeTemplateImages",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/FormDataMultiPart"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Upload badge template images",
        "tags" : [ "Upload Webservice" ]
      }
    },
    "/api/upload/bulkUploadUserProfilePhotos" : {
      "post" : {
        "description" : "Uploads multiple user profile pictures in a single request, supporting up to 100 photos with automatic user matching based on filename or metadata. Each photo must be <= 5MB.",
        "operationId" : "bulkUploadUserProfilePhotos",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/FormDataMultiPart"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Bulk upload user profile pictures",
        "tags" : [ "Upload Webservice" ]
      }
    },
    "/api/upload/companyLogo" : {
      "post" : {
        "description" : "Uploads a company logo image, supporting various formats including JPEG, PNG, BMP, GIF, WebP, and PSD, and updates the organization's logo URL.",
        "operationId" : "uploadCompanyLogo",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/FormDataMultiPart"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Upload company logo",
        "tags" : [ "Upload Webservice" ]
      }
    },
    "/api/upload/floorplan" : {
      "post" : {
        "description" : "Uploads a new floorplan image for a location, supporting multiple formats including JPEG, PNG, PDF, WebP, and SVG with automatic conversion to JPEG for SVG files.",
        "operationId" : "uploadNewFloorPlan",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/FormDataMultiPart"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Upload new floorplan for location",
        "tags" : [ "Upload Webservice" ]
      }
    },
    "/api/upload/keypadLogo" : {
      "post" : {
        "description" : "Uploads a logo image for keypad devices, generating a unique UUID and storing the image with proper metadata and organization association.",
        "operationId" : "uploadKeypadLogo",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/FormDataMultiPart"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Upload keypad logo",
        "tags" : [ "Upload Webservice" ]
      }
    },
    "/api/upload/rhombusKeyLogo" : {
      "post" : {
        "description" : "Uploads a logo image for Rhombus key devices, generating a unique UUID and storing the image with proper metadata and organization association.",
        "operationId" : "uploadRhombusKeyLogo",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/FormDataMultiPart"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Response"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Upload Rhombus key logo",
        "tags" : [ "Upload Webservice" ]
      }
    },
    "/api/user/assignEmailToUser" : {
      "post" : {
        "description" : "Assign a user to an email as long as the user is not currently assigned to one, with validation to prevent duplicate email associations.",
        "operationId" : "assignEmailToUser",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User_AssignEmailToUserWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User_AssignEmailToUserWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Assign email to user",
        "tags" : [ "User Webservice" ]
      }
    },
    "/api/user/createUser" : {
      "post" : {
        "description" : "Create a user for organization with specified name, email, and role permissions, supporting both client and partner user types with proper validation and audit logging.",
        "operationId" : "createUser",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User_CreateUserWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User_CreateUserWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create user for organization",
        "tags" : [ "User Webservice" ]
      }
    },
    "/api/user/deleteUser" : {
      "post" : {
        "description" : "Delete a user from the organization with proper validation to prevent deletion of the last super admin and current user.",
        "operationId" : "deleteUser",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User_DeleteUserWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User_DeleteUserWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete user",
        "tags" : [ "User Webservice" ]
      }
    },
    "/api/user/getPartnerUsersInOrg" : {
      "post" : {
        "description" : "Get list of all partners in organization with partner-specific user details and permissions.",
        "operationId" : "getPartnerUsersInOrg",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Partner_GetPartnerUsersInOrgWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Partner_GetPartnerUsersInOrgWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get partner users in organization",
        "tags" : [ "User Webservice" ]
      }
    },
    "/api/user/getUsersInOrg" : {
      "post" : {
        "description" : "Get list of all users in organization with complete user details, permissions, notification settings, and partner information.",
        "operationId" : "getUsersInOrg",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User_GetUsersInOrgWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User_GetUsersInOrgWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get users in organization",
        "tags" : [ "User Webservice" ]
      }
    },
    "/api/user/metadata/createUserMetadataFieldTemplate" : {
      "post" : {
        "description" : "Create a new template user metadata field that will be applicable to all users in the organization, allowing custom field definitions for user data.",
        "operationId" : "createUserMetadataFieldTemplate",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User_metadata_CreateUserMetadataFieldTemplateWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User_metadata_CreateUserMetadataFieldTemplateWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create user metadata field template",
        "tags" : [ "User Metadata Webservice" ]
      }
    },
    "/api/user/metadata/deleteUserMetadataField" : {
      "post" : {
        "description" : "Deletes the specified user's value stored for the specified template, removing the custom field value while preserving the template definition.",
        "operationId" : "deleteUserMetadataField",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User_metadata_DeleteUserMetadataFieldWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User_metadata_DeleteUserMetadataFieldWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete user metadata field",
        "tags" : [ "User Metadata Webservice" ]
      }
    },
    "/api/user/metadata/deleteUserMetadataFieldTemplate" : {
      "post" : {
        "description" : "Delete a template user metadata field. THIS WILL DELETE THE CUSTOM FIELD AND USER DATA FOR THIS FIELD, permanently removing the field definition and all associated user values.",
        "operationId" : "deleteUserMetadataFieldTemplate",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User_metadata_DeleteUserMetadataFieldTemplateWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User_metadata_DeleteUserMetadataFieldTemplateWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete user metadata field template",
        "tags" : [ "User Metadata Webservice" ]
      }
    },
    "/api/user/metadata/findUserMetadataFieldTemplates" : {
      "post" : {
        "description" : "Find all template user metadata fields for the organization, returning the complete list of custom field definitions available for users.",
        "operationId" : "findUserMetadataFieldTemplates",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User_metadata_FindUserMetadataFieldTemplatesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User_metadata_FindUserMetadataFieldTemplatesWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Find user metadata field templates",
        "tags" : [ "User Metadata Webservice" ]
      }
    },
    "/api/user/metadata/findUserMetadataFields" : {
      "post" : {
        "description" : "Returns the org template metadata fields and the queried users stored values for those fields if they've been set, providing complete metadata information for a specific user.",
        "operationId" : "findUserMetadataFields",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User_metadata_FindUserMetadataFieldsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User_metadata_FindUserMetadataFieldsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Find user metadata fields",
        "tags" : [ "User Metadata Webservice" ]
      }
    },
    "/api/user/metadata/saveUserMetadataFields" : {
      "post" : {
        "description" : "Saves custom metadata values for the user specified. Template IDs that do not map to an actual org metadata template are ignored and values for omitted Template IDs are left as-is.",
        "operationId" : "saveUserMetadataFields",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User_metadata_SaveUserMetadataFieldsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User_metadata_SaveUserMetadataFieldsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Save user metadata fields",
        "tags" : [ "User Metadata Webservice" ]
      }
    },
    "/api/user/metadata/updateUserMetadataFieldTemplate" : {
      "post" : {
        "description" : "Update a template user metadata field that will be applicable to all users, allowing modification of existing custom field definitions.",
        "operationId" : "updateUserMetadataFieldTemplate",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User_metadata_UpdateUserMetadataFieldTemplateWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User_metadata_UpdateUserMetadataFieldTemplateWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update user metadata field template",
        "tags" : [ "User Metadata Webservice" ]
      }
    },
    "/api/user/updatePartnerUser" : {
      "post" : {
        "description" : "Update a partner's details with partner-specific validation and audit logging.",
        "operationId" : "updatePartnerUser",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User_UpdatePartnerWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User_UpdatePartnerWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update partner user details",
        "tags" : [ "User Webservice" ]
      }
    },
    "/api/user/updatePartnerUserNotificationSettings" : {
      "post" : {
        "description" : "Update notification settings for partner user with partner-specific notification configurations.",
        "operationId" : "updatePartnerUserNotificationSettings",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User_UpdatePartnerUserNotificationSettingsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User_UpdatePartnerUserNotificationSettingsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update partner user notification settings",
        "tags" : [ "User Webservice" ]
      }
    },
    "/api/user/updateRhombusKeySettingsForUser" : {
      "post" : {
        "description" : "Update the RhombusKey mobile app settings for the user, including access permissions and app configuration.",
        "operationId" : "updateRhombusKeySettingsForUser",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User_UpdateRhombusKeySettingsForUserWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User_UpdateRhombusKeySettingsForUserWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update Rhombus key settings for user",
        "tags" : [ "User Webservice" ]
      }
    },
    "/api/user/updateUser" : {
      "post" : {
        "deprecated" : true,
        "description" : "Update a user's details, DEPRECATED[4/28/2025]: use updateUserSelective for better field-level control.",
        "operationId" : "updateUser",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User_UpdateUserWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User_UpdateUserWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update user details",
        "tags" : [ "User Webservice" ]
      }
    },
    "/api/user/updateUserNotificationSettings" : {
      "post" : {
        "description" : "Update notification settings for user with various notification channels and preferences.",
        "operationId" : "updateUserNotificationSettings",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User_UpdateUserNotificationSettingsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User_UpdateUserNotificationSettingsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update user notification settings",
        "tags" : [ "User Webservice" ]
      }
    },
    "/api/user/updateUserSelective" : {
      "post" : {
        "description" : "Selectively updates a user's details. Omitted fields are ignored but fields with null will unset a value, providing granular control over user updates.",
        "operationId" : "updateUserSelective",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User_UpdateUserSelectiveWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User_UpdateUserSelectiveWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update user details selectively",
        "tags" : [ "User Webservice" ]
      }
    },
    "/api/vehicle/addVehicleLabel" : {
      "post" : {
        "description" : "Add a label to a vehicle",
        "operationId" : "addVehicleLabel",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Vehicle_AddVehicleLabelWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Vehicle_AddVehicleLabelWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Add vehicle label",
        "tags" : [ "Vehicle Webservice" ]
      }
    },
    "/api/vehicle/associateEventsToVehicle" : {
      "post" : {
        "description" : "Associate vehicle events to a saved vehicle",
        "operationId" : "associateEventsToVehicle",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Vehicle_AssociateEventsToVehicleWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Vehicle_AssociateEventsToVehicleWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Associate events to vehicle",
        "tags" : [ "Vehicle Webservice" ]
      }
    },
    "/api/vehicle/deleteVehicle" : {
      "post" : {
        "description" : "Delete a saved vehicle",
        "operationId" : "deleteVehicle",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Vehicle_DeleteVehicleWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Vehicle_DeleteVehicleWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete vehicle",
        "tags" : [ "Vehicle Webservice" ]
      }
    },
    "/api/vehicle/getRecentVehicleEvents" : {
      "post" : {
        "deprecated" : true,
        "description" : "Get recent vehicle events for organization. Use /vehicle/getVehicleEvents instead.",
        "operationId" : "getRecentVehicleEvents",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Vehicle_GetRecentVehicleEventsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Vehicle_GetRecentVehicleEventsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get recent vehicle events",
        "tags" : [ "Vehicle Webservice" ]
      }
    },
    "/api/vehicle/getRecentVehicleEventsByLocation" : {
      "post" : {
        "deprecated" : true,
        "description" : "Get recent vehicle events for a location. Use /vehicle/getVehicleEvents instead.",
        "operationId" : "getRecentVehicleEventsByLocation",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Vehicle_GetRecentVehicleEventsByLocationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Vehicle_GetRecentVehicleEventsByLocationWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get recent vehicle events by location",
        "tags" : [ "Vehicle Webservice" ]
      }
    },
    "/api/vehicle/getRecentVehicleEventsForVehicle" : {
      "post" : {
        "deprecated" : true,
        "description" : "Get recent vehicle events for specified vehicle. Use /vehicle/getVehicleEvents instead.",
        "operationId" : "getRecentVehicleEventsForVehicle",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Vehicle_GetRecentVehicleEventsForVehicleWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Vehicle_GetRecentVehicleEventsForVehicleWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get recent vehicle events for vehicle",
        "tags" : [ "Vehicle Webservice" ]
      }
    },
    "/api/vehicle/getVehicleEvents" : {
      "post" : {
        "description" : "Get vehicle events with filters and additive queries",
        "operationId" : "getVehicleEvents",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Vehicle_GetVehicleEventsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Vehicle_GetVehicleEventsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get vehicle events",
        "tags" : [ "Vehicle Webservice" ]
      }
    },
    "/api/vehicle/getVehicleLabelsForOrg" : {
      "post" : {
        "description" : "Get all vehicle labels for organization",
        "operationId" : "getVehicleLabelsForOrg",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Vehicle_GetVehicleLabelsForOrgWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Vehicle_GetVehicleLabelsForOrgWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get vehicle labels for organization",
        "tags" : [ "Vehicle Webservice" ]
      }
    },
    "/api/vehicle/getVehicles" : {
      "post" : {
        "description" : "Get details of all saved vehicles in organization",
        "operationId" : "getVehicles",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Vehicle_GetVehiclesWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Vehicle_GetVehiclesWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get vehicles",
        "tags" : [ "Vehicle Webservice" ]
      }
    },
    "/api/vehicle/removeVehicleLabel" : {
      "post" : {
        "description" : "Remove a label to a vehicle",
        "operationId" : "removeVehicleLabel",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Vehicle_RemoveVehicleLabelWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Vehicle_RemoveVehicleLabelWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Remove vehicle label",
        "tags" : [ "Vehicle Webservice" ]
      }
    },
    "/api/vehicle/reportVehicleEvent" : {
      "post" : {
        "description" : "Report a mis-detected license plate event.  This sends the image/clip to Rhombus to better train AI models and removes the event",
        "operationId" : "reportVehicleEvent",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Vehicle_ReportVehicleEventRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Vehicle_ReportVehicleEventResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Report vehicle event",
        "tags" : [ "Vehicle Webservice" ]
      }
    },
    "/api/vehicle/saveVehicle" : {
      "post" : {
        "description" : "Name and save a vehicle based on license plate number",
        "operationId" : "saveVehicle",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Vehicle_SaveVehicleWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Vehicle_SaveVehicleWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Save vehicle",
        "tags" : [ "Vehicle Webservice" ]
      }
    },
    "/api/video/cancelSplice" : {
      "post" : {
        "deprecated" : true,
        "description" : "Use /cancelSpliceV2 instead",
        "operationId" : "cancelSplice",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Video_CancelSpliceWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Video_CancelSpliceWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Cancel splice",
        "tags" : [ "Video Webservice" ]
      }
    },
    "/api/video/cancelSpliceV2" : {
      "post" : {
        "description" : "Cancel a spliced clip request",
        "operationId" : "cancelSpliceV2",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Video_CancelSpliceV2WSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Video_CancelSpliceV2WSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Cancel splice V2",
        "tags" : [ "Video Webservice" ]
      }
    },
    "/api/video/createSharedTimelapseGroup" : {
      "post" : {
        "description" : "Share multiple timelapses in one link",
        "operationId" : "createSharedTimelapseGroup",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Video_CreateSharedTimelapseGroupWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Video_CreateSharedTimelapseGroupWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Create shared timelapse group",
        "tags" : [ "Video Webservice" ]
      }
    },
    "/api/video/deleteSharedTimelapseGroup" : {
      "post" : {
        "description" : "Delete a shared timelapse link",
        "operationId" : "deleteSharedTimelapseGroup",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Video_DeleteSharedTimelapseGroupWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Video_DeleteSharedTimelapseGroupWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete shared timelapse group",
        "tags" : [ "Video Webservice" ]
      }
    },
    "/api/video/deleteTimelapseClips" : {
      "post" : {
        "description" : "Delete a timelapse",
        "operationId" : "deleteTimelapseClips",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Video_DeleteTimelapseClipsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Video_DeleteTimelapseClipsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Delete timelapse clips",
        "tags" : [ "Video Webservice" ]
      }
    },
    "/api/video/generateTimelapseClip" : {
      "post" : {
        "description" : "Generate a timelapse",
        "operationId" : "generateTimelapseClip",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Video_GenerateTimelapseClipWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Video_GenerateTimelapseClipWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Generate timelapse clip",
        "tags" : [ "Video Webservice" ]
      }
    },
    "/api/video/getExactFrameUri" : {
      "post" : {
        "description" : "Generate URL to get an exact frame with optional crop from a camera",
        "operationId" : "getExactFrameUri",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Video_GetExactFrameUriWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Video_GetExactFrameUriWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get exact frame URI",
        "tags" : [ "Video Webservice" ]
      }
    },
    "/api/video/getMaxSpliceDuration" : {
      "post" : {
        "description" : "Get the max splice duration an organization can set",
        "operationId" : "getMaxSpliceDuration",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Video_GetMaxSpliceDurationWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Video_GetMaxSpliceDurationWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get max splice duration",
        "tags" : [ "Video Webservice" ]
      }
    },
    "/api/video/getSharedTimelapseGroups" : {
      "post" : {
        "description" : "Get details of all shared timelapse links for organization",
        "operationId" : "getSharedTimelapseGroups",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Video_GetSharedTimelapseGroupsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Video_GetSharedTimelapseGroupsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get shared timelapse groups",
        "tags" : [ "Video Webservice" ]
      }
    },
    "/api/video/getSplicedClipsInProgress" : {
      "post" : {
        "description" : "Get all spliced clips in progress",
        "operationId" : "getSplicedClipsInProgress",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Video_GetSplicedClipsInProgressWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Video_GetSplicedClipsInProgressWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get spliced clips in progress",
        "tags" : [ "Video Webservice" ]
      }
    },
    "/api/video/getTimelapseClips" : {
      "post" : {
        "description" : "Get all timelapse clips for organization",
        "operationId" : "getTimelapseClips",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Video_GetTimelapseClipsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Video_GetTimelapseClipsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get timelapse clips",
        "tags" : [ "Video Webservice" ]
      }
    },
    "/api/video/getTimelapseMetadata" : {
      "post" : {
        "description" : "Get information about earliest available timelapse images for cameras",
        "operationId" : "getTimelapseMetadata",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Video_GetTimelapseMetadataWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Video_GetTimelapseMetadataWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get timelapse metadata",
        "tags" : [ "Video Webservice" ]
      }
    },
    "/api/video/retrySplice" : {
      "post" : {
        "description" : "Send a request to retry splicing a clip",
        "operationId" : "retrySplice",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Video_RetrySpliceWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Video_RetrySpliceWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Retry splice",
        "tags" : [ "Video Webservice" ]
      }
    },
    "/api/video/shareTimelapseClips" : {
      "post" : {
        "deprecated" : true,
        "description" : "Use /CreateSharedTimelapseGroup instead",
        "operationId" : "shareTimelapseClips",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Video_ShareTimelapseClipsWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Video_ShareTimelapseClipsWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Share timelapse clips",
        "tags" : [ "Video Webservice" ]
      }
    },
    "/api/video/splice" : {
      "post" : {
        "deprecated" : true,
        "description" : "Use /spliceV3 instead",
        "operationId" : "splice",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Video_SpliceWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Video_SpliceWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Splice",
        "tags" : [ "Video Webservice" ]
      }
    },
    "/api/video/spliceFrame" : {
      "post" : {
        "description" : "Send a request to create a single image from a point in time",
        "operationId" : "spliceFrame",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Video_SpliceFrameWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Video_SpliceFrameWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Splice frame",
        "tags" : [ "Video Webservice" ]
      }
    },
    "/api/video/spliceV2" : {
      "post" : {
        "deprecated" : true,
        "description" : "Use /spliceV3 instead",
        "operationId" : "spliceV2",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Video_SpliceV2WSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Video_SpliceV2WSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Splice V2",
        "tags" : [ "Video Webservice" ]
      }
    },
    "/api/video/spliceV3" : {
      "post" : {
        "description" : "Send a request to create an arbitrary clip for multiple cameras",
        "operationId" : "spliceV3",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Video_SpliceV3WSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Video_SpliceV3WSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Splice V3",
        "tags" : [ "Video Webservice" ]
      }
    },
    "/api/video/updateSharedTimelapseGroup" : {
      "post" : {
        "description" : "Update title, description, or expiration on a shared timelapse link",
        "operationId" : "updateSharedTimelapseGroup",
        "parameters" : [ {
          "$ref" : "#/components/parameters/XAuthSchemeParam"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Video_UpdateSharedTimelapseGroupWSRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Video_UpdateSharedTimelapseGroupWSResponse"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Update shared timelapse group",
        "tags" : [ "Video Webservice" ]
      }
    }
  },
  "components" : {
    "parameters" : {
      "XAuthSchemeParam" : {
        "description" : "Authentication scheme indicator (\"api-token\").",
        "example" : "api-token",
        "in" : "header",
        "name" : "x-auth-scheme",
        "required" : true,
        "schema" : {
          "type" : "string",
          "default" : "api-token",
          "maxLength" : 9,
          "minLength" : 9
        }
      }
    },
    "schemas" : {
      "ACUDoorCatalogItem" : {
        "type" : "object",
        "allOf" : [ ],
        "nullable" : true,
        "properties" : {
          "durationMonths" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "productCode" : {
            "type" : "string",
            "nullable" : true
          },
          "productType" : {
            "type" : "string",
            "enum" : [ "DEVICE", "ALERT_MONITORING", "ACCESS_CONTROL", "LICENSE_USAGE", "UNKNOWN" ],
            "nullable" : true
          }
        }
      },
      "ACUDoorLicenseType" : {
        "type" : "object",
        "description" : "List of access controlled door licenses available for the client organization",
        "properties" : {
          "claimKeyUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "createdOn" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "doorUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "firstAssignedDate" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "licenseToUnassignEmailState" : {
            "type" : "string",
            "enum" : [ "INITIAL_EMAIL_SUCCEEDED", "INITIAL_EMAIL_FAILED", "FIFTEEN_DAY_WARNING_EMAIL_SUCCEEDED", "FIFTEEN_DAY_WARNING_EMAIL_FAILED", "FOURTY_EIGHT_HOUR_WARNING_EMAIL_SUCCEEDED", "FOURTY_EIGHT_HOUR_WARNING_EMAIL_FAILED", "UNKNOWN" ],
            "nullable" : true
          },
          "maxDeleteDate" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "priorClaimKeyUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "productCode" : {
            "type" : "string",
            "nullable" : true
          },
          "productType" : {
            "type" : "string",
            "enum" : [ "DEVICE", "ALERT_MONITORING", "ACCESS_CONTROL", "LICENSE_USAGE", "UNKNOWN" ],
            "nullable" : true
          },
          "state" : {
            "type" : "string",
            "enum" : [ "CLAIMED", "RENEWED", "PENDING_RETURN", "NOT_RENEWED", "EXPIRED", "PERMANENTLY_EXPIRED" ],
            "nullable" : true
          },
          "trial" : {
            "type" : "boolean",
            "nullable" : true
          },
          "updatedOn" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "AITShipmentInfoType" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "aitTrackingNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "carrierTrackingNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "depositorOrderNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "destinationAddress" : {
            "type" : "string",
            "nullable" : true
          },
          "isIngramDistributorShipment" : {
            "type" : "boolean",
            "nullable" : true
          },
          "shipmentDate" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "shippedItems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ShippedItemType"
            },
            "nullable" : true
          }
        }
      },
      "AMSirenSettingsType" : {
        "type" : "object",
        "properties" : {
          "clipUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "durationSeconds" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "playCount" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "AbsoluteSecondsIntervalType" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "b" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "e" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "AbsoluteSecondsScheduleType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "intervalList" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/AbsoluteSecondsIntervalType"
              },
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "mutable" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "oneTimeUse" : {
            "type" : "boolean",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "strategy" : {
            "type" : "string",
            "enum" : [ "WEEKLY_REPEATING_MINUTES", "ABSOLUTE_SECONDS", "REALTIME_RELATIVE_SECONDS", "RELATIVE_DATETIME_INTERVALS" ],
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "AccessControlAuthenticationResultEnumType" : {
        "type" : "string",
        "enum" : [ "ACCEPTED", "REJECTED", "ERROR", "NA" ]
      },
      "AccessControlAuthorizationResultEnumType" : {
        "type" : "string",
        "enum" : [ "ALLOWED", "DENIED", "DISABLED", "ERROR", "NA" ]
      },
      "AccessControlCredentialEnumType" : {
        "type" : "string",
        "enum" : [ "STANDARD_CSN", "RHOMBUS_SECURE_CSN", "RHOMBUS_SECURE_MOBILE", "PIN_CODE", "WIEGAND_H10301", "WIEGAND_H10304", "WIEGAND_D10202", "WIEGAND_64BIT_RAW" ]
      },
      "AccessControlCredentialType" : {
        "type" : "object",
        "description" : "Updated Wiegand credential details",
        "discriminator" : {
          "propertyName" : "type"
        },
        "oneOf" : [ {
          "$ref" : "#/components/schemas/StandardCsnType"
        }, {
          "$ref" : "#/components/schemas/RhombusSecureCsnType"
        }, {
          "$ref" : "#/components/schemas/RhombusSecureMobileType"
        }, {
          "$ref" : "#/components/schemas/PinCredential"
        }, {
          "$ref" : "#/components/schemas/WiegandH10301CredentialType"
        }, {
          "$ref" : "#/components/schemas/WiegandH10304Credential"
        }, {
          "$ref" : "#/components/schemas/WiegandD10202Credential"
        }, {
          "$ref" : "#/components/schemas/Wiegand64BitRawCredentialType"
        } ],
        "properties" : {
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "endDateEpochSecExclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "lastUsedAccessControlledDoorUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "lastUsedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "lastUsedLocationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "lowercaseHexValue" : {
            "type" : "string",
            "nullable" : true,
            "readOnly" : true
          },
          "managedCredUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "note" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "startDateEpochSecInclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/AccessControlCredentialEnumType"
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "value" : {
            "type" : "string",
            "nullable" : true
          },
          "workflowStatus" : {
            "$ref" : "#/components/schemas/AccessControlCredentialWorkflowStatusEnumType"
          }
        }
      },
      "AccessControlCredentialWorkflowStatusEnumType" : {
        "type" : "string",
        "enum" : [ "ACTIVE", "UNASSIGNED", "SUSPENDED", "REVOKED" ]
      },
      "AccessControlUnitBatteryStateChangeEventType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "batteryFound" : {
              "type" : "boolean",
              "nullable" : true
            },
            "batteryMa" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "batteryMv" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "onBackupPower" : {
              "type" : "boolean",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "correlationId" : {
            "type" : "string",
            "nullable" : true
          },
          "createdAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEventEnumType"
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "AccessControlUnitDoorFirstInStateEvent" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "doorAuthFirstInEventReference" : {
              "$ref" : "#/components/schemas/DoorFirstInStateChangeEventReference"
            },
            "doorScheduleFirstInEventReference" : {
              "$ref" : "#/components/schemas/DoorFirstInStateChangeEventReference"
            },
            "settingsUuid" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "correlationId" : {
            "type" : "string",
            "nullable" : true
          },
          "createdAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEventEnumType"
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "AccessControlUnitLocationLockdownStateEventType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "activatedLockdownPlans" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/LockdownPlanReference"
              },
              "nullable" : true
            },
            "activeLockdownPlans" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/LockdownPlanReference"
              },
              "nullable" : true
            },
            "deactivatedLockdownPlans" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/LockdownPlanReference"
              },
              "nullable" : true
            },
            "doorEventReferenceMap" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/DoorLockdownStateEventReference"
              },
              "nullable" : true
            },
            "followingTestPlan" : {
              "type" : "boolean",
              "nullable" : true
            },
            "locationLockdownStateChangedAtMillis" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "originator" : {
              "$ref" : "#/components/schemas/BaseEventOriginator"
            },
            "state" : {
              "$ref" : "#/components/schemas/LocationLockdownStateEnumType"
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "correlationId" : {
            "type" : "string",
            "nullable" : true
          },
          "createdAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEventEnumType"
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "AccessControlUnitTamperEventType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "componentCompositeUuid" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "source" : {
              "$ref" : "#/components/schemas/AccessControlUnitTamperSourceEnumType"
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "correlationId" : {
            "type" : "string",
            "nullable" : true
          },
          "createdAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEventEnumType"
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "AccessControlUnitTamperSourceEnumType" : {
        "type" : "string",
        "enum" : [ "PROX", "ACCEL", "SWITCH", "NA" ]
      },
      "AccessControlledDoorPolicyAlertType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "accessControlUnitUuid" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "accessControlledDoorUuid" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "componentUuid" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "initiatingUsername" : {
              "type" : "string",
              "nullable" : true
            },
            "originatorEntityName" : {
              "type" : "string",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "alertMonitoringThreatCaseUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "alertMonitoringVerified" : {
            "type" : "boolean",
            "nullable" : true
          },
          "clipLocationMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/MetaDataLocationType"
            },
            "nullable" : true
          },
          "clipLocationMapV2" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "delayedProcessing" : {
            "type" : "boolean",
            "nullable" : true
          },
          "deleted" : {
            "type" : "boolean",
            "nullable" : true
          },
          "durationSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "finalized" : {
            "type" : "boolean",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "notificationSent" : {
            "type" : "boolean",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "policyAlertTriggers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ActivityEnum"
            },
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "saved" : {
            "type" : "boolean",
            "nullable" : true
          },
          "shared" : {
            "type" : "boolean",
            "nullable" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "textDescription" : {
            "type" : "string",
            "description" : "Natural language description of the alert",
            "nullable" : true
          },
          "thumbnailLocation" : {
            "$ref" : "#/components/schemas/MetaDataLocationType"
          },
          "thumbnailLocationV2" : {
            "type" : "string",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "type" : "string",
            "enum" : [ "POLICY_ALERT_V2", "ACCESS_CONTROLLED_DOOR_POLICY_ALERT" ],
            "nullable" : true,
            "readOnly" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "AccessControlledDoorPolicyType" : {
        "type" : "object",
        "description" : "List of access controlled door policies using the schedule",
        "properties" : {
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "scheduledTriggers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AccessControlledDoorScheduledTriggerType"
            },
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "AccessControlledDoorScheduledTriggerType" : {
        "type" : "object",
        "properties" : {
          "schedule" : {
            "$ref" : "#/components/schemas/WeeklyRepeatingScheduleType"
          },
          "triggerSet" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ActivityEnum"
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "AccessControlledDoorShadow" : {
        "type" : "object",
        "properties" : {
          "authFirstIn" : {
            "$ref" : "#/components/schemas/FirstInShadow"
          },
          "componentCompositeUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "scheduleFirstIn" : {
            "$ref" : "#/components/schemas/FirstInShadow"
          },
          "state" : {
            "$ref" : "#/components/schemas/DoorStateShadow"
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentCompositeShadowEnum"
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "AccessControlledDoorStateEnumType" : {
        "type" : "string",
        "enum" : [ "UNLOCKED", "ACCESS_CONTROLLED" ]
      },
      "AccessControlledDoorType" : {
        "type" : "object",
        "properties" : {
          "ajarTimeSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "aperioDoorExtensionComponent" : {
            "$ref" : "#/components/schemas/ComponentReferenceType"
          },
          "aperioDoorId" : {
            "type" : "string",
            "nullable" : true
          },
          "aperioGatewayComponent" : {
            "$ref" : "#/components/schemas/ComponentReferenceType"
          },
          "associatedCameras" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "DeviceFacetUuid",
              "description" : "RUUID with optional appended facet information",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "associatedFaceDetectionCameras" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "DeviceFacetUuid",
              "description" : "RUUID with optional appended facet information",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "defaultState" : {
            "$ref" : "#/components/schemas/AccessControlledDoorStateEnumType"
          },
          "directionRadians" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "doorAuthFirstInStateOverride" : {
            "$ref" : "#/components/schemas/FirstInState"
          },
          "doorScheduleFirstInStateOverride" : {
            "$ref" : "#/components/schemas/FirstInState"
          },
          "doorStateOverride" : {
            "$ref" : "#/components/schemas/BaseDoorStateOverride"
          },
          "doorStateToScheduleUuidMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          },
          "dpiComponents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentReferenceType"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "floorNumber" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "forceAllReadersFirstInAuthRequiredLedFeedbackEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "forceAllReadersFirstInUnlockPendingLedFeedbackEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "forceAllReadersOtherReaderUnlockAudioFeedbackEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "forceAllReadersRemoteUnlockAudioFeedbackEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "forcedOpenEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "forcedOpenTimeSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "geofenceEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "geofenceRadius" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "nfcSecureDowngradeEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "privacyModeSupportEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "proximityUnlockSettings" : {
            "$ref" : "#/components/schemas/ProximityUnlockSettingsType"
          },
          "readerComponents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentReferenceType"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "relayComponents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentReferenceType"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "relockAfterOpenTimeMs" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "remoteUnlockEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "rexComponents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentReferenceType"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "sendExpiredIntentEvents" : {
            "type" : "boolean",
            "nullable" : true
          },
          "subType" : {
            "type" : "string",
            "enum" : [ "RHOMBUS", "APERIO" ],
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentCompositeEnumType"
          },
          "unlockTimeSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "unlockTimeSecRex" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "waveToUnlockSettings" : {
            "$ref" : "#/components/schemas/WaveToUnlockSettingsType"
          }
        }
      },
      "AccessControlledDoorType_Minimal" : {
        "type" : "object",
        "description" : "List of access controlled doors",
        "properties" : {
          "aperioDoorExtensionComponent" : {
            "$ref" : "#/components/schemas/ComponentReferenceType_Minimal"
          },
          "aperioDoorId" : {
            "type" : "string",
            "nullable" : true
          },
          "aperioGatewayComponent" : {
            "$ref" : "#/components/schemas/ComponentReferenceType_Minimal"
          },
          "directionRadians" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "doorAuthFirstInStateOverride" : {
            "$ref" : "#/components/schemas/FirstInState_Minimal"
          },
          "doorScheduleFirstInStateOverride" : {
            "$ref" : "#/components/schemas/FirstInState_Minimal"
          },
          "doorStateOverride" : {
            "$ref" : "#/components/schemas/BaseDoorStateOverride_Minimal"
          },
          "dpiComponents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentReferenceType_Minimal"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "floorNumber" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "geofenceEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "geofenceRadius" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "nfcSecureDowngradeEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "privacyModeSupportEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "proximityUnlockSettings" : {
            "$ref" : "#/components/schemas/ProximityUnlockSettingsType_Minimal"
          },
          "readerComponents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentReferenceType_Minimal"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "relayComponents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentReferenceType_Minimal"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "remoteUnlockEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "rexComponents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentReferenceType_Minimal"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "subType" : {
            "type" : "string",
            "enum" : [ "RHOMBUS", "APERIO" ],
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentCompositeEnumType_Minimal"
          },
          "unlockTimeSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "waveToUnlockSettings" : {
            "$ref" : "#/components/schemas/WaveToUnlockSettingsType_Minimal"
          }
        }
      },
      "Accesscontrol_BaseSendUserPresenceForCurrentUserWsResponse" : {
        "type" : "object",
        "discriminator" : {
          "propertyName" : "type"
        },
        "oneOf" : [ {
          "$ref" : "#/components/schemas/Accesscontrol_SendUserPresenceForCurrentUserSuccessWsResponse"
        }, {
          "$ref" : "#/components/schemas/Accesscontrol_SendUserPresenceForCurrentUserErrorWsResponse"
        } ],
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "ERROR", "SUCCESS" ],
            "nullable" : true,
            "readOnly" : true
          }
        }
      },
      "Accesscontrol_DeviceUnlockableAccessControlledDoorType" : {
        "type" : "object",
        "description" : "Represents an access controlled door that can be unlocked by a device.",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the access controlled door.",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_FindUnlockableAccessControlledDoorsByDeviceWSRequest" : {
        "type" : "object",
        "description" : "Request to find unlockable access controlled doors by device.",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_FindUnlockableAccessControlledDoorsByDeviceWSResponse" : {
        "type" : "object",
        "description" : "Response containing unlockable access controlled doors for a device.",
        "properties" : {
          "accessControlledDoors" : {
            "type" : "array",
            "description" : "List of unlockable access controlled doors",
            "items" : {
              "$ref" : "#/components/schemas/Accesscontrol_DeviceUnlockableAccessControlledDoorType"
            },
            "nullable" : true
          }
        }
      },
      "Accesscontrol_ForceRefreshAccessControlUnitConfigWSRequest" : {
        "type" : "object",
        "description" : "Request to force refresh an access control unit configuration.",
        "properties" : {
          "accessControlUnitUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_ForceRefreshAccessControlUnitConfigWSResponse" : {
        "type" : "object",
        "description" : "Response for force refresh access control unit configuration operation."
      },
      "Accesscontrol_GetMinimalAccessControlledDoorsByLocationForCurrentUserWSRequest" : {
        "type" : "object",
        "description" : "Request to get minimal access controlled doors by location for current user.",
        "properties" : {
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_GetMinimalAccessControlledDoorsByLocationForCurrentUserWSResponse" : {
        "type" : "object",
        "description" : "Response containing minimal access controlled doors by location for current user.",
        "properties" : {
          "accessControlledDoors" : {
            "type" : "array",
            "description" : "List of access controlled doors",
            "items" : {
              "$ref" : "#/components/schemas/AccessControlledDoorType_Minimal"
            },
            "nullable" : true
          },
          "accessGrants" : {
            "type" : "array",
            "description" : "List of user access grants",
            "items" : {
              "$ref" : "#/components/schemas/Accesscontrol_UserAccessGrant"
            },
            "nullable" : true
          },
          "accessRevocations" : {
            "type" : "array",
            "description" : "List of user access revocations",
            "items" : {
              "$ref" : "#/components/schemas/Accesscontrol_UserAccessRevocation"
            },
            "nullable" : true
          },
          "schedules" : {
            "type" : "array",
            "description" : "List of schedules",
            "items" : {
              "$ref" : "#/components/schemas/BaseSavedScheduleType_Minimal"
            },
            "nullable" : true
          }
        }
      },
      "Accesscontrol_SendUserPresenceForCurrentUserErrorWsResponse" : {
        "type" : "object",
        "allOf" : [ ],
        "description" : "Error response for send user presence for current user operation.",
        "nullable" : true,
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "ERROR", "SUCCESS" ],
            "nullable" : true,
            "readOnly" : true
          }
        }
      },
      "Accesscontrol_SendUserPresenceForCurrentUserSuccessWsResponse" : {
        "type" : "object",
        "allOf" : [ ],
        "description" : "Success response for send user presence for current user operation.",
        "nullable" : true,
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "ERROR", "SUCCESS" ],
            "nullable" : true,
            "readOnly" : true
          }
        }
      },
      "Accesscontrol_SendUserPresenceForCurrentUserWSRequest" : {
        "type" : "object",
        "description" : "Request to send user presence information for the current user.",
        "properties" : {
          "cmdVersion" : {
            "type" : "string",
            "format" : "byte",
            "nullable" : true
          },
          "credentialValue" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "destinations" : {
            "type" : "array",
            "description" : "List of destinations for user presence",
            "items" : {
              "$ref" : "#/components/schemas/Accesscontrol_SendUserPresenceForCurrentUserWSRequest_Destination"
            },
            "nullable" : true
          }
        }
      },
      "Accesscontrol_SendUserPresenceForCurrentUserWSRequest_Destination" : {
        "type" : "object",
        "description" : "Destination information for user presence.",
        "properties" : {
          "accessControlUnitUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "beaconIdentifier" : {
            "type" : "array",
            "description" : "Beacon identifier",
            "items" : {
              "type" : "string",
              "format" : "byte",
              "description" : "Beacon identifier",
              "nullable" : true
            },
            "nullable" : true
          },
          "readerUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "rssi" : {
            "type" : "string",
            "format" : "byte",
            "description" : "RSSI value of the reader as observed from the mobile device",
            "example" : "LTY1",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_UnlockAccessControlledDoorErrorWSResponse" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "errorType" : {
              "type" : "string",
              "description" : "Enumeration of possible errors when unlocking an access controlled door.",
              "enum" : [ "FAILED_SENDING_ACU_UNLOCK_REQUEST", "DOOR_NOT_CONFIGURED_WITH_LOCK" ],
              "nullable" : true
            }
          }
        } ],
        "description" : "Error response for unlock access controlled door operation.",
        "nullable" : true,
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "ERROR", "SUCCESS" ],
            "nullable" : true,
            "readOnly" : true
          }
        }
      },
      "Accesscontrol_UnlockAccessControlledDoorForCurrentUserErrorWSResponse" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "errorType" : {
              "type" : "string",
              "description" : "Enumeration of possible errors when unlocking an access controlled door for the current user.",
              "enum" : [ "INACTIVE_CREDENTIAL", "FAILED_SENDING_ACU_UNLOCK_REQUEST", "GEOFENCE_RESTRICTED", "DOOR_NOT_CONFIGURED_WITH_LOCK" ],
              "nullable" : true
            }
          }
        } ],
        "description" : "Error response for unlock access controlled door for current user operation.",
        "nullable" : true,
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "ERROR", "SUCCESS" ],
            "nullable" : true,
            "readOnly" : true
          }
        }
      },
      "Accesscontrol_UnlockAccessControlledDoorForCurrentUserSuccessWSResponse" : {
        "type" : "object",
        "allOf" : [ ],
        "description" : "Success response for unlock access controlled door for current user operation.",
        "nullable" : true,
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "ERROR", "SUCCESS" ],
            "nullable" : true,
            "readOnly" : true
          }
        }
      },
      "Accesscontrol_UnlockAccessControlledDoorForCurrentUserWSRequest" : {
        "type" : "object",
        "description" : "Request to unlock an access controlled door for the current user.",
        "properties" : {
          "accessControlledDoorUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "cmdVersion" : {
            "type" : "string",
            "format" : "byte",
            "nullable" : true
          },
          "credentialValue" : {
            "type" : "string",
            "description" : "Credential value for authentication",
            "example" : "credential123",
            "nullable" : true
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "description" : "Latitude of the mobile device for geofencing",
            "example" : 37.7749,
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "description" : "Longitude of the mobile device for geofencing",
            "example" : -122.4194,
            "nullable" : true
          },
          "requestTimeMillis" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Request time in milliseconds",
            "example" : 1640995200000,
            "nullable" : true
          }
        }
      },
      "Accesscontrol_UnlockAccessControlledDoorSuccessWSResponse" : {
        "type" : "object",
        "allOf" : [ ],
        "description" : "Success response for unlock access controlled door operation.",
        "nullable" : true,
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "ERROR", "SUCCESS" ],
            "nullable" : true,
            "readOnly" : true
          }
        }
      },
      "Accesscontrol_UnlockAccessControlledDoorWSRequest" : {
        "type" : "object",
        "description" : "Request to unlock an access controlled door.",
        "properties" : {
          "accessControlledDoorUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_UserAccessGrant" : {
        "type" : "object",
        "description" : "Access grant information for a user containing schedule and door access permissions.",
        "properties" : {
          "accessControlledDoorUuids" : {
            "type" : "array",
            "description" : "Set of access controlled door UUIDs that this grant provides access to.",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "scheduleUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_UserAccessRevocation" : {
        "type" : "object",
        "description" : "Access revocation information for a user containing schedule and door access restrictions.",
        "properties" : {
          "accessControlledDoorUuids" : {
            "type" : "array",
            "description" : "Set of access controlled door UUIDs that this revocation restricts access to.",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "scheduleUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_accessgrant_CreateAccessGrantWSRequest" : {
        "type" : "object",
        "description" : "Request to create a location access grant.",
        "properties" : {
          "accessGrant" : {
            "$ref" : "#/components/schemas/LocationAccessGrantType"
          }
        }
      },
      "Accesscontrol_accessgrant_CreateAccessGrantWSResponse" : {
        "type" : "object",
        "description" : "Response containing the created location access grant.",
        "properties" : {
          "accessGrant" : {
            "$ref" : "#/components/schemas/LocationAccessGrantType"
          }
        }
      },
      "Accesscontrol_accessgrant_DeleteLocationAccessGrantWSRequest" : {
        "type" : "object",
        "description" : "Request to delete a location access grant.",
        "properties" : {
          "accessGrantUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_accessgrant_DeleteLocationAccessGrantWSResponse" : {
        "type" : "object",
        "description" : "Response for location access grant deletion."
      },
      "Accesscontrol_accessgrant_FindLocationAccessGrantsByAccessControlledDoorWSRequest" : {
        "type" : "object",
        "description" : "Request to find location access grants by access controlled door.",
        "properties" : {
          "accessControlledDoorUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_accessgrant_FindLocationAccessGrantsByAccessControlledDoorWSResponse" : {
        "type" : "object",
        "description" : "Response containing location access grants for an access controlled door.",
        "properties" : {
          "accessGrants" : {
            "type" : "array",
            "description" : "List of location access grants",
            "items" : {
              "$ref" : "#/components/schemas/LocationAccessGrantType"
            },
            "nullable" : true
          }
        }
      },
      "Accesscontrol_accessgrant_FindLocationAccessGrantsByDoorLabelWSRequest" : {
        "type" : "object",
        "description" : "Request to find location access grants by door label.",
        "properties" : {
          "doorLabelId" : {
            "type" : "string",
            "description" : "Door label identifier",
            "example" : "door_label_123",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_accessgrant_FindLocationAccessGrantsByDoorLabelWSResponse" : {
        "type" : "object",
        "description" : "Response containing location access grants for a door label.",
        "properties" : {
          "accessGrants" : {
            "type" : "array",
            "description" : "List of location access grants",
            "items" : {
              "$ref" : "#/components/schemas/LocationAccessGrantType"
            },
            "nullable" : true
          }
        }
      },
      "Accesscontrol_accessgrant_FindLocationAccessGrantsByGroupWSRequest" : {
        "type" : "object",
        "description" : "Request to find location access grants by group.",
        "properties" : {
          "groupUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_accessgrant_FindLocationAccessGrantsByGroupWSResponse" : {
        "type" : "object",
        "description" : "Response containing location access grants for a group.",
        "properties" : {
          "accessGrants" : {
            "type" : "array",
            "description" : "List of location access grants",
            "items" : {
              "$ref" : "#/components/schemas/LocationAccessGrantType"
            },
            "nullable" : true
          }
        }
      },
      "Accesscontrol_accessgrant_FindLocationAccessGrantsByLocationAndUserWSRequest" : {
        "type" : "object",
        "description" : "Request to find location access grants by location and user.",
        "properties" : {
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_accessgrant_FindLocationAccessGrantsByLocationAndUserWSResponse" : {
        "type" : "object",
        "description" : "Response containing location access grants for a location and user.",
        "properties" : {
          "accessGrants" : {
            "type" : "array",
            "description" : "List of location access grants",
            "items" : {
              "$ref" : "#/components/schemas/LocationAccessGrantType"
            },
            "nullable" : true
          }
        }
      },
      "Accesscontrol_accessgrant_FindLocationAccessGrantsByLocationWSRequest" : {
        "type" : "object",
        "description" : "Request to find location access grants by location.",
        "properties" : {
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_accessgrant_FindLocationAccessGrantsByLocationWSResponse" : {
        "type" : "object",
        "description" : "Response containing location access grants for a location.",
        "properties" : {
          "accessGrants" : {
            "type" : "array",
            "description" : "List of location access grants",
            "items" : {
              "$ref" : "#/components/schemas/LocationAccessGrantType"
            },
            "nullable" : true
          }
        }
      },
      "Accesscontrol_accessgrant_FindLocationAccessGrantsByOrgWSRequest" : {
        "type" : "object",
        "description" : "Request to find location access grants by organization."
      },
      "Accesscontrol_accessgrant_FindLocationAccessGrantsByOrgWSResponse" : {
        "type" : "object",
        "description" : "Response containing location access grants for an organization.",
        "properties" : {
          "accessGrants" : {
            "type" : "array",
            "description" : "List of location access grants",
            "items" : {
              "$ref" : "#/components/schemas/LocationAccessGrantType"
            },
            "nullable" : true
          }
        }
      },
      "Accesscontrol_accessgrant_FindLocationAccessGrantsByUserWSRequest" : {
        "type" : "object",
        "description" : "Request to find location access grants by user.",
        "properties" : {
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_accessgrant_FindLocationAccessGrantsByUserWSResponse" : {
        "type" : "object",
        "description" : "Response containing location access grants for a user.",
        "properties" : {
          "accessGrants" : {
            "type" : "array",
            "description" : "List of location access grants",
            "items" : {
              "$ref" : "#/components/schemas/LocationAccessGrantType"
            },
            "nullable" : true
          }
        }
      },
      "Accesscontrol_accessgrant_GetLocationAccessGrantWSRequest" : {
        "type" : "object",
        "description" : "Request to get a location access grant by UUID.",
        "properties" : {
          "accessGrantUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_accessgrant_GetLocationAccessGrantWSResponse" : {
        "type" : "object",
        "description" : "Response containing a location access grant.",
        "properties" : {
          "accessGrant" : {
            "$ref" : "#/components/schemas/LocationAccessGrantType"
          }
        }
      },
      "Accesscontrol_accessgrant_GetLocationsByAccessGrantForCurrentUserWSRequest" : {
        "type" : "object",
        "description" : "Request to get locations by access grant for current user."
      },
      "Accesscontrol_accessgrant_GetLocationsByAccessGrantForCurrentUserWSResponse" : {
        "type" : "object",
        "description" : "Response for getting locations by access grant for current user.",
        "properties" : {
          "locationLockdownStates" : {
            "type" : "array",
            "description" : "List of location lockdown states",
            "items" : {
              "$ref" : "#/components/schemas/LocationLockdownStateType"
            },
            "nullable" : true
          },
          "locations" : {
            "type" : "array",
            "description" : "List of locations accessible to the current user",
            "items" : {
              "$ref" : "#/components/schemas/LocationType"
            },
            "nullable" : true
          },
          "lockdownPlans" : {
            "type" : "array",
            "description" : "List of lockdown plans for the locations",
            "items" : {
              "$ref" : "#/components/schemas/BaseLockdownPlanType"
            },
            "nullable" : true
          }
        }
      },
      "Accesscontrol_accessgrant_GetRhombusKeyLocationLockdownDetailsForCurrentUserWSRequest" : {
        "type" : "object",
        "description" : "Request to get Rhombus Key location lockdown details for current user.",
        "properties" : {
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_accessgrant_GetRhombusKeyLocationLockdownDetailsForCurrentUserWSResponse" : {
        "type" : "object",
        "description" : "Response for getting Rhombus Key location lockdown details for current user.",
        "properties" : {
          "locationLockdownState" : {
            "$ref" : "#/components/schemas/LocationLockdownStateType"
          }
        }
      },
      "Accesscontrol_accessgrant_UpdateAccessGrantWSRequest" : {
        "type" : "object",
        "description" : "Request to update a location access grant.",
        "properties" : {
          "accessGrant" : {
            "$ref" : "#/components/schemas/LocationAccessGrantType"
          }
        }
      },
      "Accesscontrol_accessgrant_UpdateAccessGrantWSResponse" : {
        "type" : "object",
        "description" : "Response for location access grant update.",
        "properties" : {
          "accessGrant" : {
            "$ref" : "#/components/schemas/LocationAccessGrantType"
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "expiredACDLicensesDoorUuids" : {
            "type" : "array",
            "description" : "Set of expired ACD license door UUIDs",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "unassignedACDLicensesDoorUuids" : {
            "type" : "array",
            "description" : "Set of unassigned ACD license door UUIDs",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "Accesscontrol_accessrevocation_CreateAccessRevocationWSRequest" : {
        "type" : "object",
        "description" : "Request to create a location access revocation.",
        "properties" : {
          "accessRevocation" : {
            "$ref" : "#/components/schemas/LocationAccessRevocationType"
          }
        }
      },
      "Accesscontrol_accessrevocation_CreateAccessRevocationWSResponse" : {
        "type" : "object",
        "description" : "Response for location access revocation creation.",
        "properties" : {
          "accessRevocation" : {
            "$ref" : "#/components/schemas/LocationAccessRevocationType"
          }
        }
      },
      "Accesscontrol_accessrevocation_DeleteLocationAccessRevocationWSRequest" : {
        "type" : "object",
        "description" : "Request to delete a location access revocation.",
        "properties" : {
          "accessRevocationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_accessrevocation_DeleteLocationAccessRevocationWSResponse" : {
        "type" : "object",
        "description" : "Response for location access revocation deletion."
      },
      "Accesscontrol_accessrevocation_FindLocationAccessRevocationsByAccessControlledDoorWSRequest" : {
        "type" : "object",
        "description" : "Request to find location access revocations by access controlled door.",
        "properties" : {
          "accessControlledDoorUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_accessrevocation_FindLocationAccessRevocationsByAccessControlledDoorWSResponse" : {
        "type" : "object",
        "description" : "Response containing location access revocations for an access controlled door.",
        "properties" : {
          "accessRevocations" : {
            "type" : "array",
            "description" : "List of location access revocations",
            "items" : {
              "$ref" : "#/components/schemas/LocationAccessRevocationType"
            },
            "nullable" : true
          }
        }
      },
      "Accesscontrol_accessrevocation_FindLocationAccessRevocationsByDoorLabelWSRequest" : {
        "type" : "object",
        "description" : "Request to find location access revocations by door label.",
        "properties" : {
          "doorLabelId" : {
            "type" : "string",
            "description" : "Door label identifier",
            "example" : "door_label_123",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_accessrevocation_FindLocationAccessRevocationsByDoorLabelWSResponse" : {
        "type" : "object",
        "description" : "Response containing location access revocations for a door label.",
        "properties" : {
          "accessRevocations" : {
            "type" : "array",
            "description" : "List of location access revocations",
            "items" : {
              "$ref" : "#/components/schemas/LocationAccessRevocationType"
            },
            "nullable" : true
          }
        }
      },
      "Accesscontrol_accessrevocation_FindLocationAccessRevocationsByGroupWSRequest" : {
        "type" : "object",
        "description" : "Request to find location access revocations by group.",
        "properties" : {
          "groupUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_accessrevocation_FindLocationAccessRevocationsByGroupWSResponse" : {
        "type" : "object",
        "description" : "Response containing location access revocations for a group.",
        "properties" : {
          "accessRevocations" : {
            "type" : "array",
            "description" : "List of location access revocations",
            "items" : {
              "$ref" : "#/components/schemas/LocationAccessRevocationType"
            },
            "nullable" : true
          }
        }
      },
      "Accesscontrol_accessrevocation_FindLocationAccessRevocationsByOrgWSRequest" : {
        "type" : "object",
        "description" : "Request to find location access revocations by organization."
      },
      "Accesscontrol_accessrevocation_FindLocationAccessRevocationsByOrgWSResponse" : {
        "type" : "object",
        "description" : "Response containing location access revocations for an organization.",
        "properties" : {
          "accessRevocations" : {
            "type" : "array",
            "description" : "List of location access revocations",
            "items" : {
              "$ref" : "#/components/schemas/LocationAccessRevocationType"
            },
            "nullable" : true
          }
        }
      },
      "Accesscontrol_accessrevocation_FindLocationAccessRevocationsByUserWSRequest" : {
        "type" : "object",
        "description" : "Request to find location access revocations by user.",
        "properties" : {
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_accessrevocation_FindLocationAccessRevocationsByUserWSResponse" : {
        "type" : "object",
        "description" : "Response containing location access revocations for a user.",
        "properties" : {
          "accessRevocations" : {
            "type" : "array",
            "description" : "List of location access revocations",
            "items" : {
              "$ref" : "#/components/schemas/LocationAccessRevocationType"
            },
            "nullable" : true
          }
        }
      },
      "Accesscontrol_accessrevocation_GetLocationAccessRevocationWSRequest" : {
        "type" : "object",
        "description" : "Request to get a location access revocation by UUID.",
        "properties" : {
          "accessRevocationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_accessrevocation_GetLocationAccessRevocationWSResponse" : {
        "type" : "object",
        "description" : "Response containing a location access revocation.",
        "properties" : {
          "accessRevocation" : {
            "$ref" : "#/components/schemas/LocationAccessRevocationType"
          }
        }
      },
      "Accesscontrol_accessrevocation_UpdateAccessRevocationWSRequest" : {
        "type" : "object",
        "description" : "Request to update a location access revocation.",
        "properties" : {
          "accessRevocation" : {
            "$ref" : "#/components/schemas/LocationAccessRevocationType"
          }
        }
      },
      "Accesscontrol_accessrevocation_UpdateAccessRevocationWSResponse" : {
        "type" : "object",
        "description" : "Response for location access revocation update operation.",
        "properties" : {
          "accessRevocation" : {
            "$ref" : "#/components/schemas/LocationAccessRevocationType"
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "expiredACDLicensesDoorUuids" : {
            "type" : "array",
            "description" : "Set of expired ACD licenses door UUIDs",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "unassignedACDLicensesDoorUuids" : {
            "type" : "array",
            "description" : "Set of unassigned ACD licenses door UUIDs",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "Accesscontrol_badgetemplate_CreateBadgeTemplateWSRequest" : {
        "type" : "object",
        "description" : "Request to create a new badge template.",
        "properties" : {
          "template" : {
            "$ref" : "#/components/schemas/BadgeTemplate"
          }
        }
      },
      "Accesscontrol_badgetemplate_CreateBadgeTemplateWSResponse" : {
        "type" : "object",
        "description" : "Response containing the created badge template.",
        "properties" : {
          "template" : {
            "$ref" : "#/components/schemas/BadgeTemplate"
          }
        }
      },
      "Accesscontrol_badgetemplate_DeleteBadgeTemplateImageWSRequest" : {
        "type" : "object",
        "description" : "Request to delete a specific badge template image by UUID.",
        "properties" : {
          "imageUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_badgetemplate_DeleteBadgeTemplateImageWSResponse" : {
        "type" : "object",
        "description" : "Response containing the deleted badge template image metadata.",
        "properties" : {
          "image" : {
            "$ref" : "#/components/schemas/BadgeTemplateImage"
          }
        }
      },
      "Accesscontrol_badgetemplate_DeleteBadgeTemplateWSRequest" : {
        "type" : "object",
        "description" : "Request to delete a specific badge template by UUID.",
        "properties" : {
          "templateUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_badgetemplate_DeleteBadgeTemplateWSResponse" : {
        "type" : "object",
        "description" : "Response containing the deleted badge template.",
        "properties" : {
          "template" : {
            "$ref" : "#/components/schemas/BadgeTemplate"
          }
        }
      },
      "Accesscontrol_badgetemplate_FindBadgeTemplateImagesWSRequest" : {
        "type" : "object",
        "description" : "Request to search for badge template images with pagination support.",
        "properties" : {
          "lastEvaluatedKey" : {
            "type" : "string",
            "description" : "Should be null on first request and populated on subsequent requests if provided in the response to retrieve the next page",
            "nullable" : true
          },
          "maxPageSize" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Max number of results to return. Response's lastEvaluatedKey will be null if no additional results are available",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_badgetemplate_FindBadgeTemplateImagesWSResponse" : {
        "type" : "object",
        "description" : "Response containing a list of badge template images with pagination information.",
        "properties" : {
          "images" : {
            "type" : "array",
            "description" : "List of badge template images found in the search.",
            "items" : {
              "$ref" : "#/components/schemas/BadgeTemplateImage"
            },
            "nullable" : true
          },
          "lastEvaluatedKey" : {
            "type" : "string",
            "description" : "If a max page size was specified and there are additional results that can be retrievedthis will be non-null and should be supplied in the next request to retrieve the next page of results.",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_badgetemplate_FindBadgeTemplatesWSRequest" : {
        "type" : "object",
        "description" : "Request to search for badge templates with pagination support.",
        "properties" : {
          "lastEvaluatedKey" : {
            "type" : "string",
            "description" : "Should be null on first request and populated on subsequent requests if provided in the response to retrieve the next page",
            "nullable" : true
          },
          "maxPageSize" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Max number of results to return. Response's lastEvaluatedKey will be null if no additional results are available",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_badgetemplate_FindBadgeTemplatesWSResponse" : {
        "type" : "object",
        "description" : "Response containing a list of badge templates with pagination information.",
        "properties" : {
          "lastEvaluatedKey" : {
            "type" : "string",
            "description" : "If a max page size was specified and there are additional results that can be retrievedthis will be non-null and should be supplied in the next request to retrieve the next page of results.",
            "nullable" : true
          },
          "templates" : {
            "type" : "array",
            "description" : "List of badge templates found in the search.",
            "items" : {
              "$ref" : "#/components/schemas/BadgeTemplate"
            },
            "nullable" : true
          }
        }
      },
      "Accesscontrol_badgetemplate_GetBadgeTemplateImageWSRequest" : {
        "type" : "object",
        "description" : "Request to retrieve metadata for a specific badge template image by UUID.",
        "properties" : {
          "imageUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_badgetemplate_GetBadgeTemplateImageWSResponse" : {
        "type" : "object",
        "description" : "Response containing the requested badge template image metadata.",
        "properties" : {
          "image" : {
            "$ref" : "#/components/schemas/BadgeTemplateImage"
          }
        }
      },
      "Accesscontrol_badgetemplate_GetBadgeTemplateWSRequest" : {
        "type" : "object",
        "description" : "Request to retrieve a specific badge template by UUID.",
        "properties" : {
          "templateUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_badgetemplate_GetBadgeTemplateWSResponse" : {
        "type" : "object",
        "description" : "Response containing the requested badge template.",
        "properties" : {
          "template" : {
            "$ref" : "#/components/schemas/BadgeTemplate"
          }
        }
      },
      "Accesscontrol_badgetemplate_UpdateBadgeTemplateImageWSRequest" : {
        "type" : "object",
        "description" : "Request to update metadata for a badge template image with selective field updates.",
        "properties" : {
          "selectiveUpdate" : {
            "$ref" : "#/components/schemas/BadgeTemplateImageSelectiveUpdate"
          }
        }
      },
      "Accesscontrol_badgetemplate_UpdateBadgeTemplateImageWSResponse" : {
        "type" : "object",
        "description" : "Response containing the updated badge template image metadata.",
        "properties" : {
          "image" : {
            "$ref" : "#/components/schemas/BadgeTemplateImage"
          }
        }
      },
      "Accesscontrol_badgetemplate_UpdateBadgeTemplateWSRequest" : {
        "type" : "object",
        "description" : "Request to update an existing badge template with selective field updates.",
        "properties" : {
          "selectiveUpdate" : {
            "$ref" : "#/components/schemas/BadgeTemplateSelectiveUpdate"
          }
        }
      },
      "Accesscontrol_badgetemplate_UpdateBadgeTemplateWSResponse" : {
        "type" : "object",
        "description" : "Response containing the updated badge template.",
        "properties" : {
          "template" : {
            "$ref" : "#/components/schemas/BadgeTemplate"
          }
        }
      },
      "Accesscontrol_credentials_AssignAccessControlCredentialWSRequest" : {
        "type" : "object",
        "description" : "Request to assign an access control credential to a user.",
        "properties" : {
          "credentialHexValue" : {
            "type" : "string",
            "description" : "Hex value of the credential",
            "example" : "1234567890ABCDEF",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_AssignAccessControlCredentialWSResponse" : {
        "type" : "object",
        "description" : "Response for assigning an access control credential to a user.",
        "properties" : {
          "credential" : {
            "$ref" : "#/components/schemas/AccessControlCredentialType"
          }
        }
      },
      "Accesscontrol_credentials_BaseProvisionMobileAccessControlCredentialForCurrentUserWSResponse" : {
        "type" : "object",
        "discriminator" : {
          "mapping" : {
            "ERROR" : "#/components/schemas/Accesscontrol_credentials_ProvisionMobileAccessControlCredentialForCurrentUserErrorWSResponse",
            "SUCCESS" : "#/components/schemas/Accesscontrol_credentials_ProvisionMobileAccessControlCredentialForCurrentUserSuccessWSResponse"
          },
          "propertyName" : "type"
        },
        "oneOf" : [ {
          "$ref" : "#/components/schemas/Accesscontrol_credentials_ProvisionMobileAccessControlCredentialForCurrentUserSuccessWSResponse"
        }, {
          "$ref" : "#/components/schemas/Accesscontrol_credentials_ProvisionMobileAccessControlCredentialForCurrentUserErrorWSResponse"
        } ],
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "ERROR", "SUCCESS" ],
            "nullable" : true,
            "readOnly" : true
          }
        }
      },
      "Accesscontrol_credentials_BaseUnlockAccessControlledDoorForCurrentUserWSResponse" : {
        "type" : "object",
        "discriminator" : {
          "propertyName" : "type"
        },
        "oneOf" : [ {
          "$ref" : "#/components/schemas/Accesscontrol_UnlockAccessControlledDoorForCurrentUserSuccessWSResponse"
        }, {
          "$ref" : "#/components/schemas/Accesscontrol_UnlockAccessControlledDoorForCurrentUserErrorWSResponse"
        } ],
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "ERROR", "SUCCESS" ],
            "nullable" : true,
            "readOnly" : true
          }
        }
      },
      "Accesscontrol_credentials_BaseUnlockAccessControlledDoorWSResponse" : {
        "type" : "object",
        "discriminator" : {
          "propertyName" : "type"
        },
        "oneOf" : [ {
          "$ref" : "#/components/schemas/Accesscontrol_UnlockAccessControlledDoorSuccessWSResponse"
        }, {
          "$ref" : "#/components/schemas/Accesscontrol_UnlockAccessControlledDoorErrorWSResponse"
        } ],
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "ERROR", "SUCCESS" ],
            "nullable" : true,
            "readOnly" : true
          }
        }
      },
      "Accesscontrol_credentials_BulkProvisionPinCredentialsWSRequest" : {
        "type" : "object",
        "description" : "Request to bulk provision PIN credentials for multiple users.",
        "properties" : {
          "endDateEpochSecExclusive" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "End date in epoch seconds when these credentials expire. Credentials never expire if this value is left null.",
            "example" : 1672531200,
            "minimum" : 0,
            "nullable" : true
          },
          "notifyUsers" : {
            "type" : "boolean",
            "description" : "Whether to notify users about their new PIN credentials.",
            "example" : true,
            "nullable" : true
          },
          "pinLength" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 5,
            "description" : "Length of PINs to be generated. Accepts length between 4 and 16. Default length is 5.",
            "example" : 5,
            "maximum" : 16,
            "minimum" : 4,
            "nullable" : true
          },
          "startDateEpochSecInclusive" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start date in epoch seconds when these credentials become active. Credentials activate immediately if this value is left null.",
            "example" : 1640995200,
            "minimum" : 0,
            "nullable" : true
          },
          "userUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "example" : "59OcXLkFShWyHK3O2Fh2Ag",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_BulkProvisionPinCredentialsWSResponse" : {
        "type" : "object",
        "description" : "Response containing the bulk provisioned PIN credentials and any failed users.",
        "properties" : {
          "credentials" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AccessControlCredentialType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "failedUsers" : {
            "type" : "array",
            "description" : "List of user UUIDs for which PIN credential creation failed",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_BulkRotatePinCredentialsWSRequest" : {
        "type" : "object",
        "description" : "Request to bulk rotate PIN credentials for multiple users.",
        "properties" : {
          "credentialUuids" : {
            "type" : "array",
            "description" : "Set of credential uuids designated for PIN rotation.",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "endDateEpochSecExclusive" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "End date in epoch seconds when these credentials expire. Credentials never expire if this value is left null.",
            "example" : 1672531200,
            "minimum" : 0,
            "nullable" : true
          },
          "notifyUsers" : {
            "type" : "boolean",
            "description" : "Whether to notify users about their rotated PIN credentials.",
            "example" : true,
            "nullable" : true
          },
          "pinLength" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 5,
            "description" : "Length of PIN to be generated. Accepts length between 4 and 16. Default is 5.",
            "example" : 5,
            "maximum" : 16,
            "minimum" : 4,
            "nullable" : true
          },
          "startDateEpochSecInclusive" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start date in epoch seconds when these credentials become active. Credentials activate immediately if this value is left null.",
            "example" : 1640995200,
            "minimum" : 0,
            "nullable" : true
          }
        },
        "required" : [ "credentialUuids" ]
      },
      "Accesscontrol_credentials_BulkRotatePinCredentialsWSResponse" : {
        "type" : "object",
        "description" : "Response containing the bulk rotated PIN credentials and any failed credentials.",
        "properties" : {
          "credentials" : {
            "type" : "array",
            "description" : "List of successfully rotated PIN credentials",
            "items" : {
              "$ref" : "#/components/schemas/AccessControlCredentialType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_CreateAccessControlCredentialByHexValueAndTypeWSRequest" : {
        "type" : "object",
        "description" : "Request to create an access control credential by hex value and type.",
        "properties" : {
          "credentialType" : {
            "$ref" : "#/components/schemas/AccessControlCredentialEnumType"
          },
          "endDateEpochSecExclusive" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "End date in epoch seconds (exclusive)",
            "example" : 1672531200,
            "nullable" : true
          },
          "hexValue" : {
            "type" : "string",
            "description" : "Hex value of the credential",
            "example" : "1234567890ABCDEF",
            "nullable" : true
          },
          "littleEndian" : {
            "type" : "boolean",
            "description" : "Only needed when creating Wiegand credentials",
            "nullable" : true
          },
          "numValueBits" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Only needed when creating Wiegand credentials",
            "nullable" : true
          },
          "startDateEpochSecInclusive" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start date in epoch seconds (inclusive)",
            "example" : 1640995200,
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_CreateAccessControlCredentialByHexValueAndTypeWSResponse" : {
        "type" : "object",
        "description" : "Response for access control credential creation by hex value and type.",
        "properties" : {
          "credential" : {
            "$ref" : "#/components/schemas/AccessControlCredentialType"
          }
        }
      },
      "Accesscontrol_credentials_CreateAppleWalletPassWSRequest" : {
        "type" : "object",
        "description" : "Request to create an Apple Wallet pass.",
        "properties" : {
          "credUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_CreateAppleWalletPassWSResponse" : {
        "type" : "object",
        "description" : "Response containing Apple Wallet pass data as a streaming output."
      },
      "Accesscontrol_credentials_CreatePinCredentialWSRequest" : {
        "type" : "object",
        "description" : "Request to create a PIN credential for a user.",
        "properties" : {
          "endDateEpochSecExclusive" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "End date in epoch seconds when this credential expires. Credentials never expire if this value is left null.",
            "example" : 1672531200,
            "minimum" : 0,
            "nullable" : true
          },
          "notifyUser" : {
            "type" : "boolean",
            "description" : "Whether to notify the user about the new PIN credential.",
            "example" : true,
            "nullable" : true
          },
          "pinCode" : {
            "type" : "string",
            "description" : "PIN code (4 to 16 digits), will be generated automatically if one is not provided.",
            "example" : "12345",
            "maxLength" : 16,
            "minLength" : 4,
            "nullable" : true
          },
          "pinLength" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 5,
            "description" : "Length of PIN to be generated if a PIN code is not provided. Accepts length between 4 and 16. Default length is 5.",
            "example" : 5,
            "maximum" : 16,
            "minimum" : 4,
            "nullable" : true
          },
          "startDateEpochSecInclusive" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start date in epoch seconds when this credential becomes active. Credentials activate immediately if this value is left null.",
            "example" : 1640995200,
            "minimum" : 0,
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        },
        "required" : [ "userUuid" ]
      },
      "Accesscontrol_credentials_CreatePinCredentialWSResponse" : {
        "type" : "object",
        "description" : "Response containing the created PIN credential details.",
        "properties" : {
          "credential" : {
            "$ref" : "#/components/schemas/AccessControlCredentialType"
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_CreateRhombusSecureCsnCredentialWSRequest" : {
        "type" : "object",
        "description" : "Request to create a Rhombus Secure CSN credential.",
        "properties" : {
          "credentialValue" : {
            "type" : "string",
            "description" : "Credential value",
            "example" : "123456789",
            "nullable" : true
          },
          "endDateEpochSecExclusive" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "End date in epoch seconds (exclusive)",
            "example" : 1672531200,
            "nullable" : true
          },
          "startDateEpochSecInclusive" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start date in epoch seconds (inclusive)",
            "example" : 1640995200,
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_CreateRhombusSecureCsnCredentialWSResponse" : {
        "type" : "object",
        "description" : "Response for Rhombus Secure CSN credential creation.",
        "properties" : {
          "credential" : {
            "$ref" : "#/components/schemas/AccessControlCredentialType"
          }
        }
      },
      "Accesscontrol_credentials_CreateStandardCsnCredentialWSRequest" : {
        "type" : "object",
        "description" : "Request to create a standard CSN credential.",
        "properties" : {
          "credentialValue" : {
            "type" : "string",
            "description" : "Credential value",
            "example" : "123456789",
            "nullable" : true
          },
          "endDateEpochSecExclusive" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "End date in epoch seconds (exclusive)",
            "example" : 1672531200,
            "nullable" : true
          },
          "startDateEpochSecInclusive" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start date in epoch seconds (inclusive)",
            "example" : 1640995200,
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_CreateStandardCsnCredentialWSResponse" : {
        "type" : "object",
        "description" : "Response for standard CSN credential creation.",
        "properties" : {
          "credential" : {
            "$ref" : "#/components/schemas/AccessControlCredentialType"
          }
        }
      },
      "Accesscontrol_credentials_CreateWiegand64BitRawCredentialWSRequest" : {
        "type" : "object",
        "description" : "Request to create a 64-bit raw Wiegand credential.",
        "properties" : {
          "endDateEpochSecExclusive" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "End date in epoch seconds (exclusive)",
            "example" : 1672531200,
            "nullable" : true
          },
          "startDateEpochSecInclusive" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start date in epoch seconds (inclusive)",
            "example" : 1640995200,
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "value" : {
            "type" : "string",
            "description" : "Credential value",
            "example" : "1234567890123456",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_CreateWiegand64BitRawCredentialWSResponse" : {
        "type" : "object",
        "description" : "Response for 64-bit raw Wiegand credential creation.",
        "properties" : {
          "credential" : {
            "$ref" : "#/components/schemas/AccessControlCredentialType"
          }
        }
      },
      "Accesscontrol_credentials_CreateWiegandCredentialWSRequest" : {
        "type" : "object",
        "description" : "Request to create a Wiegand credential.",
        "properties" : {
          "cardNumber" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Card number for the credential",
            "example" : 456,
            "nullable" : true
          },
          "companyId" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Company ID used by HID CORP 1000",
            "example" : 1000,
            "nullable" : true
          },
          "endDateEpochSecExclusive" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "End date in epoch seconds (exclusive)",
            "example" : 1672531200,
            "nullable" : true
          },
          "facilityCode" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Facility code for the credential",
            "example" : 123,
            "nullable" : true
          },
          "siteCode" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Site code for the credential",
            "example" : 789,
            "nullable" : true
          },
          "startDateEpochSecInclusive" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start date in epoch seconds (inclusive)",
            "example" : 1640995200,
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "value" : {
            "type" : "string",
            "description" : "Final credential value used in RAW formats",
            "example" : "123456789",
            "nullable" : true
          },
          "wiegandFormat" : {
            "$ref" : "#/components/schemas/WiegandFormatEnumType"
          }
        }
      },
      "Accesscontrol_credentials_CreateWiegandCredentialWSResponse" : {
        "type" : "object",
        "description" : "Response for Wiegand credential creation.",
        "properties" : {
          "credential" : {
            "$ref" : "#/components/schemas/AccessControlCredentialType"
          }
        }
      },
      "Accesscontrol_credentials_CreateWiegandD10202CredentialWSRequest" : {
        "type" : "object",
        "description" : "Request to create a D10202 Wiegand credential.",
        "properties" : {
          "cardNumber" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Card number",
            "example" : 456789,
            "nullable" : true
          },
          "endDateEpochSecExclusive" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "End date in epoch seconds (exclusive)",
            "example" : 1672531200,
            "nullable" : true
          },
          "facilityCode" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Facility code",
            "example" : 123,
            "nullable" : true
          },
          "startDateEpochSecInclusive" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start date in epoch seconds (inclusive)",
            "example" : 1640995200,
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_CreateWiegandD10202CredentialWSResponse" : {
        "type" : "object",
        "description" : "Response for D10202 Wiegand credential creation.",
        "properties" : {
          "credential" : {
            "$ref" : "#/components/schemas/AccessControlCredentialType"
          }
        }
      },
      "Accesscontrol_credentials_CreateWiegandH10301CredentialWSRequest" : {
        "type" : "object",
        "description" : "Request to create a H10301 Wiegand credential.",
        "properties" : {
          "cardNumber" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Card number",
            "example" : 456789,
            "nullable" : true
          },
          "endDateEpochSecExclusive" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "End date in epoch seconds (exclusive)",
            "example" : 1672531200,
            "nullable" : true
          },
          "facilityCode" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Facility code",
            "example" : 123,
            "nullable" : true
          },
          "startDateEpochSecInclusive" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start date in epoch seconds (inclusive)",
            "example" : 1640995200,
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_CreateWiegandH10301CredentialWSResponse" : {
        "type" : "object",
        "description" : "Response for H10301 Wiegand credential creation.",
        "properties" : {
          "credential" : {
            "$ref" : "#/components/schemas/AccessControlCredentialType"
          }
        }
      },
      "Accesscontrol_credentials_CreateWiegandH10304CredentialWSRequest" : {
        "type" : "object",
        "description" : "Request to create a H10304 Wiegand credential.",
        "properties" : {
          "cardNumber" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Card number",
            "example" : 456789,
            "nullable" : true
          },
          "endDateEpochSecExclusive" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "End date in epoch seconds (exclusive)",
            "example" : 1672531200,
            "nullable" : true
          },
          "facilityCode" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Facility code",
            "example" : 123,
            "nullable" : true
          },
          "startDateEpochSecInclusive" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start date in epoch seconds (inclusive)",
            "example" : 1640995200,
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_CreateWiegandH10304CredentialWSResponse" : {
        "type" : "object",
        "description" : "Response for H10304 Wiegand credential creation.",
        "properties" : {
          "credential" : {
            "$ref" : "#/components/schemas/AccessControlCredentialType"
          }
        }
      },
      "Accesscontrol_credentials_DeleteAccessControlCredentialWSRequest" : {
        "type" : "object",
        "description" : "Request to delete an access control credential.",
        "properties" : {
          "credentialUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_DeleteAccessControlCredentialWSResponse" : {
        "type" : "object",
        "description" : "Response indicating successful deletion of an access control credential."
      },
      "Accesscontrol_credentials_DeletePinCredentialWSRequest" : {
        "type" : "object",
        "description" : "Request to delete a PIN credential permanently from the system.",
        "properties" : {
          "credentialUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        },
        "required" : [ "credentialUuid" ]
      },
      "Accesscontrol_credentials_DeletePinCredentialWSResponse" : {
        "type" : "object",
        "description" : "Response indicating successful deletion of a PIN credential.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_DeleteUnassignedAccessControlCredentialWSRequest" : {
        "type" : "object",
        "description" : "Request to delete an unassigned access control credential.",
        "properties" : {
          "credentialHexValue" : {
            "type" : "string",
            "description" : "Hex value of the credential to delete",
            "example" : "1234567890ABCDEF",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_DeleteUnassignedAccessControlCredentialWSResponse" : {
        "type" : "object",
        "description" : "Response indicating successful deletion of an unassigned access control credential."
      },
      "Accesscontrol_credentials_FindAccessControlCredentialByOrgWSRequest" : {
        "type" : "object",
        "description" : "Request to find access control credentials by organization.",
        "properties" : {
          "filter" : {
            "$ref" : "#/components/schemas/CredentialQueryFilter"
          }
        }
      },
      "Accesscontrol_credentials_FindAccessControlCredentialByOrgWSResponse" : {
        "type" : "object",
        "description" : "Response containing access control credentials found for an organization.",
        "properties" : {
          "credentials" : {
            "type" : "array",
            "description" : "List of access control credentials",
            "items" : {
              "$ref" : "#/components/schemas/AccessControlCredentialType"
            },
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_FindAccessControlCredentialByUserWSRequest" : {
        "type" : "object",
        "description" : "Request to find access control credentials by user.",
        "properties" : {
          "filter" : {
            "$ref" : "#/components/schemas/CredentialQueryFilter"
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_FindAccessControlCredentialByUserWSResponse" : {
        "type" : "object",
        "description" : "Response containing access control credentials found for a specific user.",
        "properties" : {
          "credentials" : {
            "type" : "array",
            "description" : "List of access control credentials",
            "items" : {
              "$ref" : "#/components/schemas/AccessControlCredentialType"
            },
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_FindAccessControlCredentialByUsersWSRequest" : {
        "type" : "object",
        "description" : "Request to find access control credentials by multiple users.",
        "properties" : {
          "filter" : {
            "$ref" : "#/components/schemas/CredentialQueryFilter"
          },
          "userUuids" : {
            "type" : "array",
            "description" : "Set of user UUIDs to search for",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "Accesscontrol_credentials_FindAccessControlCredentialByUsersWSResponse" : {
        "type" : "object",
        "description" : "Response containing access control credentials mapped by user UUIDs.",
        "properties" : {
          "userCredentialsMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "description" : "Map of user UUIDs to their associated access control credentials",
              "items" : {
                "$ref" : "#/components/schemas/AccessControlCredentialType"
              },
              "nullable" : true
            },
            "description" : "Map of user UUIDs to their associated access control credentials",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_FindCredentialHistoryByCredentialHexValueWSRequest" : {
        "type" : "object",
        "description" : "Request to find credential history by credential hex value.",
        "properties" : {
          "credentialHexValue" : {
            "type" : "string",
            "description" : "Hex value of the credential to search for",
            "example" : "1234567890ABCDEF",
            "nullable" : true
          },
          "filter" : {
            "$ref" : "#/components/schemas/CredentialQueryFilter"
          }
        }
      },
      "Accesscontrol_credentials_FindCredentialHistoryByCredentialHexValueWSResponse" : {
        "type" : "object",
        "description" : "Response containing credential history found by credential hex value.",
        "properties" : {
          "credentials" : {
            "type" : "array",
            "description" : "List of credential history records",
            "items" : {
              "$ref" : "#/components/schemas/AccessControlCredentialType"
            },
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_FindCredentialHistoryByCredentialValueWSRequest" : {
        "type" : "object",
        "description" : "Request to find credential history by credential value.",
        "properties" : {
          "credentialType" : {
            "$ref" : "#/components/schemas/AccessControlCredentialEnumType"
          },
          "credentialValue" : {
            "type" : "string",
            "description" : "Credential value to search for",
            "example" : "123456789",
            "nullable" : true
          },
          "filter" : {
            "$ref" : "#/components/schemas/CredentialQueryFilter"
          }
        }
      },
      "Accesscontrol_credentials_FindCredentialHistoryByCredentialValueWSResponse" : {
        "type" : "object",
        "description" : "Response containing credential history found by credential value.",
        "properties" : {
          "credentials" : {
            "type" : "array",
            "description" : "List of credential history records",
            "items" : {
              "$ref" : "#/components/schemas/AccessControlCredentialType"
            },
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_FindCredentialHistoryByUserWSRequest" : {
        "type" : "object",
        "description" : "Request to find credential history by user.",
        "properties" : {
          "filter" : {
            "$ref" : "#/components/schemas/CredentialQueryFilter"
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_FindCredentialHistoryByUserWSResponse" : {
        "type" : "object",
        "description" : "Response containing credential history found for a specific user.",
        "properties" : {
          "credentials" : {
            "type" : "array",
            "description" : "List of credential history records",
            "items" : {
              "$ref" : "#/components/schemas/AccessControlCredentialType"
            },
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_FindCredentialHistoryWSRequest" : {
        "type" : "object",
        "description" : "Request to find credential history.",
        "properties" : {
          "filter" : {
            "$ref" : "#/components/schemas/CredentialQueryFilter"
          }
        }
      },
      "Accesscontrol_credentials_FindCredentialHistoryWSResponse" : {
        "type" : "object",
        "description" : "Response containing credential history.",
        "properties" : {
          "credentials" : {
            "type" : "array",
            "description" : "List of credential history records",
            "items" : {
              "$ref" : "#/components/schemas/AccessControlCredentialType"
            },
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_FindPinCredentialsByOrgWSRequest" : {
        "type" : "object",
        "description" : "Request to find PIN credentials in the organization with optional filtering.",
        "properties" : {
          "filter" : {
            "$ref" : "#/components/schemas/CredentialQueryFilter"
          }
        }
      },
      "Accesscontrol_credentials_FindPinCredentialsByOrgWSResponse" : {
        "type" : "object",
        "description" : "Response containing a list of PIN credentials found in the organization.",
        "properties" : {
          "credentials" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AccessControlCredentialType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_FindRhombusSecureMobileCredentialsForCurrentUserWSRequest" : {
        "type" : "object",
        "description" : "Request to find Rhombus Secure mobile credentials for current user."
      },
      "Accesscontrol_credentials_FindRhombusSecureMobileCredentialsForCurrentUserWSResponse" : {
        "type" : "object",
        "description" : "Response for finding Rhombus Secure mobile credentials for current user.",
        "properties" : {
          "credentials" : {
            "type" : "array",
            "description" : "List of Rhombus Secure mobile credentials",
            "items" : {
              "$ref" : "#/components/schemas/AccessControlCredentialType"
            },
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_GetAvailablePinCodeWSRequest" : {
        "type" : "object",
        "description" : "Request to get an available PIN code for creating a PIN credential.",
        "properties" : {
          "pinLength" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Length of PIN to be generated.",
            "example" : 5,
            "nullable" : true
          }
        },
        "required" : [ "pinLength" ]
      },
      "Accesscontrol_credentials_GetAvailablePinCodeWSResponse" : {
        "type" : "object",
        "description" : "Response containing an available PIN code for credential creation.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "pinCode" : {
            "type" : "string",
            "description" : "The generated PIN code",
            "example" : "12345",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_GetPinCredentialDetailsWSRequest" : {
        "type" : "object",
        "description" : "Request to get detailed information about a PIN credential including sensitive data.",
        "properties" : {
          "credentialUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        },
        "required" : [ "credentialUuid" ]
      },
      "Accesscontrol_credentials_GetPinCredentialDetailsWSResponse" : {
        "type" : "object",
        "description" : "Response containing detailed PIN credential information including sensitive data.",
        "properties" : {
          "credential" : {
            "$ref" : "#/components/schemas/AccessControlCredentialType"
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_GetRhombusSecureCsnCredentialDetailsWSRequest" : {
        "type" : "object",
        "description" : "Request to get Rhombus Secure CSN credential details.",
        "properties" : {
          "credentialUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_GetRhombusSecureCsnCredentialDetailsWSResponse" : {
        "type" : "object",
        "description" : "Response containing Rhombus Secure CSN credential details.",
        "properties" : {
          "credential" : {
            "$ref" : "#/components/schemas/AccessControlCredentialType"
          }
        }
      },
      "Accesscontrol_credentials_GetRhombusSecureMobileAppStateStatsForOrgWSRequest" : {
        "type" : "object",
        "description" : "Request to get Rhombus Secure mobile app state stats for organization."
      },
      "Accesscontrol_credentials_GetRhombusSecureMobileAppStateStatsForOrgWSResponse" : {
        "type" : "object",
        "description" : "Response for getting Rhombus Secure mobile app state stats for organization.",
        "properties" : {
          "appStateStats" : {
            "$ref" : "#/components/schemas/RhombusSecureMobileAppStateStats"
          }
        }
      },
      "Accesscontrol_credentials_GetStandardCsnCredentialDetailsWSRequest" : {
        "type" : "object",
        "description" : "Request to get standard CSN credential details.",
        "properties" : {
          "credentialUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_GetStandardCsnCredentialDetailsWSResponse" : {
        "type" : "object",
        "description" : "Response containing standard CSN credential details.",
        "properties" : {
          "credential" : {
            "$ref" : "#/components/schemas/AccessControlCredentialType"
          }
        }
      },
      "Accesscontrol_credentials_ProvisionMobileAccessControlCredentialForCurrentUserErrorWSResponse" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "errorType" : {
              "type" : "string",
              "description" : "Enumeration of possible errors when provisioning mobile access control credentials.",
              "enum" : [ "USER_HAS_MAX_ALLOWED_CREDENTIALS" ],
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "ERROR", "SUCCESS" ],
            "nullable" : true,
            "readOnly" : true
          }
        }
      },
      "Accesscontrol_credentials_ProvisionMobileAccessControlCredentialForCurrentUserSuccessWSResponse" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "credential" : {
              "$ref" : "#/components/schemas/AccessControlCredentialType"
            },
            "encodedPrivateKey" : {
              "type" : "string",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "ERROR", "SUCCESS" ],
            "nullable" : true,
            "readOnly" : true
          }
        }
      },
      "Accesscontrol_credentials_ProvisionMobileAccessControlCredentialForCurrentUserWSRequest" : {
        "type" : "object",
        "description" : "Request to provision mobile access control credential for current user.",
        "properties" : {
          "appName" : {
            "type" : "string",
            "description" : "Name of the mobile app",
            "example" : "Rhombus Key",
            "nullable" : true
          },
          "appNotifications" : {
            "$ref" : "#/components/schemas/RhombusSecureMobileFeature"
          },
          "appOS" : {
            "type" : "string",
            "description" : "Operating system of the mobile device",
            "example" : "iOS 15.0",
            "nullable" : true
          },
          "appVersion" : {
            "type" : "string",
            "description" : "Version of the mobile app",
            "example" : "1.2.3",
            "nullable" : true
          },
          "clientType" : {
            "$ref" : "#/components/schemas/MobileTokenOSEnum"
          },
          "deviceModel" : {
            "type" : "string",
            "description" : "Model of the mobile device",
            "example" : "iPhone 13",
            "nullable" : true
          },
          "installationId" : {
            "type" : "string",
            "description" : "Installation ID of the mobile app",
            "example" : "abc123def456",
            "nullable" : true
          },
          "tapToUnlock" : {
            "$ref" : "#/components/schemas/RhombusSecureMobileFeature"
          },
          "waveToUnlock" : {
            "$ref" : "#/components/schemas/RhombusSecureMobileFeature"
          }
        }
      },
      "Accesscontrol_credentials_RevokeAccessControlCredentialWSRequest" : {
        "type" : "object",
        "description" : "Request to revoke an access control credential.",
        "properties" : {
          "credentialUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_RevokeAccessControlCredentialWSResponse" : {
        "type" : "object",
        "description" : "Response containing the revoked access control credential details.",
        "properties" : {
          "credential" : {
            "$ref" : "#/components/schemas/AccessControlCredentialType"
          }
        }
      },
      "Accesscontrol_credentials_RevokePinCredentialWSRequest" : {
        "type" : "object",
        "description" : "Request to revoke a PIN credential, making it inactive.",
        "properties" : {
          "credentialUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        },
        "required" : [ "credentialUuid" ]
      },
      "Accesscontrol_credentials_RevokePinCredentialWSResponse" : {
        "type" : "object",
        "description" : "Response indicating successful revocation of a PIN credential.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_RevokeRhombusSecureMobileCredentialForCurrentUserWSRequest" : {
        "type" : "object",
        "description" : "Request to revoke Rhombus Secure mobile credential for current user.",
        "properties" : {
          "credentialUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_RevokeRhombusSecureMobileCredentialForCurrentUserWSResponse" : {
        "type" : "object",
        "description" : "Response for revoking Rhombus Secure mobile credential for current user."
      },
      "Accesscontrol_credentials_RotatePinCredentialWSRequest" : {
        "type" : "object",
        "description" : "Request to rotate a PIN credential with a new value.",
        "properties" : {
          "credentialUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "endDateEpochSecExclusive" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "End date in epoch seconds when this credential expires. If left null, copies the end date from the previous PIN.",
            "example" : 1672531200,
            "minimum" : 0,
            "nullable" : true
          },
          "notifyUser" : {
            "type" : "boolean",
            "description" : "Whether to notify the user about their rotated PIN credential.",
            "example" : true,
            "nullable" : true
          },
          "pinCode" : {
            "type" : "string",
            "description" : "PIN code (4 to 16 digits), will be generated automatically if one is not provided.",
            "example" : "12345",
            "maxLength" : 16,
            "minLength" : 4,
            "nullable" : true
          },
          "pinLength" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Length of PIN to be generated if a PIN code is not provided. Accepts length between 4 and 16. If left null, the generated PIN will have the same length as the previous PIN.",
            "example" : 5,
            "maximum" : 16,
            "minimum" : 4,
            "nullable" : true
          },
          "startDateEpochSecInclusive" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start date in epoch seconds when this credential becomes active. If left null, copies the start date from the previous PIN.",
            "example" : 1640995200,
            "minimum" : 0,
            "nullable" : true
          }
        },
        "required" : [ "credentialUuid" ]
      },
      "Accesscontrol_credentials_RotatePinCredentialWSResponse" : {
        "type" : "object",
        "description" : "Response containing the rotated PIN credential details.",
        "properties" : {
          "credential" : {
            "$ref" : "#/components/schemas/AccessControlCredentialType"
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_SuspendAccessControlCredentialWSRequest" : {
        "type" : "object",
        "description" : "Request to suspend an access control credential.",
        "properties" : {
          "credentialUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_SuspendAccessControlCredentialWSResponse" : {
        "type" : "object",
        "description" : "Response containing the suspended access control credential details.",
        "properties" : {
          "credential" : {
            "$ref" : "#/components/schemas/AccessControlCredentialType"
          }
        }
      },
      "Accesscontrol_credentials_UnsuspendAccessControlCredentialWSRequest" : {
        "type" : "object",
        "description" : "Request to unsuspend an access control credential.",
        "properties" : {
          "credentialUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_UnsuspendAccessControlCredentialWSResponse" : {
        "type" : "object",
        "description" : "Response containing the unsuspended access control credential details.",
        "properties" : {
          "credential" : {
            "$ref" : "#/components/schemas/AccessControlCredentialType"
          }
        }
      },
      "Accesscontrol_credentials_UpdateAccessControlCredentialNoteWSRequest" : {
        "type" : "object",
        "description" : "Request to update the note field of an access control credential.",
        "properties" : {
          "credentialUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "note" : {
            "type" : "string",
            "description" : "Note to be associated with the credential. Max length is 250 characters.",
            "example" : "Employee badge",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_UpdateAccessControlCredentialNoteWSResponse" : {
        "type" : "object",
        "description" : "Response for updating the note field of an access control credential.",
        "properties" : {
          "credential" : {
            "$ref" : "#/components/schemas/AccessControlCredentialType"
          }
        }
      },
      "Accesscontrol_credentials_UpdatePinCredentialWSRequest" : {
        "type" : "object",
        "description" : "Request to update a PIN credential with new start and end dates.",
        "properties" : {
          "credentialUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "endDateEpochSecExclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "startDateEpochSecInclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_UpdatePinCredentialWSResponse" : {
        "type" : "object",
        "description" : "Response containing the updated PIN credential details.",
        "properties" : {
          "credential" : {
            "$ref" : "#/components/schemas/AccessControlCredentialType"
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_UpdateRhombusKeyMobileAppStateForCurrentUserWSRequest" : {
        "type" : "object",
        "description" : "Request to update Rhombus Key mobile app state for current user.",
        "properties" : {
          "appName" : {
            "type" : "string",
            "description" : "Name of the mobile app",
            "example" : "Rhombus Key",
            "nullable" : true
          },
          "appNotifications" : {
            "$ref" : "#/components/schemas/RhombusSecureMobileFeature"
          },
          "appOS" : {
            "type" : "string",
            "description" : "Operating system of the mobile device",
            "example" : "iOS 15.0",
            "nullable" : true
          },
          "appVersion" : {
            "type" : "string",
            "description" : "Version of the mobile app",
            "example" : "1.2.3",
            "nullable" : true
          },
          "clientType" : {
            "$ref" : "#/components/schemas/MobileTokenOSEnum"
          },
          "credentialUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "deviceModel" : {
            "type" : "string",
            "description" : "Model of the mobile device",
            "example" : "iPhone 13",
            "nullable" : true
          },
          "tapToUnlock" : {
            "$ref" : "#/components/schemas/RhombusSecureMobileFeature"
          },
          "waveToUnlock" : {
            "$ref" : "#/components/schemas/RhombusSecureMobileFeature"
          }
        }
      },
      "Accesscontrol_credentials_UpdateRhombusKeyMobileAppStateForCurrentUserWSResponse" : {
        "type" : "object",
        "description" : "Response for updating Rhombus Key mobile app state for current user.",
        "properties" : {
          "appState" : {
            "$ref" : "#/components/schemas/RhombusSecureMobileAppState"
          }
        }
      },
      "Accesscontrol_credentials_UpdateRhombusSecureCsnCredentialWSRequest" : {
        "type" : "object",
        "description" : "Request to update a Rhombus Secure CSN credential.",
        "properties" : {
          "credentialUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "endDateEpochSecExclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "startDateEpochSecInclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_UpdateRhombusSecureCsnCredentialWSResponse" : {
        "type" : "object",
        "description" : "Response containing the updated Rhombus Secure CSN credential.",
        "properties" : {
          "credential" : {
            "$ref" : "#/components/schemas/AccessControlCredentialType"
          }
        }
      },
      "Accesscontrol_credentials_UpdateRhombusSecureMobileCredentialWSRequest" : {
        "type" : "object",
        "description" : "Request to update a Rhombus Secure mobile credential.",
        "properties" : {
          "credentialUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "endDateEpochSecExclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "startDateEpochSecInclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_UpdateRhombusSecureMobileCredentialWSResponse" : {
        "type" : "object",
        "description" : "Response containing the updated Rhombus Secure mobile credential.",
        "properties" : {
          "credential" : {
            "$ref" : "#/components/schemas/AccessControlCredentialType"
          }
        }
      },
      "Accesscontrol_credentials_UpdateStandardCsnCredentialWSRequest" : {
        "type" : "object",
        "description" : "Request to update a standard CSN credential.",
        "properties" : {
          "credentialUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "endDateEpochSecExclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "startDateEpochSecInclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_UpdateStandardCsnCredentialWSResponse" : {
        "type" : "object",
        "description" : "Response containing the updated standard CSN credential.",
        "properties" : {
          "credential" : {
            "$ref" : "#/components/schemas/AccessControlCredentialType"
          }
        }
      },
      "Accesscontrol_credentials_UpdateWiegandCredentialWSRequest" : {
        "type" : "object",
        "description" : "Request to update a Wiegand credential.",
        "properties" : {
          "credentialUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "endDateEpochSecExclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "startDateEpochSecInclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_credentials_UpdateWiegandCredentialWSResponse" : {
        "type" : "object",
        "description" : "Response containing the updated Wiegand credential.",
        "properties" : {
          "credential" : {
            "$ref" : "#/components/schemas/AccessControlCredentialType"
          }
        }
      },
      "Accesscontrol_doorexception_CreateDoorScheduleExceptionWSRequest" : {
        "type" : "object",
        "description" : "Request to create a new door schedule exception.",
        "properties" : {
          "exception" : {
            "$ref" : "#/components/schemas/DoorScheduleExceptionType"
          }
        }
      },
      "Accesscontrol_doorexception_CreateDoorScheduleExceptionWSResponse" : {
        "type" : "object",
        "description" : "Response containing the created door schedule exception.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "exception" : {
            "$ref" : "#/components/schemas/DoorScheduleExceptionType"
          }
        }
      },
      "Accesscontrol_doorexception_DeleteDoorScheduleExceptionWSRequest" : {
        "type" : "object",
        "description" : "Request to delete a specific door schedule exception by UUID.",
        "properties" : {
          "exceptionUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_doorexception_DeleteDoorScheduleExceptionWSResponse" : {
        "type" : "object",
        "description" : "Response confirming the deletion of a door schedule exception.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_doorexception_FindDoorScheduleExceptionsForDoorWSRequest" : {
        "type" : "object",
        "description" : "Request to search for door schedule exceptions for a specific door with optional date range filtering.",
        "properties" : {
          "dateRangeFilter" : {
            "$ref" : "#/components/schemas/DateRangeFilter"
          },
          "doorUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_doorexception_FindDoorScheduleExceptionsForDoorWSResponse" : {
        "type" : "object",
        "description" : "Response containing a list of door schedule exceptions found for a specific door.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "exceptions" : {
            "type" : "array",
            "description" : "List of door schedule exceptions found for the specified door.",
            "items" : {
              "$ref" : "#/components/schemas/DoorScheduleExceptionType"
            },
            "nullable" : true
          }
        }
      },
      "Accesscontrol_doorexception_FindDoorScheduleExceptionsForLocationWSRequest" : {
        "type" : "object",
        "description" : "Request to search for door schedule exceptions for a specific location with optional date range filtering.",
        "properties" : {
          "dateRangeFilter" : {
            "$ref" : "#/components/schemas/DateRangeFilter"
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_doorexception_FindDoorScheduleExceptionsForLocationWSResponse" : {
        "type" : "object",
        "description" : "Response containing a list of door schedule exceptions found for a specific location.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "exceptions" : {
            "type" : "array",
            "description" : "List of door schedule exceptions found for the specified location.",
            "items" : {
              "$ref" : "#/components/schemas/DoorScheduleExceptionType"
            },
            "nullable" : true
          }
        }
      },
      "Accesscontrol_doorexception_FindDoorScheduleExceptionsWSRequest" : {
        "type" : "object",
        "description" : "Request to search for door schedule exceptions with optional date range filtering.",
        "properties" : {
          "dateRangeFilter" : {
            "$ref" : "#/components/schemas/DateRangeFilter"
          }
        }
      },
      "Accesscontrol_doorexception_FindDoorScheduleExceptionsWSResponse" : {
        "type" : "object",
        "description" : "Response containing a list of door schedule exceptions found in the search.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "exceptions" : {
            "type" : "array",
            "description" : "List of door schedule exceptions found in the search.",
            "items" : {
              "$ref" : "#/components/schemas/DoorScheduleExceptionType"
            },
            "nullable" : true
          }
        }
      },
      "Accesscontrol_doorexception_GetDoorScheduleExceptionWSRequest" : {
        "type" : "object",
        "description" : "Request to retrieve a specific door schedule exception by UUID.",
        "properties" : {
          "exceptionUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_doorexception_GetDoorScheduleExceptionWSResponse" : {
        "type" : "object",
        "description" : "Response containing the requested door schedule exception.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "exception" : {
            "$ref" : "#/components/schemas/DoorScheduleExceptionType"
          }
        }
      },
      "Accesscontrol_doorexception_UpdateDoorScheduleExceptionWSRequest" : {
        "type" : "object",
        "description" : "Request to update an existing door schedule exception.",
        "properties" : {
          "exception" : {
            "$ref" : "#/components/schemas/DoorScheduleExceptionType"
          }
        }
      },
      "Accesscontrol_doorexception_UpdateDoorScheduleExceptionWSResponse" : {
        "type" : "object",
        "description" : "Response containing the updated door schedule exception and license information.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "exception" : {
            "$ref" : "#/components/schemas/DoorScheduleExceptionType"
          },
          "expiredACDLicensesDoorUuids" : {
            "type" : "array",
            "description" : "Set of door UUIDs with expired access control licenses.",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "unassignedACDLicensesDoorUuids" : {
            "type" : "array",
            "description" : "Set of door UUIDs with unassigned access control licenses.",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "Accesscontrol_firstin_ApplyDoorAuthFirstInGroupStateWSRequest" : {
        "type" : "object",
        "description" : "Request to apply door auth first-in state to all doors in a first-in settings group.",
        "properties" : {
          "settingsUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "state" : {
            "$ref" : "#/components/schemas/FirstInStatus"
          }
        }
      },
      "Accesscontrol_firstin_ApplyDoorAuthFirstInGroupStateWSResponse" : {
        "type" : "object",
        "description" : "Response containing the updated location first-in settings after applying door auth first-in group state.",
        "properties" : {
          "settings" : {
            "$ref" : "#/components/schemas/LocationFirstInSettings"
          }
        }
      },
      "Accesscontrol_firstin_ApplyDoorAuthFirstInStateWSRequest" : {
        "type" : "object",
        "description" : "Request to apply door auth first-in state to a specific door.",
        "properties" : {
          "doorUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "state" : {
            "$ref" : "#/components/schemas/FirstInStatus"
          }
        }
      },
      "Accesscontrol_firstin_ApplyDoorAuthFirstInStateWSResponse" : {
        "type" : "object",
        "description" : "Response containing the updated door after applying door auth first-in state.",
        "properties" : {
          "door" : {
            "$ref" : "#/components/schemas/AccessControlledDoorType"
          }
        }
      },
      "Accesscontrol_firstin_ApplyDoorScheduleFirstInGroupStateWSRequest" : {
        "type" : "object",
        "description" : "Request to apply door schedule first-in state to all doors in a first-in settings group.",
        "properties" : {
          "settingsUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "state" : {
            "$ref" : "#/components/schemas/FirstInStatus"
          }
        }
      },
      "Accesscontrol_firstin_ApplyDoorScheduleFirstInGroupStateWSResponse" : {
        "type" : "object",
        "description" : "Response containing the updated location first-in settings after applying door schedule first-in group state.",
        "properties" : {
          "settings" : {
            "$ref" : "#/components/schemas/LocationFirstInSettings"
          }
        }
      },
      "Accesscontrol_firstin_ApplyDoorScheduleFirstInStateWSRequest" : {
        "type" : "object",
        "description" : "Request to apply door schedule first-in state to a specific door.",
        "properties" : {
          "doorUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "state" : {
            "$ref" : "#/components/schemas/FirstInStatus"
          }
        }
      },
      "Accesscontrol_firstin_ApplyDoorScheduleFirstInStateWSResponse" : {
        "type" : "object",
        "description" : "Response containing the updated door after applying door schedule first-in state.",
        "properties" : {
          "door" : {
            "$ref" : "#/components/schemas/AccessControlledDoorType"
          }
        }
      },
      "Accesscontrol_firstin_CreateLocationFirstInSettingsWSRequest" : {
        "type" : "object",
        "description" : "Request to create new location first-in settings.",
        "properties" : {
          "settings" : {
            "$ref" : "#/components/schemas/LocationFirstInSettings"
          }
        }
      },
      "Accesscontrol_firstin_CreateLocationFirstInSettingsWSResponse" : {
        "type" : "object",
        "description" : "Response containing the created location first-in settings.",
        "properties" : {
          "settings" : {
            "$ref" : "#/components/schemas/LocationFirstInSettings"
          }
        }
      },
      "Accesscontrol_firstin_DeleteLocationFirstInSettingsWSRequest" : {
        "type" : "object",
        "description" : "Request to delete specific location first-in settings by UUID.",
        "properties" : {
          "settingsUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_firstin_DeleteLocationFirstInSettingsWSResponse" : {
        "type" : "object",
        "description" : "Response containing the deleted location first-in settings.",
        "properties" : {
          "settings" : {
            "$ref" : "#/components/schemas/LocationFirstInSettings"
          }
        }
      },
      "Accesscontrol_firstin_FindLocationFirstInSettingsByLocationWSRequest" : {
        "type" : "object",
        "description" : "Request to search for location first-in settings for a specific location with pagination support.",
        "properties" : {
          "lastEvaluatedKey" : {
            "type" : "string",
            "description" : "Should be null on first request and populated on subsequent requests if provided in the response to retrieve the next page",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "maxPageSize" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Max number of results to return. Response's lastEvaluatedKey will be null if no additional results are available",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_firstin_FindLocationFirstInSettingsByLocationWSResponse" : {
        "type" : "object",
        "description" : "Response containing a list of location first-in settings found for the specified location with pagination information.",
        "properties" : {
          "lastEvaluatedKey" : {
            "type" : "string",
            "description" : "If a max page size was specified and there are additional results that can be retrievedthis will be non-null and should be supplied in the next request to retrieve the next page of results.",
            "nullable" : true
          },
          "settingsList" : {
            "type" : "array",
            "description" : "List of location first-in settings found for the specified location.",
            "items" : {
              "$ref" : "#/components/schemas/LocationFirstInSettings"
            },
            "nullable" : true
          }
        }
      },
      "Accesscontrol_firstin_FindLocationFirstInSettingsByOrgWSRequest" : {
        "type" : "object",
        "description" : "Request to search for location first-in settings across the organization with pagination support.",
        "properties" : {
          "lastEvaluatedKey" : {
            "type" : "string",
            "description" : "Should be null on first request and populated on subsequent requests if provided in the response to retrieve the next page",
            "nullable" : true
          },
          "maxPageSize" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Max number of results to return. Response's lastEvaluatedKey will be null if no additional results are available",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_firstin_FindLocationFirstInSettingsByOrgWSResponse" : {
        "type" : "object",
        "description" : "Response containing a list of location first-in settings found in the organization with pagination information.",
        "properties" : {
          "lastEvaluatedKey" : {
            "type" : "string",
            "description" : "If a max page size was specified and there are additional results that can be retrievedthis will be non-null and should be supplied in the next request to retrieve the next page of results.",
            "nullable" : true
          },
          "settingsList" : {
            "type" : "array",
            "description" : "List of location first-in settings found in the organization.",
            "items" : {
              "$ref" : "#/components/schemas/LocationFirstInSettings"
            },
            "nullable" : true
          }
        }
      },
      "Accesscontrol_firstin_GetLocationFirstInSettingsForDoorWSRequest" : {
        "type" : "object",
        "description" : "Request to retrieve location first-in settings for a specific door.",
        "properties" : {
          "doorUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_firstin_GetLocationFirstInSettingsForDoorWSResponse" : {
        "type" : "object",
        "description" : "Response containing the location first-in settings for the specified door.",
        "properties" : {
          "settings" : {
            "$ref" : "#/components/schemas/LocationFirstInSettings"
          }
        }
      },
      "Accesscontrol_firstin_GetLocationFirstInSettingsWSRequest" : {
        "type" : "object",
        "description" : "Request to retrieve specific location first-in settings by UUID.",
        "properties" : {
          "settingsUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_firstin_GetLocationFirstInSettingsWSResponse" : {
        "type" : "object",
        "description" : "Response containing the requested location first-in settings.",
        "properties" : {
          "settings" : {
            "$ref" : "#/components/schemas/LocationFirstInSettings"
          }
        }
      },
      "Accesscontrol_firstin_RemoveDoorLocationFirstInSettingsWSRequest" : {
        "type" : "object",
        "description" : "Request to remove a door from its assigned location first-in settings.",
        "properties" : {
          "doorUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_firstin_RemoveDoorLocationFirstInSettingsWSResponse" : {
        "type" : "object",
        "description" : "Response containing the updated location first-in settings after removing the door.",
        "properties" : {
          "settings" : {
            "$ref" : "#/components/schemas/LocationFirstInSettings"
          }
        }
      },
      "Accesscontrol_firstin_UpdateLocationFirstInSettingsWSRequest" : {
        "type" : "object",
        "description" : "Request to update existing location first-in settings with selective field updates.",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "Optional description for the first-in settings.",
            "nullable" : true
          },
          "doorAuthRequirementEnabled" : {
            "type" : "boolean",
            "description" : "Optional flag to enable/disable door auth requirement.",
            "nullable" : true
          },
          "doorScheduleRequirementEnabled" : {
            "type" : "boolean",
            "description" : "Optional flag to enable/disable door schedule requirement.",
            "nullable" : true
          },
          "doorUuids" : {
            "type" : "array",
            "description" : "Optional sorted set of door UUIDs to assign to these settings.",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "groupUuids" : {
            "type" : "array",
            "description" : "Optional sorted set of group UUIDs to assign to these settings.",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Optional name for the first-in settings.",
            "nullable" : true
          },
          "resets" : {
            "type" : "array",
            "description" : "Optional list of first-in reset configurations.",
            "items" : {
              "$ref" : "#/components/schemas/BaseFirstInReset"
            },
            "nullable" : true
          },
          "settingsUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "userUuids" : {
            "type" : "array",
            "description" : "Optional sorted set of user UUIDs to assign to these settings.",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "Accesscontrol_firstin_UpdateLocationFirstInSettingsWSResponse" : {
        "type" : "object",
        "description" : "Response containing the updated location first-in settings.",
        "properties" : {
          "settings" : {
            "$ref" : "#/components/schemas/LocationFirstInSettings"
          }
        }
      },
      "Accesscontrol_lockdownplan_ActivateLockdownForLocationViaRhombusKeyWSRequest" : {
        "type" : "object",
        "description" : "Request to activate lockdown for a specific location via Rhombus Key with optional optimistic locking.",
        "properties" : {
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "lockdownPlanUuids" : {
            "type" : "array",
            "description" : "Set of lockdown plan UUIDs to activate for the location.",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "stateUpdatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Optional timestamp for optimistic locking to ensure the user is updating the latest record.",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_lockdownplan_ActivateLockdownForLocationViaRhombusKeyWSResponse" : {
        "type" : "object",
        "description" : "Response containing the result of activating lockdown for a location via Rhombus Key.",
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/LockdownActivationResultEnumType"
          },
          "state" : {
            "$ref" : "#/components/schemas/LocationLockdownStateType"
          }
        }
      },
      "Accesscontrol_lockdownplan_ActivateLockdownForLocationWSRequest" : {
        "type" : "object",
        "description" : "Request to activate lockdown for a specific location with optional optimistic locking.",
        "properties" : {
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "lockdownPlanUuids" : {
            "type" : "array",
            "description" : "Set of lockdown plan UUIDs to activate for the location.",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "stateUpdatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Optional timestamp for optimistic locking to ensure the user is updating the latest record.",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_lockdownplan_ActivateLockdownForLocationWSResponse" : {
        "type" : "object",
        "description" : "Response containing the result of activating lockdown for a location.",
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/LockdownActivationResultEnumType"
          },
          "state" : {
            "$ref" : "#/components/schemas/LocationLockdownStateType"
          }
        }
      },
      "Accesscontrol_lockdownplan_CreateLocationLockdownPlanWSRequest" : {
        "type" : "object",
        "description" : "Request to create a new location lockdown plan.",
        "properties" : {
          "lockdownPlan" : {
            "$ref" : "#/components/schemas/LocationLockdownPlanType"
          }
        }
      },
      "Accesscontrol_lockdownplan_CreateLocationLockdownPlanWSResponse" : {
        "type" : "object",
        "description" : "Response containing the created location lockdown plan.",
        "properties" : {
          "lockdownPlan" : {
            "$ref" : "#/components/schemas/LocationLockdownPlanType"
          }
        }
      },
      "Accesscontrol_lockdownplan_CreateLockdownRuleForLocationWSRequest" : {
        "type" : "object",
        "description" : "Request to create a new lockdown rule for a specific location.",
        "properties" : {
          "rule" : {
            "$ref" : "#/components/schemas/Accesscontrol_lockdownplan_ExternalLockdownPlanRuleType"
          }
        }
      },
      "Accesscontrol_lockdownplan_CreateLockdownRuleForLocationWSResponse" : {
        "type" : "object",
        "description" : "Response containing the UUID of the created lockdown rule.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "ruleUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_lockdownplan_DeactivateLockdownForLocationViaRhombusKeyWSRequest" : {
        "type" : "object",
        "description" : "Request to deactivate lockdown for a specific location via Rhombus Key with optional optimistic locking.",
        "properties" : {
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "stateUpdatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Optional timestamp for optimistic locking to ensure the user is updating the latest record.",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_lockdownplan_DeactivateLockdownForLocationViaRhombusKeyWSResponse" : {
        "type" : "object",
        "description" : "Response containing the result of deactivating lockdown for a location via Rhombus Key.",
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/LockdownDeactivationResultEnumType"
          },
          "state" : {
            "$ref" : "#/components/schemas/LocationLockdownStateType"
          }
        }
      },
      "Accesscontrol_lockdownplan_DeactivateLockdownForLocationWSRequest" : {
        "type" : "object",
        "description" : "Request to deactivate lockdown for a specific location with optional optimistic locking.",
        "properties" : {
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "stateUpdatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Optional timestamp for optimistic locking to ensure the user is updating the latest record.",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_lockdownplan_DeactivateLockdownForLocationWSResponse" : {
        "type" : "object",
        "description" : "Response containing the result of deactivating lockdown for a location.",
        "properties" : {
          "result" : {
            "$ref" : "#/components/schemas/LockdownDeactivationResultEnumType"
          },
          "state" : {
            "$ref" : "#/components/schemas/LocationLockdownStateType"
          }
        }
      },
      "Accesscontrol_lockdownplan_DeleteLocationLockdownStateWSRequest" : {
        "type" : "object",
        "description" : "Request to delete the lockdown state tracking for a specific location.",
        "properties" : {
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_lockdownplan_DeleteLocationLockdownStateWSResponse" : {
        "type" : "object",
        "description" : "Response indicating successful deletion of location lockdown state."
      },
      "Accesscontrol_lockdownplan_DeleteLockdownPlanWSRequest" : {
        "type" : "object",
        "description" : "Request to delete a specific lockdown plan by UUID.",
        "properties" : {
          "lockdownPlanUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_lockdownplan_DeleteLockdownPlanWSResponse" : {
        "type" : "object",
        "description" : "Response confirming the deletion of a lockdown plan.",
        "properties" : {
          "lockdownPlanUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_lockdownplan_DeleteLockdownRuleForLocationWSRequest" : {
        "type" : "object",
        "description" : "Request to delete a specific lockdown rule for a location.",
        "properties" : {
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "ruleUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_lockdownplan_DeleteLockdownRuleForLocationWSResponse" : {
        "type" : "object",
        "description" : "Response indicating successful deletion of a lockdown rule.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_lockdownplan_DisableLockdownTestModeForLocationWSRequest" : {
        "type" : "object",
        "description" : "Request to disable test mode for lockdown at a specific location.",
        "properties" : {
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_lockdownplan_DisableLockdownTestModeForLocationWSResponse" : {
        "type" : "object",
        "description" : "Response containing the updated lockdown state after disabling test mode.",
        "properties" : {
          "state" : {
            "$ref" : "#/components/schemas/LocationLockdownStateType"
          }
        }
      },
      "Accesscontrol_lockdownplan_EnableLockdownTestModeForLocationWSRequest" : {
        "type" : "object",
        "description" : "Request to enable test mode for lockdown at a specific location.",
        "properties" : {
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_lockdownplan_EnableLockdownTestModeForLocationWSResponse" : {
        "type" : "object",
        "description" : "Response containing the updated lockdown state after enabling test mode.",
        "properties" : {
          "state" : {
            "$ref" : "#/components/schemas/LocationLockdownStateType"
          }
        }
      },
      "Accesscontrol_lockdownplan_ExternalLockdownPlanRuleType" : {
        "type" : "object",
        "description" : "External representation of a lockdown plan rule configuration.",
        "properties" : {
          "action" : {
            "$ref" : "#/components/schemas/RuleActionType"
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "ruleFilters" : {
            "$ref" : "#/components/schemas/RuleFilterType"
          },
          "ruleName" : {
            "type" : "string",
            "description" : "The name of the lockdown rule.",
            "nullable" : true
          },
          "ruleUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "triggerActivity" : {
            "$ref" : "#/components/schemas/ActivityEnum"
          }
        }
      },
      "Accesscontrol_lockdownplan_FindLocationLockdownEventsWSRequest" : {
        "type" : "object",
        "description" : "Request to find lockdown events for a specific location with optional time filtering.",
        "properties" : {
          "createdAfterMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Returns events created after (exclusive) the specified millisecond epoch timestamp",
            "nullable" : true
          },
          "createdBeforeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Returns events created before (exclusive) the specified millisecond epoch timestamp",
            "nullable" : true
          },
          "limit" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Limits the number of returned events to the latest LIMIT events",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        },
        "required" : [ "locationUuid" ]
      },
      "Accesscontrol_lockdownplan_FindLocationLockdownEventsWSResponse" : {
        "type" : "object",
        "description" : "Response containing a list of lockdown events for a specific location.",
        "properties" : {
          "events" : {
            "type" : "array",
            "description" : "List of lockdown events found for the specified location.",
            "items" : {
              "$ref" : "#/components/schemas/BaseLockdownStateEventType"
            },
            "nullable" : true
          }
        }
      },
      "Accesscontrol_lockdownplan_FindLocationLockdownStatesWSRequest" : {
        "type" : "object",
        "description" : "Request to find location lockdown states with optional filtering.",
        "properties" : {
          "stateFilter" : {
            "type" : "array",
            "description" : "Optional filter to limit results to specific lockdown states.",
            "items" : {
              "$ref" : "#/components/schemas/LocationLockdownStateEnumType"
            },
            "nullable" : true
          }
        }
      },
      "Accesscontrol_lockdownplan_FindLocationLockdownStatesWSResponse" : {
        "type" : "object",
        "description" : "Response containing a list of location lockdown states.",
        "properties" : {
          "states" : {
            "type" : "array",
            "description" : "List of location lockdown states found for the organization.",
            "items" : {
              "$ref" : "#/components/schemas/LocationLockdownStateType"
            },
            "nullable" : true
          }
        }
      },
      "Accesscontrol_lockdownplan_FindLockdownPlansByLocationWSRequest" : {
        "type" : "object",
        "description" : "Request to search for lockdown plans for a specific location.",
        "properties" : {
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_lockdownplan_FindLockdownPlansByLocationWSResponse" : {
        "type" : "object",
        "description" : "Response containing a list of lockdown plans found for the specified location.",
        "properties" : {
          "lockdownPlans" : {
            "type" : "array",
            "description" : "List of lockdown plans found for the specified location.",
            "items" : {
              "$ref" : "#/components/schemas/BaseLockdownPlanType"
            },
            "nullable" : true
          }
        }
      },
      "Accesscontrol_lockdownplan_FindLockdownPlansWSRequest" : {
        "type" : "object",
        "description" : "Request to search for lockdown plans across the organization."
      },
      "Accesscontrol_lockdownplan_FindLockdownPlansWSResponse" : {
        "type" : "object",
        "description" : "Response containing a list of lockdown plans found in the organization.",
        "properties" : {
          "lockdownPlans" : {
            "type" : "array",
            "description" : "List of lockdown plans found in the organization.",
            "items" : {
              "$ref" : "#/components/schemas/BaseLockdownPlanType"
            },
            "nullable" : true
          }
        }
      },
      "Accesscontrol_lockdownplan_GetLockdownPlanWSRequest" : {
        "type" : "object",
        "description" : "Request to retrieve a specific lockdown plan by UUID.",
        "properties" : {
          "lockdownPlanUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_lockdownplan_GetLockdownPlanWSResponse" : {
        "type" : "object",
        "description" : "Response containing the requested lockdown plan.",
        "properties" : {
          "lockdownPlan" : {
            "$ref" : "#/components/schemas/BaseLockdownPlanType"
          }
        }
      },
      "Accesscontrol_lockdownplan_GetLockdownRulesForLocationWSRequest" : {
        "type" : "object",
        "description" : "Request to retrieve all lockdown rules for a specific location.",
        "properties" : {
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_lockdownplan_GetLockdownRulesForLocationWSResponse" : {
        "type" : "object",
        "description" : "Response containing a list of lockdown rules for a specific location.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "rules" : {
            "type" : "array",
            "description" : "List of lockdown rules configured for the specified location.",
            "items" : {
              "$ref" : "#/components/schemas/Accesscontrol_lockdownplan_ExternalLockdownPlanRuleType"
            },
            "nullable" : true
          }
        }
      },
      "Accesscontrol_lockdownplan_GetOrCreateLocationLockdownStateWSRequest" : {
        "type" : "object",
        "description" : "Request to retrieve an existing lockdown state or create one for a specific location.",
        "properties" : {
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Accesscontrol_lockdownplan_GetOrCreateLocationLockdownStateWSResponse" : {
        "type" : "object",
        "description" : "Response containing the lockdown state for the specified location.",
        "properties" : {
          "state" : {
            "$ref" : "#/components/schemas/LocationLockdownStateType"
          }
        }
      },
      "Accesscontrol_lockdownplan_UpdateLocationLockdownPlanWSRequest" : {
        "type" : "object",
        "description" : "Request to update an existing location lockdown plan with selective field updates.",
        "properties" : {
          "activationPlan" : {
            "$ref" : "#/components/schemas/LockdownActivationPlanType"
          },
          "deactivationPlan" : {
            "$ref" : "#/components/schemas/LockdownDeactivationPlanType"
          },
          "defaultLockdownState" : {
            "$ref" : "#/components/schemas/DoorLockdownStateEnumType"
          },
          "doorLockdownStateMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/DoorLockdownStateEnumType"
            },
            "nullable" : true
          },
          "lockdownPlanUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "physicalAccess" : {
            "$ref" : "#/components/schemas/LockdownPhysicalAccessType"
          },
          "testPlan" : {
            "$ref" : "#/components/schemas/LockdownTestPlanType"
          }
        }
      },
      "Accesscontrol_lockdownplan_UpdateLocationLockdownPlanWSResponse" : {
        "type" : "object",
        "description" : "Response containing the updated location lockdown plan.",
        "properties" : {
          "lockdownPlan" : {
            "$ref" : "#/components/schemas/LocationLockdownPlanType"
          }
        }
      },
      "Accesscontrol_qr_GenerateQRAccessCodeWSRequest" : {
        "type" : "object",
        "description" : "Request to generate a QR access code.",
        "properties" : {
          "accessControlledDoorUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "auditPrincipal" : {
            "type" : "string",
            "nullable" : true
          },
          "validDurationSec" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Valid duration in seconds",
            "example" : 300,
            "nullable" : true
          }
        }
      },
      "Accesscontrol_qr_GenerateQRAccessCodeWSResponse" : {
        "type" : "object",
        "description" : "Response for QR access code generation.",
        "properties" : {
          "accessTokenUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "qrCode" : {
            "type" : "array",
            "description" : "QR code as PNG byte array",
            "items" : {
              "type" : "string",
              "format" : "byte",
              "description" : "QR code as PNG byte array",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Accesscontrol_qr_GetQRAccessCodesWSRequest" : {
        "type" : "object",
        "description" : "Request to get QR access codes."
      },
      "Accesscontrol_qr_GetQRAccessCodesWSResponse" : {
        "type" : "object",
        "description" : "Response for getting QR access codes.",
        "properties" : {
          "qrAccessCodes" : {
            "type" : "array",
            "description" : "List of QR access codes",
            "items" : {
              "$ref" : "#/components/schemas/Accesscontrol_qr_QRAccessCodeType"
            },
            "nullable" : true
          }
        }
      },
      "Accesscontrol_qr_QRAccessCodeType" : {
        "type" : "object",
        "description" : "QR code access configuration for a specific door.",
        "properties" : {
          "accesTokenUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "auditPrincipal" : {
            "type" : "string",
            "description" : "Information about the user of the QR code so that audit events can be tracked.",
            "nullable" : true
          },
          "doorUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "expirationTimeSec" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The expiration time of this QR code in seconds since epoch.",
            "nullable" : true
          }
        }
      },
      "Action" : {
        "type" : "string",
        "enum" : [ "NOTIFY_USERS", "UNKNOWN" ]
      },
      "ActivateLocationLockdownActionRecordType" : {
        "type" : "object",
        "properties" : {
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "lockdownPlanUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "succeeded" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "ActivateLocationLockdownActionType" : {
        "type" : "object",
        "properties" : {
          "locationLockdownPlanUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "ActivityEnum" : {
        "type" : "string",
        "enum" : [ "SOUND_LOUD", "SOUND_GUN_SHOT", "TAMPER", "VISUAL_TAMPER", "MOTION_TAMPER", "MOTION", "MOTION_HUMAN", "MOTION_CAR", "MOTION_ANIMAL", "FACE", "FACE_IDENTIFIED", "FACE_UNIDENTIFIED", "FACE_BLACKLISTED", "FACE_ALERT", "POSE_ANOMALOUS", "POSE_FALL", "LICENSEPLATE", "LICENSEPLATE_IDENTIFIED", "LICENSEPLATE_UNIDENTIFIED", "LICENSEPLATE_ALERT", "LICENSEPLATE_BLACKLISTED", "LICENSEPLATE_TRUSTED", "PEOPLECOUNT_HIGH", "PEOPLECOUNT_HIGH_RESET", "PEOPLECOUNT_LOW", "PEOPLECOUNT_LOW_RESET", "HUMAN_ENTER", "HUMAN_EXIT", "CAR_ENTER", "CAR_EXIT", "TEMPERATURE_EXCEEDED_HIGH", "TEMPERATURE_EXCEEDED_LOW", "HUMIDITY_EXCEEDED_HIGH", "HUMIDITY_EXCEEDED_LOW", "PM25_EXCEEDED_HIGH", "TVOC_EXCEEDED_HIGH", "ETOH_EXCEEDED_HIGH", "IAQ_EXCEEDED_HIGH", "CO2_EXCEEDED_HIGH", "CO2_EXCEEDED_LOW", "PROBE_TEMPERATURE_EXCEEDED_HIGH", "PROBE_TEMPERATURE_EXCEEDED_LOW", "PROBE_DISCONNECTED", "PROBE_CONNECTED", "HEAT_INDEX_EXCEEDED_HIGH", "PRESSURE_EXCEEDED_HIGH", "PRESSURE_EXCEEDED_LOW", "PM10_EXCEEDED_HIGH", "PM40_EXCEEDED_HIGH", "PM100_EXCEEDED_HIGH", "VOC_IDX_EXCEEDED_HIGH", "NOX_IDX_EXCEEDED_HIGH", "FORMALDEHYDE_EXCEEDED_HIGH", "CARBON_MONOXIDE_EXCEEDED_HIGH", "AQI_EXCEEDED_HIGH", "DOOR_AJAR", "DOOR_OPENED", "DOOR_CLOSED", "BUTTON_SINGLE_PRESSED", "BUTTON_DOUBLE_PRESSED", "BUTTON_LONG_PRESSED", "TAG_ARRIVED", "TAG_DEPARTED", "TAG_MOVED", "TAG_POSITIONING_CHANGED", "TAG_BOUNDARY_INGRESS", "TAG_BOUNDARY_EGRESS", "TAG_PANIC", "BADGE_AUTHORIZED", "BADGE_UNAUTHORIZED", "BADGE_UNAUTHORIZED_V2", "BADGE_AJAR", "BADGE_MANUAL", "BADGE_FORCED_OPEN", "BADGE_LOCKDOWN", "BADGE_REQUEST_TO_EXIT", "BADGE_DURESS", "BADGE_SECURITY_BREACH", "BADGE_TAMPER", "BADGE_FACE_MISMATCH", "POS_ORDER", "GUN_DETECT_EVENT", "IOT_SOUND_AGGRESSION", "IOT_SOUND_HELP", "IOT_AIR_CO", "IOT_AIR_CO2", "IOT_AIR_MASKING", "IOT_AIR_THC", "IOT_AIR_VAPE", "IOT_AIR_VOC", "IOT_AIR_TEMP", "IOT_TAMPER", "IOT_GUNSHOT", "IOT_BUTTON_SINGLE_CLICK", "IOT_BUTTON_DOUBLE_CLICK", "IOT_BUTTON_HOLD", "IOT_PANIC_BUTTON_TRIGGERED", "AUDIO_SOUND_SIGNIFICANT", "AUDIO_SOUND_LOUD", "AUDIO_SOUND_ABUSIVE", "AUDIO_SOUND_GREETING", "AUDIO_SOUND_HELP", "AUDIO_SOUND_GUN", "AUDIO_SOUND_GLASS_BREAK", "AUDIO_SOUND_ALARM_SMOKE_FIRE", "AUDIO_SOUND_ALARM_CARBON_MONOXIDE", "AUDIO_SOUND_SIREN", "CLIMATE_VOC", "CLIMATE_VAPE", "CLIMATE_SMOKE", "CLIMATE_THC", "CLIMATE_CO2", "CLIMATE_ETOH", "CLIMATE_PM25", "CLIMATE_IAQ", "CLIMATE_LEAK", "SOUND_AGGRESSION", "SOUND_HELP", "AIR_CO", "AIR_CO2", "AIR_MASKING", "AIR_THC", "AIR_VAPE", "AIR_VOC", "MASK_MISSING", "HELMET_MISSING", "GLOVES_MISSING", "PIR_OCCUPIED", "PIR_MOVEMENT", "PIR_VACANT", "CUSTOM", "VISITOR_ARRIVED", "VISITOR_DEPARTED", "AC_DR_CONNECTED", "AC_DR_DISCONNECTED", "AC_DPI_DOOR_OPEN", "AC_DPI_DOOR_CLOSED", "AC_DPI_DOOR_AJAR", "AC_DPI_DOOR_FORCED_OPEN", "AC_DSR_UNLOCKED", "AC_DSR_LOCKED", "AC_DB_TRIGGERED", "AC_PANIC_BUTTON_TRIGGERED", "AC_REMOTE_UNLOCK", "AC_BADGE_AUTHORIZED", "AC_BADGE_UNAUTHORIZED", "AC_BADGE_FACE_MISMATCH", "AC_LOCKDOWN_ACTIVATED", "AC_LOCKDOWN_DEACTIVATED", "AC_TAMPER_PROX", "AC_TAMPER_ACCEL", "AC_TAMPER_SWITCH", "AC_GR_ACTIVE", "AC_GR_INACTIVE", "AC_GI_ACTIVE", "AC_GI_INACTIVE", "AC_REX_ACTIVE", "AC_REX_INACTIVE", "AC_APERIO_DEVICE_DISCONNECTED", "AC_APERIO_DEVICE_CONNECTED", "AC_APERIO_DEVICE_REBOOT", "AC_APERIO_DEVICE_TAMPER", "AC_APERIO_LOW_BATTERY", "AC_APERIO_FLAT_BATTERY", "AC_APERIO_OK_BATTERY", "POWER_SWITCH_BATTERY", "POWER_SWITCH_PRIMARY", "CUSTOM_LLM_BOOLEAN_TRUE", "CUSTOM_LLM_BOOLEAN_FALSE", "CUSTOM_LLM_THRESHOLD_EXCEEDED_LOW", "CUSTOM_LLM_THRESHOLD_EXCEEDED_HIGH", "UNKNOWN" ]
      },
      "AddOnLicense" : {
        "type" : "string",
        "enum" : [ "CLOUD_ARCHIVING", "PERCEPTION", "POSE", "BEHAVIOR", "VEHICLE", "PEOPLE", "PPE", "PEOPLE_ANALYTICS", "UNKNOWN" ]
      },
      "AddOnLicenseInvoiceType" : {
        "type" : "object",
        "properties" : {
          "cloudArchiveDays" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "count" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "license" : {
            "$ref" : "#/components/schemas/AddOnLicense"
          },
          "perceptionTypes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PerceptionType"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "price" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          }
        }
      },
      "AddOnLicenseStats" : {
        "type" : "object",
        "properties" : {
          "addOnLicenseType" : {
            "$ref" : "#/components/schemas/AddOnLicense"
          },
          "assignedCount" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "deviceLicenseFamilyStats" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DeviceLicenseFamilyStats"
            },
            "nullable" : true
          },
          "lastEndDate" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The closest past date on which licenses belonging to the group expired.",
            "nullable" : true
          },
          "nearExpirationCount" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The number of licenses in the group that are currently close to expiration.",
            "nullable" : true
          },
          "nextEndDate" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The closest future date on which licenses belonging to the group will expire.",
            "nullable" : true
          },
          "stateStats" : {
            "$ref" : "#/components/schemas/LicenseStateStats"
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The number of licenses in the group.",
            "nullable" : true
          }
        }
      },
      "AdvancedRMAType" : {
        "type" : "object",
        "properties" : {
          "invoiceNeeded" : {
            "type" : "boolean",
            "nullable" : true
          },
          "knownIssue" : {
            "type" : "boolean",
            "nullable" : true
          },
          "managerialApproved" : {
            "type" : "boolean",
            "nullable" : true
          },
          "managerialApprovedRMAs" : {
            "$ref" : "#/components/schemas/rctpRMAType"
          },
          "rctpPartnerRequested" : {
            "type" : "boolean",
            "nullable" : true
          },
          "rctpPartnerUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "rctpRMAs" : {
            "$ref" : "#/components/schemas/rctpRMAType"
          }
        }
      },
      "AirQualityIndexPollutantEnum" : {
        "type" : "string",
        "description" : "Primary pollutant affecting air quality index",
        "enum" : [ "OZONE", "PM2P5", "PM10P0", "CO", "NO2", "SO2", "UNKNOWN" ]
      },
      "AlertActionRecordType" : {
        "type" : "object",
        "properties" : {
          "policyAlertUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "status" : {
            "$ref" : "#/components/schemas/AlertActionStatusEnum"
          }
        }
      },
      "AlertActionStatusEnum" : {
        "type" : "string",
        "enum" : [ "SUCCESS", "ERROR", "PAUSED", "IGNORED", "MUTED", "BACKOFF", "UNKNOWN" ]
      },
      "AlertMonitoringCatalogItem" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "monthlyVerificationLimit" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "durationMonths" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "productCode" : {
            "type" : "string",
            "nullable" : true
          },
          "productType" : {
            "type" : "string",
            "enum" : [ "DEVICE", "ALERT_MONITORING", "ACCESS_CONTROL", "LICENSE_USAGE", "UNKNOWN" ],
            "nullable" : true
          }
        }
      },
      "AlertMonitoringEventRecordType" : {
        "type" : "object",
        "properties" : {
          "alertMonitoringEventType" : {
            "$ref" : "#/components/schemas/AlertMonitoringRulesEventTypeEnum"
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "threatCaseUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "AlertMonitoringLicenseType" : {
        "type" : "object",
        "description" : "List of alert monitoring licenses available for the client organization",
        "properties" : {
          "allowedDeviceCount" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "claimKeyUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "createdOn" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "deviceUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "firstAssignedDate" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "licenseToUnassignEmailState" : {
            "type" : "string",
            "enum" : [ "INITIAL_EMAIL_SUCCEEDED", "INITIAL_EMAIL_FAILED", "FIFTEEN_DAY_WARNING_EMAIL_SUCCEEDED", "FIFTEEN_DAY_WARNING_EMAIL_FAILED", "FOURTY_EIGHT_HOUR_WARNING_EMAIL_SUCCEEDED", "FOURTY_EIGHT_HOUR_WARNING_EMAIL_FAILED", "UNKNOWN" ],
            "nullable" : true
          },
          "licenseType" : {
            "$ref" : "#/components/schemas/License"
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "maxDeleteDate" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "monthlyVerificationLimit" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "monthsReset" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "percentUsage" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "priorClaimKeyUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "productCode" : {
            "type" : "string",
            "nullable" : true
          },
          "productType" : {
            "type" : "string",
            "enum" : [ "DEVICE", "ALERT_MONITORING", "ACCESS_CONTROL", "LICENSE_USAGE", "UNKNOWN" ],
            "nullable" : true
          },
          "remainingAlarms" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "remainingVerifications" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "state" : {
            "type" : "string",
            "enum" : [ "CLAIMED", "RENEWED", "PENDING_RETURN", "NOT_RENEWED", "EXPIRED", "PERMANENTLY_EXPIRED" ],
            "nullable" : true
          },
          "trial" : {
            "type" : "boolean",
            "nullable" : true
          },
          "updatedOn" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "warningStage" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "AlertMonitoringPIN" : {
        "type" : "object",
        "description" : "Alert monitoring PIN to update.",
        "properties" : {
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Timestamp in epoch ms when this PIN was created.",
            "nullable" : true,
            "readOnly" : true
          },
          "description" : {
            "type" : "string",
            "description" : "PIN description.",
            "maxLength" : 255,
            "nullable" : true
          },
          "endDateEpochSecExclusive" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "End date in epoch seconds when this PIN expires.",
            "nullable" : true
          },
          "locationUuids" : {
            "type" : "array",
            "description" : "Set of location uuids associated with this PIN.",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "name" : {
            "type" : "string",
            "description" : "PIN name.",
            "maxLength" : 64,
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "rotatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Timestamp in epoch ms when this PIN was last rotated.",
            "nullable" : true,
            "readOnly" : true
          },
          "rotationPeriodDays" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Duration in days that determines when this PIN will be automatically rotated. If an expiration date is specified, that is when the first rotation will occur. Auto-rotation is disabled if this value is null.",
            "minimum" : 1,
            "nullable" : true
          },
          "shared" : {
            "type" : "boolean",
            "description" : "Determines whether this PIN can be shared.",
            "nullable" : true
          },
          "startDateEpochSecInclusive" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start date in epoch seconds when this PIN becomes active.",
            "nullable" : true
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Timestamp in epoch ms when this PIN was last modified.",
            "nullable" : true,
            "readOnly" : true
          },
          "userUuids" : {
            "type" : "array",
            "description" : "Set of user uuids associated with this PIN.",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "value" : {
            "type" : "string",
            "description" : "PIN value.",
            "maxLength" : 16,
            "minLength" : 4,
            "nullable" : true
          }
        },
        "required" : [ "locationUuids", "value" ]
      },
      "AlertMonitoringPinType" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "pin" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "AlertMonitoringRuleTriggerType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "alertMonitoringRulesEventType" : {
              "$ref" : "#/components/schemas/AlertMonitoringRulesEventTypeEnum"
            },
            "locationUuids" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "RUUID",
                "description" : "base 64 (url-safe) uuid string",
                "example" : "AAAAAAAAAAAAAAAAAAAAAA",
                "nullable" : true
              },
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/RuleTriggerTypeEnum"
          }
        }
      },
      "AlertMonitoringRulesEventTypeEnum" : {
        "type" : "string",
        "enum" : [ "ALARM_CREATED", "ALARM_CANCELED", "UNKNOWN" ]
      },
      "AlertMonitoringSubmissionDelayIntervalType" : {
        "type" : "object",
        "properties" : {
          "escalationDelayMinutes" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "minuteOfWeekStart" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "minuteOfWeekStop" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "promptTheme" : {
            "$ref" : "#/components/schemas/NoonlightPromptTheme"
          }
        }
      },
      "AlertMonitoringThreatCaseType" : {
        "type" : "object",
        "description" : "List of threat cases matching the request criteria",
        "properties" : {
          "associatedDeviceUuids" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "nullable" : true
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "deleted" : {
            "type" : "boolean",
            "nullable" : true
          },
          "deviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "locationName" : {
            "type" : "string",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "noonlightAlarmId" : {
            "type" : "string",
            "nullable" : true
          },
          "noonlightVerificationId" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "policyAlertUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "policyAlertUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "promptTheme" : {
            "$ref" : "#/components/schemas/NoonlightPromptTheme"
          },
          "promptTitle" : {
            "type" : "string",
            "nullable" : true
          },
          "sharedClipGroupUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "sirenSettings" : {
            "$ref" : "#/components/schemas/AMSirenSettingsType"
          },
          "status" : {
            "$ref" : "#/components/schemas/ThreatCaseStatus"
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "submissionTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "submitDelayExpireTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "timelineEventList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ThreatCaseTimelineEventType"
            },
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "verificationHistory" : {
            "$ref" : "#/components/schemas/VerificationHistory"
          }
        }
      },
      "Alertmonitoring_AMDeviceHistogramItem" : {
        "type" : "object",
        "description" : "Histogram item representing alert monitoring data for a specific device.",
        "properties" : {
          "count" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The count of alerts for this device.",
            "nullable" : true
          },
          "deviceName" : {
            "type" : "string",
            "description" : "The name of the device.",
            "nullable" : true
          },
          "deviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_AcceptAlertMonitoringTermsOfServiceForLocationRequest" : {
        "type" : "object",
        "description" : "Request to accept the terms of service for alert monitoring at a specific location.",
        "properties" : {
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_AcceptAlertMonitoringTermsOfServiceRequest" : {
        "type" : "object",
        "description" : "Request to accept the terms of service for alert monitoring."
      },
      "Alertmonitoring_AcceptAlertMonitoringTermsOfServiceResponse" : {
        "type" : "object",
        "description" : "Response indicating the result of accepting alert monitoring terms of service.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_AddPromptThreatQualificationsWSRequest" : {
        "type" : "object",
        "properties" : {
          "threatQualification" : {
            "$ref" : "#/components/schemas/NoonlightPromptSelection"
          }
        }
      },
      "Alertmonitoring_AddPromptThreatQualificationsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_AmModifiedBy" : {
        "type" : "object",
        "description" : "Information about who modified an alert monitoring configuration and when.",
        "properties" : {
          "armed" : {
            "type" : "boolean",
            "description" : "Whether the alert monitoring is armed after the modification.",
            "nullable" : true
          },
          "email" : {
            "type" : "string",
            "description" : "The email address of the user who made the modification.",
            "nullable" : true
          },
          "event" : {
            "type" : "string",
            "description" : "Enumeration of possible modification events for alert monitoring.",
            "enum" : [ "UPDATED", "CREATED", "DELETED", "ARMED", "DISARMED", "NO_CHANGE" ],
            "nullable" : true
          },
          "timestamp" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The timestamp when the modification occurred in milliseconds since epoch.",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_CancelThreatCaseWSRequest" : {
        "type" : "object",
        "description" : "Request to cancel a threat case in alert monitoring.",
        "properties" : {
          "pin" : {
            "type" : "string",
            "description" : "PIN code required to cancel the threat case",
            "example" : "1234",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_CancelThreatCaseWSResponse" : {
        "type" : "object",
        "description" : "Response indicating the result of canceling a threat case.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "success" : {
            "type" : "boolean",
            "description" : "Indicates whether the threat case cancellation was successful",
            "example" : true,
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_CountType" : {
        "type" : "object",
        "description" : "Represents count data for a specific day and month with activation/deactivation information.",
        "properties" : {
          "dayOfMonth" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The day of the month (1-31).",
            "nullable" : true
          },
          "deactivated" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The number of deactivated items for this day and month.",
            "nullable" : true
          },
          "month" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The month (1-12).",
            "nullable" : true
          },
          "value" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The count value for this day and month.",
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_CreateCustomPinForNoonlightWSRequest" : {
        "type" : "object",
        "description" : "Request to create a custom PIN for alert monitoring at a specific location.",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "Description of the PIN",
            "example" : "Custom PIN for main entrance access",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name for the PIN",
            "example" : "Custom Main Entrance PIN",
            "nullable" : true
          },
          "pin" : {
            "type" : "string",
            "description" : "Custom PIN code to be created",
            "example" : "5678",
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_CreateCustomPinForNoonlightWSResponse" : {
        "type" : "object",
        "description" : "Response indicating the result of creating a custom PIN for alert monitoring.",
        "properties" : {
          "alreadyExists" : {
            "type" : "boolean",
            "description" : "Indicates whether the PIN already exists",
            "example" : false,
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_CreateNoonlightSettingsForLocationRequest" : {
        "type" : "object",
        "description" : "Request to create alert monitoring settings for a location.",
        "properties" : {
          "noonlightSettings" : {
            "$ref" : "#/components/schemas/NoonlightVersionedSettingsType"
          }
        }
      },
      "Alertmonitoring_CreateNoonlightSettingsForLocationResponse" : {
        "type" : "object",
        "description" : "Response indicating the result of creating alert monitoring settings for a location.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_CreatePinForNoonlightWSRequest" : {
        "type" : "object",
        "description" : "Request to create a PIN for alert monitoring at a specific location.",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "Description of the PIN",
            "example" : "PIN for main entrance access",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name for the PIN",
            "example" : "Main Entrance PIN",
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_CreatePinForNoonlightWSResponse" : {
        "type" : "object",
        "description" : "Response containing the generated PIN for alert monitoring.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "pin" : {
            "type" : "string",
            "description" : "The generated PIN code",
            "example" : "1234",
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_CumulativeChartData" : {
        "type" : "object",
        "description" : "Chart data containing daily and cumulative monthly verification counts.",
        "properties" : {
          "cumulativeMonthlyVerifications" : {
            "type" : "array",
            "description" : "List of cumulative monthly verification counts.",
            "items" : {
              "$ref" : "#/components/schemas/Alertmonitoring_CountType"
            },
            "nullable" : true
          },
          "dailyVerifications" : {
            "type" : "array",
            "description" : "List of daily verification counts.",
            "items" : {
              "$ref" : "#/components/schemas/Alertmonitoring_CountType"
            },
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_DeleteNoonlightSettingsForLocationRequest" : {
        "type" : "object",
        "description" : "Request to delete alert monitoring settings for a location.",
        "properties" : {
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_DeleteNoonlightSettingsForLocationResponse" : {
        "type" : "object",
        "description" : "Response indicating the result of deleting alert monitoring settings for a location.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_DeletePinForNoonlightWSRequest" : {
        "type" : "object",
        "description" : "Request to delete a PIN for alert monitoring at a specific location.",
        "properties" : {
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "pin" : {
            "type" : "string",
            "description" : "PIN code to be deleted",
            "example" : "1234",
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_DeletePinForNoonlightWSResponse" : {
        "type" : "object",
        "description" : "Response indicating the result of deleting a PIN for alert monitoring.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_DeletePromptThreatQualificationByTitleWSRequest" : {
        "type" : "object",
        "properties" : {
          "title" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_DeletePromptThreatQualificationByTitleWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_DisableLocationRequest" : {
        "type" : "object",
        "description" : "Request to disable alert monitoring for a specific location.",
        "properties" : {
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "pin" : {
            "type" : "string",
            "description" : "PIN code required to disable alert monitoring",
            "example" : "1234",
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_DisableLocationResponse" : {
        "type" : "object",
        "description" : "Response indicating the result of disabling alert monitoring for a location.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_DismissThreatCaseWSRequest" : {
        "type" : "object",
        "description" : "Request to dismiss a threat case in alert monitoring.",
        "properties" : {
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "pin" : {
            "type" : "string",
            "description" : "PIN code required to dismiss the threat case",
            "example" : "1234",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_DismissThreatCaseWSResponse" : {
        "type" : "object",
        "description" : "Response indicating the result of dismissing a threat case.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "success" : {
            "type" : "boolean",
            "description" : "Indicates whether the threat case dismissal was successful",
            "example" : true,
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_EnableLocationRequest" : {
        "type" : "object",
        "description" : "Request to enable alert monitoring for a specific location.",
        "properties" : {
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "pin" : {
            "type" : "string",
            "description" : "The PIN code required to enable alert monitoring.",
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_EnableLocationResponse" : {
        "type" : "object",
        "description" : "Response indicating successful enabling of alert monitoring for a location.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_EscalateThreatCaseToAlarmWSRequest" : {
        "type" : "object",
        "description" : "Request to escalate a threat case to an alarm for alert monitoring.",
        "properties" : {
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_EscalateThreatCaseToAlarmWSResponse" : {
        "type" : "object",
        "description" : "Response indicating the result of escalating a threat case to an alarm.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_GenerateMonthlyVerificationsForYearReportForLocationWSRequest" : {
        "type" : "object",
        "description" : "Request to generate monthly verifications for year report for alert monitoring at specific locations.",
        "properties" : {
          "locationUuids" : {
            "type" : "array",
            "description" : "List of location UUIDs to generate monthly verifications for",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_GenerateMonthlyVerificationsForYearReportForLocationWSResponse" : {
        "type" : "object",
        "description" : "Response containing monthly verifications for year report for alert monitoring at specific locations.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "verificationsPerMonthPerLocation" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Map of location UUIDs to their monthly verification counts",
                "nullable" : true
              },
              "description" : "Map of location UUIDs to their monthly verification counts",
              "nullable" : true
            },
            "description" : "Map of location UUIDs to their monthly verification counts",
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_GenerateReportDataForLocationWSRequest" : {
        "type" : "object",
        "description" : "Request to generate report data for alert monitoring at a specific location.",
        "properties" : {
          "endTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "End time for the report period in milliseconds since epoch",
            "example" : 1643673600000,
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "startTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start time for the report period in milliseconds since epoch",
            "example" : 1640995200000,
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_GenerateReportDataForLocationWSResponse" : {
        "type" : "object",
        "description" : "Response containing generated report data for alert monitoring at a specific location.",
        "properties" : {
          "cumulativeChartData" : {
            "$ref" : "#/components/schemas/Alertmonitoring_CumulativeChartData"
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "modifiedBy" : {
            "type" : "array",
            "description" : "List of modification records showing who made changes",
            "items" : {
              "$ref" : "#/components/schemas/Alertmonitoring_AmModifiedBy"
            },
            "nullable" : true
          },
          "threatCaseReportItems" : {
            "type" : "array",
            "description" : "List of threat case report items for the report period",
            "items" : {
              "$ref" : "#/components/schemas/Alertmonitoring_ThreatCaseReportItem"
            },
            "nullable" : true
          },
          "threatCases" : {
            "type" : "array",
            "description" : "Set of uuids corresponding to the threatcases that produced verifications in the report period",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "verificationsByDevice" : {
            "type" : "array",
            "description" : "List of device histogram items showing verifications by device",
            "items" : {
              "$ref" : "#/components/schemas/Alertmonitoring_AMDeviceHistogramItem"
            },
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_GetAlertMonitoringTripwireGroupCountWSRequest" : {
        "type" : "object",
        "description" : "Request to get the count of tripwire groups for alert monitoring.",
        "properties" : {
          "scheduleUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_GetAlertMonitoringTripwireGroupCountWSResponse" : {
        "type" : "object",
        "description" : "Response containing the count of tripwire groups for alert monitoring.",
        "properties" : {
          "count" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Number of tripwire groups",
            "example" : 5,
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_GetMonitoredDoorSensorsForLocationWSRequest" : {
        "type" : "object",
        "description" : "Request to retrieve all monitored door sensors for a location.",
        "properties" : {
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        },
        "required" : [ "locationUuid" ]
      },
      "Alertmonitoring_GetMonitoredDoorSensorsForLocationWSResponse" : {
        "type" : "object",
        "description" : "Response containing all monitored door sensors for a location.",
        "properties" : {
          "doorStates" : {
            "type" : "array",
            "description" : "List of minimal door state information for all monitored door sensors in a location",
            "items" : {
              "$ref" : "#/components/schemas/Door_MinimalDoorStateType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_GetNoonlightSettingsForLocationWSRequest" : {
        "type" : "object",
        "description" : "Request to retrieve alert monitoring settings for a specific location.",
        "properties" : {
          "includePreviousVersions" : {
            "type" : "boolean",
            "description" : "If provided and true, response will contain a list of previous versions of the settings. For debugging purposes.",
            "example" : false,
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_GetNoonlightSettingsForLocationWSResponse" : {
        "type" : "object",
        "description" : "Response containing alert monitoring settings for a specific location.",
        "properties" : {
          "alertMonitoringSettings" : {
            "$ref" : "#/components/schemas/Alertmonitoring_NoonlightWSSettings"
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "previousVersions" : {
            "type" : "array",
            "description" : "List of previous versions of the alert monitoring settings",
            "items" : {
              "$ref" : "#/components/schemas/NoonlightVersionedSettingsType"
            },
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_GetNoonlightSettingsWSRequest" : {
        "type" : "object",
        "description" : "Request to retrieve alert monitoring settings."
      },
      "Alertmonitoring_GetNoonlightSettingsWSResponse" : {
        "type" : "object",
        "description" : "Response containing alert monitoring settings for multiple locations.",
        "properties" : {
          "alertMonitoringSettings" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Alertmonitoring_NoonlightWSSettings"
            },
            "description" : "Map of location UUIDs to their alert monitoring settings",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_GetPromptThreatQualificationsWSRequest" : {
        "type" : "object"
      },
      "Alertmonitoring_GetPromptThreatQualificationsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "threatQualifications" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NoonlightPromptSelection"
            },
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_LocationStatusWSRequest" : {
        "type" : "object",
        "description" : "Request to retrieve alarm monitoring status for a specific location.",
        "properties" : {
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_LocationStatusWSResponse" : {
        "type" : "object",
        "description" : "Response containing alarm monitoring status for a specific location.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "status" : {
            "$ref" : "#/components/schemas/MonitoringEnableStatus"
          }
        }
      },
      "Alertmonitoring_NoonlightWSSettings" : {
        "type" : "object",
        "description" : "Web service settings for Noonlight integration with alert monitoring.",
        "properties" : {
          "acceptedTermsOfService" : {
            "type" : "boolean",
            "nullable" : true
          },
          "badgeAuthDisablesMonitoring" : {
            "type" : "boolean",
            "nullable" : true
          },
          "defaultDelay" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "defaultEmergencyContact" : {
            "$ref" : "#/components/schemas/EmergencyContact"
          },
          "defaultPromptTheme" : {
            "$ref" : "#/components/schemas/NoonlightPromptTheme"
          },
          "deleted" : {
            "type" : "boolean",
            "nullable" : true
          },
          "disabledOnMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The timestamp when Noonlight integration was disabled in milliseconds since epoch.",
            "nullable" : true
          },
          "emergencyContacts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EmergencyResponseContactsScheduleType"
            },
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabledOnMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The timestamp when Noonlight integration was enabled in milliseconds since epoch.",
            "nullable" : true
          },
          "entryInstructions" : {
            "type" : "string",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "manualEscalationSettings" : {
            "$ref" : "#/components/schemas/NoonlightScheduleType"
          },
          "modifiedByEmail" : {
            "type" : "string",
            "nullable" : true
          },
          "modifiedByIntegration" : {
            "type" : "boolean",
            "nullable" : true
          },
          "modifiedByMetadata" : {
            "type" : "string",
            "nullable" : true
          },
          "modifiedByUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "modifiedTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "monitoringMode" : {
            "type" : "string",
            "enum" : [ "MANUAL", "SCHEDULED", "UNKNOWN" ],
            "nullable" : true
          },
          "oneTimePauses" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NoonlightScheduleType"
            },
            "nullable" : true
          },
          "oneTimeSchedules" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NoonlightScheduleType"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "pins" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AlertMonitoringPinType"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "rules" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "schedules" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NoonlightScheduleType"
            },
            "nullable" : true
          },
          "status" : {
            "$ref" : "#/components/schemas/MonitoringEnableStatus"
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "talkdownEnabled" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_OrgStatusWSRequest" : {
        "type" : "object",
        "description" : "Request to retrieve alarm monitoring status for all locations in an organization.",
        "properties" : {
          "includeDeleted" : {
            "type" : "boolean",
            "description" : "If true, includes alert monitoring settings that were soft deleted in the response.",
            "example" : false,
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_OrgStatusWSResponse" : {
        "type" : "object",
        "description" : "Response containing alarm monitoring status for all locations in an organization.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "locationStatuses" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/MonitoringEnableStatus"
            },
            "description" : "Map of location UUIDs to their monitoring enable status",
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_ResetAlertMonitoringTripwireGroupCountWSRequest" : {
        "type" : "object",
        "description" : "Request to reset the count of tripwire groups for alert monitoring.",
        "properties" : {
          "scheduleUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Timestamp in milliseconds since epoch when the reset should occur",
            "example" : 1640995200000,
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_ResetAlertMonitoringTripwireGroupCountWSResponse" : {
        "type" : "object",
        "description" : "Response indicating the result of resetting the tripwire group count for alert monitoring.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_ThreatCaseReportItem" : {
        "type" : "object",
        "description" : "Report item containing threat case information with device and alert details.",
        "properties" : {
          "alertNotFound" : {
            "type" : "boolean",
            "description" : "Whether the alert was not found for this threat case.",
            "nullable" : true
          },
          "alertTypes" : {
            "type" : "array",
            "description" : "List of alert types associated with this threat case.",
            "items" : {
              "$ref" : "#/components/schemas/ActivityEnum"
            },
            "nullable" : true
          },
          "associatedDeviceUuids" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "nullable" : true
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "deleted" : {
            "type" : "boolean",
            "nullable" : true
          },
          "deviceName" : {
            "type" : "string",
            "description" : "The name of the device involved in this threat case.",
            "nullable" : true
          },
          "deviceNotFound" : {
            "type" : "boolean",
            "description" : "Whether the device was not found for this threat case.",
            "nullable" : true
          },
          "deviceType" : {
            "$ref" : "#/components/schemas/DeviceTypeEnum"
          },
          "deviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "locationName" : {
            "type" : "string",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "noonlightAlarmId" : {
            "type" : "string",
            "nullable" : true
          },
          "noonlightVerificationId" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "policyAlertUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "policyAlertUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "promptTheme" : {
            "$ref" : "#/components/schemas/NoonlightPromptTheme"
          },
          "promptTitle" : {
            "type" : "string",
            "nullable" : true
          },
          "reason" : {
            "type" : "string",
            "description" : "The reason for the threat case result.",
            "nullable" : true
          },
          "result" : {
            "type" : "string",
            "description" : "The result of the threat case investigation.",
            "nullable" : true
          },
          "sharedClipGroupUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "sirenSettings" : {
            "$ref" : "#/components/schemas/AMSirenSettingsType"
          },
          "status" : {
            "$ref" : "#/components/schemas/ThreatCaseStatus"
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "submissionTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "submitDelayExpireTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "timelineEventList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ThreatCaseTimelineEventType"
            },
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "verificationHistory" : {
            "$ref" : "#/components/schemas/VerificationHistory"
          }
        }
      },
      "Alertmonitoring_UpdateNoonlightSettingsForLocationRequest" : {
        "type" : "object",
        "description" : "Request to update alert monitoring settings for a location.",
        "properties" : {
          "noonlightSettings" : {
            "$ref" : "#/components/schemas/NoonlightVersionedSettingsType"
          }
        }
      },
      "Alertmonitoring_UpdateNoonlightSettingsForLocationResponse" : {
        "type" : "object",
        "description" : "Response indicating the result of updating alert monitoring settings for a location.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_UpdatePromptThreatQualificationWSRequest" : {
        "type" : "object",
        "properties" : {
          "promptSelection" : {
            "$ref" : "#/components/schemas/NoonlightPromptSelection"
          }
        }
      },
      "Alertmonitoring_UpdatePromptThreatQualificationWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_pin_BasePinWSResponse" : {
        "type" : "object",
        "description" : "Base response containing alert monitoring PIN information.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "pin" : {
            "$ref" : "#/components/schemas/AlertMonitoringPIN"
          }
        }
      },
      "Alertmonitoring_pin_BulkPinsWSResponse" : {
        "type" : "object",
        "description" : "Response containing multiple alert monitoring PINs for bulk operations.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "failedUsers" : {
            "type" : "array",
            "description" : "List of user UUIDs that failed during bulk operations.",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          },
          "pins" : {
            "type" : "array",
            "description" : "List of alert monitoring PINs created or updated.",
            "items" : {
              "$ref" : "#/components/schemas/AlertMonitoringPIN"
            },
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_pin_BulkProvisionPinsWSRequest" : {
        "type" : "object",
        "description" : "Request to bulk provision alert monitoring PINs for multiple users.",
        "properties" : {
          "endDateEpochSecExclusive" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "End date in epoch seconds when these PINs expire. PINs never expire if this value is left null.",
            "minimum" : 0,
            "nullable" : true
          },
          "locationUuids" : {
            "type" : "array",
            "description" : "Set of location uuids these PINs are assigned to.",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "notifyUsers" : {
            "type" : "boolean",
            "default" : false,
            "description" : "If enabled, sends an email to the assigned users notifying them of their new PIN code.",
            "nullable" : true
          },
          "pinLength" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Length of PINs to be generated. Accepts length between 4 and 16.",
            "maximum" : 16,
            "minimum" : 4,
            "nullable" : true
          },
          "rotationPeriodDays" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Period in days when PINs should be automatically rotated. If left null, PINs will not be auto-rotated.",
            "minimum" : 1,
            "nullable" : true
          },
          "startDateEpochSecInclusive" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start date in epoch seconds when these PINs become active. PINs activate immediately if this value is left null.",
            "minimum" : 0,
            "nullable" : true
          },
          "userUuids" : {
            "type" : "array",
            "description" : "Set of user uuids to provision PINs for.",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        },
        "required" : [ "locationUuids", "pinLength", "userUuids" ]
      },
      "Alertmonitoring_pin_BulkRotatePinsWSRequest" : {
        "type" : "object",
        "description" : "Request to bulk rotate multiple alert monitoring PINs.",
        "properties" : {
          "notifyUsers" : {
            "type" : "boolean",
            "default" : false,
            "description" : "If enabled, sends an email to the assigned users notifying them of their new PIN code.",
            "nullable" : true
          },
          "pinLength" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Length of PINs to be generated. Accepts length between 4 and 16.",
            "maximum" : 16,
            "minimum" : 4,
            "nullable" : true
          },
          "pinUuids" : {
            "type" : "array",
            "description" : "Uuids of PINs to rotate in bulk.",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        },
        "required" : [ "pinLength", "pinUuids" ]
      },
      "Alertmonitoring_pin_CreatePinWSRequest" : {
        "type" : "object",
        "description" : "Request to create a new alert monitoring PIN.",
        "properties" : {
          "notifyUser" : {
            "type" : "boolean",
            "default" : false,
            "description" : "If enabled, sends an email to the user assigned this PIN notifying them of their new PIN code. If no user is assigned, notifications will not be sent.",
            "nullable" : true
          },
          "pin" : {
            "$ref" : "#/components/schemas/AlertMonitoringPIN"
          }
        },
        "required" : [ "pin" ]
      },
      "Alertmonitoring_pin_DeletePinWSRequest" : {
        "type" : "object",
        "description" : "Request to delete an alert monitoring PIN by UUID.",
        "properties" : {
          "pinUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        },
        "required" : [ "pinUuid" ]
      },
      "Alertmonitoring_pin_FindPinsByLocationAndUserWSRequest" : {
        "type" : "object",
        "description" : "Request to find alert monitoring PINs filtered by location and/or user.",
        "properties" : {
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_pin_FindPinsByOrgWSRequest" : {
        "type" : "object",
        "description" : "Request to find alert monitoring PINs in the organization with optional filtering and pagination.",
        "properties" : {
          "filter" : {
            "$ref" : "#/components/schemas/PinQueryFilter"
          },
          "pageRequest" : {
            "$ref" : "#/components/schemas/DynamoPageRequest"
          }
        }
      },
      "Alertmonitoring_pin_FindPinsWSResponse" : {
        "type" : "object",
        "description" : "Response containing a list of alert monitoring PINs with optional pagination information.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "lastEvaluatedKey" : {
            "type" : "string",
            "description" : "Last evaluated key for pagination in subsequent requests.",
            "nullable" : true
          },
          "pins" : {
            "type" : "array",
            "description" : "List of alert monitoring PINs found.",
            "items" : {
              "$ref" : "#/components/schemas/AlertMonitoringPIN"
            },
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_pin_GetAvailableALMPinCodeWSRequest" : {
        "type" : "object",
        "description" : "Request to get an available PIN code for alert monitoring.",
        "properties" : {
          "pinLength" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Length of PIN to be generated.",
            "nullable" : true
          }
        },
        "required" : [ "pinLength" ]
      },
      "Alertmonitoring_pin_GetAvailableALMPinCodeWSResponse" : {
        "type" : "object",
        "description" : "Response containing an available PIN code for alert monitoring.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "pinCode" : {
            "type" : "string",
            "description" : "The generated PIN code for alert monitoring.",
            "nullable" : true
          }
        }
      },
      "Alertmonitoring_pin_GetPinWSRequest" : {
        "type" : "object",
        "description" : "Request to retrieve an alert monitoring PIN by UUID.",
        "properties" : {
          "pinUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        },
        "required" : [ "pinUuid" ]
      },
      "Alertmonitoring_pin_RotatePinWSRequest" : {
        "type" : "object",
        "description" : "Request to rotate an alert monitoring PIN.",
        "properties" : {
          "notifyUser" : {
            "type" : "boolean",
            "default" : false,
            "description" : "If enabled, sends an email to the user assigned this PIN notifying them of their new PIN code. If no user is assigned, notifications will not be sent.",
            "nullable" : true
          },
          "pinUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        },
        "required" : [ "pinUuid" ]
      },
      "Alertmonitoring_pin_UpdatePinWSRequest" : {
        "type" : "object",
        "description" : "Request to update an existing alert monitoring PIN.",
        "properties" : {
          "notifyUser" : {
            "type" : "boolean",
            "default" : false,
            "description" : "If enabled, sends an email to the user assigned this PIN notifying them of their current PIN code. If no user is assigned, notifications will not be sent.",
            "nullable" : true
          },
          "pin" : {
            "$ref" : "#/components/schemas/AlertMonitoringPIN"
          },
          "selectiveUpdate" : {
            "type" : "boolean",
            "default" : false,
            "description" : "If set to true, only the non-null fields will be considered for this update.",
            "nullable" : true
          }
        },
        "required" : [ "pin" ]
      },
      "AlteredView" : {
        "type" : "object",
        "description" : "Map of device facet UUIDs to altered view configurations",
        "properties" : {
          "crop" : {
            "$ref" : "#/components/schemas/CroppedPermyriadRect"
          },
          "dewarp" : {
            "$ref" : "#/components/schemas/DewarpedView"
          }
        }
      },
      "AmtSettings" : {
        "type" : "object",
        "properties" : {
          "alertUnauthorizedFaces" : {
            "type" : "boolean",
            "nullable" : true
          },
          "createSeekPoints" : {
            "type" : "boolean",
            "nullable" : true
          },
          "doorInfoMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/BadgeIntegrationDoorInfoType"
            },
            "nullable" : true
          },
          "email" : {
            "type" : "string",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabledTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "enablingUser" : {
            "type" : "string",
            "nullable" : true
          },
          "enablingUserUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "identifyFacesFromBadge" : {
            "type" : "boolean",
            "nullable" : true
          },
          "password" : {
            "type" : "string",
            "nullable" : true
          },
          "rhombusToken" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "saveClips" : {
            "type" : "boolean",
            "nullable" : true
          },
          "webhookId" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "webhookSignatureSecret" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "AperioActivatorStateEvent" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "componentCompositeUuid" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "state" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "stateUpdatedAtMs" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "correlationId" : {
            "type" : "string",
            "nullable" : true
          },
          "createdAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEventEnumType"
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "AperioDoorExtension" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "aperioDoorDeviceId" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "byte",
                "nullable" : true
              },
              "nullable" : true
            },
            "aperioDoorId" : {
              "type" : "string",
              "nullable" : true
            },
            "aperioGatewayId" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "byte",
                "nullable" : true
              },
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "baseType" : {
            "$ref" : "#/components/schemas/ComponentBaseEnumType"
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "ownerHardwareType" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "portImmutable" : {
            "type" : "boolean",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEnumType"
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        },
        "required" : [ "aperioDoorDeviceId", "aperioDoorId", "aperioGatewayId" ]
      },
      "AperioDoorExtensionShadow" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "activatorState" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "activatorStateUpdatedAtMs" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "aperioDoorDeviceId" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "byte",
                "nullable" : true
              },
              "nullable" : true
            },
            "aperioGatewayId" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "byte",
                "nullable" : true
              },
              "nullable" : true
            },
            "aperioId" : {
              "type" : "string",
              "nullable" : true
            },
            "clockRetrievedAtMs" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "connected" : {
              "type" : "boolean",
              "nullable" : true
            },
            "connectionStateUpdatedAtMs" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "deviceClockSec" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "deviceTimezone" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "doorMode" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "doorModeUpdatedAtMs" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "dtcs" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/DtcInfo"
              },
              "nullable" : true
            },
            "dtcsUpdatedAtMs" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "gatewayComponentId" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "handleState" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "handleStateUpdatedAtMs" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "keyCylinderState" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "keyCylinderStateUpdatedAtMs" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "lastSeenMs" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "name" : {
              "type" : "string",
              "nullable" : true
            },
            "removed" : {
              "type" : "boolean",
              "nullable" : true
            },
            "stateUpdatedAtMs" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "tamperState" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "tamperStateUpdatedAtMs" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentShadowEnumType"
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "AperioDoorExtensionStateEvent" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "activatorState" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "activatorStateUpdatedAtMs" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "aperioId" : {
              "type" : "string",
              "nullable" : true
            },
            "clockRetrievedAtMs" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "componentCompositeUuid" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "connected" : {
              "type" : "boolean",
              "nullable" : true
            },
            "connectionStateUpdatedAtMs" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "deviceClockSec" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "deviceTimezone" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "doorMode" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "doorModeUpdatedAtMs" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "dtcs" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/DtcInfo"
              },
              "nullable" : true
            },
            "handleState" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "handleStateUpdatedAtMs" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "keyCylinderState" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "keyCylinderStateUpdatedAtMs" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "removed" : {
              "type" : "boolean",
              "nullable" : true
            },
            "tamperState" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "tamperStateUpdatedAtMs" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "correlationId" : {
            "type" : "string",
            "nullable" : true
          },
          "createdAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEventEnumType"
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "AperioDoorHandleStateEvent" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "componentCompositeUuid" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "state" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "stateUpdatedAtMs" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "correlationId" : {
            "type" : "string",
            "nullable" : true
          },
          "createdAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEventEnumType"
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "AperioDoorModeEvent" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "componentCompositeUuid" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "state" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "stateUpdatedAtMs" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "correlationId" : {
            "type" : "string",
            "nullable" : true
          },
          "createdAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEventEnumType"
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "AperioDoorPositionIndicator" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "aperioDoorId" : {
              "type" : "string",
              "nullable" : true
            },
            "aperioGatewayId" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "byte",
                "nullable" : true
              },
              "nullable" : true
            },
            "dpiType" : {
              "$ref" : "#/components/schemas/DoorPositionIndicatorEnumType"
            },
            "normalState" : {
              "$ref" : "#/components/schemas/NormalStateEnumType"
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "baseType" : {
            "$ref" : "#/components/schemas/ComponentBaseEnumType"
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "ownerHardwareType" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "portImmutable" : {
            "type" : "boolean",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEnumType"
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "AperioDoorReader" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "aperioDoorId" : {
              "type" : "string",
              "nullable" : true
            },
            "aperioGatewayId" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "byte",
                "nullable" : true
              },
              "nullable" : true
            },
            "disableCardReader" : {
              "type" : "boolean",
              "nullable" : true
            },
            "disableKeypad" : {
              "type" : "boolean",
              "nullable" : true
            },
            "disableWaveToUnlock" : {
              "type" : "boolean",
              "nullable" : true
            },
            "otherReaderUnlockAudioFeedbackEnabled" : {
              "type" : "boolean",
              "nullable" : true
            },
            "readerType" : {
              "$ref" : "#/components/schemas/DoorReaderEnumType"
            },
            "remoteUnlockAudioFeedbackEnabled" : {
              "type" : "boolean",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "baseType" : {
            "$ref" : "#/components/schemas/ComponentBaseEnumType"
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "ownerHardwareType" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "portImmutable" : {
            "type" : "boolean",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEnumType"
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "AperioDoorRelay" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "aperioDoorId" : {
              "type" : "string",
              "nullable" : true
            },
            "aperioGatewayId" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "byte",
                "nullable" : true
              },
              "nullable" : true
            },
            "deviceId" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "byte",
                "nullable" : true
              },
              "nullable" : true
            },
            "relayType" : {
              "$ref" : "#/components/schemas/DoorRelayEnumType"
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "baseType" : {
            "$ref" : "#/components/schemas/ComponentBaseEnumType"
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "ownerHardwareType" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "portImmutable" : {
            "type" : "boolean",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEnumType"
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "AperioDoorRequestToExit" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "aperioDoorId" : {
              "type" : "string",
              "nullable" : true
            },
            "aperioGatewayId" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "byte",
                "nullable" : true
              },
              "nullable" : true
            },
            "intentOnly" : {
              "type" : "boolean",
              "nullable" : true
            },
            "intentOnlyEvents" : {
              "type" : "boolean",
              "nullable" : true
            },
            "normalState" : {
              "$ref" : "#/components/schemas/NormalStateEnumType"
            },
            "rexType" : {
              "$ref" : "#/components/schemas/RequestToExitEnumType"
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "baseType" : {
            "$ref" : "#/components/schemas/ComponentBaseEnumType"
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "ownerHardwareType" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "portImmutable" : {
            "type" : "boolean",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEnumType"
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "AperioDtcEvent" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "aperioDeviceId" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "byte",
                "nullable" : true
              },
              "nullable" : true
            },
            "componentCompositeUuid" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "dtcs" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/DtcInfo"
              },
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "correlationId" : {
            "type" : "string",
            "nullable" : true
          },
          "createdAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEventEnumType"
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "AperioGateway" : {
        "type" : "object",
        "properties" : {
          "aperioGatewayId" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "byte",
              "nullable" : true
            },
            "nullable" : true
          },
          "baseType" : {
            "$ref" : "#/components/schemas/ComponentBaseEnumType"
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "hwVersion" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "byte",
              "nullable" : true
            },
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "oemCode" : {
            "type" : "string",
            "nullable" : true
          },
          "oemGeneratedAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "ownerHardwareType" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "portImmutable" : {
            "type" : "boolean",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEnumType"
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "AperioGatewayConnectionStateChangeEvent" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "aperioId" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "byte",
                "nullable" : true
              },
              "nullable" : true
            },
            "connected" : {
              "type" : "boolean",
              "nullable" : true
            },
            "ipAddress" : {
              "type" : "string",
              "nullable" : true
            },
            "stateChangedAtMs" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "correlationId" : {
            "type" : "string",
            "nullable" : true
          },
          "createdAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEventEnumType"
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "AperioGatewayShadow" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "aperioId" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "byte",
                "nullable" : true
              },
              "nullable" : true
            },
            "connected" : {
              "type" : "boolean",
              "nullable" : true
            },
            "connectionStateUpdatedAtMs" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "deviceClockSec" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "deviceTimezone" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "dtcs" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/DtcInfo"
              },
              "nullable" : true
            },
            "firmwareVersion" : {
              "type" : "string",
              "nullable" : true
            },
            "hwVersion" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "byte",
                "nullable" : true
              },
              "nullable" : true
            },
            "ipAddress" : {
              "type" : "string",
              "nullable" : true
            },
            "lastSeenMs" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "oemCode" : {
              "type" : "string",
              "nullable" : true
            },
            "oemCodeFetchedAtMs" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "protocolVersionMajor" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "protocolVersionMinor" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "protocolVersionPatch" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "rawTamperState" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "stateUpdatedAtMs" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentShadowEnumType"
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "AperioGatewayStateEvent" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "aperioId" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "byte",
                "nullable" : true
              },
              "nullable" : true
            },
            "connected" : {
              "type" : "boolean",
              "nullable" : true
            },
            "connectionStateUpdatedAtMs" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "deviceClockSec" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "deviceTimezone" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "dtcs" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/DtcInfo"
              },
              "nullable" : true
            },
            "firmwareVersion" : {
              "type" : "string",
              "nullable" : true
            },
            "hwVersion" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "byte",
                "nullable" : true
              },
              "nullable" : true
            },
            "ipAddress" : {
              "type" : "string",
              "nullable" : true
            },
            "lastSeenMs" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "oemCode" : {
              "type" : "string",
              "nullable" : true
            },
            "oemCodeFetchedAtMs" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "protocolVersionMajor" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "protocolVersionMinor" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "protocolVersionPatch" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "rawTamperState" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "correlationId" : {
            "type" : "string",
            "nullable" : true
          },
          "createdAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEventEnumType"
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "AperioKeyCylinderStateEvent" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "componentCompositeUuid" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "state" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "stateUpdatedAtMs" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "correlationId" : {
            "type" : "string",
            "nullable" : true
          },
          "createdAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEventEnumType"
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "AperioTamperStateEvent" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "aperioDoorId" : {
              "type" : "string",
              "nullable" : true
            },
            "componentCompositeUuid" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "state" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "stateUpdatedAtMs" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "correlationId" : {
            "type" : "string",
            "nullable" : true
          },
          "createdAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEventEnumType"
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "AperioType" : {
        "type" : "object",
        "allOf" : [ ],
        "nullable" : true,
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "ApiClientTypeEnum" : {
        "type" : "string",
        "description" : "Optional filter for API client types",
        "enum" : [ "PARTNER_DEVELOPER", "DEVELOPER", "INTERNAL_SALESFORCE", "TVOS", "KIOSK", "KEYPAD", "SQUARE", "KISI", "OPENPATH", "TOAST", "BRIVO", "EXECUTABLE", "HALO", "SALTO", "BUTTERFLYMX", "GENEA", "PRODATAKEY", "ENVOY", "AMT", "PIMLOC", "PLACEOS", "OMNIALERT", "FLIC", "NINEONEONECELLULAR", "CHATBOT", "UNKNOWN" ]
      },
      "ApiTokenApplicationType" : {
        "type" : "object",
        "properties" : {
          "authType" : {
            "$ref" : "#/components/schemas/ApiTokenAuthTypeEnum"
          },
          "authenticationTokenHash" : {
            "type" : "string",
            "nullable" : true
          },
          "clientDetails" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "clientType" : {
            "$ref" : "#/components/schemas/ApiClientTypeEnum"
          },
          "csr" : {
            "type" : "string",
            "nullable" : true
          },
          "displayName" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "permissionGroupUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "tokenUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "ApiTokenAuthTypeEnum" : {
        "type" : "string",
        "description" : "Authentication type for the API token",
        "enum" : [ "API_TOKEN", "CERT" ]
      },
      "ApiTokenEventOriginator" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "tokenName" : {
              "type" : "string",
              "nullable" : true
            },
            "tokenUuid" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/EventOriginatorEnum"
          }
        }
      },
      "ApiTokenLockdownEventOriginator" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "tokenName" : {
              "type" : "string",
              "nullable" : true
            },
            "tokenUuid" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/LockdownEventOriginatorEnumType"
          }
        }
      },
      "ApiTokenType" : {
        "type" : "object",
        "description" : "List of API tokens",
        "properties" : {
          "allowedRequetsPerSecond" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "authType" : {
            "$ref" : "#/components/schemas/ApiTokenAuthTypeEnum"
          },
          "authenticationTokenHash" : {
            "type" : "string",
            "nullable" : true
          },
          "cert" : {
            "type" : "string",
            "nullable" : true
          },
          "certFingerprint" : {
            "type" : "string",
            "nullable" : true
          },
          "clientDetails" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "clientType" : {
            "$ref" : "#/components/schemas/ApiClientTypeEnum"
          },
          "csr" : {
            "type" : "string",
            "nullable" : true
          },
          "displayName" : {
            "type" : "string",
            "nullable" : true
          },
          "hashed" : {
            "type" : "boolean",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "permissionGroupUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "tokenUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "AspectRatio" : {
        "type" : "object",
        "properties" : {
          "height" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "width" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "AudioExpressionDetectionConfig" : {
        "type" : "object",
        "properties" : {
          "category" : {
            "$ref" : "#/components/schemas/ActivityEnum"
          },
          "confidence_min" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "expression" : {
            "type" : "string",
            "nullable" : true
          },
          "loudness_min" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "AudioGatewayStatusEnum" : {
        "type" : "string",
        "enum" : [ "SUCCESS", "ERROR", "BACKOFF", "IGNORED", "INITIATED", "SUBMITTED", "UNKNOWN" ]
      },
      "AudioLoudActivityEventType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "audioLufsThreshold" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "activityEvent" : {
            "$ref" : "#/components/schemas/ActivityEnum"
          }
        }
      },
      "AudioParamConfig" : {
        "type" : "object",
        "properties" : {
          "expressions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AudioExpressionDetectionConfig"
            },
            "nullable" : true
          },
          "significant_loudness_min" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "AudioPlaybackActionRecordType" : {
        "type" : "object",
        "properties" : {
          "audioClipUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "audioGatewayStatuses" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AudioGatewayStatusEnum"
            },
            "nullable" : true
          }
        }
      },
      "AudioPlaybackActionType" : {
        "type" : "object",
        "properties" : {
          "audioClipUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "audioGateways" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          },
          "loopDurationSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "playCount" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "AudioPolicyType" : {
        "type" : "object",
        "description" : "List of audio policies using the schedule",
        "properties" : {
          "defaultTriggers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AudioTriggerType"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "scheduledTriggers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AudioScheduledTriggerType"
            },
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "AudioScheduledTriggerType" : {
        "type" : "object",
        "properties" : {
          "schedule" : {
            "$ref" : "#/components/schemas/WeeklyRepeatingScheduleType"
          },
          "triggerSet" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AudioTriggerType"
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "AudioTriggerType" : {
        "type" : "object",
        "properties" : {
          "activity" : {
            "$ref" : "#/components/schemas/ActivityEnum"
          },
          "threshold" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "AudioUploadMetadataType" : {
        "type" : "object",
        "description" : "List of audio upload metadata for the organization",
        "properties" : {
          "audioPlaintext" : {
            "type" : "string",
            "nullable" : true
          },
          "audioSSML" : {
            "type" : "string",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "displayName" : {
            "type" : "string",
            "nullable" : true
          },
          "durationMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "mutable" : {
            "type" : "boolean",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "s3ObjectKey" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "voiceId" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Audiogateway_AudioGatewayOfflineLanStreamingInfo" : {
        "type" : "object",
        "description" : "Information for offline LAN streaming of audio gateway content.",
        "properties" : {
          "accessToken" : {
            "type" : "string",
            "description" : "Access token for offline LAN streaming",
            "example" : "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
            "nullable" : true
          },
          "lanAddresses" : {
            "type" : "array",
            "description" : "List of LAN addresses for offline streaming",
            "items" : {
              "type" : "string",
              "description" : "List of LAN addresses for offline streaming",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Audiogateway_DeleteAudioGatewayWSRequest" : {
        "type" : "object",
        "description" : "Request to remove an audio gateway from organization.",
        "properties" : {
          "gatewayUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "mummify" : {
            "type" : "boolean",
            "description" : "Indicates whether to mummify the audio gateway",
            "example" : false,
            "nullable" : true
          }
        }
      },
      "Audiogateway_DeleteAudioGatewayWSResponse" : {
        "type" : "object",
        "description" : "Response indicating the result of deleting an audio gateway.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "responseStatus" : {
            "type" : "string",
            "description" : "Status of the delete operation",
            "enum" : [ "BASIC_AUTH_FAILED", "PASSWORD_MISMATCH", "SAME_PASSWORD", "USER_EXISTS", "USER_NOT_FOUND", "DEVICE_NOT_FOUND", "POLICY_NOT_FOUND", "LOCATION_NOT_FOUND", "ORG_NOT_FOUND", "BAD_INPUT", "SUCCESS", "PASSWORD_TOO_SHORT" ],
            "nullable" : true
          }
        }
      },
      "Audiogateway_GetAudioGatewayConfigWSRequest" : {
        "type" : "object",
        "description" : "Request to get configuration for an audio gateway.",
        "properties" : {
          "audioGatewayUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Audiogateway_GetAudioGatewayConfigWSResponse" : {
        "type" : "object",
        "description" : "Response containing configuration for an audio gateway.",
        "properties" : {
          "config" : {
            "$ref" : "#/components/schemas/IAudioUserConfig"
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Audiogateway_GetAudioGatewayOfflineLanStreamingInfoWSRequest" : {
        "type" : "object",
        "description" : "Request to get offline LAN streaming information for all audio gateways."
      },
      "Audiogateway_GetAudioGatewayOfflineLanStreamingInfoWSResponse" : {
        "type" : "object",
        "description" : "Response containing offline LAN streaming information for all audio gateways.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "info" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Audiogateway_AudioGatewayOfflineLanStreamingInfo"
            },
            "description" : "Map of audio gateway UUIDs to their offline LAN streaming information",
            "nullable" : true
          }
        }
      },
      "Audiogateway_GetAudioSeekpointsWSRequest" : {
        "type" : "object",
        "description" : "Request to get audio seek points for an audio gateway.",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          },
          "duration" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Duration in seconds",
            "example" : 3600,
            "nullable" : true
          },
          "startTime" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start time in milliseconds since epoch",
            "example" : 1640995200000,
            "nullable" : true
          }
        }
      },
      "Audiogateway_GetAudioSeekpointsWSResponse" : {
        "type" : "object",
        "description" : "Response containing audio seek points for an audio gateway.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "footageSeekPoints" : {
            "type" : "array",
            "description" : "List of audio seek points for the specified time period",
            "items" : {
              "$ref" : "#/components/schemas/FootageSeekPointV2Type"
            },
            "nullable" : true
          }
        }
      },
      "Audiogateway_GetFullAudioGatewayStateWSRequest" : {
        "type" : "object",
        "description" : "Request to get detailed information about the state of a specified audio gateway.",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          },
          "force" : {
            "type" : "boolean",
            "description" : "Force refresh of the device state",
            "example" : false,
            "nullable" : true
          }
        }
      },
      "Audiogateway_GetFullAudioGatewayStateWSResponse" : {
        "type" : "object",
        "description" : "Response containing detailed information about the state of a specified audio gateway.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "fullAudioGatewayState" : {
            "$ref" : "#/components/schemas/FullDeviceStateType"
          }
        }
      },
      "Audiogateway_GetMediaUrisWSRequest" : {
        "type" : "object",
        "description" : "Request to get media URIs for an audio gateway to retrieve footage.",
        "properties" : {
          "gatewayUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          }
        }
      },
      "Audiogateway_GetMediaUrisWSResponse" : {
        "type" : "object",
        "description" : "Response containing media URIs for audio gateway footage retrieval.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "lanCheckUrls" : {
            "type" : "array",
            "description" : "List of LAN check URLs to verify device availability on local network",
            "items" : {
              "type" : "string",
              "description" : "List of LAN check URLs to verify device availability on local network",
              "nullable" : true
            },
            "nullable" : true
          },
          "lanLiveMpdUris" : {
            "type" : "array",
            "description" : "List of LAN live MPD URIs for local network media streaming",
            "items" : {
              "type" : "string",
              "description" : "List of LAN live MPD URIs for local network media streaming",
              "nullable" : true
            },
            "nullable" : true
          },
          "lanLiveOpusUris" : {
            "type" : "array",
            "description" : "List of LAN live Opus URIs for local network audio streaming",
            "items" : {
              "type" : "string",
              "description" : "List of LAN live Opus URIs for local network audio streaming",
              "nullable" : true
            },
            "nullable" : true
          },
          "lanVodMpdUrisTemplates" : {
            "type" : "array",
            "description" : "List of LAN VOD MPD URI templates for local network video on demand",
            "items" : {
              "type" : "string",
              "description" : "List of LAN VOD MPD URI templates for local network video on demand",
              "nullable" : true
            },
            "nullable" : true
          },
          "wanLiveMpdUri" : {
            "type" : "string",
            "description" : "WAN live MPD URI for real-time media streaming",
            "nullable" : true
          },
          "wanLiveOpusUri" : {
            "type" : "string",
            "description" : "WAN live Opus URI for real-time audio streaming",
            "nullable" : true
          },
          "wanVodMpdUriTemplate" : {
            "type" : "string",
            "description" : "WAN VOD MPD URI template for video on demand content",
            "nullable" : true
          }
        }
      },
      "Audiogateway_GetMinimalAudioGatewayStatesWSRequest" : {
        "type" : "object",
        "description" : "Request to get basic state information for all audio gateways."
      },
      "Audiogateway_GetMinimalAudioGatewayStatesWSResponse" : {
        "type" : "object",
        "description" : "Response containing basic state information for all audio gateways.",
        "properties" : {
          "audioGatewayStates" : {
            "type" : "array",
            "description" : "List of minimal audio gateway state information",
            "items" : {
              "$ref" : "#/components/schemas/MinimalAudioGatewayStateType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Audiogateway_RebootAudioGatewayWSRequest" : {
        "type" : "object",
        "description" : "Request to reboot the specified audio gateway.",
        "properties" : {
          "audioGatewayUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        },
        "required" : [ "audioGatewayUuid" ]
      },
      "Audiogateway_UpdateAudioGatewayConfigWSRequest" : {
        "type" : "object",
        "description" : "Request to update configuration for an audio gateway.",
        "properties" : {
          "audioExternalMicBoost" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Adjust boost for external mic. Integer between 0 and 3.",
            "example" : 1,
            "nullable" : true
          },
          "audioExternalMicVolume" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Adjust volume for external mic. Integer between 0 and 63.",
            "example" : 32,
            "nullable" : true
          },
          "audioExternalSpeakerVolume" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Adjust volume for external speaker. Integer between 0 and 127.",
            "example" : 64,
            "nullable" : true
          },
          "audioInternalMicAecEnabled" : {
            "type" : "boolean",
            "description" : "Enable acoustic echo cancellation for internal microphone",
            "example" : true,
            "nullable" : true
          },
          "audioInternalMicBoost" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Adjust boost for internal mic. Integer between 0 and 3.",
            "example" : 1,
            "nullable" : true
          },
          "audioInternalMicVolume" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Adjust volume for internal mic. Integer between 0 and 63.",
            "example" : 32,
            "nullable" : true
          },
          "audioInternalSpeakerVolume" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Adjust volume for internal speaker. Integer between 0 and 127.",
            "example" : 64,
            "nullable" : true
          },
          "audioRecord" : {
            "type" : "boolean",
            "description" : "Enable/disable audio recording. Cannot set to true unless organization settings allow it",
            "example" : true,
            "nullable" : true
          },
          "audioUseExternalMic" : {
            "type" : "boolean",
            "description" : "Use external microphone instead of internal",
            "example" : false,
            "nullable" : true
          },
          "audioUseExternalSpeaker" : {
            "type" : "boolean",
            "description" : "Use external speaker instead of internal",
            "example" : false,
            "nullable" : true
          },
          "deviceMicEnabled" : {
            "type" : "boolean",
            "description" : "Enable/disable device mic. Cannot set to true unless organization settings allow it",
            "example" : true,
            "nullable" : true
          },
          "deviceSpeakerEnabled" : {
            "type" : "boolean",
            "description" : "Enable/disable device speaker",
            "example" : true,
            "nullable" : true
          },
          "frontendEqualizerHighShelf" : {
            "$ref" : "#/components/schemas/FrontendEqualizerSettings"
          },
          "frontendEqualizerLowShelf" : {
            "$ref" : "#/components/schemas/FrontendEqualizerSettings"
          },
          "frontendEqualizerPeaking1" : {
            "$ref" : "#/components/schemas/FrontendEqualizerSettings"
          },
          "frontendEqualizerPeaking2" : {
            "$ref" : "#/components/schemas/FrontendEqualizerSettings"
          },
          "frontendEqualizerPeaking3" : {
            "$ref" : "#/components/schemas/FrontendEqualizerSettings"
          },
          "frontendNoiseSuppression" : {
            "type" : "boolean",
            "description" : "Enable frontend noise suppression",
            "example" : true,
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          }
        }
      },
      "Audiogateway_UpdateAudioGatewayConfigWSResponse" : {
        "type" : "object",
        "description" : "Response indicating the result of updating audio gateway configuration.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Audiogateway_UpdateAudioGatewayDetailsWSRequest" : {
        "type" : "object",
        "description" : "Request to update details for an audio gateway. Note: uuid is a required field.",
        "properties" : {
          "associatedCameras" : {
            "type" : "array",
            "description" : "List of associated camera device UUIDs",
            "items" : {
              "type" : "string",
              "format" : "DeviceFacetUuid",
              "description" : "RUUID with optional appended facet information",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
              "nullable" : true
            },
            "nullable" : true
          },
          "associatedCamerasUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "deleted" : {
            "type" : "boolean",
            "description" : "Indicates whether the audio gateway is deleted",
            "example" : false,
            "nullable" : true
          },
          "deletedUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "description" : "Description of the audio gateway",
            "example" : "Audio gateway for main entrance monitoring",
            "nullable" : true
          },
          "descriptionUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "floorNumber" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Floor number where the audio gateway is located",
            "example" : 1,
            "nullable" : true
          },
          "floorNumberUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "description" : "Latitude coordinate of the audio gateway location",
            "example" : 37.7749,
            "nullable" : true
          },
          "latitudeUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "locationUuidUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "description" : "Longitude coordinate of the audio gateway location",
            "example" : -122.4194,
            "nullable" : true
          },
          "longitudeUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the audio gateway",
            "example" : "Main Entrance Audio Gateway",
            "nullable" : true
          },
          "nameUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "policyUuidUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "subLocationsHierarchyKeyUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Audiogateway_UpdateAudioGatewayDetailsWSResponse" : {
        "type" : "object",
        "description" : "Response indicating the result of updating audio gateway details.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Audioplayback_CancelLoopingAudioPlaybackWSRequest" : {
        "type" : "object",
        "description" : "Request to cancel looping audio playback on audio devices.",
        "properties" : {
          "audioDevices" : {
            "type" : "array",
            "description" : "List of audio device UUIDs to cancel looping playback on",
            "items" : {
              "type" : "string",
              "format" : "DeviceFacetUuid",
              "description" : "RUUID with optional appended facet information",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Audioplayback_CancelLoopingAudioPlaybackWSResponse" : {
        "type" : "object",
        "description" : "Response from canceling looping audio playback.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "successMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "boolean",
              "description" : "Map of audio device UUIDs to success status for canceling playback",
              "nullable" : true
            },
            "description" : "Map of audio device UUIDs to success status for canceling playback",
            "nullable" : true
          }
        }
      },
      "Audioplayback_DeleteAudioUploadMetadataWSRequest" : {
        "type" : "object",
        "description" : "Request to delete audio upload metadata.",
        "properties" : {
          "audioUploadUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Audioplayback_DeleteAudioUploadMetadataWSResponse" : {
        "type" : "object",
        "description" : "Response from deleting audio upload metadata.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Audioplayback_GetAudioUploadMetadataForOrgWSRequest" : {
        "type" : "object",
        "description" : "Request to get audio upload metadata for organization."
      },
      "Audioplayback_GetAudioUploadMetadataForOrgWSResponse" : {
        "type" : "object",
        "description" : "Response containing audio upload metadata for organization.",
        "properties" : {
          "audioUploadMetadata" : {
            "type" : "array",
            "description" : "List of audio upload metadata for the organization",
            "items" : {
              "$ref" : "#/components/schemas/AudioUploadMetadataType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Audioplayback_PlayAudioUploadWSRequest" : {
        "type" : "object",
        "description" : "Request to play an uploaded audio clip through audio devices.",
        "properties" : {
          "audioGatewayUuids" : {
            "type" : "array",
            "description" : "List of audio gateway device UUIDs to play audio through",
            "items" : {
              "type" : "string",
              "format" : "DeviceFacetUuid",
              "description" : "RUUID with optional appended facet information",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
              "nullable" : true
            },
            "nullable" : true
          },
          "audioUploadUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "loopDurationSec" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Duration in seconds to loop the audio playback",
            "example" : 30,
            "nullable" : true
          },
          "playCount" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Number of times to play the audio clip",
            "example" : 1,
            "nullable" : true
          }
        }
      },
      "Audioplayback_PlayAudioUploadWSResponse" : {
        "type" : "object",
        "description" : "Response from playing an uploaded audio clip.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "success" : {
            "type" : "boolean",
            "description" : "Indicates if audio playback was successful",
            "example" : true,
            "nullable" : true
          }
        }
      },
      "Audioplayback_UpdateAudioUploadMetadataWSRequest" : {
        "type" : "object",
        "description" : "Request to update audio upload metadata.",
        "properties" : {
          "audioUploadUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "newDescription" : {
            "type" : "string",
            "description" : "New description for the audio clip",
            "example" : "Updated welcome message for visitors",
            "nullable" : true
          },
          "newDisplayName" : {
            "type" : "string",
            "description" : "New display name for the audio clip",
            "example" : "Updated Welcome Message",
            "nullable" : true
          }
        }
      },
      "Audioplayback_UpdateAudioUploadMetadataWSResponse" : {
        "type" : "object",
        "description" : "Response from updating audio upload metadata.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Audioplayback_UploadAudioPcmWSResponse" : {
        "type" : "object",
        "description" : "Response from uploading PCM audio clip.",
        "properties" : {
          "encodingFailure" : {
            "type" : "boolean",
            "description" : "Indicates if audio encoding failed",
            "example" : false,
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Audioplayback_UploadAudioTextWSRequest" : {
        "type" : "object",
        "description" : "Request to upload text for audio synthesis.",
        "properties" : {
          "audioPlaintext" : {
            "type" : "string",
            "description" : "Plain text to synthesize into audio",
            "example" : "Welcome to our facility",
            "nullable" : true
          },
          "audioSSML" : {
            "type" : "string",
            "description" : "SSML markup for audio synthesis",
            "example" : "<speak>Welcome to our facility</speak>",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "description" : "Description of the audio clip",
            "example" : "A welcome message for visitors",
            "nullable" : true
          },
          "displayName" : {
            "type" : "string",
            "description" : "Display name for the audio clip",
            "example" : "Welcome Message",
            "nullable" : true
          },
          "voiceId" : {
            "type" : "string",
            "description" : "Voice ID for text-to-speech synthesis",
            "example" : "en-US-Neural2-F",
            "nullable" : true
          }
        }
      },
      "Audioplayback_UploadAudioTextWSResponse" : {
        "type" : "object",
        "description" : "Response from uploading text for audio synthesis.",
        "properties" : {
          "encodingFailure" : {
            "type" : "boolean",
            "description" : "Indicates if audio encoding failed",
            "example" : false,
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "invalidSSML" : {
            "type" : "boolean",
            "description" : "Indicates if SSML markup is invalid",
            "example" : false,
            "nullable" : true
          },
          "synthesisFailure" : {
            "type" : "boolean",
            "description" : "Indicates if text-to-speech synthesis failed",
            "example" : false,
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "AuditRuleTriggerType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "auditEvent" : {
              "$ref" : "#/components/schemas/SimpleAuditEventType"
            },
            "userUuids" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "RUUID",
                "description" : "base 64 (url-safe) uuid string",
                "example" : "AAAAAAAAAAAAAAAAAAAAAA",
                "nullable" : true
              },
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/RuleTriggerTypeEnum"
          }
        }
      },
      "AuthDecisionSourceEnum" : {
        "type" : "string",
        "enum" : [ "ACCESS_GRANT", "ACCESS_REVOCATION", "LOCKDOWN", "FIRST_IN_SETTINGS", "CONFIG", "ADMIN", "PRIVACY", "ERROR", "UNKNOWN" ]
      },
      "AutomatedPrompt" : {
        "type" : "object",
        "description" : "Selective update applied to the automated job settings.",
        "properties" : {
          "apiKey" : {
            "type" : "string",
            "nullable" : true
          },
          "followUpActions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FollowUpAction"
            },
            "nullable" : true
          },
          "frequency" : {
            "$ref" : "#/components/schemas/PromptFrequency"
          },
          "invokeAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "permissionGroupUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "prompt" : {
            "type" : "string",
            "nullable" : true
          },
          "scheduleUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "tokenUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "AuxiliaryEnumType" : {
        "type" : "string",
        "enum" : [ "integrated_generic_input", "integrated_generic_relay" ]
      },
      "AuxiliaryInputPhysicalPortEnumType" : {
        "type" : "string",
        "enum" : [ "GPIO_INPUT", "GPIO_INPUT_SUPERVISED" ]
      },
      "AuxiliaryInputPortType" : {
        "type" : "object",
        "properties" : {
          "boardNum" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "portNum" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "portType" : {
            "$ref" : "#/components/schemas/AuxiliaryInputPhysicalPortEnumType"
          },
          "supervisionConfiguration" : {
            "$ref" : "#/components/schemas/PortSupervisionConfigurationType"
          }
        }
      },
      "AuxiliaryRelayPhysicalPortEnumType" : {
        "type" : "string",
        "enum" : [ "GPIO_OUTPUT" ]
      },
      "AuxiliaryRelayPortType" : {
        "type" : "object",
        "properties" : {
          "boardNum" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "portNum" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "portType" : {
            "$ref" : "#/components/schemas/AuxiliaryRelayPhysicalPortEnumType"
          }
        }
      },
      "AvigilonAltaType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "alertUnauthorizedFaces" : {
              "type" : "boolean",
              "nullable" : true
            },
            "apiToken" : {
              "type" : "string",
              "nullable" : true
            },
            "badgeAuthDisablesAlarmMonitoring" : {
              "type" : "boolean",
              "nullable" : true
            },
            "createSeekPoints" : {
              "type" : "boolean",
              "nullable" : true
            },
            "doorInfoMap" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/BadgeIntegrationDoorInfoType"
              },
              "nullable" : true
            },
            "doorToCameraMap" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "array",
                "items" : {
                  "type" : "string",
                  "format" : "RUUID",
                  "description" : "base 64 (url-safe) uuid string",
                  "example" : "AAAAAAAAAAAAAAAAAAAAAA",
                  "nullable" : true
                },
                "nullable" : true
              },
              "nullable" : true
            },
            "doorsValidated" : {
              "type" : "boolean",
              "nullable" : true
            },
            "email" : {
              "type" : "string",
              "nullable" : true
            },
            "eventToWebhookIdMap" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "integer",
                "format" : "int32",
                "nullable" : true
              },
              "nullable" : true
            },
            "eventToWebhookMap" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/WebhookMapEntry"
              },
              "nullable" : true
            },
            "identifyFacesFromBadge" : {
              "type" : "boolean",
              "nullable" : true
            },
            "indexFaces" : {
              "type" : "boolean",
              "nullable" : true
            },
            "misconfiguredDoors" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "nullable" : true
              },
              "nullable" : true
            },
            "password" : {
              "type" : "string",
              "nullable" : true
            },
            "refreshToken" : {
              "type" : "string",
              "nullable" : true
            },
            "rhombusToken" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "saveClips" : {
              "type" : "boolean",
              "nullable" : true
            },
            "tokenValid" : {
              "type" : "boolean",
              "nullable" : true
            },
            "webhookId" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "AwsSettings" : {
        "type" : "object",
        "properties" : {
          "accessKey" : {
            "type" : "string",
            "nullable" : true
          },
          "bucketName" : {
            "type" : "string",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabledTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "enablingUser" : {
            "type" : "string",
            "nullable" : true
          },
          "enablingUserUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "secretKey" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "BackblazeSettings" : {
        "type" : "object",
        "properties" : {
          "applicationKey" : {
            "type" : "string",
            "nullable" : true
          },
          "applicationKeyId" : {
            "type" : "string",
            "nullable" : true
          },
          "bucketName" : {
            "type" : "string",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "BadgeIntegrationDefaultOptions" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "alertUnauthorizedFaces" : {
            "type" : "boolean",
            "nullable" : true
          },
          "createSeekPoints" : {
            "type" : "boolean",
            "nullable" : true
          },
          "defaultOptionsEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "identifyFacesFromBadge" : {
            "type" : "boolean",
            "nullable" : true
          },
          "saveClips" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "BadgeIntegrationDoorInfoType" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "assignedCameraList" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          },
          "clipDuration" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "doorName" : {
            "type" : "string",
            "nullable" : true
          },
          "leadingSeconds" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "remoteUnlock" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "BadgeIntegrationRuleTriggerType" : {
        "type" : "object",
        "allOf" : [ ],
        "nullable" : true,
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/RuleTriggerTypeEnum"
          }
        }
      },
      "BadgeIntegrationSettings" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "alertUnauthorizedFaces" : {
            "type" : "boolean",
            "nullable" : true
          },
          "createSeekPoints" : {
            "type" : "boolean",
            "nullable" : true
          },
          "doorInfoMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/BadgeIntegrationDoorInfoType"
            },
            "nullable" : true
          },
          "identifyFacesFromBadge" : {
            "type" : "boolean",
            "nullable" : true
          },
          "misconfiguredDoors" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "nullable" : true
          },
          "placeId" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "placeName" : {
            "type" : "string",
            "nullable" : true
          },
          "rhombusToken" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "saveClips" : {
            "type" : "boolean",
            "nullable" : true
          },
          "webhookId" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "BadgeTemplate" : {
        "type" : "object",
        "description" : "The updated badge template",
        "properties" : {
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "elements" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BaseBadgeTemplateElement"
            },
            "nullable" : true
          },
          "front" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "portrait" : {
            "type" : "boolean",
            "nullable" : true
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "version" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "BadgeTemplateElementEnum" : {
        "type" : "string",
        "enum" : [ "CUSTOM_TEXT", "USER_METADATA", "USER_CUSTOM_METADATA", "CUSTOM_IMAGE", "USER_PROFILE_PHOTO" ]
      },
      "BadgeTemplateImage" : {
        "type" : "object",
        "description" : "The updated badge template image metadata.",
        "properties" : {
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "imageS3Key" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "originalFileName" : {
            "type" : "string",
            "nullable" : true
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "BadgeTemplateImageSelectiveUpdate" : {
        "type" : "object",
        "description" : "The selective update containing the fields to update for the badge template image.",
        "properties" : {
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "imageS3Key" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "originalFileName" : {
            "type" : "string",
            "nullable" : true
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "updatedSetMethodMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "boolean",
              "nullable" : true
            },
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "BadgeTemplateSelectiveUpdate" : {
        "type" : "object",
        "description" : "The selective update containing the fields to update.",
        "properties" : {
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "elements" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BaseBadgeTemplateElement"
            },
            "nullable" : true
          },
          "front" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "portrait" : {
            "type" : "boolean",
            "nullable" : true
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "updatedSetMethodMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "boolean",
              "nullable" : true
            },
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "version" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Badgereader_DeleteBadgeReaderWSRequest" : {
        "type" : "object",
        "description" : "Request to delete a badge reader device.",
        "properties" : {
          "badgeReaderUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "mummify" : {
            "type" : "boolean",
            "description" : "Whether to mummify the device instead of hard delete",
            "example" : false,
            "nullable" : true
          }
        },
        "required" : [ "badgeReaderUuid", "mummify" ]
      },
      "Badgereader_DeleteBadgeReaderWSResponse" : {
        "type" : "object",
        "description" : "Response from deleting a badge reader device.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "responseStatus" : {
            "type" : "string",
            "description" : "Status of the delete operation",
            "enum" : [ "BASIC_AUTH_FAILED", "PASSWORD_MISMATCH", "SAME_PASSWORD", "USER_EXISTS", "USER_NOT_FOUND", "DEVICE_NOT_FOUND", "POLICY_NOT_FOUND", "LOCATION_NOT_FOUND", "ORG_NOT_FOUND", "BAD_INPUT", "SUCCESS", "PASSWORD_TOO_SHORT" ],
            "example" : "SUCCESS",
            "nullable" : true
          }
        }
      },
      "Badgereader_GetBadgeReaderConfigWSResponse" : {
        "type" : "object",
        "description" : "Response containing badge reader configuration.",
        "properties" : {
          "config" : {
            "$ref" : "#/components/schemas/Deviceconfig_userconfig_ExternalReadableFacetedUserConfig"
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Badgereader_GetBadgeReaderFullStateWSResponse" : {
        "type" : "object",
        "description" : "Response containing full state information for a badge reader.",
        "properties" : {
          "fullState" : {
            "$ref" : "#/components/schemas/FullDeviceStateType"
          }
        }
      },
      "Badgereader_GetBadgeReaderMinimalStateListWSResponse" : {
        "type" : "object",
        "description" : "Response containing minimal state information for all badge readers in organization.",
        "properties" : {
          "minimalStates" : {
            "type" : "array",
            "description" : "List of minimal device state information for badge readers",
            "items" : {
              "$ref" : "#/components/schemas/MinimalDeviceStateType"
            },
            "nullable" : true
          }
        }
      },
      "Badgereader_RebootBadgeReaderWSRequest" : {
        "type" : "object",
        "description" : "Request to reboot a badge reader device.",
        "properties" : {
          "badgeReaderUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        },
        "required" : [ "badgeReaderUuid" ]
      },
      "Badgereader_UpdateBadgeReaderConfigWSRequest" : {
        "type" : "object",
        "description" : "Request to update badge reader configuration.",
        "properties" : {
          "configUpdate" : {
            "$ref" : "#/components/schemas/Deviceconfig_userconfig_ExternalUpdateableFacetedUserConfig"
          }
        }
      },
      "Badgereader_UpdateBadgeReaderDetailsWSRequest" : {
        "type" : "object",
        "description" : "Request to update badge reader device details.",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "Optional description for the badge reader",
            "example" : "Primary access point for employees",
            "nullable" : true
          },
          "deviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "directionRadians" : {
            "type" : "number",
            "format" : "float",
            "description" : "Optional direction in radians",
            "example" : 1.5708,
            "nullable" : true
          },
          "floorNumber" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Optional floor number",
            "example" : 1,
            "nullable" : true
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "description" : "Optional latitude coordinate",
            "example" : 37.7749,
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "description" : "Optional longitude coordinate",
            "example" : -122.4194,
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Optional name for the badge reader",
            "example" : "Main Entrance Reader",
            "nullable" : true
          }
        }
      },
      "BaseApiResponse" : {
        "type" : "object",
        "description" : "Base response object denoting success, or failure with a reason, for an endpoint.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "BaseBadgeTemplateElement" : {
        "type" : "object",
        "discriminator" : {
          "propertyName" : "type"
        },
        "oneOf" : [ {
          "$ref" : "#/components/schemas/CustomTextElement"
        }, {
          "$ref" : "#/components/schemas/UserMetadataTextElement"
        }, {
          "$ref" : "#/components/schemas/UserCustomMetadataTextElement"
        }, {
          "$ref" : "#/components/schemas/CustomImageElement"
        }, {
          "$ref" : "#/components/schemas/UserProfilePhotoElement"
        } ],
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/BadgeTemplateElementEnum"
          },
          "x" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "y" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "BaseCatalogItem" : {
        "type" : "object",
        "discriminator" : {
          "propertyName" : "productType"
        },
        "properties" : {
          "durationMonths" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "productCode" : {
            "type" : "string",
            "nullable" : true
          },
          "productType" : {
            "type" : "string",
            "enum" : [ "DEVICE", "ALERT_MONITORING", "ACCESS_CONTROL", "LICENSE_USAGE", "UNKNOWN" ],
            "nullable" : true
          }
        }
      },
      "BaseClaimKey" : {
        "type" : "object",
        "discriminator" : {
          "propertyName" : "type"
        },
        "properties" : {
          "claimEndDate" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Date/time when claiming of licenses represented by this claim key ended successfully.",
            "nullable" : true
          },
          "claimStartDate" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Date/time when claiming of licenses represented by this claim key started.",
            "nullable" : true
          },
          "createdOn" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "expirationEmailState" : {
            "type" : "string",
            "enum" : [ "NINETY_DAY_EMAIL_SUCCEEDED", "NINETY_DAY_EMAIL_FAILED", "SIXTY_DAY_EMAIL_SUCCEEDED", "SIXTY_DAY_EMAIL_FAILED", "FOURTY_FIVE_DAY_EMAIL_SUCCEEDED", "FOURTY_FIVE_DAY_EMAIL_FAILED", "THIRTY_DAY_EMAIL_SUCCEEDED", "THIRTY_DAY_EMAIL_FAILED", "TWENTY_ONE_DAY_EMAIL_SUCCEEDED", "TWENTY_ONE_DAY_EMAIL_FAILED", "FOURTEEN_DAY_EMAIL_SUCCEEDED", "FOURTEEN_DAY_EMAIL_FAILED", "TEN_DAY_EMAIL_SUCCEEDED", "TEN_DAY_EMAIL_FAILED", "FIVE_DAY_EMAIL_SUCCEEDED", "FIVE_DAY_EMAIL_FAILED", "FOUR_DAY_EMAIL_SUCCEEDED", "FOUR_DAY_EMAIL_FAILED", "THREE_DAY_EMAIL_SUCCEEDED", "THREE_DAY_EMAIL_FAILED", "TWO_DAY_EMAIL_SUCCEEDED", "TWO_DAY_EMAIL_FAILED", "ONE_DAY_EMAIL_SUCCEEDED", "ONE_DAY_EMAIL_FAILED", "ZERO_DAY_EMAIL_SUCCEEDED", "ZERO_DAY_EMAIL_FAILED", "GRACE_PERIOD_EMAILS_IN_PROGRESS", "GRACE_PERIOD_EMAILS_COMPLETED", "UNKNOWN" ],
            "nullable" : true
          },
          "gracePeriodEndDate" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "maskedClaimCode" : {
            "type" : "string",
            "description" : "Masked claim code for redeemed claim keys. This field can be used for reference purposes.",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "renewedByClaimKeyUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "requestId" : {
            "type" : "string",
            "description" : "Externally supplied request id to prevent creation of unnecessary claim keys due to reprocessing or bugs. Unnecessary claim keys are claim keys that are not tied to anything in the external system.  This property is unique for all claim keys.",
            "nullable" : true
          },
          "returnHistory" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ClaimKeyReturnEvent"
            },
            "nullable" : true
          },
          "state" : {
            "type" : "string",
            "enum" : [ "CREATED", "CLAIMING_PENDING", "CLAIMING_IN_PROGRESS", "CLAIMING_FAILED", "CLAIMED", "EXPIRED_UNCLAIMED", "EXPIRED", "RETURNED", "RENEWED" ],
            "nullable" : true
          },
          "trial" : {
            "type" : "boolean",
            "nullable" : true
          },
          "type" : {
            "type" : "string",
            "enum" : [ "NEW", "RENEWAL" ],
            "nullable" : true
          },
          "updatedOn" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "BaseComponentType" : {
        "type" : "object",
        "discriminator" : {
          "propertyName" : "type"
        },
        "oneOf" : [ {
          "$ref" : "#/components/schemas/RhombusOsdpDoorReaderType"
        }, {
          "$ref" : "#/components/schemas/OsdpDoorReaderType"
        }, {
          "$ref" : "#/components/schemas/WiegandDoorReaderType"
        }, {
          "$ref" : "#/components/schemas/IntegratedDoorPositionIndicatorType"
        }, {
          "$ref" : "#/components/schemas/IntegratedRequestToExitType"
        }, {
          "$ref" : "#/components/schemas/IntegratedDoorRelayType"
        }, {
          "$ref" : "#/components/schemas/IntegratedGenericRelayType"
        }, {
          "$ref" : "#/components/schemas/IntegratedGenericInputType"
        }, {
          "$ref" : "#/components/schemas/IntegratedGenericButtonType"
        }, {
          "$ref" : "#/components/schemas/AperioDoorReader"
        }, {
          "$ref" : "#/components/schemas/AperioGateway"
        }, {
          "$ref" : "#/components/schemas/AperioDoorExtension"
        }, {
          "$ref" : "#/components/schemas/AperioDoorRelay"
        }, {
          "$ref" : "#/components/schemas/AperioDoorPositionIndicator"
        } ],
        "properties" : {
          "baseType" : {
            "$ref" : "#/components/schemas/ComponentBaseEnumType"
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "ownerHardwareType" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "portImmutable" : {
            "type" : "boolean",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEnumType"
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "BaseDoorStateOverride" : {
        "type" : "object",
        "discriminator" : {
          "propertyName" : "type"
        },
        "properties" : {
          "originator" : {
            "$ref" : "#/components/schemas/BaseEventOriginator"
          },
          "requestedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ManualDoorStateChangeEnum"
          }
        }
      },
      "BaseDoorStateOverride_Minimal" : {
        "type" : "object",
        "discriminator" : {
          "propertyName" : "type"
        },
        "properties" : {
          "originator" : {
            "$ref" : "#/components/schemas/BaseEventOriginator_Minimal"
          },
          "requestedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ManualDoorStateChangeEnum_Minimal"
          }
        }
      },
      "BaseEventOriginator" : {
        "type" : "object",
        "discriminator" : {
          "propertyName" : "type"
        },
        "oneOf" : [ {
          "$ref" : "#/components/schemas/SupportAuthorityEventOriginator"
        }, {
          "$ref" : "#/components/schemas/ApiTokenEventOriginator"
        }, {
          "$ref" : "#/components/schemas/UserEventOriginator"
        }, {
          "$ref" : "#/components/schemas/RuleEventOriginator"
        }, {
          "$ref" : "#/components/schemas/ComponentCompositeEventOriginator"
        } ],
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/EventOriginatorEnum"
          }
        }
      },
      "BaseEventOriginator_Minimal" : {
        "type" : "object",
        "discriminator" : {
          "propertyName" : "type"
        },
        "oneOf" : [ {
          "$ref" : "#/components/schemas/SupportAuthorityEventOriginator"
        }, {
          "$ref" : "#/components/schemas/ApiTokenEventOriginator"
        }, {
          "$ref" : "#/components/schemas/UserEventOriginator"
        }, {
          "$ref" : "#/components/schemas/RuleEventOriginator"
        }, {
          "$ref" : "#/components/schemas/ComponentCompositeEventOriginator"
        } ],
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/EventOriginatorEnum_Minimal"
          }
        }
      },
      "BaseFirstInReset" : {
        "type" : "object",
        "description" : "Optional list of first-in reset configurations.",
        "discriminator" : {
          "propertyName" : "type"
        },
        "oneOf" : [ {
          "$ref" : "#/components/schemas/DailyFirstInReset"
        } ],
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/FirstInResetEnum"
          }
        }
      },
      "BaseLicenseType" : {
        "type" : "object",
        "description" : "List of licenses found by claim key",
        "discriminator" : {
          "propertyName" : "productType"
        },
        "properties" : {
          "claimKeyUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "createdOn" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "firstAssignedDate" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "licenseToUnassignEmailState" : {
            "type" : "string",
            "enum" : [ "INITIAL_EMAIL_SUCCEEDED", "INITIAL_EMAIL_FAILED", "FIFTEEN_DAY_WARNING_EMAIL_SUCCEEDED", "FIFTEEN_DAY_WARNING_EMAIL_FAILED", "FOURTY_EIGHT_HOUR_WARNING_EMAIL_SUCCEEDED", "FOURTY_EIGHT_HOUR_WARNING_EMAIL_FAILED", "UNKNOWN" ],
            "nullable" : true
          },
          "maxDeleteDate" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "priorClaimKeyUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "productCode" : {
            "type" : "string",
            "nullable" : true
          },
          "productType" : {
            "type" : "string",
            "enum" : [ "DEVICE", "ALERT_MONITORING", "ACCESS_CONTROL", "LICENSE_USAGE", "UNKNOWN" ],
            "nullable" : true
          },
          "state" : {
            "type" : "string",
            "enum" : [ "CLAIMED", "RENEWED", "PENDING_RETURN", "NOT_RENEWED", "EXPIRED", "PERMANENTLY_EXPIRED" ],
            "nullable" : true
          },
          "trial" : {
            "type" : "boolean",
            "nullable" : true
          },
          "updatedOn" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "BaseLocationLockdownEventOriginator" : {
        "type" : "object",
        "discriminator" : {
          "propertyName" : "type"
        },
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/LockdownEventOriginatorEnumType"
          }
        }
      },
      "BaseLockdownPlanType" : {
        "type" : "object",
        "description" : "The requested lockdown plan.",
        "discriminator" : {
          "propertyName" : "type"
        },
        "oneOf" : [ {
          "$ref" : "#/components/schemas/LocationLockdownPlanType"
        } ],
        "properties" : {
          "activationPlan" : {
            "$ref" : "#/components/schemas/LockdownActivationPlanType"
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "deactivationPlan" : {
            "$ref" : "#/components/schemas/LockdownDeactivationPlanType"
          },
          "defaultLockdownState" : {
            "$ref" : "#/components/schemas/DoorLockdownStateEnumType"
          },
          "doorLockdownStateMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/DoorLockdownStateEnumType"
            },
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "physicalAccess" : {
            "$ref" : "#/components/schemas/LockdownPhysicalAccessType"
          },
          "scopeUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "testPlan" : {
            "$ref" : "#/components/schemas/LockdownTestPlanType"
          },
          "type" : {
            "$ref" : "#/components/schemas/LockdownPlanScopeEnumType"
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "BaseLockdownStateEventType" : {
        "type" : "object",
        "description" : "List of lockdown events found for the specified location.",
        "discriminator" : {
          "propertyName" : "type"
        },
        "properties" : {
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "followingTestPlan" : {
            "type" : "boolean",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "originator" : {
            "$ref" : "#/components/schemas/BaseLocationLockdownEventOriginator"
          },
          "stateChangedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/LockdownStateEventEnumType"
          }
        }
      },
      "BasePolicyAlertType" : {
        "type" : "object",
        "description" : "List of policy alerts matching the request criteria",
        "discriminator" : {
          "propertyName" : "type"
        },
        "oneOf" : [ {
          "$ref" : "#/components/schemas/PolicyAlertV2Type"
        }, {
          "$ref" : "#/components/schemas/AccessControlledDoorPolicyAlertType"
        } ],
        "properties" : {
          "alertMonitoringThreatCaseUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "alertMonitoringVerified" : {
            "type" : "boolean",
            "nullable" : true
          },
          "clipLocationMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/MetaDataLocationType"
            },
            "nullable" : true
          },
          "clipLocationMapV2" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "delayedProcessing" : {
            "type" : "boolean",
            "nullable" : true
          },
          "deleted" : {
            "type" : "boolean",
            "nullable" : true
          },
          "durationSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "finalized" : {
            "type" : "boolean",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "notificationSent" : {
            "type" : "boolean",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "policyAlertTriggers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ActivityEnum"
            },
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "saved" : {
            "type" : "boolean",
            "nullable" : true
          },
          "shared" : {
            "type" : "boolean",
            "nullable" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "textDescription" : {
            "type" : "string",
            "description" : "Natural language description of the alert",
            "nullable" : true
          },
          "thumbnailLocation" : {
            "$ref" : "#/components/schemas/MetaDataLocationType"
          },
          "thumbnailLocationV2" : {
            "type" : "string",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "type" : "string",
            "enum" : [ "POLICY_ALERT_V2", "ACCESS_CONTROLLED_DOOR_POLICY_ALERT" ],
            "nullable" : true,
            "readOnly" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "BaseRuleTriggerType" : {
        "type" : "object",
        "discriminator" : {
          "mapping" : {
            "ALERT_MONITORING_EVENT" : "#/components/schemas/AlertMonitoringRuleTriggerType",
            "AUDIT_EVENT" : "#/components/schemas/AuditRuleTriggerType",
            "BADGE_INTEGRATION_EVENT" : "#/components/schemas/BadgeIntegrationRuleTriggerType",
            "BUTTON_INTEGRATION_EVENT" : "#/components/schemas/ButtonIntegrationRuleTriggerType",
            "CUSTOM_LLM_EVENT" : "#/components/schemas/CustomLLMEventRuleTriggerType",
            "DEVICE_ACTIVITY_EVENT" : "#/components/schemas/DeviceActivityRuleTriggerType",
            "DIAGNOSTIC_EVENT" : "#/components/schemas/DiagnosticRuleTriggerType",
            "LOCATION_LOCKDOWN_ACTIVATED_EVENT" : "#/components/schemas/LocationLockdownActivatedRuleTriggerType",
            "LOCATION_LOCKDOWN_DEACTIVATED_EVENT" : "#/components/schemas/LocationLockdownDeactivatedRuleTriggerType",
            "RECURRING_EVENT" : "#/components/schemas/RecurringRuleTriggerType",
            "SCHEDULED_EVENT" : "#/components/schemas/ScheduledRuleTriggerType",
            "VISION_LLM_EVENT" : "#/components/schemas/VisionLLMRuleTriggerType"
          },
          "propertyName" : "type"
        },
        "oneOf" : [ {
          "$ref" : "#/components/schemas/DeviceActivityRuleTriggerType"
        }, {
          "$ref" : "#/components/schemas/AuditRuleTriggerType"
        }, {
          "$ref" : "#/components/schemas/AlertMonitoringRuleTriggerType"
        }, {
          "$ref" : "#/components/schemas/DiagnosticRuleTriggerType"
        }, {
          "$ref" : "#/components/schemas/BadgeIntegrationRuleTriggerType"
        }, {
          "$ref" : "#/components/schemas/ScheduledRuleTriggerType"
        }, {
          "$ref" : "#/components/schemas/VisionLLMRuleTriggerType"
        }, {
          "$ref" : "#/components/schemas/RecurringRuleTriggerType"
        }, {
          "$ref" : "#/components/schemas/LocationLockdownActivatedRuleTriggerType"
        }, {
          "$ref" : "#/components/schemas/LocationLockdownDeactivatedRuleTriggerType"
        }, {
          "$ref" : "#/components/schemas/CustomLLMEventRuleTriggerType"
        }, {
          "$ref" : "#/components/schemas/ButtonIntegrationRuleTriggerType"
        } ],
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/RuleTriggerTypeEnum"
          }
        },
        "title" : "RuleTriggerType"
      },
      "BaseSavedScheduleType" : {
        "type" : "object",
        "description" : "Schedule for the shared live stream",
        "discriminator" : {
          "propertyName" : "strategy"
        },
        "oneOf" : [ {
          "$ref" : "#/components/schemas/WeeklyRepeatingScheduleType"
        }, {
          "$ref" : "#/components/schemas/AbsoluteSecondsScheduleType"
        }, {
          "$ref" : "#/components/schemas/RealtimeRelativeSecondsScheduleType"
        }, {
          "$ref" : "#/components/schemas/RelativeDateTimeIntervalsScheduleType"
        } ],
        "properties" : {
          "mutable" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "oneTimeUse" : {
            "type" : "boolean",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "strategy" : {
            "type" : "string",
            "enum" : [ "WEEKLY_REPEATING_MINUTES", "ABSOLUTE_SECONDS", "REALTIME_RELATIVE_SECONDS", "RELATIVE_DATETIME_INTERVALS" ],
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "BaseSavedScheduleType_Minimal" : {
        "type" : "object",
        "description" : "List of schedules",
        "discriminator" : {
          "propertyName" : "strategy"
        },
        "oneOf" : [ {
          "$ref" : "#/components/schemas/WeeklyRepeatingScheduleType"
        }, {
          "$ref" : "#/components/schemas/AbsoluteSecondsScheduleType"
        }, {
          "$ref" : "#/components/schemas/RealtimeRelativeSecondsScheduleType"
        }, {
          "$ref" : "#/components/schemas/RelativeDateTimeIntervalsScheduleType"
        } ],
        "properties" : {
          "mutable" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "oneTimeUse" : {
            "type" : "boolean",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "strategy" : {
            "type" : "string",
            "enum" : [ "WEEKLY_REPEATING_MINUTES", "ABSOLUTE_SECONDS", "REALTIME_RELATIVE_SECONDS", "RELATIVE_DATETIME_INTERVALS" ],
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "BatchRegistrationTokenUsageResult" : {
        "type" : "object",
        "description" : "List of batch registration token usage results",
        "properties" : {
          "di" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "hi" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "rs" : {
            "type" : "string",
            "nullable" : true
          },
          "ts" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Billing_CreateSubscriptionWSRequest" : {
        "type" : "object",
        "properties" : {
          "maxSpendPerMonth" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "paymentMethodId" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Billing_CreateSubscriptionWSResponse" : {
        "type" : "object",
        "properties" : {
          "customerId" : {
            "type" : "string",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "paymentMethodId" : {
            "type" : "string",
            "nullable" : true
          },
          "status" : {
            "type" : "string",
            "nullable" : true
          },
          "subscriptionId" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Billing_DeletePaymentMethodWSRequest" : {
        "type" : "object",
        "properties" : {
          "paymentMethodId" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Billing_DeletePaymentMethodWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "removed" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Billing_GetMetersWSRequest" : {
        "type" : "object"
      },
      "Billing_GetMetersWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "meters" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Billing_GetMetersWSResponse_Meter"
            },
            "nullable" : true
          }
        }
      },
      "Billing_GetMetersWSResponse_Meter" : {
        "type" : "object",
        "properties" : {
          "archived" : {
            "type" : "boolean",
            "nullable" : true
          },
          "created" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "displayName" : {
            "type" : "string",
            "nullable" : true
          },
          "eventName" : {
            "type" : "string",
            "nullable" : true
          },
          "eventTimeWindow" : {
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Billing_GetPaymentMethodsWSRequest" : {
        "type" : "object"
      },
      "Billing_GetPaymentMethodsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "paymentMethods" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Billing_GetPaymentMethodsWSResponse_PaymentMethod"
            },
            "nullable" : true
          }
        }
      },
      "Billing_GetPaymentMethodsWSResponse_PaymentMethod" : {
        "type" : "object",
        "properties" : {
          "brand" : {
            "type" : "string",
            "nullable" : true
          },
          "default" : {
            "type" : "boolean",
            "nullable" : true
          },
          "displayBrand" : {
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "type" : "string",
            "nullable" : true
          },
          "last4" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Billing_GetProductsWSRequest" : {
        "type" : "object"
      },
      "Billing_GetProductsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "products" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Billing_GetProductsWSResponse_Product"
            },
            "nullable" : true
          }
        }
      },
      "Billing_GetProductsWSResponse_Price" : {
        "type" : "object",
        "properties" : {
          "active" : {
            "type" : "boolean",
            "nullable" : true
          },
          "billingScheme" : {
            "type" : "string",
            "nullable" : true
          },
          "currency" : {
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "type" : "string",
            "nullable" : true
          },
          "lookupKey" : {
            "type" : "string",
            "nullable" : true
          },
          "nickname" : {
            "type" : "string",
            "nullable" : true
          },
          "productId" : {
            "type" : "string",
            "nullable" : true
          },
          "recurringInterval" : {
            "type" : "string",
            "nullable" : true
          },
          "recurringIntervalCount" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "recurringUsageType" : {
            "type" : "string",
            "nullable" : true
          },
          "taxBehavior" : {
            "type" : "string",
            "nullable" : true
          },
          "transformQuantity" : {
            "type" : "string",
            "nullable" : true
          },
          "type" : {
            "type" : "string",
            "nullable" : true
          },
          "unitAmount" : {
            "type" : "number",
            "nullable" : true
          },
          "unitAmountDecimal" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Billing_GetProductsWSResponse_Product" : {
        "type" : "object",
        "properties" : {
          "active" : {
            "type" : "boolean",
            "nullable" : true
          },
          "created" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "defaultPriceId" : {
            "type" : "string",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "prices" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Billing_GetProductsWSResponse_Price"
            },
            "nullable" : true
          },
          "statementDescriptor" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Billing_GetSubscriptionWSRequest" : {
        "type" : "object"
      },
      "Billing_GetSubscriptionWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "subscriptions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Billing_GetSubscriptionWSResponse_Subscription"
            },
            "nullable" : true
          }
        }
      },
      "Billing_GetSubscriptionWSResponse_Subscription" : {
        "type" : "object",
        "properties" : {
          "cancelAtPeriodEnd" : {
            "type" : "boolean",
            "nullable" : true
          },
          "canceledAt" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "collectionMethod" : {
            "type" : "string",
            "nullable" : true
          },
          "created" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "currency" : {
            "type" : "string",
            "nullable" : true
          },
          "currentPeriodEnd" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "currentPeriodStart" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "defaultPaymentMethod" : {
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "type" : "string",
            "nullable" : true
          },
          "isApproachingLimit" : {
            "type" : "boolean",
            "nullable" : true
          },
          "maxSpendPerMonth" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "pricePerUnit" : {
            "type" : "string",
            "nullable" : true
          },
          "product" : {
            "type" : "string",
            "nullable" : true
          },
          "status" : {
            "type" : "string",
            "nullable" : true
          },
          "upcomingInvoiceAmount" : {
            "type" : "string",
            "nullable" : true
          },
          "upcomingInvoiceCurrency" : {
            "type" : "string",
            "nullable" : true
          },
          "usageType" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Billing_SetDefaultPaymentMethodForSubscriptionWSRequest" : {
        "type" : "object",
        "properties" : {
          "paymentMethodId" : {
            "type" : "string",
            "nullable" : true
          },
          "subscriptionId" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Billing_SetDefaultPaymentMethodForSubscriptionWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Billing_SetDefaultPaymentMethodWSRequest" : {
        "type" : "object",
        "properties" : {
          "overrideAllSubscriptionPaymentMethods" : {
            "type" : "boolean",
            "nullable" : true
          },
          "paymentMethodId" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Billing_SetDefaultPaymentMethodWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Billing_SetupSubscriptionWSRequest" : {
        "type" : "object"
      },
      "Billing_SetupSubscriptionWSResponse" : {
        "type" : "object",
        "properties" : {
          "clientSecret" : {
            "type" : "string",
            "nullable" : true
          },
          "customerId" : {
            "type" : "string",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Billing_UnsubscribeWSRequest" : {
        "type" : "object",
        "properties" : {
          "subscriptionId" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Billing_UnsubscribeWSResponse" : {
        "type" : "object",
        "properties" : {
          "cancelAtPeriodEnd" : {
            "type" : "boolean",
            "nullable" : true
          },
          "canceledAt" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "status" : {
            "type" : "string",
            "nullable" : true
          },
          "subscriptionId" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Billing_UpdateSubscriptionMaxSpendWSRequest" : {
        "type" : "object",
        "properties" : {
          "maxSpendPerMonth" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "subscriptionId" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Billing_UpdateSubscriptionMaxSpendWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "maxSpendPerMonth" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "subscriptionId" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "BinaryAggregationValue" : {
        "type" : "object",
        "description" : "Map of binary count reports",
        "properties" : {
          "eventCount" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "false" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "localDate" : {
            "type" : "string",
            "nullable" : true
          },
          "maxValueTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "minValueTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "true" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "utcDate" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Ble_BleDeviceMap" : {
        "type" : "object",
        "description" : "Map of BLE device keys to their advertisement data.",
        "properties" : {
          "keyToSecureBeacon" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "description" : "Map of device keys to secure beacon advertisement data",
              "items" : {
                "type" : "string",
                "format" : "byte",
                "description" : "Map of device keys to secure beacon advertisement data",
                "nullable" : true
              },
              "nullable" : true
            },
            "description" : "Map of device keys to secure beacon advertisement data",
            "nullable" : true
          }
        }
      },
      "Ble_BleRegisteredDeviceWSType" : {
        "type" : "object",
        "description" : "Information about a registered BLE device.",
        "properties" : {
          "deleted" : {
            "type" : "boolean",
            "description" : "Indicates if the device has been deleted",
            "example" : false,
            "nullable" : true
          },
          "deviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "hwVariation" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the registered BLE device",
            "example" : "Temperature Sensor 1",
            "nullable" : true
          },
          "secret" : {
            "type" : "array",
            "description" : "Secret data for the registered BLE device",
            "items" : {
              "type" : "string",
              "format" : "byte",
              "description" : "Secret data for the registered BLE device",
              "nullable" : true
            },
            "nullable" : true
          },
          "updateToFirmwareVersion" : {
            "type" : "string",
            "description" : "Firmware version to update to",
            "example" : "2.1.0",
            "nullable" : true
          }
        }
      },
      "Ble_BleUnregisteredHardwareWSType" : {
        "type" : "object",
        "description" : "Information about an unregistered BLE hardware device.",
        "properties" : {
          "mac" : {
            "type" : "string",
            "description" : "MAC address of the unregistered BLE device",
            "example" : "AA:BB:CC:DD:EE:FF",
            "nullable" : true
          },
          "secret" : {
            "type" : "array",
            "description" : "Secret data for the unregistered BLE device",
            "items" : {
              "type" : "string",
              "format" : "byte",
              "description" : "Secret data for the unregistered BLE device",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Ble_GetBaseStationsWSRequest" : {
        "type" : "object",
        "description" : "Request to get available base stations for BLE sensors."
      },
      "Ble_GetBaseStationsWSResponse" : {
        "type" : "object",
        "description" : "Response containing available base stations for BLE sensors.",
        "properties" : {
          "baseStations" : {
            "type" : "array",
            "description" : "List of base station UUIDs available for BLE sensors",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Ble_GetSecureSecretForRegisteredWSResponse" : {
        "type" : "object",
        "description" : "Response containing secure secrets for registered BLE devices.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "hardwareVariationToFirmwareDownloadUrl" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "string",
                "description" : "Map of hardware variations to firmware download URLs",
                "nullable" : true
              },
              "description" : "Map of hardware variations to firmware download URLs",
              "nullable" : true
            },
            "description" : "Map of hardware variations to firmware download URLs",
            "nullable" : true
          },
          "keyToRegisteredDevice" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Ble_BleRegisteredDeviceWSType"
            },
            "description" : "Map of device keys to registered device information",
            "nullable" : true
          }
        }
      },
      "Ble_GetSecureSecretForUnregisteredWSResponse" : {
        "type" : "object",
        "description" : "Response containing secure secrets for unregistered BLE devices.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "keyToUnregisteredDevice" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Ble_BleUnregisteredHardwareWSType"
            },
            "description" : "Map of serial numbers to unregistered device information",
            "nullable" : true
          }
        }
      },
      "Ble_GetSensorHardwareFirmwareUpdateDetailsRequest" : {
        "type" : "object",
        "description" : "Request to get firmware update details for BLE sensors."
      },
      "Ble_GetSensorHardwareFirmwareUpdateDetailsResponse" : {
        "type" : "object",
        "description" : "Response containing firmware update details for BLE sensors.",
        "properties" : {
          "hardwareVariationToFirmwareDownloadUrl" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "string",
                "description" : "Map of hardware variations to firmware download URLs",
                "nullable" : true
              },
              "description" : "Map of hardware variations to firmware download URLs",
              "nullable" : true
            },
            "description" : "Map of hardware variations to firmware download URLs",
            "nullable" : true
          }
        }
      },
      "Ble_RegisterSensorWSRequest" : {
        "type" : "object",
        "description" : "Request to register a BLE sensor device.",
        "properties" : {
          "bleData" : {
            "type" : "array",
            "description" : "BLE advertisement data from the sensor",
            "items" : {
              "type" : "string",
              "format" : "byte",
              "description" : "BLE advertisement data from the sensor",
              "nullable" : true
            },
            "nullable" : true
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "description" : "Latitude coordinate for sensor placement",
            "example" : 37.7749,
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "description" : "Longitude coordinate for sensor placement",
            "example" : -122.4194,
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name for the sensor device",
            "example" : "Temperature Sensor 1",
            "nullable" : true
          },
          "serialNum" : {
            "type" : "string",
            "description" : "Serial number of the BLE sensor",
            "example" : "SN123456789",
            "nullable" : true
          }
        }
      },
      "Ble_RegisterSensorWSResponse" : {
        "type" : "object",
        "description" : "Response from registering a BLE sensor.",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Ble_UnregisterSensorWSRequest" : {
        "type" : "object",
        "description" : "Request to unregister a BLE sensor.",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Ble_UnregisterSensorWSResponse" : {
        "type" : "object",
        "description" : "Response from unregistering a BLE sensor.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "failureReason" : {
            "type" : "string",
            "description" : "Reason for failure if unregistration was not successful",
            "example" : "Device not found",
            "nullable" : true
          },
          "success" : {
            "type" : "boolean",
            "description" : "Indicates if the unregistration was successful",
            "example" : true,
            "nullable" : true
          }
        }
      },
      "BoardPhysicalPortConfigType" : {
        "type" : "object",
        "properties" : {
          "boardNum" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "ownerHardwareType" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "portMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/PhysicalPortType"
            },
            "nullable" : true
          }
        }
      },
      "BodyPart" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "contentDisposition" : {
            "$ref" : "#/components/schemas/ContentDisposition"
          },
          "entity" : {
            "type" : "object",
            "nullable" : true
          },
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "nullable" : true
              },
              "nullable" : true
            },
            "nullable" : true,
            "properties" : {
              "empty" : {
                "type" : "boolean",
                "nullable" : true
              }
            }
          },
          "mediaType" : {
            "$ref" : "#/components/schemas/MediaType"
          },
          "messageBodyWorkers" : {
            "$ref" : "#/components/schemas/MessageBodyWorkers"
          },
          "parameterizedHeaders" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/ParameterizedHeader"
              },
              "nullable" : true
            },
            "nullable" : true,
            "properties" : {
              "empty" : {
                "type" : "boolean",
                "nullable" : true
              }
            }
          },
          "parent" : {
            "$ref" : "#/components/schemas/MultiPart"
          },
          "providers" : {
            "$ref" : "#/components/schemas/Providers"
          }
        }
      },
      "BoundingBoxType" : {
        "type" : "object",
        "properties" : {
          "bottom" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "left" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "right" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "top" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          }
        }
      },
      "BoxSettings" : {
        "type" : "object",
        "description" : "Box file storage integration settings to update",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabledTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "enablingUser" : {
            "type" : "string",
            "nullable" : true
          },
          "enablingUserUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "enterpriseId" : {
            "type" : "string",
            "nullable" : true
          },
          "folderId" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "BrivoSettings" : {
        "type" : "object",
        "properties" : {
          "accessToken" : {
            "type" : "string",
            "nullable" : true
          },
          "alertUnauthorizedFaces" : {
            "type" : "boolean",
            "nullable" : true
          },
          "clientId" : {
            "type" : "string",
            "nullable" : true
          },
          "clientSecret" : {
            "type" : "string",
            "nullable" : true
          },
          "createSeekPoints" : {
            "type" : "boolean",
            "nullable" : true
          },
          "doorInfoMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/BadgeIntegrationDoorInfoType"
            },
            "nullable" : true
          },
          "doorToCameraMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "RUUID",
                "description" : "base 64 (url-safe) uuid string",
                "example" : "AAAAAAAAAAAAAAAAAAAAAA",
                "nullable" : true
              },
              "nullable" : true
            },
            "nullable" : true,
            "writeOnly" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabledTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "enablingUser" : {
            "type" : "string",
            "nullable" : true
          },
          "enablingUserUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "identifyFacesFromBadge" : {
            "type" : "boolean",
            "nullable" : true
          },
          "migrated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "password" : {
            "type" : "string",
            "nullable" : true
          },
          "refreshToken" : {
            "type" : "string",
            "nullable" : true
          },
          "rhombusToken" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "saveClips" : {
            "type" : "boolean",
            "nullable" : true
          },
          "username" : {
            "type" : "string",
            "nullable" : true
          },
          "webhookId" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "BrivoType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "accessToken" : {
              "type" : "string",
              "nullable" : true
            },
            "alertUnauthorizedFaces" : {
              "type" : "boolean",
              "nullable" : true
            },
            "apiKey" : {
              "type" : "string",
              "nullable" : true
            },
            "apiToken" : {
              "type" : "string",
              "nullable" : true
            },
            "badgeAuthDisablesAlarmMonitoring" : {
              "type" : "boolean",
              "nullable" : true
            },
            "clientId" : {
              "type" : "string",
              "nullable" : true
            },
            "clientSecret" : {
              "type" : "string",
              "nullable" : true
            },
            "createSeekPoints" : {
              "type" : "boolean",
              "nullable" : true
            },
            "doorInfoMap" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/BadgeIntegrationDoorInfoType"
              },
              "nullable" : true
            },
            "doorsValidated" : {
              "type" : "boolean",
              "nullable" : true
            },
            "identifyFacesFromBadge" : {
              "type" : "boolean",
              "nullable" : true
            },
            "indexFaces" : {
              "type" : "boolean",
              "nullable" : true
            },
            "misconfiguredDoors" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "nullable" : true
              },
              "nullable" : true
            },
            "password" : {
              "type" : "string",
              "nullable" : true
            },
            "refreshToken" : {
              "type" : "string",
              "nullable" : true
            },
            "rhombusToken" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "saveClips" : {
              "type" : "boolean",
              "nullable" : true
            },
            "tokenValid" : {
              "type" : "boolean",
              "nullable" : true
            },
            "username" : {
              "type" : "string",
              "nullable" : true
            },
            "version" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "webhookId" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "BurstyRateLimit" : {
        "type" : "object",
        "properties" : {
          "base_interval_ms" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "burst_token_generation_ms" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "burst_token_initial_count" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "burst_token_max_count" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "ButterflyMXSettings" : {
        "type" : "object",
        "properties" : {
          "buildingWebhookIdMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "description" : "A HashMap of <ButterflyMx Building Id, Webhook Id>. ",
              "nullable" : true
            },
            "description" : "A HashMap of <ButterflyMx Building Id, Webhook Id>. ",
            "nullable" : true
          },
          "createSeekPoints" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabledTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "enablingUser" : {
            "type" : "string",
            "nullable" : true
          },
          "enablingUserUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "indexFaces" : {
            "type" : "boolean",
            "nullable" : true
          },
          "migrated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "panelInfoMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/ButterflymxPanelInfoType"
            },
            "description" : "A HashMap of <Panel Id, ButterflymxPanelInfoType>.",
            "nullable" : true
          },
          "refreshToken" : {
            "type" : "string",
            "nullable" : true
          },
          "rhombusToken" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "saveClips" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "ButterflyMXType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "alertUnauthorizedFaces" : {
              "type" : "boolean",
              "nullable" : true
            },
            "apiToken" : {
              "type" : "string",
              "nullable" : true
            },
            "badgeAuthDisablesAlarmMonitoring" : {
              "type" : "boolean",
              "nullable" : true
            },
            "buildingWebhookIdMap" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "string",
                "description" : "A HashMap of <ButterflyMx Building Id, Webhook Id>. ",
                "nullable" : true
              },
              "description" : "A HashMap of <ButterflyMx Building Id, Webhook Id>. ",
              "nullable" : true
            },
            "createSeekPoints" : {
              "type" : "boolean",
              "nullable" : true
            },
            "doorInfoMap" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/BadgeIntegrationDoorInfoType"
              },
              "nullable" : true
            },
            "doorsValidated" : {
              "type" : "boolean",
              "nullable" : true
            },
            "identifyFacesFromBadge" : {
              "type" : "boolean",
              "nullable" : true
            },
            "indexFaces" : {
              "type" : "boolean",
              "nullable" : true
            },
            "misconfiguredDoors" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "nullable" : true
              },
              "nullable" : true
            },
            "panelInfoMap" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/ButterflymxPanelInfoType"
              },
              "description" : "A HashMap of <Panel Id, ButterflymxPanelInfoType>.",
              "nullable" : true
            },
            "refreshToken" : {
              "type" : "string",
              "nullable" : true
            },
            "rhombusToken" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "saveClips" : {
              "type" : "boolean",
              "nullable" : true
            },
            "tokenValid" : {
              "type" : "boolean",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "ButterflymxBuilding" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "panels" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DoorType"
            },
            "nullable" : true
          }
        }
      },
      "ButterflymxPanelInfoType" : {
        "type" : "object",
        "description" : "A HashMap of <Panel Id, ButterflymxPanelInfoType>.",
        "nullable" : true,
        "properties" : {
          "assignedCameraList" : {
            "type" : "array",
            "description" : "The list of Rhombus Camera RUUIDs.",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          },
          "buildingId" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The ButterflyMx Building Id.",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "panelName" : {
            "type" : "string",
            "description" : "The ButterflyMx Panel Name.",
            "nullable" : true
          }
        }
      },
      "ButtonEnumType" : {
        "type" : "string",
        "enum" : [ "integrated_generic_button", "integrated_doorbell_button" ]
      },
      "ButtonEventType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "buttonPress" : {
              "$ref" : "#/components/schemas/ButtonPressEnum"
            },
            "componentCompositeUuid" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "newSupervisionState" : {
              "$ref" : "#/components/schemas/SupervisionStateEnumType"
            },
            "pressDurationMillis" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "correlationId" : {
            "type" : "string",
            "nullable" : true
          },
          "createdAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEventEnumType"
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "ButtonIntegrationRuleTriggerType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "thirdPartyBatteryLevel" : {
              "type" : "string",
              "nullable" : true
            },
            "thirdPartyButtonAction" : {
              "type" : "string",
              "nullable" : true
            },
            "thirdPartyButtonName" : {
              "type" : "string",
              "nullable" : true
            },
            "thirdPartyButtonSerialNumber" : {
              "type" : "string",
              "nullable" : true
            },
            "thirdPartyButtonUuid" : {
              "type" : "string",
              "nullable" : true
            },
            "timestamp" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/RuleTriggerTypeEnum"
          }
        }
      },
      "ButtonModeEnum" : {
        "type" : "string",
        "description" : "Optional button mode configuration",
        "enum" : [ "PANIC", "PROGRAMMABLE", "DOORBELL", "NONE" ]
      },
      "ButtonPhysicalPortEnumType" : {
        "type" : "string",
        "enum" : [ "GPIO_INPUT", "BUTTON_INPUT" ]
      },
      "ButtonPortType" : {
        "type" : "object",
        "properties" : {
          "boardNum" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "portNum" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "portType" : {
            "$ref" : "#/components/schemas/ButtonPhysicalPortEnumType"
          }
        }
      },
      "ButtonPressEnum" : {
        "type" : "string",
        "enum" : [ "NONE", "SINGLE", "DOUBLE", "LONG", "INITIAL_PRESS", "LONG_RELEASE" ]
      },
      "ButtonSettingsSelectiveUpdate" : {
        "type" : "object",
        "description" : "Update Button settings",
        "properties" : {
          "button_emergency_onsite_contact" : {
            "$ref" : "#/components/schemas/EmergencyContact"
          },
          "button_test_mode_enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "updatedSetMethodMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "boolean",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Button_ButtonHealthDetailsEnum" : {
        "type" : "string",
        "description" : "Detailed health status for button sensors.",
        "enum" : [ "FIRMWARE_BEHIND", "NO_HEARTBEAT", "NONE" ]
      },
      "Button_ButtonHealthEnum" : {
        "type" : "string",
        "description" : "Health status for button sensors.",
        "enum" : [ "GREEN", "RED" ]
      },
      "Button_CreateRuleForButtonWSRequest" : {
        "type" : "object",
        "description" : "Request to create a rule for a button sensor.",
        "properties" : {
          "rule" : {
            "$ref" : "#/components/schemas/Button_ExternalButtonRuleType"
          }
        }
      },
      "Button_CreateRuleForButtonWSResponse" : {
        "type" : "object",
        "description" : "Response from creating a rule for a button sensor.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "ruleUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Button_DeleteRuleForButtonWSRequest" : {
        "type" : "object",
        "description" : "Request to delete a rule for a button sensor.",
        "properties" : {
          "ruleUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "sensorUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Button_DeleteRuleForButtonWSResponse" : {
        "type" : "object",
        "description" : "Response from deleting a rule for a button sensor.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Button_ExternalButtonRuleType" : {
        "type" : "object",
        "description" : "External button rule configuration.",
        "properties" : {
          "action" : {
            "$ref" : "#/components/schemas/RuleActionType"
          },
          "ruleFilters" : {
            "$ref" : "#/components/schemas/RuleFilterType"
          },
          "ruleName" : {
            "type" : "string",
            "description" : "Name of the button rule",
            "example" : "Emergency Alert Rule",
            "nullable" : true
          },
          "ruleUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "sensorUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "triggerPress" : {
            "$ref" : "#/components/schemas/ButtonPressEnum"
          }
        }
      },
      "Button_GetButtonPressEventsForSensorWSRequest" : {
        "type" : "object",
        "description" : "Request to get button press events for a specific sensor.",
        "properties" : {
          "createdAfterMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Timestamp in milliseconds to get events created after this time",
            "example" : 1640995200000,
            "nullable" : true
          },
          "createdBeforeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Timestamp in milliseconds to get events created before this time",
            "example" : 1640995200000,
            "nullable" : true
          },
          "limit" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Maximum number of events to return",
            "example" : 100,
            "nullable" : true
          },
          "sensorUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Button_GetButtonPressEventsForSensorWSResponse" : {
        "type" : "object",
        "description" : "Response containing button press events for a sensor.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "events" : {
            "type" : "array",
            "description" : "List of button press events for the sensor",
            "items" : {
              "$ref" : "#/components/schemas/ButtonEventType"
            },
            "nullable" : true
          }
        }
      },
      "Button_GetButtonRulesForOrgWSRequest" : {
        "type" : "object",
        "description" : "Request to get rules for all buttons in an organization."
      },
      "Button_GetButtonRulesForOrgWSResponse" : {
        "type" : "object",
        "description" : "Response containing rules for all buttons in an organization.",
        "properties" : {
          "buttonUuidToRulesMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "description" : "Map of button UUIDs to their associated rules",
              "items" : {
                "$ref" : "#/components/schemas/Button_ExternalButtonRuleType"
              },
              "nullable" : true
            },
            "description" : "Map of button UUIDs to their associated rules",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Button_GetMinimalButtonStatesWSRequest" : {
        "type" : "object",
        "description" : "Request to get minimal state information for all button sensors."
      },
      "Button_GetMinimalButtonStatesWSResponse" : {
        "type" : "object",
        "description" : "Response containing minimal state information for all button sensors.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "states" : {
            "type" : "array",
            "description" : "List of minimal button state information",
            "items" : {
              "$ref" : "#/components/schemas/Button_MinimalButtonStateType"
            },
            "nullable" : true
          }
        }
      },
      "Button_GetRulesForButtonWSRequest" : {
        "type" : "object",
        "description" : "Request to get rules for a button sensor.",
        "properties" : {
          "sensorUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Button_GetRulesForButtonWSResponse" : {
        "type" : "object",
        "description" : "Response containing rules for a button sensor.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "rules" : {
            "type" : "array",
            "description" : "List of rules configured for the button sensor",
            "items" : {
              "$ref" : "#/components/schemas/Button_ExternalButtonRuleType"
            },
            "nullable" : true
          }
        }
      },
      "Button_MinimalButtonStateType" : {
        "type" : "object",
        "description" : "Minimal state information for a button sensor.",
        "properties" : {
          "associatedCameras" : {
            "type" : "array",
            "description" : "List of associated camera device UUIDs",
            "items" : {
              "type" : "string",
              "format" : "DeviceFacetUuid",
              "description" : "RUUID with optional appended facet information",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
              "nullable" : true
            },
            "nullable" : true
          },
          "batteryPercent" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Battery percentage of the button sensor",
            "example" : 85,
            "nullable" : true
          },
          "buttonEmergencyOnsiteContact" : {
            "$ref" : "#/components/schemas/EmergencyContact"
          },
          "buttonMode" : {
            "$ref" : "#/components/schemas/ButtonModeEnum"
          },
          "closestBaseStation" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Creation timestamp in milliseconds",
            "example" : 1640995200000,
            "nullable" : true
          },
          "firmwareVersion" : {
            "type" : "string",
            "description" : "Firmware version of the button sensor",
            "example" : "2.1.0",
            "nullable" : true
          },
          "floorNumber" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Floor number where the button sensor is located",
            "example" : 1,
            "nullable" : true
          },
          "health" : {
            "$ref" : "#/components/schemas/Button_ButtonHealthEnum"
          },
          "healthDetails" : {
            "$ref" : "#/components/schemas/Button_ButtonHealthDetailsEnum"
          },
          "hwVariation" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "lastSeenSec" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Last time the button sensor was seen in seconds",
            "example" : 1640995200,
            "nullable" : true
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "description" : "Latitude coordinate of the button sensor",
            "example" : 37.7749,
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "description" : "Longitude coordinate of the button sensor",
            "example" : -122.4194,
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the button sensor",
            "example" : "Main Entrance Button",
            "nullable" : true
          },
          "sensorUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "serialNumber" : {
            "type" : "string",
            "description" : "Serial number of the button sensor",
            "example" : "SN123456789",
            "nullable" : true
          },
          "signalStrength" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Signal strength of the button sensor",
            "example" : -45,
            "nullable" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "testModeEnabled" : {
            "type" : "boolean",
            "description" : "Indicates if test mode is enabled for the button sensor",
            "example" : false,
            "nullable" : true
          }
        }
      },
      "Button_UpdateButtonConfigWSRequest" : {
        "type" : "object",
        "description" : "Request to update button sensor configuration.",
        "properties" : {
          "configUpdate" : {
            "$ref" : "#/components/schemas/Deviceconfig_userconfig_IExternalUpdateableButtonUserConfig"
          }
        }
      },
      "Button_UpdateButtonDetailsWSRequest" : {
        "type" : "object",
        "description" : "Request to update button sensor details.",
        "properties" : {
          "associatedCameras" : {
            "type" : "array",
            "description" : "List of associated camera device UUIDs",
            "items" : {
              "type" : "string",
              "format" : "DeviceFacetUuid",
              "description" : "RUUID with optional appended facet information",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
              "nullable" : true
            },
            "nullable" : true
          },
          "buttonMode" : {
            "$ref" : "#/components/schemas/ButtonModeEnum"
          },
          "description" : {
            "type" : "string",
            "description" : "Optional description for the button sensor",
            "nullable" : true
          },
          "floorNumber" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Optional floor number",
            "example" : 1,
            "nullable" : true
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "description" : "Optional latitude coordinate",
            "example" : 37.7749,
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "description" : "Optional longitude coordinate",
            "example" : -122.4194,
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Optional name for the button sensor",
            "nullable" : true
          },
          "sensorUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Buyer" : {
        "type" : "object",
        "properties" : {
          "address1" : {
            "type" : "string",
            "nullable" : true
          },
          "address2" : {
            "type" : "string",
            "nullable" : true
          },
          "address3" : {
            "type" : "string",
            "nullable" : true
          },
          "city" : {
            "type" : "string",
            "nullable" : true
          },
          "companyName" : {
            "type" : "string",
            "nullable" : true
          },
          "contactName" : {
            "type" : "string",
            "nullable" : true
          },
          "country" : {
            "type" : "string",
            "nullable" : true
          },
          "phoneNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "postalCode" : {
            "type" : "string",
            "nullable" : true
          },
          "state" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "COSensorType" : {
        "type" : "object",
        "properties" : {
          "adcRaw" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "adcVoltage" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "coConcentration" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "timestampSec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "CameraAiDewarpConfigType" : {
        "type" : "object",
        "properties" : {
          "dewarp_tile_height" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "dewarp_tile_width" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "orientation" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "CameraConfiguration" : {
        "type" : "object",
        "properties" : {
          "cameraUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          },
          "checkConditionOverride" : {
            "$ref" : "#/components/schemas/CheckCondition"
          },
          "promptExtension" : {
            "type" : "string",
            "nullable" : true
          },
          "promptOverride" : {
            "type" : "string",
            "nullable" : true
          },
          "region" : {
            "$ref" : "#/components/schemas/RegionPolygonType"
          },
          "scheduledActions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ScheduledAction"
            },
            "nullable" : true
          }
        }
      },
      "CameraCrossCountingSettingsType" : {
        "type" : "object",
        "properties" : {
          "directions" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "INGRESS", "EGRESS" ],
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "in_roi" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RegionPolygonType"
            },
            "nullable" : true
          },
          "object_type" : {
            "type" : "string",
            "enum" : [ "HUMAN", "VEHICLE", "FACE", "LPR", "POSE", "CLIP_EMBED", "UNKNOWN" ],
            "nullable" : true
          },
          "object_type_id" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "out_roi" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RegionPolygonType"
            },
            "nullable" : true
          }
        }
      },
      "CameraHumanLoiteringSettingsType" : {
        "type" : "object",
        "properties" : {
          "roi" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RegionPolygonType"
            },
            "nullable" : true
          }
        }
      },
      "CameraMeteringConfigType" : {
        "type" : "object",
        "properties" : {
          "rotation" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "table" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "CameraMotorConfigType" : {
        "type" : "object",
        "properties" : {
          "af_enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "af_region" : {
            "$ref" : "#/components/schemas/PermyriadRect"
          },
          "focus" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "piris" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "zoom" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "CameraPTZConfigType" : {
        "type" : "object",
        "properties" : {
          "offset_x_percent" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "offset_y_percent" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "rotation" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "size_percent" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          }
        }
      },
      "CameraPolicyV2Type" : {
        "type" : "object",
        "description" : "List of camera policies using the schedule",
        "properties" : {
          "defaultTriggers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CameraTriggerType"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "scheduledTriggers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CameraScheduledTriggerType"
            },
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "CameraScheduledTriggerType" : {
        "type" : "object",
        "properties" : {
          "schedule" : {
            "$ref" : "#/components/schemas/WeeklyRepeatingScheduleType"
          },
          "triggerSet" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CameraTriggerType"
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "CameraTriggerType" : {
        "type" : "object",
        "properties" : {
          "activity" : {
            "$ref" : "#/components/schemas/ActivityEnum"
          },
          "faceAlertLabelSet" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "faceAlertUnidentified" : {
            "type" : "boolean",
            "nullable" : true
          },
          "faceAllowedLabelSet" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "threshold" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "vehicleAlertLabelSet" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "vehicleAlertUnidentified" : {
            "type" : "boolean",
            "nullable" : true
          },
          "vehicleAllowedLabelSet" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "CameraType" : {
        "type" : "object",
        "description" : "List of third-party cameras assigned to the specified NVR",
        "properties" : {
          "archiveRegion" : {
            "type" : "string",
            "nullable" : true
          },
          "cameraFramerate" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "customData" : {
            "type" : "string",
            "nullable" : true
          },
          "deleted" : {
            "type" : "boolean",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "deviceFacetRadians" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "number",
              "format" : "float",
              "nullable" : true
            },
            "nullable" : true
          },
          "directionRadians" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "facetNameMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "floorNumber" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "hardwareId" : {
            "type" : "string",
            "nullable" : true
          },
          "hwVariation" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "mediaStorageDeviceUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          },
          "mummified" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "pending" : {
            "type" : "boolean",
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "serialNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "type" : {
            "$ref" : "#/components/schemas/DeviceTypeEnum"
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "CameraVisualTamperConfigType" : {
        "type" : "object",
        "properties" : {
          "analyze_fps" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "analyze_res" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "canny_thresh" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "edge_cov_diff_thresh" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "long_buf_size" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "short_buf_size" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Camera_CameraBackwardsCompatUpdateType" : {
        "type" : "object",
        "description" : "Backwards compatible camera update type with optional fields.",
        "properties" : {
          "archiveRegion" : {
            "type" : "string",
            "description" : "Archive region for the camera",
            "example" : "us-west-1",
            "nullable" : true
          },
          "deleted" : {
            "type" : "boolean",
            "description" : "Whether the camera is deleted",
            "example" : false,
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "description" : "Description of the camera",
            "example" : "Camera monitoring the main entrance",
            "nullable" : true
          },
          "floorNumber" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Floor number where the camera is located",
            "example" : 1,
            "nullable" : true
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "description" : "Latitude coordinate of the camera",
            "example" : 37.7749,
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "description" : "Longitude coordinate of the camera",
            "example" : -122.4194,
            "nullable" : true
          },
          "mummified" : {
            "type" : "boolean",
            "description" : "Whether the camera is mummified",
            "example" : false,
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the camera",
            "example" : "Front Door Camera",
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Camera_CameraCurrentStateType" : {
        "type" : "object",
        "description" : "Current state information for a camera.",
        "properties" : {
          "baseVideoOperationUri" : {
            "type" : "string",
            "description" : "Base URI for video operations",
            "example" : "https://api.example.com/video",
            "nullable" : true
          },
          "connectionStatus" : {
            "type" : "string",
            "description" : "Status enumeration for camera states.",
            "enum" : [ "RED", "ORANGE", "GREEN" ],
            "nullable" : true
          },
          "connectionTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Connection timestamp in milliseconds",
            "example" : 1640995200000,
            "nullable" : true
          },
          "defaultInterface" : {
            "type" : "string",
            "description" : "Default network interface",
            "example" : "eth0",
            "nullable" : true
          },
          "defaultInterfaceMac" : {
            "type" : "string",
            "description" : "MAC address of default interface",
            "example" : "00:11:22:33:44:55",
            "nullable" : true
          },
          "firmwareVersion" : {
            "type" : "string",
            "description" : "Current firmware version",
            "example" : "1.2.3",
            "nullable" : true
          },
          "healthStatus" : {
            "type" : "string",
            "description" : "Status enumeration for camera states.",
            "enum" : [ "RED", "ORANGE", "GREEN" ],
            "nullable" : true
          },
          "healthStatusDetails" : {
            "type" : "string",
            "description" : "Detailed health status enumeration for cameras.",
            "enum" : [ "DISCONNECTED", "FIRMWARE_BEHIND", "NONE" ],
            "nullable" : true
          },
          "latestFirmwareVersion" : {
            "type" : "string",
            "description" : "Latest available firmware version",
            "example" : "1.2.4",
            "nullable" : true
          },
          "mediaRegion" : {
            "type" : "string",
            "description" : "Media region",
            "example" : "us-west-1",
            "nullable" : true
          },
          "onCameraState" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "description" : "State information stored on the camera",
              "nullable" : true
            },
            "description" : "State information stored on the camera",
            "nullable" : true
          },
          "onCloudState" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "description" : "State information stored in the cloud",
              "nullable" : true
            },
            "description" : "State information stored in the cloud",
            "nullable" : true
          },
          "region" : {
            "type" : "string",
            "description" : "Camera region",
            "example" : "us-west-1",
            "nullable" : true
          },
          "serialNumber" : {
            "type" : "string",
            "description" : "Camera serial number",
            "example" : "CAM123456789",
            "nullable" : true
          },
          "ssid" : {
            "type" : "string",
            "description" : "WiFi SSID",
            "example" : "MyNetwork",
            "nullable" : true
          },
          "versionsBehind" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Number of firmware versions behind",
            "example" : 1,
            "nullable" : true
          },
          "wifiApMac" : {
            "type" : "string",
            "description" : "MAC address of WiFi access point",
            "example" : "AA:BB:CC:DD:EE:FF",
            "nullable" : true
          },
          "wifiBars" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "WiFi signal strength in bars (1-5)",
            "example" : 4,
            "nullable" : true
          },
          "wifiSignalStrength" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "WiFi signal strength in dBm",
            "example" : -45,
            "nullable" : true
          }
        }
      },
      "Camera_CameraExternalFacetedType" : {
        "type" : "object",
        "description" : "External faceted camera type with device UUID.",
        "properties" : {
          "archiveRegion" : {
            "type" : "string",
            "nullable" : true
          },
          "cameraFramerate" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "customData" : {
            "type" : "string",
            "nullable" : true
          },
          "deleted" : {
            "type" : "boolean",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "deviceFacetRadians" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "number",
              "format" : "float",
              "nullable" : true
            },
            "nullable" : true
          },
          "deviceUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          },
          "directionRadians" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "facetNameMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "floorNumber" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "hwVariation" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "mediaStorageDeviceUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          },
          "mummified" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "pending" : {
            "type" : "boolean",
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "serialNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "type" : {
            "$ref" : "#/components/schemas/DeviceTypeEnum"
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Camera_CameraExternalType" : {
        "type" : "object",
        "description" : "External camera type.",
        "properties" : {
          "archiveRegion" : {
            "type" : "string",
            "nullable" : true
          },
          "cameraFramerate" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "customData" : {
            "type" : "string",
            "nullable" : true
          },
          "deleted" : {
            "type" : "boolean",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "deviceFacetRadians" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "number",
              "format" : "float",
              "nullable" : true
            },
            "nullable" : true
          },
          "directionRadians" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "facetNameMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "floorNumber" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "hwVariation" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "mediaStorageDeviceUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          },
          "mummified" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "pending" : {
            "type" : "boolean",
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "serialNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "type" : {
            "$ref" : "#/components/schemas/DeviceTypeEnum"
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Camera_CameraOfflineLanStreamingInfo" : {
        "type" : "object",
        "description" : "Information for offline LAN streaming.",
        "properties" : {
          "accessToken" : {
            "type" : "string",
            "description" : "Access token for LAN streaming",
            "example" : "abc123def456",
            "nullable" : true
          },
          "lanAddresses" : {
            "type" : "array",
            "description" : "List of LAN addresses for streaming",
            "items" : {
              "type" : "string",
              "description" : "List of LAN addresses for streaming",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Camera_CreateCustomFootageSeekpointsWSRequest" : {
        "type" : "object",
        "description" : "Request to create custom footage seek points for a camera.",
        "properties" : {
          "cameraUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          },
          "footageSeekPoints" : {
            "type" : "array",
            "description" : "List of custom footage seek points to create",
            "items" : {
              "$ref" : "#/components/schemas/CustomFootageSeekPointType"
            },
            "nullable" : true
          }
        }
      },
      "Camera_CreateFootageBoundingBoxesWSRequest" : {
        "type" : "object",
        "description" : "Request to create footage bounding boxes for a camera.",
        "properties" : {
          "cameraUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          },
          "footageBoundingBoxes" : {
            "type" : "array",
            "description" : "List of footage bounding boxes to create",
            "items" : {
              "$ref" : "#/components/schemas/FootageBoundingBoxType"
            },
            "nullable" : true
          }
        }
      },
      "Camera_CreateFootageBoundingBoxesWSResponse" : {
        "type" : "object",
        "description" : "Response indicating the result of creating footage bounding boxes.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Camera_CreateFootageSeekpointsWSResponse" : {
        "type" : "object",
        "description" : "Response indicating the result of creating footage seek points.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Camera_CreateSharedLiveVideoStreamWSRequest" : {
        "type" : "object",
        "description" : "Request to create a shared live video stream for a camera.",
        "properties" : {
          "audioGatewayUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          },
          "cameraUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          },
          "expirationTimeSecs" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Add an expiration date for accessing the stream in seconds",
            "example" : 86400,
            "nullable" : true
          },
          "includeAudio" : {
            "type" : "boolean",
            "description" : "Camera must be associated with an audio gateway to have audio",
            "example" : false,
            "nullable" : true
          },
          "invertSchedule" : {
            "type" : "boolean",
            "description" : "If given a schedule UUID, will hide the stream during the schedule instead and show it otherwise",
            "example" : false,
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "description" : "If not provided, will be named 'Unnamed'",
            "example" : "Front Door Live Stream",
            "nullable" : true
          },
          "password" : {
            "type" : "string",
            "description" : "Add a password to allow access to your shared stream",
            "example" : "mypassword123",
            "nullable" : true
          },
          "scheduleUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "ssoProtected" : {
            "type" : "boolean",
            "description" : "Org must have SSO setup to use SSO protected streams",
            "example" : false,
            "nullable" : true
          },
          "streamType" : {
            "$ref" : "#/components/schemas/StreamTypeEnum"
          },
          "vodEnabled" : {
            "type" : "boolean",
            "description" : "Enables recording of live footage to a VOD",
            "example" : true,
            "nullable" : true
          }
        }
      },
      "Camera_CreateSharedLiveVideoStreamWSResponse" : {
        "type" : "object",
        "description" : "Response containing the created shared live video stream information.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "sharedLiveM3U8StreamUrl" : {
            "type" : "string",
            "description" : "M3U8 URL for the shared live video stream",
            "example" : "https://example.com/live/m3u8/stream",
            "nullable" : true
          },
          "sharedLiveVideoStreamUrl" : {
            "type" : "string",
            "description" : "URL for the shared live video stream",
            "example" : "https://example.com/live/video/stream",
            "nullable" : true
          },
          "sharedLiveVideoStreamUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Camera_CreateSharedVideoWallWSRequest" : {
        "type" : "object",
        "description" : "Request to create a shared video wall.",
        "properties" : {
          "expirationTimeSecs" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Expiration time in seconds",
            "example" : 86400,
            "nullable" : true
          },
          "invertSchedule" : {
            "type" : "boolean",
            "description" : "Whether to invert the schedule",
            "example" : false,
            "nullable" : true
          },
          "password" : {
            "type" : "string",
            "description" : "Password to protect the shared video wall",
            "example" : "mypassword123",
            "nullable" : true
          },
          "scheduleUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "videoWallUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "vodEnabled" : {
            "type" : "boolean",
            "description" : "Whether to enable video on demand",
            "example" : true,
            "nullable" : true
          }
        }
      },
      "Camera_CreateSharedVideoWallWSResponse" : {
        "type" : "object",
        "description" : "Response containing the created shared video wall information.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "sharedLiveVideoStreamUrl" : {
            "type" : "string",
            "description" : "URL for accessing the shared video wall",
            "example" : "https://share.rhombussystems.com/videowall/abc123",
            "nullable" : true
          },
          "sharedLiveVideoStreamUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Camera_CreateVideoWallWSRequest" : {
        "type" : "object",
        "description" : "Request to create a video wall.",
        "properties" : {
          "videoWall" : {
            "$ref" : "#/components/schemas/VideoWallType"
          }
        }
      },
      "Camera_CreateVideoWallWSResponse" : {
        "type" : "object",
        "description" : "Response from creating a video wall.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Camera_DeleteCameraWSRequest" : {
        "type" : "object",
        "description" : "Request to delete a camera from the system.",
        "properties" : {
          "cameraUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "mummify" : {
            "type" : "boolean",
            "description" : "Whether to mummify the camera instead of permanent deletion",
            "example" : false,
            "nullable" : true
          }
        }
      },
      "Camera_DeleteCameraWSResponse" : {
        "type" : "object",
        "description" : "Response indicating the result of deleting a camera.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "responseStatus" : {
            "type" : "string",
            "description" : "Status of the delete operation",
            "enum" : [ "BASIC_AUTH_FAILED", "PASSWORD_MISMATCH", "SAME_PASSWORD", "USER_EXISTS", "USER_NOT_FOUND", "DEVICE_NOT_FOUND", "POLICY_NOT_FOUND", "LOCATION_NOT_FOUND", "ORG_NOT_FOUND", "BAD_INPUT", "SUCCESS", "PASSWORD_TOO_SHORT" ],
            "nullable" : true
          }
        }
      },
      "Camera_DeleteCustomFootageSeekpointsWSRequest" : {
        "type" : "object",
        "description" : "Request to delete custom footage seek points for cameras within a time range.",
        "properties" : {
          "cameraUuids" : {
            "type" : "array",
            "description" : "List of camera UUIDs to delete custom seek points for",
            "items" : {
              "type" : "string",
              "format" : "DeviceFacetUuid",
              "description" : "RUUID with optional appended facet information",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
              "nullable" : true
            },
            "nullable" : true
          },
          "customName" : {
            "type" : "string",
            "description" : "Filter which custom seek points to delete with the custom name provided",
            "example" : "motion_event",
            "nullable" : true
          },
          "endTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "UNIX milliseconds timestamp to end custom seek point deletion, up to 24 hours from the start timestamp",
            "example" : 1641081600000,
            "nullable" : true
          },
          "startTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "UNIX milliseconds timestamp to start custom seek point deletion",
            "example" : 1640995200000,
            "nullable" : true
          }
        }
      },
      "Camera_DeleteCustomFootageSeekpointsWSResponse" : {
        "type" : "object",
        "description" : "Response containing the results of deleting custom footage seek points.",
        "properties" : {
          "deleteSeekpointResponseMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Camera_DeleteCustomFootageSeekpointsWSResponse_SeekPointDeleteResponse"
            },
            "description" : "Mapping of camera UUIDs to seek point deletion results",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Camera_DeleteCustomFootageSeekpointsWSResponse_SeekPointDeleteResponse" : {
        "type" : "object",
        "description" : "Response indicating the result of deleting seek points for a camera.",
        "properties" : {
          "err" : {
            "type" : "boolean",
            "description" : "Whether an error occurred during deletion",
            "example" : false,
            "nullable" : true
          },
          "errMsg" : {
            "type" : "string",
            "description" : "Error message if deletion failed",
            "example" : "Invalid timestamp range",
            "nullable" : true
          }
        }
      },
      "Camera_DeleteSharedLiveVideoStreamWSRequest" : {
        "type" : "object",
        "description" : "Request to delete a shared live video stream.",
        "properties" : {
          "cameraUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Camera_DeleteSharedVideoWallWSRequest" : {
        "type" : "object",
        "description" : "Request to delete a shared video wall.",
        "properties" : {
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "videoWallUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Camera_DeleteSharedVideoWallWSResponse" : {
        "type" : "object",
        "description" : "Response indicating the result of deleting a shared video wall.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Camera_DeleteVideoWallWSRequest" : {
        "type" : "object",
        "description" : "Request to delete a video wall configuration.",
        "properties" : {
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Camera_DeleteVideoWallWSResponse" : {
        "type" : "object",
        "description" : "Response indicating the result of deleting a video wall configuration.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Camera_EraseCameraWSRequest" : {
        "type" : "object",
        "description" : "Request to permanently erase a camera from the system.",
        "properties" : {
          "cameraUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Camera_EraseCameraWSResponse" : {
        "type" : "object",
        "description" : "Response indicating the result of erasing a camera.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Camera_FindAllSharedLiveVideoStreamsWSRequest" : {
        "type" : "object",
        "description" : "Request to find all shared live video streams."
      },
      "Camera_FindAllSharedLiveVideoStreamsWSResponse" : {
        "type" : "object",
        "description" : "Response containing all shared live video streams.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "sharedLiveVideoStreams" : {
            "type" : "array",
            "description" : "List of shared live video streams",
            "items" : {
              "$ref" : "#/components/schemas/Camera_SharedLiveVideoStreamWS"
            },
            "nullable" : true
          }
        }
      },
      "Camera_FindSharedLiveVideoStreamsForWSRequest" : {
        "type" : "object",
        "description" : "Request to find shared live video streams for a camera.",
        "properties" : {
          "cameraUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          }
        }
      },
      "Camera_FindSharedLiveVideoStreamsWSResponse" : {
        "type" : "object",
        "description" : "Response containing shared live video streams.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "sharedLiveVideoStreams" : {
            "type" : "array",
            "description" : "List of shared live video streams",
            "items" : {
              "$ref" : "#/components/schemas/Camera_SharedLiveVideoStreamWS"
            },
            "nullable" : true
          }
        }
      },
      "Camera_FindSharedVideoWallsWSRequest" : {
        "type" : "object",
        "description" : "Request to find shared video walls for a video wall.",
        "properties" : {
          "videoWallUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Camera_FindSharedVideoWallsWSResponse" : {
        "type" : "object",
        "description" : "Response containing shared video walls for a video wall.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "sharedVideoWalls" : {
            "type" : "array",
            "description" : "List of shared video walls",
            "items" : {
              "$ref" : "#/components/schemas/Camera_SharedVideoWallWS"
            },
            "nullable" : true
          }
        }
      },
      "Camera_FootageBoundingBoxSummaryType" : {
        "type" : "object",
        "description" : "Summary of footage bounding boxes by device.",
        "properties" : {
          "deviceMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/FootageBoundingBoxType"
            },
            "description" : "Map of device UUIDs to their footage bounding box information",
            "nullable" : true
          }
        }
      },
      "Camera_FootageSeekPointSummaryType" : {
        "type" : "object",
        "description" : "Summary of footage seek points with activity counts and metadata.",
        "properties" : {
          "activityCountMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Map of activities to device UUIDs and their counts",
                "nullable" : true
              },
              "description" : "Map of activities to device UUIDs and their counts",
              "nullable" : true
            },
            "description" : "Map of activities to device UUIDs and their counts",
            "nullable" : true
          },
          "alert" : {
            "type" : "boolean",
            "description" : "Whether there is an alert",
            "example" : false,
            "nullable" : true
          },
          "faceNames" : {
            "type" : "array",
            "description" : "Set of recognized face names",
            "items" : {
              "type" : "string",
              "description" : "Set of recognized face names",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "poses" : {
            "type" : "array",
            "description" : "Set of detected poses",
            "items" : {
              "type" : "string",
              "description" : "Set of detected poses",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "recognizedObjects" : {
            "type" : "array",
            "description" : "Set of recognized objects",
            "items" : {
              "type" : "string",
              "description" : "Set of recognized objects",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "unidentifiedFaceIds" : {
            "type" : "array",
            "description" : "Set of unidentified face IDs",
            "items" : {
              "type" : "string",
              "description" : "Set of unidentified face IDs",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "vehicleLicensePlates" : {
            "type" : "array",
            "description" : "Set of vehicle license plates",
            "items" : {
              "type" : "string",
              "description" : "Set of vehicle license plates",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "vehicleNames" : {
            "type" : "array",
            "description" : "Set of recognized vehicle names",
            "items" : {
              "type" : "string",
              "description" : "Set of recognized vehicle names",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "Camera_GenerateBatchRegistrationInfoRequest" : {
        "type" : "object",
        "description" : "Request to generate batch registration information for cameras.",
        "properties" : {
          "adminUserPermissionGroups" : {
            "type" : "array",
            "description" : "List of admin user permission group UUIDs",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "description" : "Latitude coordinate",
            "example" : 37.7749,
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "description" : "Longitude coordinate",
            "example" : -122.4194,
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "readOnlyUserPermissionGroups" : {
            "type" : "array",
            "description" : "List of read-only user permission group UUIDs",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Camera_GenerateBatchRegistrationInfoResponse" : {
        "type" : "object",
        "description" : "Response containing batch registration information for cameras.",
        "properties" : {
          "env" : {
            "type" : "string",
            "description" : "Environment identifier",
            "example" : "production",
            "nullable" : true
          },
          "token" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Camera_GenerateWifiChangeAuthorizationTokenWSRequest" : {
        "type" : "object",
        "description" : "Request to generate a WiFi change authorization token.",
        "properties" : {
          "perceivedIp" : {
            "type" : "string",
            "description" : "Perceived IP address",
            "example" : "192.168.1.100",
            "nullable" : true
          },
          "ssid" : {
            "type" : "string",
            "description" : "WiFi network SSID",
            "example" : "MyWiFiNetwork",
            "nullable" : true
          }
        }
      },
      "Camera_GenerateWifiChangeAuthorizationTokenWSResponse" : {
        "type" : "object",
        "description" : "Response containing a WiFi change authorization token.",
        "properties" : {
          "authorizationToken" : {
            "type" : "array",
            "description" : "Authorization token for WiFi change",
            "items" : {
              "type" : "string",
              "format" : "byte",
              "description" : "Authorization token for WiFi change",
              "nullable" : true
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Camera_GetBatchRegistrationTokenUsageRequest" : {
        "type" : "object",
        "description" : "Request to retrieve batch registration token usage information.",
        "properties" : {
          "sinceMillis" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Timestamp in milliseconds since epoch to check usage from",
            "example" : 1640995200000,
            "nullable" : true
          },
          "token" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Camera_GetBatchRegistrationTokenUsageResponse" : {
        "type" : "object",
        "description" : "Response containing batch registration token usage information.",
        "properties" : {
          "usageList" : {
            "type" : "array",
            "description" : "List of batch registration token usage results",
            "items" : {
              "$ref" : "#/components/schemas/BatchRegistrationTokenUsageResult"
            },
            "nullable" : true
          }
        }
      },
      "Camera_GetCameraAIThresholdsWSRequest" : {
        "type" : "object",
        "description" : "Request to retrieve AI thresholds for a camera.",
        "properties" : {
          "cameraUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          }
        }
      },
      "Camera_GetCameraAIThresholdsWSResponse" : {
        "type" : "object",
        "description" : "Response containing AI thresholds for a camera.",
        "properties" : {
          "consecutiveHumanFilter" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Require this many consecutive frames of seeing a human to include that human detection in results. Set to 1 to always include detections, or higher to avoid false positives due to transient motion like bugs/spiders/rain. Default is 2 consecutive frames.",
            "example" : 3,
            "nullable" : true
          },
          "consecutiveVehicleFilter" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Require this many consecutive frames of seeing a vehicle to include that vehicle detection in results. Set to 1 to always include detections, or higher to avoid false positives due to transient motion like bugs/spiders/rain. Default is 2 consecutive frames.",
            "example" : 3,
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "faceConfidenceThreshold" : {
            "type" : "number",
            "format" : "float",
            "description" : "Confidence threshold for face detection. 0 or null means the built-in default.",
            "example" : 0.8,
            "nullable" : true
          },
          "faceMatchConfidenceThreshold" : {
            "type" : "number",
            "format" : "float",
            "deprecated" : true,
            "description" : "Confidence threshold for face matching (determining if two faces are the same person). 0 or null means the built-in default. We no longer support device specific face matching threshold. This property is deprecated and will be removed.",
            "maximum" : 1.0,
            "minimum" : 0.0,
            "nullable" : true
          },
          "humanConfidenceThreshold" : {
            "type" : "number",
            "format" : "float",
            "description" : "Confidence threshold for human detection. 0 or null means the built-in default.",
            "example" : 0.7,
            "nullable" : true
          },
          "lprConfidenceThreshold" : {
            "type" : "number",
            "format" : "float",
            "description" : "Confidence threshold for license plate detection and character recognition. 0 or null means the built-in default.",
            "example" : 0.9,
            "nullable" : true
          },
          "maxEventDurationMs" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The max event duration for an alert in milliseconds. Default is 30000, lowering down to 4000 will result in faster alert delivery but shorter alert clips.",
            "example" : 15000,
            "nullable" : true
          },
          "vehicleConfidenceThreshold" : {
            "type" : "number",
            "format" : "float",
            "description" : "Confidence threshold for vehicle detection. 0 or null means the built-in default.",
            "example" : 0.7,
            "nullable" : true
          }
        }
      },
      "Camera_GetCameraDetailsWSRequest" : {
        "type" : "object",
        "description" : "Request to retrieve detailed information for multiple cameras.",
        "properties" : {
          "cameraUuids" : {
            "type" : "array",
            "description" : "List of camera UUIDs to retrieve details for",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Camera_GetCameraDetailsWSResponse" : {
        "type" : "object",
        "description" : "Response containing detailed information for multiple cameras.",
        "properties" : {
          "cameras" : {
            "type" : "array",
            "description" : "List of camera details",
            "items" : {
              "$ref" : "#/components/schemas/Camera_CameraExternalType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Camera_GetCloudArchivedMediaInfoWSRequest" : {
        "type" : "object",
        "description" : "Request to retrieve cloud archived media information for a camera.",
        "properties" : {
          "cameraUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          }
        }
      },
      "Camera_GetCloudArchivedMediaInfoWSResponse" : {
        "type" : "object",
        "description" : "Response containing cloud archived media information for a camera.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "oldestArchivedVideoSegmentSecs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Timestamp of the oldest archived video segment in seconds since epoch",
            "example" : 1640995200,
            "nullable" : true
          }
        }
      },
      "Camera_GetCloudArchivingConfigWSRequest" : {
        "type" : "object",
        "description" : "Request to get cloud archiving configuration.",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Camera_GetCloudArchivingConfigWSResponse" : {
        "type" : "object",
        "description" : "Response containing cloud archiving configuration.",
        "properties" : {
          "archivingConfig" : {
            "$ref" : "#/components/schemas/ScopedCloudArchivingConfig"
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Camera_GetConfigWSRequest" : {
        "type" : "object",
        "description" : "Request to retrieve camera configuration settings.",
        "properties" : {
          "cameraUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Camera_GetConfigWSResponse" : {
        "type" : "object",
        "description" : "Response containing camera configuration settings.",
        "properties" : {
          "config" : {
            "$ref" : "#/components/schemas/Deviceconfig_userconfig_IExternalReadableAudioVideoUserConfig"
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Camera_GetCurrentStateWSRequest" : {
        "type" : "object",
        "description" : "Request to retrieve the current state of a camera (deprecated).",
        "properties" : {
          "cameraUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          },
          "force" : {
            "type" : "boolean",
            "description" : "Whether to force a refresh of the camera state",
            "example" : false,
            "nullable" : true
          }
        }
      },
      "Camera_GetCurrentStateWSResponse" : {
        "type" : "object",
        "description" : "Response containing the current state of a camera (deprecated).",
        "properties" : {
          "cameraState" : {
            "$ref" : "#/components/schemas/Camera_CameraCurrentStateType"
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Camera_GetCustomFootageSeekpointsV2WSRequest" : {
        "type" : "object",
        "description" : "Request to retrieve custom footage seek points V2 for cameras within a time range.",
        "properties" : {
          "customDescription" : {
            "type" : "string",
            "description" : "Filters which custom footage seek point to search for by description",
            "example" : "Motion detected in camera view",
            "nullable" : true
          },
          "customDisplayName" : {
            "type" : "string",
            "description" : "Filters which custom footage seek point to search for by name",
            "example" : "motion_event",
            "nullable" : true
          },
          "deviceUuids" : {
            "type" : "array",
            "description" : "List of device UUIDs to filter the search",
            "items" : {
              "type" : "string",
              "format" : "DeviceFacetUuid",
              "description" : "RUUID with optional appended facet information",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
              "nullable" : true
            },
            "nullable" : true
          },
          "duration" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "How far from the start timestamp to search in seconds",
            "example" : 3600,
            "nullable" : true
          },
          "locationUuids" : {
            "type" : "array",
            "description" : "List of location UUIDs to filter the search",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          },
          "startTime" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Starting timestamp of the search in UNIX seconds",
            "example" : 1640995200,
            "nullable" : true
          }
        }
      },
      "Camera_GetCustomFootageSeekpointsV2WSResponse" : {
        "type" : "object",
        "description" : "Response containing custom footage seek points V2 for cameras.",
        "properties" : {
          "customFootageSeekPoints" : {
            "type" : "array",
            "description" : "List of custom footage seek points V2",
            "items" : {
              "$ref" : "#/components/schemas/SeekpointIndexType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Camera_GetFacetedCameraDetailsWSResponse" : {
        "type" : "object",
        "properties" : {
          "cameras" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Camera_CameraExternalFacetedType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Camera_GetFootageBoundingBoxesForMultipleWSRequest" : {
        "type" : "object",
        "description" : "Request to retrieve footage bounding boxes for multiple cameras within a time range.",
        "properties" : {
          "cameraUuids" : {
            "type" : "array",
            "description" : "List of camera UUIDs to retrieve bounding boxes for",
            "items" : {
              "type" : "string",
              "format" : "DeviceFacetUuid",
              "description" : "RUUID with optional appended facet information",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
              "nullable" : true
            },
            "nullable" : true
          },
          "durationSec" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Duration in seconds",
            "example" : 3600,
            "nullable" : true
          },
          "startTimeSec" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start time in seconds since epoch",
            "example" : 1640995200,
            "nullable" : true
          }
        }
      },
      "Camera_GetFootageBoundingBoxesForMultipleWSResponse" : {
        "type" : "object",
        "description" : "Response containing footage bounding boxes for multiple cameras.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "footageBoundingBoxMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Camera_FootageBoundingBoxSummaryType"
            },
            "description" : "Mapping of timestamps to footage bounding box summaries",
            "nullable" : true
          }
        }
      },
      "Camera_GetFootageBoundingBoxesWSRequest" : {
        "type" : "object",
        "description" : "Request to retrieve footage bounding boxes for a camera within a time range.",
        "properties" : {
          "cameraUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          },
          "duration" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Duration in seconds",
            "example" : 3600,
            "nullable" : true
          },
          "startTime" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start time in seconds since epoch",
            "example" : 1640995200,
            "nullable" : true
          }
        }
      },
      "Camera_GetFootageBoundingBoxesWSResponse" : {
        "type" : "object",
        "description" : "Response containing footage bounding boxes for a camera.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "footageBoundingBoxes" : {
            "type" : "array",
            "description" : "List of footage bounding boxes",
            "items" : {
              "$ref" : "#/components/schemas/FootageBoundingBoxType"
            },
            "nullable" : true
          }
        }
      },
      "Camera_GetFootageSeekpointsForMultipleWSRequest" : {
        "type" : "object",
        "description" : "Request to retrieve footage seek points for multiple cameras within a time range.",
        "properties" : {
          "cameraUuids" : {
            "type" : "array",
            "description" : "List of camera UUIDs to retrieve seek points for",
            "items" : {
              "type" : "string",
              "format" : "DeviceFacetUuid",
              "description" : "RUUID with optional appended facet information",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
              "nullable" : true
            },
            "nullable" : true
          },
          "durationSec" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Duration in seconds",
            "example" : 3600,
            "nullable" : true
          },
          "includeAnyMotion" : {
            "type" : "boolean",
            "description" : "Whether to include any motion events",
            "example" : true,
            "nullable" : true
          },
          "startTimeSec" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start time in seconds since epoch",
            "example" : 1640995200,
            "nullable" : true
          }
        }
      },
      "Camera_GetFootageSeekpointsForMultipleWSResponse" : {
        "type" : "object",
        "description" : "Response containing footage seek points for multiple cameras.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "footageSeekPointMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Camera_FootageSeekPointSummaryType"
            },
            "description" : "Mapping of timestamps to footage seek point summaries",
            "nullable" : true
          }
        }
      },
      "Camera_GetFootageSeekpointsV2WSRequest" : {
        "type" : "object",
        "description" : "Request to retrieve footage seek points V2 for a camera within a time range.",
        "properties" : {
          "cameraUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          },
          "duration" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Duration in seconds",
            "example" : 3600,
            "nullable" : true
          },
          "includeAnyMotion" : {
            "type" : "boolean",
            "description" : "Whether to include any motion events",
            "example" : true,
            "nullable" : true
          },
          "startTime" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start time in seconds since epoch",
            "example" : 1640995200,
            "nullable" : true
          }
        }
      },
      "Camera_GetFootageSeekpointsV2WSResponse" : {
        "type" : "object",
        "description" : "Response containing footage seek points V2 for a camera.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "footageSeekPoints" : {
            "type" : "array",
            "description" : "List of footage seek points V2",
            "items" : {
              "$ref" : "#/components/schemas/FootageSeekPointV2Type"
            },
            "nullable" : true
          }
        }
      },
      "Camera_GetFootageSeekpointsWSRequest" : {
        "type" : "object",
        "description" : "Request to retrieve footage seek points for a camera within a time range (deprecated).",
        "properties" : {
          "cameraUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "duration" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Duration in seconds",
            "example" : 3600,
            "nullable" : true
          },
          "startTime" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start time in seconds since epoch",
            "example" : 1640995200,
            "nullable" : true
          }
        }
      },
      "Camera_GetFootageSeekpointsWSResponse" : {
        "type" : "object",
        "description" : "Response containing footage seek points for a camera (deprecated).",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "footageSeekPoints" : {
            "type" : "array",
            "description" : "List of footage seek points",
            "items" : {
              "$ref" : "#/components/schemas/FootageSeekPointType"
            },
            "nullable" : true
          }
        }
      },
      "Camera_GetFullCameraStateWSRequest" : {
        "type" : "object",
        "description" : "Request to retrieve the full state information of a camera.",
        "properties" : {
          "cameraUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          },
          "force" : {
            "type" : "boolean",
            "description" : "Whether to force a refresh of the camera state",
            "example" : false,
            "nullable" : true
          }
        }
      },
      "Camera_GetFullCameraStateWSResponse" : {
        "type" : "object",
        "description" : "Response containing the full state information of a camera.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "fullCameraState" : {
            "$ref" : "#/components/schemas/FullDeviceStateType"
          }
        }
      },
      "Camera_GetLineCrossingEnabledCamerasForLocationWSRequest" : {
        "type" : "object",
        "description" : "Request to get line crossing enabled cameras for a location.",
        "properties" : {
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Camera_GetLineCrossingEnabledCamerasForLocationWSResponse" : {
        "type" : "object",
        "description" : "Response containing line crossing enabled cameras for a location.",
        "properties" : {
          "camerasToConfigs" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Deviceconfig_userconfig_ExternalReadableFacetedUserConfig"
            },
            "description" : "Map of camera UUIDs to their line crossing configurations",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Camera_GetMediaUrisWSRequest" : {
        "type" : "object",
        "description" : "Request to get media URIs for a camera device.",
        "properties" : {
          "cameraUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          }
        }
      },
      "Camera_GetMediaUrisWSResponse" : {
        "type" : "object",
        "description" : "Response containing media URIs for camera streaming and playback.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "lanCheckUrls" : {
            "type" : "array",
            "description" : "List of LAN check URLs to verify device availability",
            "items" : {
              "type" : "string",
              "description" : "List of LAN check URLs to verify device availability",
              "nullable" : true
            },
            "nullable" : true
          },
          "lanLiveH264Uris" : {
            "type" : "array",
            "description" : "List of LAN H.264 live streaming URIs",
            "items" : {
              "type" : "string",
              "description" : "List of LAN H.264 live streaming URIs",
              "nullable" : true
            },
            "nullable" : true
          },
          "lanLiveM3u8Uris" : {
            "type" : "array",
            "description" : "List of LAN M3U8 live streaming URIs",
            "items" : {
              "type" : "string",
              "description" : "List of LAN M3U8 live streaming URIs",
              "nullable" : true
            },
            "nullable" : true
          },
          "lanLiveMpdUris" : {
            "type" : "array",
            "description" : "List of LAN MPD live streaming URIs",
            "items" : {
              "type" : "string",
              "description" : "List of LAN MPD live streaming URIs",
              "nullable" : true
            },
            "nullable" : true
          },
          "lanVodM3u8UrisTemplates" : {
            "type" : "array",
            "description" : "List of LAN M3U8 VOD URI templates",
            "items" : {
              "type" : "string",
              "description" : "List of LAN M3U8 VOD URI templates",
              "nullable" : true
            },
            "nullable" : true
          },
          "lanVodMpdUrisTemplates" : {
            "type" : "array",
            "description" : "List of LAN MPD VOD URI templates",
            "items" : {
              "type" : "string",
              "description" : "List of LAN MPD VOD URI templates",
              "nullable" : true
            },
            "nullable" : true
          },
          "wanLiveH264Uri" : {
            "type" : "string",
            "description" : "WAN H.264 live streaming URI",
            "example" : "rtsp://camera.example.com/live",
            "nullable" : true
          },
          "wanLiveM3u8Uri" : {
            "type" : "string",
            "description" : "WAN M3U8 live streaming URI",
            "example" : "https://camera.example.com/live.m3u8",
            "nullable" : true
          },
          "wanLiveMpdUri" : {
            "type" : "string",
            "description" : "WAN MPD live streaming URI",
            "example" : "https://camera.example.com/live.mpd",
            "nullable" : true
          },
          "wanVodH264UriTemplate" : {
            "type" : "string",
            "description" : "WAN H.264 VOD URI template",
            "example" : "https://camera.example.com/vod/{timestamp}.h264",
            "nullable" : true
          },
          "wanVodM3u8UriTemplate" : {
            "type" : "string",
            "description" : "WAN M3U8 VOD URI template",
            "example" : "https://camera.example.com/vod/{timestamp}.m3u8",
            "nullable" : true
          },
          "wanVodMpdUriTemplate" : {
            "type" : "string",
            "description" : "WAN MPD VOD URI template",
            "example" : "https://camera.example.com/vod/{timestamp}.mpd",
            "nullable" : true
          }
        }
      },
      "Camera_GetMinimalCameraLocationMapWSRequest" : {
        "type" : "object",
        "description" : "Request to retrieve a mapping of cameras to their location information."
      },
      "Camera_GetMinimalCameraLocationMapWSResponse" : {
        "type" : "object",
        "description" : "Response containing a mapping of cameras to their location information.",
        "properties" : {
          "cameraLocationMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Camera_GetMinimalCameraLocationMapWSResponse_CameraLocationInfo"
            },
            "description" : "Mapping of camera UUIDs to location information",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Camera_GetMinimalCameraLocationMapWSResponse_CameraLocationInfo" : {
        "type" : "object",
        "description" : "Information about a camera's location.",
        "properties" : {
          "cameraName" : {
            "type" : "string",
            "description" : "Name of the camera",
            "example" : "Front Door Camera",
            "nullable" : true
          },
          "locationName" : {
            "type" : "string",
            "description" : "Name of the location",
            "example" : "Main Building",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Camera_GetMinimalCameraStateListWSRequest" : {
        "type" : "object",
        "description" : "Request to retrieve a minimal list of camera states.",
        "properties" : {
          "includeMummified" : {
            "type" : "boolean",
            "description" : "Whether to include mummified cameras in the response",
            "example" : false,
            "nullable" : true
          }
        }
      },
      "Camera_GetMinimalCameraStateListWSResponse" : {
        "type" : "object",
        "description" : "Response containing a minimal list of camera states.",
        "properties" : {
          "cameraStates" : {
            "type" : "array",
            "description" : "List of minimal camera state information",
            "items" : {
              "$ref" : "#/components/schemas/MinimalDeviceStateType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Camera_GetMinimalListWSRequest" : {
        "type" : "object",
        "description" : "Request to retrieve a minimal list of cameras (deprecated).",
        "properties" : {
          "includeMummified" : {
            "type" : "boolean",
            "description" : "Whether to include mummified cameras in the response",
            "example" : false,
            "nullable" : true
          }
        }
      },
      "Camera_GetMinimalListWSResponse" : {
        "type" : "object",
        "description" : "Response containing a minimal list of cameras (deprecated).",
        "properties" : {
          "cameras" : {
            "type" : "array",
            "description" : "List of minimal camera information",
            "items" : {
              "$ref" : "#/components/schemas/Camera_MinimalCameraType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Camera_GetOccupancyEnabledCamerasWSRequest" : {
        "type" : "object",
        "description" : "Request to get occupancy enabled cameras."
      },
      "Camera_GetOfflineLanStreamingInfoWSRequest" : {
        "type" : "object",
        "description" : "Request to retrieve offline LAN streaming information for cameras."
      },
      "Camera_GetOfflineLanStreamingInfoWSResponse" : {
        "type" : "object",
        "description" : "Response containing offline LAN streaming information for cameras.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "info" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Camera_CameraOfflineLanStreamingInfo"
            },
            "description" : "Mapping of camera UUIDs to offline LAN streaming information",
            "nullable" : true
          }
        }
      },
      "Camera_GetPresenceWindowsWSRequest" : {
        "type" : "object",
        "description" : "Request to retrieve presence windows for a camera within a time range.",
        "properties" : {
          "cameraUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "durationSec" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Duration in seconds",
            "example" : 3600,
            "nullable" : true
          },
          "startTimeSec" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start time in seconds since epoch",
            "example" : 1640995200,
            "nullable" : true
          }
        }
      },
      "Camera_GetPresenceWindowsWSResponse" : {
        "type" : "object",
        "description" : "Response containing presence windows for a camera.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "presenceWindows" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "description" : "Mapping of presence types to time windows",
              "items" : {
                "$ref" : "#/components/schemas/TimeWindowSeconds"
              },
              "nullable" : true
            },
            "description" : "Mapping of presence types to time windows",
            "nullable" : true
          }
        }
      },
      "Camera_GetSharedCameraCurrentStateWSResponse" : {
        "type" : "object",
        "properties" : {
          "cameraState" : {
            "$ref" : "#/components/schemas/Camera_SharedCameraCurrentStateType"
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Camera_GetStorageRecoveryFileWSRequest" : {
        "type" : "object",
        "description" : "Request to get storage recovery file for a device.",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          }
        }
      },
      "Camera_GetStorageRecoveryFileWSResponse" : {
        "type" : "object",
        "description" : "Response containing storage recovery file contents.",
        "properties" : {
          "fileContents" : {
            "type" : "array",
            "description" : "Binary contents of the storage recovery file",
            "example" : "[binary data]",
            "items" : {
              "type" : "string",
              "format" : "byte",
              "description" : "Binary contents of the storage recovery file",
              "example" : "W2JpbmFyeSBkYXRhXQ==",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Camera_GetUptimeWindowsWSRequest" : {
        "type" : "object",
        "description" : "Request to retrieve uptime windows for a camera within a time range.",
        "properties" : {
          "cameraUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "endTime" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "End time in seconds since epoch",
            "example" : 1641081600,
            "nullable" : true
          },
          "startTime" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start time in seconds since epoch",
            "example" : 1640995200,
            "nullable" : true
          }
        }
      },
      "Camera_GetUptimeWindowsWSResponse" : {
        "type" : "object",
        "description" : "Response containing uptime windows for a camera.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "uptimeWindows" : {
            "type" : "array",
            "description" : "List of uptime windows",
            "items" : {
              "$ref" : "#/components/schemas/TimeWindowSeconds"
            },
            "nullable" : true
          }
        }
      },
      "Camera_GetVideoWallsWSRequest" : {
        "type" : "object",
        "description" : "Request to retrieve all video wall configurations."
      },
      "Camera_GetVideoWallsWSResponse" : {
        "type" : "object",
        "description" : "Response containing video wall configurations and associated user name mappings.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "userNameMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "description" : "Mapping of user UUIDs to user names",
              "nullable" : true
            },
            "description" : "Mapping of user UUIDs to user names",
            "nullable" : true
          },
          "videoWalls" : {
            "type" : "array",
            "description" : "List of video wall summary information",
            "items" : {
              "$ref" : "#/components/schemas/Camera_VideoWallSummaryType"
            },
            "nullable" : true
          }
        }
      },
      "Camera_MinimalCameraType" : {
        "type" : "object",
        "description" : "Minimal camera information type.",
        "properties" : {
          "connectionStatus" : {
            "type" : "string",
            "description" : "Status enumeration for camera states.",
            "enum" : [ "RED", "ORANGE", "GREEN" ],
            "nullable" : true
          },
          "defaultInterface" : {
            "type" : "string",
            "description" : "Default network interface",
            "example" : "eth0",
            "nullable" : true
          },
          "defaultInterfaceMac" : {
            "type" : "string",
            "description" : "MAC address of default interface",
            "example" : "00:11:22:33:44:55",
            "nullable" : true
          },
          "floorNumber" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Floor number where the camera is located",
            "example" : 1,
            "nullable" : true
          },
          "healthStatus" : {
            "type" : "string",
            "description" : "Status enumeration for camera states.",
            "enum" : [ "RED", "ORANGE", "GREEN" ],
            "nullable" : true
          },
          "healthStatusDetails" : {
            "type" : "string",
            "description" : "Detailed health status enumeration for cameras.",
            "enum" : [ "DISCONNECTED", "FIRMWARE_BEHIND", "NONE" ],
            "nullable" : true
          },
          "lanAddresses" : {
            "type" : "array",
            "description" : "List of LAN addresses",
            "items" : {
              "type" : "string",
              "description" : "List of LAN addresses",
              "nullable" : true
            },
            "nullable" : true
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "description" : "Latitude coordinate of the camera",
            "example" : 37.7749,
            "nullable" : true
          },
          "liveStreamShared" : {
            "type" : "boolean",
            "description" : "Whether live stream is shared",
            "example" : false,
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "description" : "Longitude coordinate of the camera",
            "example" : -122.4194,
            "nullable" : true
          },
          "mediaRegion" : {
            "type" : "string",
            "description" : "Media region",
            "example" : "us-west-1",
            "nullable" : true
          },
          "mummified" : {
            "type" : "boolean",
            "description" : "Whether the camera is mummified",
            "example" : false,
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the camera",
            "example" : "Front Door Camera",
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "region" : {
            "type" : "string",
            "description" : "Camera region",
            "example" : "us-west-1",
            "nullable" : true
          },
          "serialNumber" : {
            "type" : "string",
            "description" : "Camera serial number",
            "example" : "CAM123456789",
            "nullable" : true
          },
          "ssid" : {
            "type" : "string",
            "description" : "WiFi SSID",
            "example" : "MyNetwork",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "wifiApMac" : {
            "type" : "string",
            "description" : "MAC address of WiFi access point",
            "example" : "AA:BB:CC:DD:EE:FF",
            "nullable" : true
          },
          "wifiBars" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "WiFi signal strength in bars (1-5)",
            "example" : 4,
            "nullable" : true
          },
          "wifiSignalStrength" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "WiFi signal strength in dBm",
            "example" : -45,
            "nullable" : true
          }
        }
      },
      "Camera_RebootCameraWSRequest" : {
        "type" : "object",
        "description" : "Request to reboot a camera device.",
        "properties" : {
          "cameraUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          }
        }
      },
      "Camera_RebootCameraWSResponse" : {
        "type" : "object",
        "description" : "Response from rebooting a camera device.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "status" : {
            "type" : "string",
            "description" : "Status enumeration for reboot web service responses.",
            "enum" : [ "SUCCESS_REBOOT_SENT", "FAILED_CAMERA_OFFLINE", "FAILED_CAMERA_NOT_AUTHORIZED" ],
            "nullable" : true
          }
        }
      },
      "Camera_RevertCameraToDefaultsWSRequest" : {
        "type" : "object",
        "properties" : {
          "cameraUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Camera_RevertCameraToDefaultsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Camera_SharedCameraCurrentStateType" : {
        "type" : "object",
        "description" : "Current state information for a shared camera.",
        "properties" : {
          "baseVideoOperationUrl" : {
            "type" : "string",
            "description" : "Base URL for video operations",
            "example" : "https://api.example.com/video",
            "nullable" : true
          },
          "connectionStatus" : {
            "type" : "string",
            "description" : "Current connection status of the shared camera",
            "enum" : [ "GREEN", "RED" ],
            "nullable" : true
          },
          "oldestArchivedMediaSeconds" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Oldest archived media timestamp in seconds",
            "example" : 1640995200,
            "nullable" : true
          },
          "onCameraState" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "description" : "State information stored on the camera",
              "nullable" : true
            },
            "description" : "State information stored on the camera",
            "nullable" : true
          },
          "onCloudState" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "description" : "State information stored in the cloud",
              "nullable" : true
            },
            "description" : "State information stored in the cloud",
            "nullable" : true
          },
          "region" : {
            "type" : "string",
            "description" : "Camera region",
            "example" : "us-west-1",
            "nullable" : true
          }
        }
      },
      "Camera_SharedLiveVideoStreamWS" : {
        "type" : "object",
        "description" : "List of shared live video streams for the doorbell camera",
        "properties" : {
          "audioDeviceHwVar" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "audioGatewayUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          },
          "audioPushToTalkEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "cameraUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          },
          "deviceHwVar" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "deviceUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          },
          "expirationTime" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "hideOverlay" : {
            "type" : "boolean",
            "nullable" : true
          },
          "invertSchedule" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "passwordProtected" : {
            "type" : "boolean",
            "nullable" : true
          },
          "scheduleUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "sharedLiveM3U8StreamUrl" : {
            "type" : "string",
            "nullable" : true
          },
          "sharedLiveVideoStreamUrl" : {
            "type" : "string",
            "nullable" : true
          },
          "sharedWithMonitoringService" : {
            "type" : "boolean",
            "nullable" : true
          },
          "ssoProtected" : {
            "type" : "boolean",
            "nullable" : true
          },
          "streamType" : {
            "$ref" : "#/components/schemas/StreamTypeEnum"
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "unscheduledMessage" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "vodEnabled" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Camera_SharedVideoWallWS" : {
        "type" : "object",
        "description" : "List of shared video walls",
        "properties" : {
          "deviceScheduleMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/DeviceSchedule"
            },
            "nullable" : true
          },
          "expirationTime" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "hideOverlay" : {
            "type" : "boolean",
            "nullable" : true
          },
          "invertSchedule" : {
            "type" : "boolean",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "passwordProtected" : {
            "type" : "boolean",
            "nullable" : true
          },
          "permissionGroupUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "scheduleUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "sharedVideoWallUrl" : {
            "type" : "string",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "unscheduledMessage" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "videoWallUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "vodEnabled" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Camera_UpdateCameraAIThresholdsWSRequest" : {
        "type" : "object",
        "description" : "Request to update AI thresholds for a camera.",
        "properties" : {
          "cameraUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          },
          "consecutiveHumanFilter" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Require this many consecutive frames of seeing a human to include that human detection in results. Set to 1 to always include detections, or higher to avoid false positives due to transient motion like bugs/spiders/rain. Default is 2 consecutive frames.",
            "example" : 3,
            "nullable" : true
          },
          "consecutiveVehicleFilter" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Require this many consecutive frames of seeing a vehicle to include that vehicle detection in results. Set to 1 to always include detections, or higher to avoid false positives due to transient motion like bugs/spiders/rain. Default is 2 consecutive frames.",
            "example" : 3,
            "nullable" : true
          },
          "faceConfidenceThreshold" : {
            "type" : "number",
            "format" : "float",
            "description" : "Confidence threshold for face detection. Set to 0 or null to use the default. Maximum range of 1. Default = 0.7",
            "example" : 0.8,
            "nullable" : true
          },
          "faceMatchConfidenceThreshold" : {
            "type" : "number",
            "format" : "float",
            "description" : "Confidence threshold for face matching (determining if two faces are the same person). Set to 0 or null to use the default. Maximum range of 1. Default = 0.7. We no longer support device specific face matching threshold. This property is deprecated and will be removed.",
            "example" : 0.8,
            "nullable" : true
          },
          "humanConfidenceThreshold" : {
            "type" : "number",
            "format" : "float",
            "description" : "Confidence threshold for human detection. Set to 0 or null to use the default. Maximum range of 1. Default = 0.6",
            "example" : 0.7,
            "nullable" : true
          },
          "lprConfidenceThreshold" : {
            "type" : "number",
            "format" : "float",
            "description" : "Confidence threshold for license plate detection and character recognition. Set to 0 or null to use the default. Maximum range of 1. Default = 0.8",
            "example" : 0.9,
            "nullable" : true
          },
          "maxEventDurationMs" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Set the max event duration for an alert in milliseconds. Default is 30000, lowering down to 4000 will result in faster alert delivery but shorter alert clips.",
            "example" : 15000,
            "nullable" : true
          },
          "vehicleConfidenceThreshold" : {
            "type" : "number",
            "format" : "float",
            "description" : "Confidence threshold for vehicle detection. Set to 0 or null to use the default. Maximum range of 1. Default = 0.6",
            "example" : 0.7,
            "nullable" : true
          }
        }
      },
      "Camera_UpdateCameraAIThresholdsWSResponse" : {
        "type" : "object",
        "description" : "Response indicating the result of updating camera AI thresholds.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Camera_UpdateCameraFirmwareWSRequest" : {
        "type" : "object",
        "description" : "Request to update camera firmware.",
        "properties" : {
          "cameraUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Camera_UpdateCameraFirmwareWSResponse" : {
        "type" : "object",
        "description" : "Response containing the status of camera firmware update.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "status" : {
            "type" : "string",
            "description" : "Status of the firmware update operation",
            "enum" : [ "ALREADY_ON_THE_LATEST_FIRMWARE", "DEVICE_ON_A_SPECIAL_FIRMWARE_AND_CANNOT_BE_UPDATED", "UPDATE_STARTED", "UNABLE_TO_REACH_DEVICE", "FIRMWARE_UPDATE_ALREADY_IN_PROGESS", "DEVICE_NOT_AUTHROIZED" ],
            "nullable" : true
          }
        }
      },
      "Camera_UpdateCameraHumanLoiteringConfigWSRequest" : {
        "type" : "object",
        "description" : "Request to update human loitering configuration for a camera.",
        "properties" : {
          "cameraUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          },
          "rois" : {
            "type" : "array",
            "description" : "Region of interests of the human loitering feature. NULL or empty list will disable the feature",
            "items" : {
              "$ref" : "#/components/schemas/RegionPolygonType"
            },
            "nullable" : true
          }
        }
      },
      "Camera_UpdateCameraHumanLoiteringWSResponse" : {
        "type" : "object",
        "description" : "Response indicating the result of updating camera human loitering configuration.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Camera_UpdateCameraLineCrossingThresholdsWSRequest" : {
        "type" : "object",
        "description" : "Request to update line crossing thresholds for a camera.",
        "properties" : {
          "cameraUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          },
          "directions" : {
            "type" : "array",
            "description" : "Set of crossing directions to monitor.",
            "items" : {
              "type" : "string",
              "description" : "Set of crossing directions to monitor.",
              "enum" : [ "INGRESS", "EGRESS" ],
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "inverted" : {
            "type" : "boolean",
            "description" : "By default, INGRESS events occur when the following condition is met for the following line types: an entity moves from top -> bottom when a horizontal line is defined, an entity moves from left -> right when a vertical line is defined, an entity moves from top-left -> bottom-right when an upwards sloping line is defined, and an entity moves from top-right to bottom-left when a downwards sloping line is defined. Setting this value to true will switch INGRESS to EGRESS events and vice-versa.",
            "example" : false,
            "nullable" : true
          },
          "objectType" : {
            "type" : "string",
            "description" : "Type of object to monitor for line crossing.",
            "enum" : [ "HUMAN", "VEHICLE", "FACE", "LPR", "POSE", "CLIP_EMBED", "UNKNOWN" ],
            "nullable" : true
          },
          "pointA" : {
            "$ref" : "#/components/schemas/Camera_UpdateCameraLineCrossingThresholdsWSRequest_Coordinate"
          },
          "pointB" : {
            "$ref" : "#/components/schemas/Camera_UpdateCameraLineCrossingThresholdsWSRequest_Coordinate"
          }
        }
      },
      "Camera_UpdateCameraLineCrossingThresholdsWSRequest_Coordinate" : {
        "type" : "object",
        "description" : "(X,Y) coordinate expressed as a percentage of the camera's resolution.Minimum range is 0.1 and maximum range is 0.9. Leaving this value as null will disable line-crossing.",
        "properties" : {
          "x" : {
            "type" : "number",
            "format" : "float",
            "description" : "Value ranges from 0.1 to 0.9",
            "example" : 0.5,
            "nullable" : true
          },
          "y" : {
            "type" : "number",
            "format" : "float",
            "description" : "Value ranges from 0.1 to 0.9",
            "example" : 0.5,
            "nullable" : true
          }
        }
      },
      "Camera_UpdateCameraLineCrossingThresholdsWSResponse" : {
        "type" : "object",
        "description" : "Response indicating the result of updating camera line crossing thresholds.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Camera_UpdateCameraV2WSRequest" : {
        "type" : "object",
        "description" : "Request to update camera information V2 with partial update support.",
        "properties" : {
          "customData" : {
            "type" : "string",
            "description" : "Custom data for the camera",
            "nullable" : true
          },
          "customDataUpdated" : {
            "type" : "boolean",
            "description" : "Whether custom data was updated",
            "example" : false,
            "nullable" : true
          },
          "deleted" : {
            "type" : "boolean",
            "description" : "Whether the camera is deleted",
            "example" : false,
            "nullable" : true
          },
          "deletedUpdated" : {
            "type" : "boolean",
            "description" : "Whether deleted status was updated",
            "example" : false,
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "description" : "Description of the camera",
            "example" : "Camera monitoring the front entrance",
            "nullable" : true
          },
          "descriptionUpdated" : {
            "type" : "boolean",
            "description" : "Whether description was updated",
            "example" : false,
            "nullable" : true
          },
          "directionRadians" : {
            "type" : "number",
            "format" : "float",
            "description" : "Direction in radians",
            "example" : 1.5708,
            "nullable" : true
          },
          "directionRadiansUpdated" : {
            "type" : "boolean",
            "description" : "Whether direction radians was updated",
            "example" : false,
            "nullable" : true
          },
          "facetNameMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "description" : "Mapping of device facets to names",
              "nullable" : true
            },
            "description" : "Mapping of device facets to names",
            "nullable" : true
          },
          "facetNameMapUpdated" : {
            "type" : "boolean",
            "description" : "Whether facet name map was updated",
            "example" : false,
            "nullable" : true
          },
          "floorNumber" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Floor number",
            "example" : 1,
            "nullable" : true
          },
          "floorNumberUpdated" : {
            "type" : "boolean",
            "description" : "Whether floor number was updated",
            "example" : false,
            "nullable" : true
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "description" : "Latitude coordinate",
            "example" : 37.7749,
            "nullable" : true
          },
          "latitudeUpdated" : {
            "type" : "boolean",
            "description" : "Whether latitude was updated",
            "example" : false,
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "locationUuidUpdated" : {
            "type" : "boolean",
            "description" : "Whether location UUID was updated",
            "example" : false,
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "description" : "Longitude coordinate",
            "example" : -122.4194,
            "nullable" : true
          },
          "longitudeUpdated" : {
            "type" : "boolean",
            "description" : "Whether longitude was updated",
            "example" : false,
            "nullable" : true
          },
          "mummified" : {
            "type" : "boolean",
            "description" : "Whether the camera is mummified",
            "example" : false,
            "nullable" : true
          },
          "mummifiedUpdated" : {
            "type" : "boolean",
            "description" : "Whether mummified status was updated",
            "example" : false,
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the camera",
            "example" : "Front Door Camera",
            "nullable" : true
          },
          "nameUpdated" : {
            "type" : "boolean",
            "description" : "Whether name was updated",
            "example" : false,
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "policyUuidUpdated" : {
            "type" : "boolean",
            "description" : "Whether policy UUID was updated",
            "example" : false,
            "nullable" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "subLocationsHierarchyKeyUpdated" : {
            "type" : "boolean",
            "description" : "Whether sub-locations hierarchy key was updated",
            "example" : false,
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Camera_UpdateCameraV2WSResponse" : {
        "type" : "object",
        "description" : "Response indicating the result of updating camera information V2.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Camera_UpdateCameraWSRequest" : {
        "type" : "object",
        "description" : "Request to update camera information (deprecated).",
        "properties" : {
          "camera" : {
            "$ref" : "#/components/schemas/Camera_CameraBackwardsCompatUpdateType"
          }
        }
      },
      "Camera_UpdateCameraWSResponse" : {
        "type" : "object",
        "description" : "Response indicating the result of updating camera information (deprecated).",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Camera_UpdateCamerasBulkV2WSRequest" : {
        "type" : "object",
        "description" : "Request to update multiple cameras in bulk V2.",
        "properties" : {
          "cameraBulkDetails" : {
            "type" : "array",
            "description" : "List of camera bulk update details",
            "items" : {
              "$ref" : "#/components/schemas/Camera_UpdateCameraV2WSRequest"
            },
            "nullable" : true
          }
        }
      },
      "Camera_UpdateConfigWSRequest" : {
        "type" : "object",
        "description" : "Request to update camera configuration settings.",
        "properties" : {
          "config" : {
            "$ref" : "#/components/schemas/Deviceconfig_userconfig_IExternalUpdateableAudioVideoUserConfig"
          }
        }
      },
      "Camera_UpdateVideoWallWSRequest" : {
        "type" : "object",
        "description" : "Request to update a video wall configuration.",
        "properties" : {
          "videoWall" : {
            "$ref" : "#/components/schemas/VideoWallType"
          }
        }
      },
      "Camera_UpdateVideoWallWSResponse" : {
        "type" : "object",
        "description" : "Response indicating the result of updating a video wall configuration.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Camera_UpdateWifiWSRequest" : {
        "type" : "object",
        "description" : "Request to update WiFi settings for one or more cameras.",
        "properties" : {
          "cameraUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          },
          "cameraUuids" : {
            "type" : "array",
            "description" : "List of camera UUIDs to update WiFi settings for",
            "items" : {
              "type" : "string",
              "format" : "DeviceFacetUuid",
              "description" : "RUUID with optional appended facet information",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
              "nullable" : true
            },
            "nullable" : true
          },
          "password" : {
            "type" : "string",
            "description" : "WiFi network password",
            "example" : "password123",
            "nullable" : true
          },
          "ssid" : {
            "type" : "string",
            "description" : "WiFi network SSID",
            "example" : "MyWiFiNetwork",
            "nullable" : true
          }
        }
      },
      "Camera_UpdateWifiWSResponse" : {
        "type" : "object",
        "description" : "Response containing the status of WiFi update operations for each camera.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "status" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "boolean",
              "description" : "Mapping of camera UUIDs to WiFi update success status",
              "nullable" : true
            },
            "description" : "Mapping of camera UUIDs to WiFi update success status",
            "nullable" : true
          }
        }
      },
      "Camera_VideoWallSummaryType" : {
        "type" : "object",
        "description" : "Summary information for a video wall.",
        "properties" : {
          "deviceList" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "DeviceFacetUuid",
              "description" : "RUUID with optional appended facet information",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
              "nullable" : true
            },
            "nullable" : true
          },
          "displayName" : {
            "type" : "string",
            "nullable" : true
          },
          "numShares" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Number of shares for the video wall",
            "example" : 5,
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "othersCanEdit" : {
            "type" : "boolean",
            "nullable" : true
          },
          "ownerUserUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "settings" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "nullable" : true
            },
            "nullable" : true
          },
          "shared" : {
            "type" : "boolean",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "CancelLoopingAudioPlaybackActionRecordType" : {
        "type" : "object",
        "properties" : {
          "statusMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AudioGatewayStatusEnum"
            },
            "nullable" : true
          }
        }
      },
      "CancelLoopingAudioPlaybackActionType" : {
        "type" : "object",
        "properties" : {
          "_audioDevices" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "DeviceFacetUuid",
              "description" : "RUUID with optional appended facet information",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
              "nullable" : true
            },
            "nullable" : true
          },
          "audioDevices" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "DeviceFacetUuid",
              "description" : "RUUID with optional appended facet information",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "CancelledDoorStateOverride" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "cancelledDoorStateOverride" : {
              "$ref" : "#/components/schemas/DoorStateOverride"
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "originator" : {
            "$ref" : "#/components/schemas/BaseEventOriginator"
          },
          "requestedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ManualDoorStateChangeEnum"
          }
        }
      },
      "ChangeType" : {
        "type" : "string",
        "description" : "Change type enum for exposing to OpenAPI component schemas",
        "enum" : [ "REFRESH", "DELETE", "CREATE", "UPDATE" ]
      },
      "ChatPrivacy" : {
        "type" : "object",
        "properties" : {
          "permissionGroupUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "permittedPrincipalUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "visibility" : {
            "$ref" : "#/components/schemas/ChatVisibility"
          }
        }
      },
      "ChatQueryFilter" : {
        "type" : "object",
        "description" : "Optional field for filtering chat records.",
        "properties" : {
          "afterMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "beforeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "responseTypes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ResponseType"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "responseTypesStr" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "ChatRecord" : {
        "type" : "object",
        "description" : "Chat record used for a selective update.",
        "properties" : {
          "contextId" : {
            "type" : "string",
            "nullable" : true
          },
          "llmInfo" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "principalUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "privacy" : {
            "$ref" : "#/components/schemas/ChatPrivacy"
          },
          "queriedAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "query" : {
            "type" : "string",
            "nullable" : true
          },
          "respondedAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "response" : {
            "type" : "string",
            "nullable" : true
          },
          "responseType" : {
            "$ref" : "#/components/schemas/ResponseType"
          },
          "timeline" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/QueryTimelineEvent"
            },
            "nullable" : true
          },
          "toolingTimeline" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/QueryTool"
            },
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "ChatVisibility" : {
        "type" : "string",
        "enum" : [ "ORG_WIDE", "SELECT_USERS", "PRIVATE", "UNKNOWN" ]
      },
      "ChatbotConfig" : {
        "type" : "object",
        "description" : "Rhombus MIND configuration to update.",
        "properties" : {
          "apiKey" : {
            "type" : "string",
            "description" : "LLM API key used by the chatbot service",
            "nullable" : true
          },
          "createdAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Epoch timestamp in milliseconds when this config was created",
            "nullable" : true
          },
          "lastUpdatedByPrincipal" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "selfManaged" : {
            "type" : "boolean",
            "description" : "Indicator if this org is using their own LLM API key",
            "nullable" : true
          },
          "tokenValid" : {
            "type" : "boolean",
            "description" : "Indicator if the provided LLM API key is valid",
            "nullable" : true
          },
          "updatedAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Epoch timestamp in milliseconds when this config was last updated",
            "nullable" : true
          }
        }
      },
      "Chatbot_BaseAutomatedPromptWSResponse" : {
        "type" : "object",
        "description" : "Response object for creating, updating or retrieving chatbot automation settings.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "settings" : {
            "$ref" : "#/components/schemas/AutomatedPrompt"
          }
        }
      },
      "Chatbot_BaseChatWSResponse" : {
        "type" : "object",
        "description" : "Response object for retrieving or updating a chat record.",
        "properties" : {
          "chat" : {
            "$ref" : "#/components/schemas/ChatRecord"
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Chatbot_BaseChatbotConfigWSResponse" : {
        "type" : "object",
        "description" : "Response object for creating, updating or retrieving Rhombus MIND config.",
        "properties" : {
          "config" : {
            "$ref" : "#/components/schemas/ChatbotConfig"
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Chatbot_CreateAutomatedPromptWSRequest" : {
        "type" : "object",
        "description" : "Request object for creating chatbot automation settings.",
        "properties" : {
          "settings" : {
            "$ref" : "#/components/schemas/AutomatedPrompt"
          }
        },
        "required" : [ "settings" ]
      },
      "Chatbot_CreateChatbotConfigWSRequest" : {
        "type" : "object",
        "description" : "Request object for creating Rhombus MIND config.",
        "properties" : {
          "config" : {
            "$ref" : "#/components/schemas/ChatbotConfig"
          }
        },
        "required" : [ "config" ]
      },
      "Chatbot_DeleteAutomatedPromptWSRequest" : {
        "type" : "object",
        "description" : "Request object for deleting chatbot automation settings.",
        "properties" : {
          "promptUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        },
        "required" : [ "promptUuid" ]
      },
      "Chatbot_DeleteChatRecordWSRequest" : {
        "type" : "object",
        "description" : "Request object for deleting a chat record.",
        "properties" : {
          "recordUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        },
        "required" : [ "recordUuid" ]
      },
      "Chatbot_DeleteChatbotConfigWSRequest" : {
        "type" : "object",
        "description" : "Request object for deleting Rhombus MIND config."
      },
      "Chatbot_DeleteChatbotConversationWSRequest" : {
        "type" : "object",
        "description" : "Request object for deleting a user's conversation with Rhombus MIND.",
        "properties" : {
          "contextId" : {
            "type" : "string",
            "description" : "Context identifier of the conversation to delete.",
            "nullable" : true
          }
        },
        "required" : [ "contextId" ]
      },
      "Chatbot_GetAutomatedPromptChatHistoryWSRequest" : {
        "type" : "object",
        "description" : "Request object for retrieving chat history for a given automated prompt.",
        "properties" : {
          "lastEvaluatedKey" : {
            "type" : "string",
            "nullable" : true
          },
          "maxPageSize" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "promptUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        },
        "required" : [ "promptUuid" ]
      },
      "Chatbot_GetAutomatedPromptWSRequest" : {
        "type" : "object",
        "description" : "Request object for retrieving chatbot automation settings.",
        "properties" : {
          "promptUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        },
        "required" : [ "promptUuid" ]
      },
      "Chatbot_GetAutomatedPromptsForOrgWSResponse" : {
        "type" : "object",
        "description" : "Response object for retrieving chatbot automation settings for an org.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "lastEvaluatedKey" : {
            "type" : "string",
            "description" : "Pagination key to resume a paginated query.",
            "nullable" : true
          },
          "settingsList" : {
            "type" : "array",
            "description" : "List of chatbot automation settings for this org.",
            "items" : {
              "$ref" : "#/components/schemas/AutomatedPrompt"
            },
            "nullable" : true
          }
        }
      },
      "Chatbot_GetChatHistoryByContextIdWSRequest" : {
        "type" : "object",
        "description" : "Request object for retrieving a user's chat history for a given conversation with Rhombus MIND.",
        "properties" : {
          "contextId" : {
            "type" : "string",
            "description" : "Context ID to get chat history for.",
            "nullable" : true
          },
          "pageRequest" : {
            "$ref" : "#/components/schemas/DynamoPageRequest"
          }
        },
        "required" : [ "contextId" ]
      },
      "Chatbot_GetChatHistoryWSRequest" : {
        "type" : "object",
        "description" : "Request object for retrieving a user's entire chat history with Rhombus MIND.",
        "properties" : {
          "filter" : {
            "$ref" : "#/components/schemas/ChatQueryFilter"
          },
          "pageRequest" : {
            "$ref" : "#/components/schemas/DynamoPageRequest"
          }
        }
      },
      "Chatbot_GetChatHistoryWSResponse" : {
        "type" : "object",
        "description" : "Response object for retrieving an entity's chat history with Rhombus MIND.",
        "properties" : {
          "chatHistory" : {
            "type" : "array",
            "description" : "An entity's chat history with Rhombus MIND.",
            "items" : {
              "$ref" : "#/components/schemas/ChatRecord"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "lastEvaluatedKey" : {
            "type" : "string",
            "description" : "Pagination key to resume a paginated query.",
            "nullable" : true
          }
        }
      },
      "Chatbot_GetChatRecordWSRequest" : {
        "type" : "object",
        "description" : "Request object for retrieving a chat record.",
        "properties" : {
          "recordUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        },
        "required" : [ "recordUuid" ]
      },
      "Chatbot_GetChatbotConfigWSRequest" : {
        "type" : "object",
        "description" : "Request object for retrieving Rhombus MIND config."
      },
      "Chatbot_GetChatbotConversationsWSRequest" : {
        "type" : "object",
        "description" : "Request object for retrieving a user's conversations with Rhombus MIND.",
        "properties" : {
          "pageRequest" : {
            "$ref" : "#/components/schemas/DynamoPageRequest"
          }
        }
      },
      "Chatbot_GetChatbotConversationsWSResponse" : {
        "type" : "object",
        "description" : "Response object for retrieving a user's conversations with Rhombus MIND.",
        "properties" : {
          "conversations" : {
            "type" : "array",
            "description" : "List of a user's conversations.",
            "items" : {
              "$ref" : "#/components/schemas/ContextRecord"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "lastEvaluatedKey" : {
            "type" : "string",
            "description" : "Pagination key to resume a paginated query.",
            "nullable" : true
          }
        }
      },
      "Chatbot_GetSharedChatRecordsWSRequest" : {
        "type" : "object",
        "description" : "Request object for retrieving chat records shared with the current user.",
        "properties" : {
          "filter" : {
            "$ref" : "#/components/schemas/ChatQueryFilter"
          }
        }
      },
      "Chatbot_GetSharedChatRecordsWSResponse" : {
        "type" : "object",
        "description" : "Response object for retrieving chat records shared with the current user.",
        "properties" : {
          "chatRecords" : {
            "type" : "array",
            "description" : "List of chat records shared with the current user.",
            "items" : {
              "$ref" : "#/components/schemas/ChatRecord"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Chatbot_SubmitChatWSRequest" : {
        "type" : "object",
        "description" : "Request object for submitting a query to Rhombus MIND.",
        "properties" : {
          "contextId" : {
            "type" : "string",
            "description" : "Uuid used to track the current conversation with Rhombus MIND.",
            "nullable" : true
          },
          "conversationName" : {
            "type" : "string",
            "description" : "The name of the conversation if this query is the start of a new conversation. If not specified, the conversation will be named after the first query.",
            "nullable" : true
          },
          "query" : {
            "type" : "string",
            "description" : "The query to submit to Rhombus MIND.",
            "nullable" : true
          }
        },
        "required" : [ "contextId", "query" ]
      },
      "Chatbot_SubmitChatWSResponse" : {
        "type" : "object",
        "description" : "Response object for submitting a query to Rhombus MIND.",
        "properties" : {
          "chatRecordUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Chatbot_SubmitTestPromptWSRequest" : {
        "type" : "object",
        "description" : "Request object for submitting a test prompt with Rhombus MIND.",
        "properties" : {
          "testPrompt" : {
            "type" : "string",
            "description" : "Prompt to test with Rhombus MIND.",
            "nullable" : true
          }
        },
        "required" : [ "testPrompt" ]
      },
      "Chatbot_SubmitTestPromptWSResponse" : {
        "type" : "object",
        "description" : "Response object for submitting a test prompt with Rhombus MIND.",
        "properties" : {
          "chatUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Chatbot_UpdateAutomatedPromptWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating chatbot automation settings.",
        "properties" : {
          "selectiveUpdate" : {
            "$ref" : "#/components/schemas/AutomatedPrompt"
          }
        },
        "required" : [ "selectiveUpdate" ]
      },
      "Chatbot_UpdateChatRecordWSRequest" : {
        "type" : "object",
        "description" : "Request object for selectively updating a chat record.",
        "properties" : {
          "chat" : {
            "$ref" : "#/components/schemas/ChatRecord"
          }
        },
        "required" : [ "chat" ]
      },
      "Chatbot_UpdateChatbotConfigWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating Rhombus MIND config.",
        "properties" : {
          "config" : {
            "$ref" : "#/components/schemas/ChatbotConfig"
          }
        },
        "required" : [ "config" ]
      },
      "Chatbot_UpdateChatbotConversationWSRequest" : {
        "type" : "object",
        "description" : "Request object for selectively updating a user's conversation with Rhombus MIND.",
        "properties" : {
          "selectiveUpdate" : {
            "$ref" : "#/components/schemas/ContextRecordSelectiveUpdate"
          }
        }
      },
      "Chatbot_UpdateChatbotConversationsWSResponse" : {
        "type" : "object",
        "description" : "Response object for updating a user's conversation with Rhombus MIND.",
        "properties" : {
          "conversation" : {
            "$ref" : "#/components/schemas/ContextRecord"
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Chatbot_VerifyJobScheduledWSRequest" : {
        "type" : "object",
        "description" : "Request object for rescheduling an automated prompt that became inactive.",
        "properties" : {
          "promptUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        },
        "required" : [ "promptUuid" ]
      },
      "Chatbot_VerifyJobScheduledWSResponse" : {
        "type" : "object",
        "description" : "Response object for rescheduling an automated prompt that became inactive.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "scheduleExpression" : {
            "type" : "string",
            "description" : "Schedule expression when this automated prompt will trigger.",
            "nullable" : true
          },
          "scheduleTimezone" : {
            "type" : "string",
            "description" : "Timezone the schedule expression is in.",
            "nullable" : true
          }
        }
      },
      "CheckCondition" : {
        "type" : "object",
        "properties" : {
          "operator" : {
            "type" : "string",
            "enum" : [ "GT", "LT", "LTE", "GTE", "EQ" ],
            "nullable" : true
          },
          "value" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "ClaimKey" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "entry" : {
              "$ref" : "#/components/schemas/ClaimKeyEntry"
            },
            "startDate" : {
              "type" : "string",
              "format" : "date-time",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "claimEndDate" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Date/time when claiming of licenses represented by this claim key ended successfully.",
            "nullable" : true
          },
          "claimStartDate" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Date/time when claiming of licenses represented by this claim key started.",
            "nullable" : true
          },
          "createdOn" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "expirationEmailState" : {
            "type" : "string",
            "enum" : [ "NINETY_DAY_EMAIL_SUCCEEDED", "NINETY_DAY_EMAIL_FAILED", "SIXTY_DAY_EMAIL_SUCCEEDED", "SIXTY_DAY_EMAIL_FAILED", "FOURTY_FIVE_DAY_EMAIL_SUCCEEDED", "FOURTY_FIVE_DAY_EMAIL_FAILED", "THIRTY_DAY_EMAIL_SUCCEEDED", "THIRTY_DAY_EMAIL_FAILED", "TWENTY_ONE_DAY_EMAIL_SUCCEEDED", "TWENTY_ONE_DAY_EMAIL_FAILED", "FOURTEEN_DAY_EMAIL_SUCCEEDED", "FOURTEEN_DAY_EMAIL_FAILED", "TEN_DAY_EMAIL_SUCCEEDED", "TEN_DAY_EMAIL_FAILED", "FIVE_DAY_EMAIL_SUCCEEDED", "FIVE_DAY_EMAIL_FAILED", "FOUR_DAY_EMAIL_SUCCEEDED", "FOUR_DAY_EMAIL_FAILED", "THREE_DAY_EMAIL_SUCCEEDED", "THREE_DAY_EMAIL_FAILED", "TWO_DAY_EMAIL_SUCCEEDED", "TWO_DAY_EMAIL_FAILED", "ONE_DAY_EMAIL_SUCCEEDED", "ONE_DAY_EMAIL_FAILED", "ZERO_DAY_EMAIL_SUCCEEDED", "ZERO_DAY_EMAIL_FAILED", "GRACE_PERIOD_EMAILS_IN_PROGRESS", "GRACE_PERIOD_EMAILS_COMPLETED", "UNKNOWN" ],
            "nullable" : true
          },
          "gracePeriodEndDate" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "maskedClaimCode" : {
            "type" : "string",
            "description" : "Masked claim code for redeemed claim keys. This field can be used for reference purposes.",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "renewedByClaimKeyUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "requestId" : {
            "type" : "string",
            "description" : "Externally supplied request id to prevent creation of unnecessary claim keys due to reprocessing or bugs. Unnecessary claim keys are claim keys that are not tied to anything in the external system.  This property is unique for all claim keys.",
            "nullable" : true
          },
          "returnHistory" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ClaimKeyReturnEvent"
            },
            "nullable" : true
          },
          "state" : {
            "type" : "string",
            "enum" : [ "CREATED", "CLAIMING_PENDING", "CLAIMING_IN_PROGRESS", "CLAIMING_FAILED", "CLAIMED", "EXPIRED_UNCLAIMED", "EXPIRED", "RETURNED", "RENEWED" ],
            "nullable" : true
          },
          "trial" : {
            "type" : "boolean",
            "nullable" : true
          },
          "type" : {
            "type" : "string",
            "enum" : [ "NEW", "RENEWAL" ],
            "nullable" : true
          },
          "updatedOn" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "ClaimKeyEntry" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "productQuantities" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "ClaimKeyReturnEvent" : {
        "type" : "object",
        "properties" : {
          "returnedProductQuantities" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "nullable" : true
          },
          "timestamp" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          }
        }
      },
      "ClaimKeySearchFilter" : {
        "type" : "object",
        "properties" : {
          "excludeUnclaimed" : {
            "type" : "boolean",
            "nullable" : true
          },
          "excludedStates" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "CREATED", "CLAIMING_PENDING", "CLAIMING_IN_PROGRESS", "CLAIMING_FAILED", "CLAIMED", "EXPIRED_UNCLAIMED", "EXPIRED", "RETURNED", "RENEWED" ],
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "includedStates" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "CREATED", "CLAIMING_PENDING", "CLAIMING_IN_PROGRESS", "CLAIMING_FAILED", "CLAIMED", "EXPIRED_UNCLAIMED", "EXPIRED", "RETURNED", "RENEWED" ],
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "Client" : {
        "type" : "string",
        "enum" : [ "DEVICE", "MOBILE", "BROWSER", "BROWSER_V2", "BROWSER_PARTNER", "MOBILE_PARTNER", "ANONYMOUS", "SHARE_ANONYMOUS", "SHARE_ANONYMOUS_V2", "SHARE_RAW", "SHARE_SSO", "TV_API", "API", "API_TOKEN", "API_OAUTH_TOKEN", "FEDERATED_TOKEN", "PARTNER_API", "PARTNER_API_TOKEN", "KEYPAD_API", "INTERNAL_SALESFORCE", "RHOMBUS_KEY_MOBILE", "KIOSK_CONSOLE", "KIOSK_IOS_API", "CHATBOT" ]
      },
      "ClimateActivityEventType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "climateThreshold" : {
              "type" : "number",
              "format" : "float",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "activityEvent" : {
            "$ref" : "#/components/schemas/ActivityEnum"
          }
        }
      },
      "ClimateEventType" : {
        "type" : "object",
        "description" : "List of climate events for the sensor",
        "properties" : {
          "alertActivities" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ActivityEnum"
            },
            "nullable" : true
          },
          "baseStationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "batteryPercentage" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "bleDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "bleRssi" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "closeBaseStations" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          },
          "co2" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "ethanol" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "heatIndexDegF" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "heatIndexRangeWarning" : {
            "$ref" : "#/components/schemas/HeatIndexRangeWarningEnum"
          },
          "humidity" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "iaq" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "pm25" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "probeTempC" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "tampered" : {
            "type" : "boolean",
            "nullable" : true
          },
          "temp" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "thcDetected" : {
            "type" : "boolean",
            "nullable" : true
          },
          "thcPercent" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "tvoc" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "vapeSmokeDetected" : {
            "type" : "boolean",
            "nullable" : true
          },
          "vapeSmokePercent" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          }
        }
      },
      "ClimatePolicyType" : {
        "type" : "object",
        "description" : "List of climate policies using the schedule",
        "properties" : {
          "backoffAlertSecs" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "nullable" : true
          },
          "defaultTriggers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ClimateTriggerType"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "scheduledTriggers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ClimateScheduledTriggerType"
            },
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "ClimateScheduledTriggerType" : {
        "type" : "object",
        "properties" : {
          "schedule" : {
            "$ref" : "#/components/schemas/WeeklyRepeatingScheduleType"
          },
          "triggerSet" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ClimateTriggerType"
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "ClimateSettings" : {
        "type" : "object",
        "properties" : {
          "alert_window_minutes" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "smoke_ai_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "thc_ai_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "vape_ai_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          }
        }
      },
      "ClimateSettingsSelectiveUpdate" : {
        "type" : "object",
        "description" : "Update Sensor Climate settings",
        "properties" : {
          "alert_window_minutes" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "smoke_ai_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "thc_ai_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "updatedSetMethodMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "boolean",
              "nullable" : true
            },
            "nullable" : true
          },
          "vape_ai_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          }
        }
      },
      "ClimateTriggerType" : {
        "type" : "object",
        "properties" : {
          "activity" : {
            "$ref" : "#/components/schemas/ActivityEnum"
          },
          "threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          }
        }
      },
      "Climate_DeleteEnvironmentalGatewayWSRequest" : {
        "type" : "object",
        "description" : "Request to delete an environmental gateway.",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "mummify" : {
            "type" : "boolean",
            "description" : "Whether to mummify the gateway instead of deleting it",
            "example" : false,
            "nullable" : true
          }
        }
      },
      "Climate_DeleteEnvironmentalGatewayWSResponse" : {
        "type" : "object",
        "description" : "Response indicating the result of deleting an environmental gateway.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "responseStatus" : {
            "type" : "string",
            "description" : "Status of the delete operation",
            "enum" : [ "BASIC_AUTH_FAILED", "PASSWORD_MISMATCH", "SAME_PASSWORD", "USER_EXISTS", "USER_NOT_FOUND", "DEVICE_NOT_FOUND", "POLICY_NOT_FOUND", "LOCATION_NOT_FOUND", "ORG_NOT_FOUND", "BAD_INPUT", "SUCCESS", "PASSWORD_TOO_SHORT" ],
            "nullable" : true
          }
        }
      },
      "Climate_GetClimateEventsForSensorWSRequest" : {
        "type" : "object",
        "description" : "Request to retrieve climate events for an environmental sensor.",
        "properties" : {
          "createdAfterMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Timestamp in milliseconds after which events should be retrieved",
            "example" : 1640991600000,
            "nullable" : true
          },
          "createdBeforeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Timestamp in milliseconds before which events should be retrieved",
            "example" : 1640995200000,
            "nullable" : true
          },
          "limit" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Maximum number of events to return",
            "example" : 100,
            "nullable" : true
          },
          "sensorUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Climate_GetClimateEventsForSensorWSResponse" : {
        "type" : "object",
        "description" : "Response containing climate events for an environmental sensor.",
        "properties" : {
          "climateEvents" : {
            "type" : "array",
            "description" : "List of climate events for the sensor",
            "items" : {
              "$ref" : "#/components/schemas/ClimateEventType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Climate_GetClimateSensorConfigWSRequest" : {
        "type" : "object",
        "description" : "Request to retrieve configuration for an environmental sensor.",
        "properties" : {
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Climate_GetClimateSensorConfigWSResponse" : {
        "type" : "object",
        "description" : "Response containing configuration for an environmental sensor.",
        "properties" : {
          "config" : {
            "$ref" : "#/components/schemas/IClimateUserConfig"
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Climate_GetEnvironmentalGatewayShadowsWSRequest" : {
        "type" : "object",
        "description" : "Request to retrieve environmental gateway shadows."
      },
      "Climate_GetEnvironmentalGatewayShadowsWSResponse" : {
        "type" : "object",
        "description" : "Response containing environmental gateway shadows.",
        "properties" : {
          "environmentalGatewayShadows" : {
            "type" : "array",
            "description" : "List of environmental gateway shadows",
            "items" : {
              "$ref" : "#/components/schemas/EnvironmentalGatewayShadowType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Climate_GetEventsForEnvironmentalGatewayWSRequest" : {
        "type" : "object",
        "description" : "Request to retrieve events for an environmental gateway.",
        "properties" : {
          "createdAfterMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Timestamp in milliseconds after which events should be retrieved",
            "example" : 1640991600000,
            "nullable" : true
          },
          "createdBeforeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Timestamp in milliseconds before which events should be retrieved",
            "example" : 1640995200000,
            "nullable" : true
          },
          "deviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "lastEvaluatedKey" : {
            "type" : "string",
            "nullable" : true
          },
          "maxPageSize" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Maximum number of results to return per page",
            "example" : 50,
            "nullable" : true
          }
        }
      },
      "Climate_GetEventsForEnvironmentalGatewayWSResponse" : {
        "type" : "object",
        "description" : "Response containing events for an environmental gateway.",
        "properties" : {
          "events" : {
            "type" : "array",
            "description" : "List of climate events for the environmental gateway",
            "items" : {
              "$ref" : "#/components/schemas/E50ClimateEventType"
            },
            "nullable" : true
          },
          "lastEvaluatedKey" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Climate_GetMinimalClimateStatesWSRequest" : {
        "type" : "object",
        "description" : "Request to retrieve minimal climate state information for all environmental sensors."
      },
      "Climate_GetMinimalClimateStatesWSResponse" : {
        "type" : "object",
        "description" : "Response containing minimal climate state information for environmental sensors.",
        "properties" : {
          "climateStates" : {
            "type" : "array",
            "description" : "List of minimal climate state information",
            "items" : {
              "$ref" : "#/components/schemas/Climate_MinimalClimateStateType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Climate_GetMinimalEnvironmentalGatewayStatesWSRequest" : {
        "type" : "object",
        "description" : "Request to retrieve minimal environmental gateway states."
      },
      "Climate_GetMinimalEnvironmentalGatewayStatesWSResponse" : {
        "type" : "object",
        "description" : "Response containing minimal environmental gateway states.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "lastEvaluatedKey" : {
            "type" : "string",
            "nullable" : true
          },
          "minimalEnvironmentalGatewayStates" : {
            "type" : "array",
            "description" : "List of minimal environmental gateway states",
            "items" : {
              "$ref" : "#/components/schemas/Climate_MinimalEnvironmentalGatewayStateType"
            },
            "nullable" : true
          }
        }
      },
      "Climate_MinimalClimateStateType" : {
        "type" : "object",
        "description" : "Minimal climate state information for environmental sensors.",
        "properties" : {
          "associatedCameras" : {
            "type" : "array",
            "description" : "List of associated camera device facet UUIDs",
            "items" : {
              "type" : "string",
              "format" : "DeviceFacetUuid",
              "description" : "RUUID with optional appended facet information",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
              "nullable" : true
            },
            "nullable" : true
          },
          "batteryPercent" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Battery percentage of the environmental sensor",
            "example" : 85,
            "nullable" : true
          },
          "calibrating" : {
            "type" : "boolean",
            "description" : "Whether the sensor is currently calibrating",
            "example" : false,
            "nullable" : true
          },
          "closestBaseStation" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "co2" : {
            "type" : "number",
            "format" : "float",
            "description" : "CO2 measurement",
            "example" : 450.0,
            "nullable" : true
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Creation timestamp in milliseconds",
            "example" : 1640995200000,
            "nullable" : true
          },
          "ethanol" : {
            "type" : "number",
            "format" : "float",
            "description" : "Ethanol measurement",
            "example" : 5.2,
            "nullable" : true
          },
          "firmwareVersion" : {
            "type" : "string",
            "description" : "Firmware version",
            "example" : "1.2.3",
            "nullable" : true
          },
          "floorNumber" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Floor number",
            "example" : 2,
            "nullable" : true
          },
          "health" : {
            "type" : "string",
            "description" : "Health status enumeration for climate sensors.",
            "enum" : [ "GREEN", "RED" ],
            "nullable" : true
          },
          "healthDetails" : {
            "type" : "string",
            "description" : "Detailed health status enumeration for climate sensors.",
            "enum" : [ "FIRMWARE_BEHIND", "NO_HEARTBEAT", "NONE" ],
            "nullable" : true
          },
          "heatIndexDegF" : {
            "type" : "number",
            "format" : "double",
            "description" : "Heat index in degrees Fahrenheit",
            "example" : 85.2,
            "nullable" : true
          },
          "heatIndexRangeWarning" : {
            "$ref" : "#/components/schemas/HeatIndexRangeWarningEnum"
          },
          "humidity" : {
            "type" : "number",
            "format" : "float",
            "description" : "Relative humidity percentage",
            "example" : 45.2,
            "nullable" : true
          },
          "hwVariation" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "iaq" : {
            "type" : "number",
            "format" : "float",
            "description" : "Indoor Air Quality index",
            "example" : 85.5,
            "nullable" : true
          },
          "lastSeenSec" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Last seen timestamp in seconds",
            "example" : 1640995200,
            "nullable" : true
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "description" : "Latitude coordinate",
            "example" : 37.7749,
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "description" : "Longitude coordinate",
            "example" : -122.4194,
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the environmental sensor",
            "example" : "Office Climate Sensor",
            "nullable" : true
          },
          "pm25" : {
            "type" : "number",
            "format" : "float",
            "description" : "PM2.5 particulate matter measurement",
            "example" : 12.3,
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "probeConnected" : {
            "type" : "boolean",
            "description" : "Whether the probe is connected",
            "example" : true,
            "nullable" : true
          },
          "probeTempC" : {
            "type" : "number",
            "format" : "float",
            "description" : "Temperature probe measurement in Celsius",
            "example" : 24.1,
            "nullable" : true
          },
          "sensorUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "serialNumber" : {
            "type" : "string",
            "description" : "Serial number of the environmental sensor",
            "example" : "ES-123456789",
            "nullable" : true
          },
          "signalStrength" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Signal strength of the environmental sensor",
            "example" : 85,
            "nullable" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "temperatureCelcius" : {
            "type" : "number",
            "format" : "float",
            "description" : "Temperature in Celsius",
            "example" : 23.5,
            "nullable" : true
          },
          "thcPercent" : {
            "type" : "number",
            "format" : "float",
            "description" : "THC percentage measurement",
            "example" : 0.8,
            "nullable" : true
          },
          "tvoc" : {
            "type" : "number",
            "format" : "float",
            "description" : "Total Volatile Organic Compounds (TVOC) measurement",
            "example" : 125.5,
            "nullable" : true
          },
          "vapePercent" : {
            "type" : "number",
            "format" : "float",
            "description" : "Vape percentage measurement",
            "example" : 2.1,
            "nullable" : true
          }
        }
      },
      "Climate_MinimalEnvironmentalGatewayStateType" : {
        "type" : "object",
        "description" : "Minimal environmental gateway state information.",
        "properties" : {
          "activities" : {
            "type" : "array",
            "description" : "List of detected activities",
            "items" : {
              "$ref" : "#/components/schemas/ActivityEnum"
            },
            "nullable" : true
          },
          "airQualityIndex" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Air quality index value",
            "example" : 45,
            "nullable" : true
          },
          "airQualityIndexPollutant" : {
            "$ref" : "#/components/schemas/AirQualityIndexPollutantEnum"
          },
          "alertTriggers" : {
            "type" : "array",
            "description" : "List of alert triggers",
            "items" : {
              "$ref" : "#/components/schemas/ActivityEnum"
            },
            "nullable" : true
          },
          "associatedCameras" : {
            "type" : "array",
            "description" : "List of associated camera device facet UUIDs",
            "items" : {
              "type" : "string",
              "format" : "DeviceFacetUuid",
              "description" : "RUUID with optional appended facet information",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
              "nullable" : true
            },
            "nullable" : true
          },
          "calibrating" : {
            "type" : "boolean",
            "description" : "Whether the gateway is currently calibrating",
            "example" : false,
            "nullable" : true
          },
          "ch2oPpb" : {
            "type" : "number",
            "format" : "float",
            "description" : "Formaldehyde measurement in parts per billion",
            "example" : 15.7,
            "nullable" : true
          },
          "co2Ppm" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "CO2 measurement in parts per million",
            "example" : 450,
            "nullable" : true
          },
          "coConcentration" : {
            "type" : "number",
            "format" : "double",
            "description" : "Carbon monoxide concentration",
            "example" : 2.1,
            "nullable" : true
          },
          "connected" : {
            "type" : "boolean",
            "description" : "Whether the gateway is connected",
            "example" : true,
            "nullable" : true
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Creation timestamp in milliseconds",
            "example" : 1640995200000,
            "nullable" : true
          },
          "defaultInterfaceMac" : {
            "type" : "string",
            "description" : "Default interface MAC address",
            "example" : "00:1A:2B:3C:4D:5E",
            "nullable" : true
          },
          "deviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "externalIPAddress" : {
            "type" : "string",
            "description" : "External IP address",
            "example" : "203.0.113.1",
            "nullable" : true
          },
          "falsePositiveConfidencePercent" : {
            "type" : "number",
            "format" : "float",
            "description" : "False positive confidence percentage",
            "example" : 5.2,
            "nullable" : true
          },
          "firmwareVersion" : {
            "type" : "string",
            "description" : "Firmware version",
            "example" : "2.1.5",
            "nullable" : true
          },
          "floorNumber" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Floor number",
            "example" : 2,
            "nullable" : true
          },
          "healthDetails" : {
            "$ref" : "#/components/schemas/DeviceHealthStatusDetailsEnum"
          },
          "healthStatus" : {
            "$ref" : "#/components/schemas/DeviceStatusEnum"
          },
          "heatIndexDegF" : {
            "type" : "number",
            "format" : "double",
            "description" : "Heat index in degrees Fahrenheit",
            "example" : 85.2,
            "nullable" : true
          },
          "heatIndexRangeWarning" : {
            "$ref" : "#/components/schemas/HeatIndexRangeWarningEnum"
          },
          "hwVariation" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "iaq" : {
            "type" : "number",
            "format" : "float",
            "description" : "Indoor Air Quality index",
            "example" : 85.5,
            "nullable" : true
          },
          "lanAddresses" : {
            "type" : "array",
            "description" : "List of LAN IP addresses",
            "items" : {
              "type" : "string",
              "description" : "List of LAN IP addresses",
              "nullable" : true
            },
            "nullable" : true
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "description" : "Latitude coordinate",
            "example" : 37.7749,
            "nullable" : true
          },
          "leakDetected" : {
            "type" : "boolean",
            "description" : "Whether a leak is detected",
            "example" : false,
            "nullable" : true
          },
          "leakProbePresent" : {
            "type" : "boolean",
            "description" : "Whether leak probe is present",
            "example" : true,
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "description" : "Longitude coordinate",
            "example" : -122.4194,
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the environmental gateway",
            "example" : "Main Office Gateway",
            "nullable" : true
          },
          "nc0p5" : {
            "type" : "number",
            "format" : "float",
            "description" : "Number concentration 0.5 measurement",
            "example" : 120.5,
            "nullable" : true
          },
          "nc10p0" : {
            "type" : "number",
            "format" : "float",
            "description" : "Number concentration 10.0 measurement",
            "example" : 15.3,
            "nullable" : true
          },
          "nc1p0" : {
            "type" : "number",
            "format" : "float",
            "description" : "Number concentration 1.0 measurement",
            "example" : 85.2,
            "nullable" : true
          },
          "nc2p5" : {
            "type" : "number",
            "format" : "float",
            "description" : "Number concentration 2.5 measurement",
            "example" : 45.8,
            "nullable" : true
          },
          "nc4p0" : {
            "type" : "number",
            "format" : "float",
            "description" : "Number concentration 4.0 measurement",
            "example" : 32.1,
            "nullable" : true
          },
          "noxIdx" : {
            "type" : "number",
            "format" : "float",
            "description" : "Nitrogen Oxides index",
            "example" : 88.2,
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "pm10p0" : {
            "type" : "number",
            "format" : "float",
            "description" : "PM10.0 particulate matter measurement",
            "example" : 18.9,
            "nullable" : true
          },
          "pm1p0" : {
            "type" : "number",
            "format" : "float",
            "description" : "PM1.0 particulate matter measurement",
            "example" : 8.5,
            "nullable" : true
          },
          "pm2p5" : {
            "type" : "number",
            "format" : "float",
            "description" : "PM2.5 particulate matter measurement",
            "example" : 12.3,
            "nullable" : true
          },
          "pm4p0" : {
            "type" : "number",
            "format" : "float",
            "description" : "PM4.0 particulate matter measurement",
            "example" : 15.7,
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "pressure" : {
            "type" : "number",
            "format" : "float",
            "description" : "Pressure measurement",
            "example" : 1013.25,
            "nullable" : true
          },
          "probeTempC" : {
            "type" : "number",
            "format" : "float",
            "description" : "Temperature probe measurement in Celsius",
            "example" : 24.5,
            "nullable" : true
          },
          "relHumid" : {
            "type" : "number",
            "format" : "float",
            "description" : "Relative humidity percentage",
            "example" : 45.2,
            "nullable" : true
          },
          "serialNumber" : {
            "type" : "string",
            "description" : "Serial number of the environmental gateway",
            "example" : "EG-123456789",
            "nullable" : true
          },
          "smokeConfidencePercent" : {
            "type" : "number",
            "format" : "float",
            "description" : "Smoke detection confidence percentage",
            "example" : 92.8,
            "nullable" : true
          },
          "smokeTobaccoConfidencePercent" : {
            "type" : "number",
            "format" : "float",
            "description" : "Smoke tobacco detection confidence percentage",
            "example" : 88.1,
            "nullable" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "tempC" : {
            "type" : "number",
            "format" : "float",
            "description" : "Temperature in Celsius",
            "example" : 23.5,
            "nullable" : true
          },
          "tempProbePresent" : {
            "type" : "boolean",
            "description" : "Whether temperature probe is present",
            "example" : true,
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Timestamp in milliseconds",
            "example" : 1640995200000,
            "nullable" : true
          },
          "typPartSize" : {
            "type" : "number",
            "format" : "float",
            "description" : "Typical particle size measurement",
            "example" : 2.8,
            "nullable" : true
          },
          "vapeConfidencePercent" : {
            "type" : "number",
            "format" : "float",
            "description" : "Vape detection confidence percentage",
            "example" : 85.5,
            "nullable" : true
          },
          "vapeDetected" : {
            "type" : "boolean",
            "description" : "Whether vape is detected",
            "example" : false,
            "nullable" : true
          },
          "vapeThcConfidencePercent" : {
            "type" : "number",
            "format" : "float",
            "description" : "Vape THC detection confidence percentage",
            "example" : 72.3,
            "nullable" : true
          },
          "vocIdx" : {
            "type" : "number",
            "format" : "float",
            "description" : "Volatile Organic Compounds index",
            "example" : 125.5,
            "nullable" : true
          }
        }
      },
      "Climate_RebootEnvironmentalGatewayWSRequest" : {
        "type" : "object",
        "description" : "Request to reboot an environmental gateway.",
        "properties" : {
          "environmentalGatewayUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Climate_UpdateClimateSensorDetailsWSRequest" : {
        "type" : "object",
        "description" : "Request to update details for an environmental sensor.",
        "properties" : {
          "associatedCameras" : {
            "type" : "array",
            "description" : "List of associated camera device facet UUIDs",
            "items" : {
              "type" : "string",
              "format" : "DeviceFacetUuid",
              "description" : "RUUID with optional appended facet information",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
              "nullable" : true
            },
            "nullable" : true
          },
          "associatedCamerasUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "deleted" : {
            "type" : "boolean",
            "description" : "Whether the environmental sensor is deleted",
            "example" : false,
            "nullable" : true
          },
          "deletedUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "description" : "Description of the environmental sensor",
            "example" : "Temperature and humidity sensor in main office",
            "nullable" : true
          },
          "descriptionUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "floorNumber" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Floor number where the environmental sensor is located",
            "example" : 1,
            "nullable" : true
          },
          "floorNumberUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "description" : "Latitude coordinate of the environmental sensor",
            "example" : 37.7749,
            "nullable" : true
          },
          "latitudeUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "locationUuidUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "description" : "Longitude coordinate of the environmental sensor",
            "example" : -122.4194,
            "nullable" : true
          },
          "longitudeUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the environmental sensor",
            "example" : "Main Office Sensor",
            "nullable" : true
          },
          "nameUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "policyUuidUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "subLocationsHierarchyKeyUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Climate_UpdateClimateSensorDetailsWSResponse" : {
        "type" : "object",
        "description" : "Response indicating the result of updating environmental sensor details.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Climate_UpdateEnvironmentalGatewayDetailsWSRequest" : {
        "type" : "object",
        "description" : "Request to update details for an environmental gateway.",
        "properties" : {
          "associatedCameras" : {
            "type" : "array",
            "description" : "List of associated camera device facet UUIDs",
            "items" : {
              "type" : "string",
              "format" : "DeviceFacetUuid",
              "description" : "RUUID with optional appended facet information",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
              "nullable" : true
            },
            "nullable" : true
          },
          "associatedCamerasUpdated" : {
            "type" : "boolean",
            "description" : "Whether the associated cameras have been updated",
            "example" : false,
            "nullable" : true
          },
          "deleted" : {
            "type" : "boolean",
            "description" : "Whether the environmental gateway is deleted",
            "example" : false,
            "nullable" : true
          },
          "deletedUpdated" : {
            "type" : "boolean",
            "description" : "Whether the deleted status has been updated",
            "example" : false,
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "description" : "Description of the environmental gateway",
            "example" : "Environmental monitoring gateway in main office",
            "nullable" : true
          },
          "descriptionUpdated" : {
            "type" : "boolean",
            "description" : "Whether the description has been updated",
            "example" : false,
            "nullable" : true
          },
          "floorNumber" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Floor number where the environmental gateway is located",
            "example" : 1,
            "nullable" : true
          },
          "floorNumberUpdated" : {
            "type" : "boolean",
            "description" : "Whether the floor number has been updated",
            "example" : false,
            "nullable" : true
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "description" : "Latitude coordinate of the environmental gateway",
            "example" : 37.7749,
            "nullable" : true
          },
          "latitudeUpdated" : {
            "type" : "boolean",
            "description" : "Whether the latitude has been updated",
            "example" : false,
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "locationUuidUpdated" : {
            "type" : "boolean",
            "description" : "Whether the location UUID has been updated",
            "example" : false,
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "description" : "Longitude coordinate of the environmental gateway",
            "example" : -122.4194,
            "nullable" : true
          },
          "longitudeUpdated" : {
            "type" : "boolean",
            "description" : "Whether the longitude has been updated",
            "example" : false,
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the environmental gateway",
            "example" : "Main Office Gateway",
            "nullable" : true
          },
          "nameUpdated" : {
            "type" : "boolean",
            "description" : "Whether the name has been updated",
            "example" : false,
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "policyUuidUpdated" : {
            "type" : "boolean",
            "description" : "Whether the policy UUID has been updated",
            "example" : false,
            "nullable" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "subLocationsHierarchyKeyUpdated" : {
            "type" : "boolean",
            "description" : "Whether the sub-locations hierarchy key has been updated",
            "example" : false,
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Climate_UpdateEnvironmentalGatewayDetailsWSResponse" : {
        "type" : "object",
        "description" : "Response indicating the result of updating environmental gateway details."
      },
      "ClipAccessSettings" : {
        "type" : "object",
        "properties" : {
          "allowedUsers" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "visibility" : {
            "$ref" : "#/components/schemas/ClipVisibility"
          }
        }
      },
      "ClipBoundingBoxType" : {
        "type" : "object",
        "description" : "List of bounding boxes for the clip",
        "properties" : {
          "activity" : {
            "$ref" : "#/components/schemas/ActivityEnum"
          },
          "alert" : {
            "type" : "boolean",
            "nullable" : true
          },
          "bottom" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "confidence" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "croppedImageLocator" : {
            "type" : "string",
            "nullable" : true
          },
          "customActivityColor" : {
            "type" : "string",
            "enum" : [ "BLUE", "RED", "PURPLE", "TAN", "ORANGE", "TEAL", "GRAY", "BLACK" ],
            "nullable" : true
          },
          "customActivityDescription" : {
            "type" : "string",
            "nullable" : true
          },
          "customActivityDisplayName" : {
            "type" : "string",
            "nullable" : true
          },
          "faceName" : {
            "type" : "string",
            "nullable" : true
          },
          "inMotion" : {
            "type" : "boolean",
            "nullable" : true
          },
          "keypointsV2" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/PointType"
            },
            "nullable" : true
          },
          "left" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "licensePlate" : {
            "type" : "string",
            "nullable" : true
          },
          "loudness" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "objectId" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "pose" : {
            "type" : "string",
            "nullable" : true
          },
          "relativeSecond" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "right" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "sensorValType" : {
            "$ref" : "#/components/schemas/SensorValType"
          },
          "toastOrderIdInfo" : {
            "$ref" : "#/components/schemas/ToastOrderIdType"
          },
          "top" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "unidentifiedFaceId" : {
            "type" : "string",
            "nullable" : true
          },
          "vehicleName" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "ClipGroupType" : {
        "type" : "object",
        "description" : "List of clip groups for the organization",
        "properties" : {
          "clips" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SharedClipV2Type"
            },
            "nullable" : true
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "isShared" : {
            "type" : "boolean",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "sharedGroups" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          },
          "title" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "ClipGroupWithDetailsType" : {
        "type" : "object",
        "description" : "Detailed information about the clip group",
        "properties" : {
          "clips" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SharedClipWithDetailsType"
            },
            "nullable" : true
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "isShared" : {
            "type" : "boolean",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "sharedGroups" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          },
          "title" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "ClipMetaDataType" : {
        "type" : "object",
        "properties" : {
          "activitySeekPoints" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "number",
                "format" : "float",
                "nullable" : true
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "activitySeekPointsV2" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ClipSeekPointType"
            },
            "nullable" : true
          },
          "activitySeekPointsV3" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ClipSeekPointV2Type"
            },
            "nullable" : true
          },
          "boundingBoxes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ClipBoundingBoxType"
            },
            "nullable" : true
          },
          "clipLocation" : {
            "$ref" : "#/components/schemas/MetaDataLocationType"
          },
          "durationSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "mGrids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "soundSignificantLufs" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "nullable" : true
          },
          "startTime" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "thumbnailLocation" : {
            "$ref" : "#/components/schemas/MetaDataLocationType"
          },
          "thumbnailLocationV2" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "ClipSeekPointType" : {
        "type" : "object",
        "properties" : {
          "activity" : {
            "$ref" : "#/components/schemas/ActivityEnum"
          },
          "alert" : {
            "type" : "boolean",
            "nullable" : true
          },
          "bottom" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "faceName" : {
            "type" : "string",
            "nullable" : true
          },
          "keypointsV2" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/PointType"
            },
            "nullable" : true
          },
          "left" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "licensePlate" : {
            "type" : "string",
            "nullable" : true
          },
          "pose" : {
            "type" : "string",
            "nullable" : true
          },
          "relativeSecond" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "right" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "top" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "unidentifiedFaceId" : {
            "type" : "string",
            "nullable" : true
          },
          "vehicleName" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "ClipSeekPointV2Type" : {
        "type" : "object",
        "description" : "List of seek points for the clip",
        "properties" : {
          "activity" : {
            "$ref" : "#/components/schemas/ActivityEnum"
          },
          "alert" : {
            "type" : "boolean",
            "nullable" : true
          },
          "customActivityColor" : {
            "type" : "string",
            "enum" : [ "BLUE", "RED", "PURPLE", "TAN", "ORANGE", "TEAL", "GRAY", "BLACK" ],
            "nullable" : true
          },
          "customActivityDescription" : {
            "type" : "string",
            "nullable" : true
          },
          "customActivityDisplayName" : {
            "type" : "string",
            "nullable" : true
          },
          "dcao" : {
            "type" : "boolean",
            "nullable" : true
          },
          "faceName" : {
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "inMotion" : {
            "type" : "boolean",
            "nullable" : true
          },
          "licensePlate" : {
            "type" : "string",
            "nullable" : true
          },
          "loudness" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "pose" : {
            "type" : "string",
            "nullable" : true
          },
          "relativeSecond" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "sensorValType" : {
            "$ref" : "#/components/schemas/SensorValType"
          },
          "toastOrderIdInfo" : {
            "$ref" : "#/components/schemas/ToastOrderIdType"
          },
          "tu" : {
            "type" : "string",
            "nullable" : true
          },
          "unidentifiedFaceId" : {
            "type" : "string",
            "nullable" : true
          },
          "vehicleName" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "ClipVisibility" : {
        "type" : "string",
        "description" : "Visibility setting for the clip",
        "enum" : [ "PRIVATE", "ORG_WIDE" ]
      },
      "CloudArchivingStrategy" : {
        "type" : "string",
        "enum" : [ "WEEKLY_SCHEDULED", "CONTINUOUS" ]
      },
      "Co2SensorType" : {
        "type" : "object",
        "properties" : {
          "co2Ppm" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "relHumid" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "tempC" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "timestampSec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Common_devices_CalibrateFloorplanProjectionWSRequest" : {
        "type" : "object",
        "description" : "Request to calibrate floorplan projection for a device.",
        "properties" : {
          "cameraImagePointsPermyriad" : {
            "type" : "array",
            "description" : "List of camera image points in permyriad coordinates",
            "items" : {
              "type" : "array",
              "description" : "List of camera image points in permyriad coordinates",
              "items" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "List of camera image points in permyriad coordinates",
                "nullable" : true
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "deviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "floorplanImagePointsPermyriad" : {
            "type" : "array",
            "description" : "List of floorplan image points in permyriad coordinates",
            "items" : {
              "type" : "array",
              "description" : "List of floorplan image points in permyriad coordinates",
              "items" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "List of floorplan image points in permyriad coordinates",
                "nullable" : true
              },
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Common_devices_CalibrateFloorplanProjectionWSResponse" : {
        "type" : "object",
        "description" : "Response containing the calibrated floorplan projection homography.",
        "properties" : {
          "homography" : {
            "type" : "array",
            "description" : "3x3 homography matrix for floorplan projection",
            "items" : {
              "type" : "array",
              "description" : "3x3 homography matrix for floorplan projection",
              "items" : {
                "type" : "number",
                "format" : "double",
                "description" : "3x3 homography matrix for floorplan projection",
                "nullable" : true
              },
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Common_devices_GetBoundingBoxesWSRequest" : {
        "type" : "object",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          },
          "durationSecs" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "startTimeSec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Common_devices_GetBoundingBoxesWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "footageBoundingBoxes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FootageBoundingBoxType"
            },
            "nullable" : true
          }
        }
      },
      "Common_devices_GetCameraOrDoorbellCameraSeekpointsWSRequest" : {
        "type" : "object",
        "properties" : {
          "activitySet" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ActivityEnum"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "deviceUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          },
          "durationSecs" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "includeAnyMotion" : {
            "type" : "boolean",
            "nullable" : true
          },
          "seekpointDurationIntervalSecs" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "startTimeSec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Common_devices_GetFullDeviceStateWSRequest" : {
        "type" : "object",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          },
          "force" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Common_devices_GetMediaUrisWSRequest" : {
        "type" : "object",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          }
        }
      },
      "Common_devices_GetMinimalDeviceStateListWSRequest" : {
        "type" : "object",
        "properties" : {
          "includeMummified" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Common_devices_GetPresenceWindowsWSRequest" : {
        "type" : "object",
        "description" : "Request to get stored video information for a device.",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "durationSec" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Duration in seconds",
            "example" : 3600,
            "nullable" : true
          },
          "startTimeSec" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start time in seconds since epoch",
            "example" : 1640995200,
            "nullable" : true
          }
        }
      },
      "Common_devices_GetPresenceWindowsWSResponse" : {
        "type" : "object",
        "description" : "Response containing stored video information for a device.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "presenceWindows" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "description" : "Map of presence types to their time windows",
              "items" : {
                "$ref" : "#/components/schemas/TimeWindowSeconds"
              },
              "nullable" : true
            },
            "description" : "Map of presence types to their time windows",
            "nullable" : true
          }
        }
      },
      "Common_devices_GetSeekpointsWSRequest" : {
        "type" : "object",
        "description" : "General seekpoints search request parameters",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          },
          "durationSecs" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "includeAnyMotion" : {
            "type" : "boolean",
            "nullable" : true
          },
          "startTimeSec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Common_devices_GetSeekpointsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "footageSeekPoints" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FootageSeekPointV2Type"
            },
            "nullable" : true
          }
        }
      },
      "Common_devices_GetUptimeWindowsWSRequest" : {
        "type" : "object",
        "description" : "Request to get uptime information for a device.",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "endTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "End time in milliseconds since epoch",
            "example" : 1643673600000,
            "nullable" : true
          },
          "startTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start time in milliseconds since epoch",
            "example" : 1640995200000,
            "nullable" : true
          }
        }
      },
      "Common_devices_GetUptimeWindowsWSResponse" : {
        "type" : "object",
        "description" : "Response containing uptime information for a device.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "uptimeWindows" : {
            "type" : "array",
            "description" : "List of uptime windows for the device",
            "items" : {
              "$ref" : "#/components/schemas/TimeWindowSeconds"
            },
            "nullable" : true
          }
        }
      },
      "Common_devices_RebootDeviceWSResponse" : {
        "type" : "object",
        "description" : "Response indicating the result of rebooting a device.",
        "properties" : {
          "result" : {
            "type" : "string",
            "description" : "Result of the reboot operation",
            "enum" : [ "REBOOT_SENT", "DEVICE_OFFLINE" ],
            "nullable" : true
          }
        }
      },
      "Common_devices_UpdateConfigWSResponse" : {
        "type" : "object",
        "description" : "Response indicating the result of updating device configuration.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Common_devices_UpdateDeviceDetailsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Common_devices_rawstream_CreateRawHttpStreamWSRequest" : {
        "type" : "object",
        "description" : "Request to create a raw HTTP stream for a device.",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          },
          "rawStreamName" : {
            "type" : "string",
            "description" : "Name for the raw stream",
            "example" : "my_raw_stream",
            "nullable" : true
          },
          "streamType" : {
            "$ref" : "#/components/schemas/StreamTypeEnum"
          }
        }
      },
      "Common_devices_rawstream_CreateRawHttpStreamWSResponse" : {
        "type" : "object",
        "description" : "Response containing raw HTTP stream URLs for a device.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "lanAudioUrl" : {
            "type" : "string",
            "description" : "LAN audio URL for the raw stream",
            "example" : "http://ip-192-168-0-1.lan.rhombussystems.com/audio",
            "nullable" : true
          },
          "lanVideoLowResUrl" : {
            "type" : "string",
            "description" : "LAN low resolution video URL for the raw stream",
            "example" : "http://ip-192-168-0-1.lan.rhombussystems.com/video_low",
            "nullable" : true
          },
          "lanVideoUrl" : {
            "type" : "string",
            "description" : "LAN video URL for the raw stream",
            "example" : "http://ip-192-168-0-1.lan.rhombussystems.com/video",
            "nullable" : true
          }
        }
      },
      "Common_devices_rawstream_DeleteRawHttpStreamWSRequest" : {
        "type" : "object",
        "description" : "Request to delete raw HTTP streams for a device.",
        "properties" : {
          "customPathPart" : {
            "type" : "string",
            "description" : "Custom path part to identify specific stream",
            "example" : "my_stream",
            "nullable" : true
          },
          "deviceUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          }
        }
      },
      "Common_devices_rawstream_DeleteRawHttpStreamWSResponse" : {
        "type" : "object",
        "description" : "Response indicating the result of deleting raw HTTP streams.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Common_devices_rawstream_FindAllRawHttpStreamsWSRequest" : {
        "type" : "object",
        "description" : "Request to retrieve all raw HTTP streams."
      },
      "Common_devices_rawstream_FindAllRawHttpStreamsWSResponse" : {
        "type" : "object",
        "description" : "Response containing all raw HTTP streams.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "rawHttpStreams" : {
            "type" : "array",
            "description" : "List of all raw HTTP streams",
            "items" : {
              "$ref" : "#/components/schemas/Common_devices_rawstream_LanSpecificRawStreamType"
            },
            "nullable" : true
          }
        }
      },
      "Common_devices_rawstream_GetRawHttpStreamsWSRequest" : {
        "type" : "object",
        "description" : "Request to retrieve raw HTTP streams for a device.",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          }
        }
      },
      "Common_devices_rawstream_GetRawHttpStreamsWSResponse" : {
        "type" : "object",
        "description" : "Response containing raw HTTP streams for a device.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "rawHttpStreams" : {
            "type" : "array",
            "description" : "List of raw HTTP streams",
            "items" : {
              "$ref" : "#/components/schemas/Common_devices_rawstream_LanSpecificRawStreamType"
            },
            "nullable" : true
          }
        }
      },
      "Common_devices_rawstream_LanSpecificRawStreamType" : {
        "type" : "object",
        "description" : "List of raw HTTP streams",
        "properties" : {
          "audioPath" : {
            "type" : "string",
            "nullable" : true
          },
          "createdAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "createdBy" : {
            "type" : "string",
            "nullable" : true
          },
          "customPathPart" : {
            "type" : "string",
            "nullable" : true
          },
          "deviceType" : {
            "$ref" : "#/components/schemas/DeviceTypeEnum"
          },
          "deviceUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          },
          "lanAudioUrl" : {
            "type" : "string",
            "nullable" : true
          },
          "lanVideoLowResUrl" : {
            "type" : "string",
            "nullable" : true
          },
          "lanVideoUrl" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "streamType" : {
            "$ref" : "#/components/schemas/StreamTypeEnum"
          },
          "videoLowResPath" : {
            "type" : "string",
            "nullable" : true
          },
          "videoPath" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "ComponentBaseEnumType" : {
        "type" : "string",
        "enum" : [ "reader", "dpi", "relay", "rex", "aux", "aperio", "button" ]
      },
      "ComponentCompositeEnumType" : {
        "type" : "string",
        "enum" : [ "AccessControlledDoor" ]
      },
      "ComponentCompositeEnumType_Minimal" : {
        "type" : "string",
        "enum" : [ "AccessControlledDoor" ]
      },
      "ComponentCompositeEventOriginator" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "componentCompositeName" : {
              "type" : "string",
              "nullable" : true
            },
            "componentCompositeUuid" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "correlationId" : {
              "type" : "string",
              "nullable" : true
            },
            "eventUuid" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "originator" : {
              "$ref" : "#/components/schemas/BaseEventOriginator"
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/EventOriginatorEnum"
          }
        }
      },
      "ComponentCompositeShadowEnum" : {
        "type" : "string",
        "enum" : [ "AccessControlledDoorShadow" ]
      },
      "ComponentEnumType" : {
        "type" : "string",
        "enum" : [ "RhombusOsdpDoorReader", "OsdpDoorReader", "WiegandDoorReader", "IntegratedDoorPositionIndicator", "IntegratedRequestToExit", "IntegratedDoorRelay", "IntegratedGenericRelay", "IntegratedGenericInput", "IntegratedGenericButton", "AperioGateway", "AperioDoorExtension", "AperioDoorRelay", "AperioDoorPositionIndicator", "AperioDoorReader", "AperioDoorRequestToExit" ]
      },
      "ComponentEventEnumType" : {
        "type" : "string",
        "description" : "Limits results to only contain the specified type of events, if applicable",
        "enum" : [ "DoorbellEvent", "DoorReaderStateChangeEvent", "DoorRelayStateChangeEvent", "DoorPositionIndicatorStateChangeEvent", "RequestToExitStateChangeEvent", "CredentialReceivedEvent", "ButtonEvent", "GenericInputStateChangeEvent", "GenericRelayStateChangeEvent", "AccessControlUnitTamperEvent", "AccessControlUnitLocationLockdownStateEvent", "DoorLocationLockdownStateEvent", "PanicButtonEvent", "AccessControlUnitBatteryStateChangeEvent", "WaveToUnlockIntentExpiredEvent", "DoorStateChangeEvent", "DoorAuthFirstInStateEvent", "DoorScheduleFirstInStateEvent", "AccessControlUnitDoorFirstInStateEvent", "AperioDoorExtensionStateEvent", "AperioActivatorStateEvent", "AperioKeyCylinderStateEvent", "AperioDoorModeEvent", "AperioDoorHandleStateEvent", "AperioGatewayStateEvent", "AperioGatewayConnectionStateChangeEvent", "AperioDtcEvent", "AperioTamperStateEvent" ]
      },
      "ComponentEventType" : {
        "type" : "object",
        "description" : "List of component events for the doorbell camera",
        "discriminator" : {
          "propertyName" : "type"
        },
        "oneOf" : [ {
          "$ref" : "#/components/schemas/DoorbellEventType"
        }, {
          "$ref" : "#/components/schemas/DoorReaderStateChangeEventType"
        }, {
          "$ref" : "#/components/schemas/DoorRelayStateChangeEventType"
        }, {
          "$ref" : "#/components/schemas/DoorPositionIndicatorStateChangeEventType"
        }, {
          "$ref" : "#/components/schemas/RequestToExitStateChangeEventType"
        }, {
          "$ref" : "#/components/schemas/CredentialReceivedEventType"
        }, {
          "$ref" : "#/components/schemas/ButtonEventType"
        }, {
          "$ref" : "#/components/schemas/GenericInputStateChangeEventType"
        }, {
          "$ref" : "#/components/schemas/GenericRelayStateChangeEventType"
        }, {
          "$ref" : "#/components/schemas/AccessControlUnitTamperEventType"
        }, {
          "$ref" : "#/components/schemas/AccessControlUnitLocationLockdownStateEventType"
        }, {
          "$ref" : "#/components/schemas/DoorLocationLockdownStateEventType"
        }, {
          "$ref" : "#/components/schemas/PanicButtonEventType"
        }, {
          "$ref" : "#/components/schemas/AccessControlUnitBatteryStateChangeEventType"
        }, {
          "$ref" : "#/components/schemas/WaveToUnlockIntentExpiredEvent"
        }, {
          "$ref" : "#/components/schemas/DoorStateChangeEvent"
        }, {
          "$ref" : "#/components/schemas/DoorAuthFirstInStateEvent"
        }, {
          "$ref" : "#/components/schemas/DoorScheduleFirstInStateEvent"
        }, {
          "$ref" : "#/components/schemas/AccessControlUnitDoorFirstInStateEvent"
        }, {
          "$ref" : "#/components/schemas/AperioDtcEvent"
        }, {
          "$ref" : "#/components/schemas/AperioDoorExtensionStateEvent"
        }, {
          "$ref" : "#/components/schemas/AperioActivatorStateEvent"
        }, {
          "$ref" : "#/components/schemas/AperioDoorModeEvent"
        }, {
          "$ref" : "#/components/schemas/AperioDoorHandleStateEvent"
        }, {
          "$ref" : "#/components/schemas/AperioKeyCylinderStateEvent"
        } ],
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "correlationId" : {
            "type" : "string",
            "nullable" : true
          },
          "createdAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEventEnumType"
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "ComponentReferenceType" : {
        "type" : "object",
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "deviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "ComponentReferenceType_Minimal" : {
        "type" : "object",
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "deviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "ComponentRelayOutputType" : {
        "type" : "string",
        "enum" : [ "TRANSIENT", "STEADY" ]
      },
      "ComponentSeekPointType" : {
        "type" : "object",
        "description" : "List of component seekpoints for the doorbell camera",
        "properties" : {
          "activity" : {
            "$ref" : "#/components/schemas/ActivityEnum"
          },
          "componentCompositeUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "componentUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "customActivityColor" : {
            "type" : "string",
            "enum" : [ "BLUE", "RED", "PURPLE", "TAN", "ORANGE", "TEAL", "GRAY", "BLACK" ],
            "nullable" : true
          },
          "customActivityDescription" : {
            "type" : "string",
            "nullable" : true
          },
          "customActivityDisplayName" : {
            "type" : "string",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "originalEvent" : {
            "type" : "object",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "ComponentShadowEnumType" : {
        "type" : "string",
        "enum" : [ "DoorReaderShadow", "DoorRelayShadow", "DoorPositionIndicatorShadow", "RequestToExitShadow", "GenericRelayShadow", "GenericInputShadow", "GenericButtonShadow", "AperioGatewayShadow", "AperioDoorExtensionShadow" ]
      },
      "ComponentShadowType" : {
        "type" : "object",
        "discriminator" : {
          "propertyName" : "type"
        },
        "oneOf" : [ {
          "$ref" : "#/components/schemas/DoorReaderShadowType"
        }, {
          "$ref" : "#/components/schemas/DoorRelayShadowType"
        }, {
          "$ref" : "#/components/schemas/DoorPositionIndicatorShadowType"
        }, {
          "$ref" : "#/components/schemas/RequestToExitShadowType"
        }, {
          "$ref" : "#/components/schemas/GenericInputShadowType"
        }, {
          "$ref" : "#/components/schemas/IntegratedDoorRelayType"
        }, {
          "$ref" : "#/components/schemas/GenericRelayShadowType"
        }, {
          "$ref" : "#/components/schemas/GenericButtonShadowType"
        }, {
          "$ref" : "#/components/schemas/AperioGatewayShadow"
        }, {
          "$ref" : "#/components/schemas/AperioDoorExtensionShadow"
        } ],
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentShadowEnumType"
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Component_AddAccessControlledDoorLabelWSRequest" : {
        "type" : "object",
        "properties" : {
          "accessControlledDoorUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "label" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Component_AddAccessControlledDoorLabelWSResponse" : {
        "type" : "object"
      },
      "Component_AggregatedCredentialReceivedEventInfo" : {
        "type" : "object",
        "properties" : {
          "firstEvent" : {
            "$ref" : "#/components/schemas/CredentialReceivedEventType"
          },
          "lastEvent" : {
            "$ref" : "#/components/schemas/CredentialReceivedEventType"
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Component_ApplyAccessControlledDoorStateOverrideWSRequest" : {
        "type" : "object",
        "description" : "Door state overrides are temporary changes to door's lock/unlock state even if otherwise scheduled. They can be superseded or cancelled at anytime.",
        "properties" : {
          "accessControlledDoorUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "doorAuthFirstInState" : {
            "$ref" : "#/components/schemas/FirstInStatus"
          },
          "doorScheduleFirstInState" : {
            "$ref" : "#/components/schemas/FirstInStatus"
          },
          "expireEarlyMode" : {
            "$ref" : "#/components/schemas/EarlyExpireModeEnum"
          },
          "expiresAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "A millisecond epoch time that represents when the override will end if not ended earlier by a regular schedule interval. Cannot be longer than 24 hours and default is 24hours long",
            "nullable" : true
          },
          "followFirstInRules" : {
            "type" : "boolean",
            "description" : "Default is false if not specified, the door state override will ignore schedule first-in requirements (if applicable) if false",
            "nullable" : true
          },
          "startDelaySeconds" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Default is 0 if not specified, determines how long to wait before applying the override",
            "nullable" : true
          },
          "state" : {
            "$ref" : "#/components/schemas/AccessControlledDoorStateEnumType"
          }
        },
        "required" : [ "accessControlledDoorUuid", "state" ]
      },
      "Component_ApplyAccessControlledDoorStateOverrideWSResponse" : {
        "type" : "object",
        "properties" : {
          "accessControlledDoor" : {
            "$ref" : "#/components/schemas/AccessControlledDoorType"
          }
        }
      },
      "Component_CancelAccessControlledDoorStateOverrideWSRequest" : {
        "type" : "object",
        "properties" : {
          "accessControlledDoorUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        },
        "required" : [ "accessControlledDoorUuid" ]
      },
      "Component_CancelAccessControlledDoorStateOverrideWSResponse" : {
        "type" : "object",
        "properties" : {
          "accessControlledDoor" : {
            "$ref" : "#/components/schemas/AccessControlledDoorType"
          }
        }
      },
      "Component_CreateAccessControlledDoorSeekpointsWSRequest" : {
        "type" : "object",
        "properties" : {
          "doorUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "seekPoints" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CustomFootageSeekPointType"
            },
            "nullable" : true
          }
        }
      },
      "Component_CreateAccessControlledDoorSeekpointsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "successMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Component_CreateAccessControlledDoorWSRequest" : {
        "type" : "object",
        "properties" : {
          "accessControlledDoor" : {
            "$ref" : "#/components/schemas/AccessControlledDoorType"
          },
          "accessControlledDoorLabels" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "Component_CreateAccessControlledDoorWSResponse" : {
        "type" : "object",
        "properties" : {
          "accessControlledDoor" : {
            "$ref" : "#/components/schemas/AccessControlledDoorType"
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Component_CreateAperioDoorInfo" : {
        "type" : "object",
        "description" : "The Aperio-assigned ID of the door(s) and the Aperio-assigned ID of their lock device.",
        "properties" : {
          "aperioDoorDeviceId" : {
            "type" : "string",
            "nullable" : true
          },
          "aperioDoorId" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Component_CreateAperioDoorsWSRequest" : {
        "type" : "object",
        "properties" : {
          "aperioGatewayComponentId" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "doors" : {
            "type" : "array",
            "description" : "The Aperio-assigned ID of the door(s) and the Aperio-assigned ID of their lock device.",
            "items" : {
              "$ref" : "#/components/schemas/Component_CreateAperioDoorInfo"
            },
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        },
        "required" : [ "aperioGatewayComponentId", "doors", "ownerDeviceUuid" ]
      },
      "Component_CreateAperioDoorsWSResponse" : {
        "type" : "object",
        "properties" : {
          "doors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AccessControlledDoorType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "failedDoors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AccessControlledDoorType"
            },
            "nullable" : true
          }
        }
      },
      "Component_CreateAperioGatewayWSRequest" : {
        "type" : "object",
        "properties" : {
          "aperioGatewayId" : {
            "type" : "string",
            "description" : "The Aperio-assigned ID of the gateway, given as a hex string, e.g. \"034AB5\".",
            "nullable" : true
          },
          "includeAperioDoors" : {
            "type" : "boolean",
            "default" : false,
            "description" : "If enabled, also creates Aperio doors with this request.",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        },
        "required" : [ "aperioGatewayId", "ownerDeviceUuid" ]
      },
      "Component_CreateAperioGatewayWSResponse" : {
        "type" : "object",
        "properties" : {
          "component" : {
            "$ref" : "#/components/schemas/AperioGateway"
          },
          "doors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AccessControlledDoorType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "failedDoors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AccessControlledDoorType"
            },
            "nullable" : true
          }
        }
      },
      "Component_CreateIntegratedDoorPositionIndicatorWSRequest" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "normalState" : {
            "$ref" : "#/components/schemas/NormalStateEnumType"
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "port" : {
            "$ref" : "#/components/schemas/DoorPositionIndicatorPortType"
          }
        }
      },
      "Component_CreateIntegratedDoorPositionIndicatorWSResponse" : {
        "type" : "object",
        "properties" : {
          "component" : {
            "$ref" : "#/components/schemas/IntegratedDoorPositionIndicatorType"
          }
        }
      },
      "Component_CreateIntegratedDoorRelayWSRequest" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "port" : {
            "$ref" : "#/components/schemas/DoorRelayPortType"
          }
        }
      },
      "Component_CreateIntegratedDoorRelayWSResponse" : {
        "type" : "object",
        "properties" : {
          "component" : {
            "$ref" : "#/components/schemas/IntegratedDoorRelayType"
          }
        }
      },
      "Component_CreateIntegratedGenericButtonWSRequest" : {
        "type" : "object",
        "properties" : {
          "mode" : {
            "$ref" : "#/components/schemas/ButtonModeEnum"
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "port" : {
            "$ref" : "#/components/schemas/ButtonPortType"
          }
        }
      },
      "Component_CreateIntegratedGenericButtonWSResponse" : {
        "type" : "object",
        "properties" : {
          "component" : {
            "$ref" : "#/components/schemas/IntegratedGenericButtonType"
          }
        }
      },
      "Component_CreateIntegratedGenericInputWSRequest" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "normalState" : {
            "$ref" : "#/components/schemas/NormalStateEnumType"
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "port" : {
            "$ref" : "#/components/schemas/AuxiliaryInputPortType"
          }
        }
      },
      "Component_CreateIntegratedGenericInputWSResponse" : {
        "type" : "object",
        "properties" : {
          "component" : {
            "$ref" : "#/components/schemas/IntegratedGenericInputType"
          }
        }
      },
      "Component_CreateIntegratedGenericRelayWSRequest" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "port" : {
            "$ref" : "#/components/schemas/AuxiliaryRelayPortType"
          },
          "steadyState" : {
            "$ref" : "#/components/schemas/GenericRelayStateEnumType"
          }
        }
      },
      "Component_CreateIntegratedGenericRelayWSResponse" : {
        "type" : "object",
        "properties" : {
          "component" : {
            "$ref" : "#/components/schemas/IntegratedGenericRelayType"
          }
        }
      },
      "Component_CreateIntegratedRequestToExitWSRequest" : {
        "type" : "object",
        "properties" : {
          "intentOnly" : {
            "type" : "boolean",
            "nullable" : true
          },
          "intentOnlyEvents" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "normalState" : {
            "$ref" : "#/components/schemas/NormalStateEnumType"
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "port" : {
            "$ref" : "#/components/schemas/RequestToExitPortType"
          }
        }
      },
      "Component_CreateIntegratedRequestToExitWSResponse" : {
        "type" : "object",
        "properties" : {
          "component" : {
            "$ref" : "#/components/schemas/IntegratedRequestToExitType"
          }
        }
      },
      "Component_CreateOsdpReaderWSRequest" : {
        "type" : "object",
        "properties" : {
          "allowUnencrypted" : {
            "type" : "boolean",
            "nullable" : true
          },
          "disableCardReader" : {
            "type" : "boolean",
            "nullable" : true
          },
          "disableKeypad" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "otherReaderUnlockAudioFeedbackEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "port" : {
            "$ref" : "#/components/schemas/OsdpReaderPortType"
          },
          "remoteUnlockAudioFeedbackEnabled" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Component_CreateOsdpReaderWSResponse" : {
        "type" : "object",
        "properties" : {
          "component" : {
            "$ref" : "#/components/schemas/OsdpDoorReaderType"
          }
        }
      },
      "Component_CreateRhombusOsdpReaderWSRequest" : {
        "type" : "object",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "disableCardReader" : {
            "type" : "boolean",
            "nullable" : true
          },
          "disableWaveToUnlock" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "otherReaderUnlockAudioFeedbackEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "port" : {
            "$ref" : "#/components/schemas/OsdpReaderPortType"
          },
          "remoteUnlockAudioFeedbackEnabled" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Component_CreateRhombusOsdpReaderWSResponse" : {
        "type" : "object",
        "properties" : {
          "component" : {
            "$ref" : "#/components/schemas/RhombusOsdpDoorReaderType"
          }
        }
      },
      "Component_CreateWiegandReaderWSRequest" : {
        "type" : "object",
        "properties" : {
          "buzzerPort" : {
            "$ref" : "#/components/schemas/WiegandOutputPortType"
          },
          "d0Port" : {
            "$ref" : "#/components/schemas/WiegandDataPortType"
          },
          "d1Port" : {
            "$ref" : "#/components/schemas/WiegandDataPortType"
          },
          "disableCardReader" : {
            "type" : "boolean",
            "nullable" : true
          },
          "disableKeypad" : {
            "type" : "boolean",
            "nullable" : true
          },
          "gledPort" : {
            "$ref" : "#/components/schemas/WiegandOutputPortType"
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "otherReaderUnlockAudioFeedbackEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "remoteUnlockAudioFeedbackEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "rledPort" : {
            "$ref" : "#/components/schemas/WiegandOutputPortType"
          },
          "tamperPort" : {
            "$ref" : "#/components/schemas/WiegandInputPortType"
          }
        }
      },
      "Component_CreateWiegandReaderWSResponse" : {
        "type" : "object",
        "properties" : {
          "component" : {
            "$ref" : "#/components/schemas/WiegandDoorReaderType"
          }
        }
      },
      "Component_DeleteAccessControlledDoorWSRequest" : {
        "type" : "object",
        "properties" : {
          "accessControlledDoorUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Component_DeleteAccessControlledDoorWSResponse" : {
        "type" : "object",
        "properties" : {
          "accessControlledDoor" : {
            "$ref" : "#/components/schemas/AccessControlledDoorType"
          }
        }
      },
      "Component_DeleteComponentWSRequest" : {
        "type" : "object",
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Component_DeleteComponentWSResponse" : {
        "type" : "object"
      },
      "Component_DeleteComponentsByOwnerDeviceWSRequest" : {
        "type" : "object",
        "properties" : {
          "ownerDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Component_DeleteComponentsByOwnerDeviceWSResponse" : {
        "type" : "object"
      },
      "Component_FindAccessControlledDoorShadowsByLocationWSRequest" : {
        "type" : "object",
        "properties" : {
          "lastEvaluatedKey" : {
            "type" : "string",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "maxPageSize" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Component_FindAccessControlledDoorShadowsByLocationWSResponse" : {
        "type" : "object",
        "properties" : {
          "lastEvaluatedKey" : {
            "type" : "string",
            "nullable" : true
          },
          "shadows" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AccessControlledDoorShadow"
            },
            "nullable" : true
          }
        }
      },
      "Component_FindAccessControlledDoorShadowsWSRequest" : {
        "type" : "object",
        "properties" : {
          "lastEvaluatedKey" : {
            "type" : "string",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "maxPageSize" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Component_FindAccessControlledDoorShadowsWSResponse" : {
        "type" : "object",
        "properties" : {
          "lastEvaluatedKey" : {
            "type" : "string",
            "nullable" : true
          },
          "shadows" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AccessControlledDoorShadow"
            },
            "nullable" : true
          }
        }
      },
      "Component_FindAccessControlledDoorsByLocationWSRequest" : {
        "type" : "object",
        "properties" : {
          "lastEvaluatedKey" : {
            "type" : "string",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "maxPageSize" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Component_FindAccessControlledDoorsByLocationWSResponse" : {
        "type" : "object",
        "properties" : {
          "accessControlledDoors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AccessControlledDoorType"
            },
            "nullable" : true
          },
          "lastEvaluatedKey" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Component_FindAccessControlledDoorsByOwnerDeviceWSRequest" : {
        "type" : "object",
        "properties" : {
          "ownerDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Component_FindAccessControlledDoorsByOwnerDeviceWSResponse" : {
        "type" : "object",
        "properties" : {
          "accessControlledDoors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AccessControlledDoorType"
            },
            "nullable" : true
          }
        }
      },
      "Component_FindAccessControlledDoorsWSRequest" : {
        "type" : "object",
        "properties" : {
          "lastEvaluatedKey" : {
            "type" : "string",
            "nullable" : true
          },
          "maxPageSize" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Component_FindAccessControlledDoorsWSResponse" : {
        "type" : "object",
        "properties" : {
          "accessControlledDoors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AccessControlledDoorType"
            },
            "nullable" : true
          },
          "lastEvaluatedKey" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Component_FindAllComponentShadowsWSRequest" : {
        "type" : "object",
        "properties" : {
          "componentUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "Component_FindAllComponentShadowsWSResponse" : {
        "type" : "object",
        "properties" : {
          "acuComponentShadowMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/ComponentShadowType"
            },
            "nullable" : true
          }
        }
      },
      "Component_FindComponentEventsByAccessControlledDoorWSRequest" : {
        "type" : "object",
        "properties" : {
          "accessControlledDoorUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "createdAfterMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "createdBeforeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "limit" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "typeFilter" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentEventEnumType"
            },
            "nullable" : true
          }
        }
      },
      "Component_FindComponentEventsByAccessControlledDoorWSResponse" : {
        "type" : "object",
        "properties" : {
          "componentEvents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentEventType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Component_FindComponentEventsByApiTokenWSRequest" : {
        "type" : "object",
        "properties" : {
          "createdAfterMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "createdBeforeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "limit" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "tokenUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "typeFilter" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentEventEnumType"
            },
            "nullable" : true
          }
        }
      },
      "Component_FindComponentEventsByApiTokenWSResponse" : {
        "type" : "object",
        "properties" : {
          "componentEvents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentEventType"
            },
            "nullable" : true
          }
        }
      },
      "Component_FindComponentEventsByComponentWSRequest" : {
        "type" : "object",
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "createdAfterMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "createdBeforeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "limit" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "typeFilter" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentEventEnumType"
            },
            "nullable" : true
          }
        }
      },
      "Component_FindComponentEventsByComponentWSResponse" : {
        "type" : "object",
        "properties" : {
          "componentEvents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentEventType"
            },
            "nullable" : true
          }
        }
      },
      "Component_FindComponentEventsByCorrelationWSRequest" : {
        "type" : "object",
        "properties" : {
          "correlationId" : {
            "type" : "string",
            "nullable" : true
          },
          "createdAfterMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "createdBeforeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "limit" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "typeFilter" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentEventEnumType"
            },
            "nullable" : true
          }
        }
      },
      "Component_FindComponentEventsByCorrelationWSResponse" : {
        "type" : "object",
        "properties" : {
          "componentEvents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentEventType"
            },
            "nullable" : true
          }
        }
      },
      "Component_FindComponentEventsByCredentialHexValueWSRequest" : {
        "type" : "object",
        "properties" : {
          "createdAfterMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "createdBeforeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "credentialHexValue" : {
            "type" : "string",
            "nullable" : true
          },
          "limit" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "typeFilter" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentEventEnumType"
            },
            "nullable" : true
          }
        }
      },
      "Component_FindComponentEventsByCredentialHexValueWSResponse" : {
        "type" : "object",
        "properties" : {
          "componentEvents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentEventType"
            },
            "nullable" : true
          }
        }
      },
      "Component_FindComponentEventsByCredentialUuidWSRequest" : {
        "type" : "object",
        "properties" : {
          "createdAfterMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "createdBeforeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "credentialUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "limit" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "typeFilter" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentEventEnumType"
            },
            "nullable" : true
          }
        }
      },
      "Component_FindComponentEventsByCredentialUuidWSResponse" : {
        "type" : "object",
        "properties" : {
          "componentEvents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentEventType"
            },
            "nullable" : true
          }
        }
      },
      "Component_FindComponentEventsByCredentialValueWSRequest" : {
        "type" : "object",
        "properties" : {
          "createdAfterMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "createdBeforeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "credentialValue" : {
            "type" : "string",
            "nullable" : true
          },
          "limit" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "typeFilter" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentEventEnumType"
            },
            "nullable" : true
          }
        }
      },
      "Component_FindComponentEventsByCredentialValueWSResponse" : {
        "type" : "object",
        "properties" : {
          "componentEvents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentEventType"
            },
            "nullable" : true
          }
        }
      },
      "Component_FindComponentEventsByLocationWSRequest" : {
        "type" : "object",
        "properties" : {
          "createdAfterMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "createdBeforeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "limit" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "typeFilter" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentEventEnumType"
            },
            "nullable" : true
          }
        }
      },
      "Component_FindComponentEventsByLocationWSResponse" : {
        "type" : "object",
        "properties" : {
          "componentEvents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentEventType"
            },
            "nullable" : true
          }
        }
      },
      "Component_FindComponentEventsByOwnerDeviceWSRequest" : {
        "type" : "object",
        "properties" : {
          "createdAfterMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "createdBeforeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "limit" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "typeFilter" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentEventEnumType"
            },
            "nullable" : true
          }
        }
      },
      "Component_FindComponentEventsByOwnerDeviceWSResponse" : {
        "type" : "object",
        "properties" : {
          "componentEvents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentEventType"
            },
            "nullable" : true
          }
        }
      },
      "Component_FindComponentEventsBySupportAuthorityWSRequest" : {
        "type" : "object",
        "properties" : {
          "createdAfterMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "createdBeforeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "limit" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "supportAuthorityUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "typeFilter" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentEventEnumType"
            },
            "nullable" : true
          }
        }
      },
      "Component_FindComponentEventsBySupportAuthorityWSResponse" : {
        "type" : "object",
        "properties" : {
          "componentEvents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentEventType"
            },
            "nullable" : true
          }
        }
      },
      "Component_FindComponentEventsByUserWSRequest" : {
        "type" : "object",
        "properties" : {
          "createdAfterMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "createdBeforeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "limit" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "typeFilter" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentEventEnumType"
            },
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Component_FindComponentEventsByUserWSResponse" : {
        "type" : "object",
        "properties" : {
          "componentEvents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentEventType"
            },
            "nullable" : true
          }
        }
      },
      "Component_FindComponentEventsForCurrentUserWSRequest" : {
        "type" : "object",
        "properties" : {
          "createdAfterMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "createdBeforeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "limit" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "typeFilter" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentEventEnumType"
            },
            "nullable" : true
          }
        }
      },
      "Component_FindComponentEventsForCurrentUserWSResponse" : {
        "type" : "object",
        "properties" : {
          "componentEvents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentEventType"
            },
            "nullable" : true
          }
        }
      },
      "Component_FindComponentEventsForOrgDashboardWSRequest" : {
        "type" : "object",
        "properties" : {
          "createdAfterMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "createdBeforeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "limit" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "reverseSearch" : {
            "type" : "boolean",
            "nullable" : true
          },
          "typeFilter" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentEventEnumType"
            },
            "nullable" : true
          }
        }
      },
      "Component_FindComponentEventsForOrgDashboardWSResponse" : {
        "type" : "object",
        "properties" : {
          "componentEvents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentEventType"
            },
            "nullable" : true
          }
        }
      },
      "Component_FindComponentEventsForVideoIntercomWSRequest" : {
        "type" : "object",
        "properties" : {
          "accessControlledDoorUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "createdAfterMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "createdBeforeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "limit" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "typeFilter" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentEventEnumType"
            },
            "nullable" : true
          },
          "videoIntercomUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Component_FindComponentEventsForVideoIntercomWSResponse" : {
        "type" : "object",
        "properties" : {
          "componentEvents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentEventType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Component_FindComponentSeekPointsByAccessControlledDoorWSRequest" : {
        "type" : "object",
        "description" : "Component seekpoints search for access controlled door",
        "properties" : {
          "accessControlledDoorUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "durationSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "startTimeSecEpochExclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Component_FindComponentSeekPointsByAccessControlledDoorWSResponse" : {
        "type" : "object",
        "properties" : {
          "seekpoints" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentSeekPointType"
            },
            "nullable" : true
          }
        }
      },
      "Component_FindComponentSeekPointsByAccessControlledDoorsWSRequest" : {
        "type" : "object",
        "description" : "Component seekpoints search for access controlled doors",
        "properties" : {
          "accessControlledDoorUuidList" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          },
          "durationSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "sortResponse" : {
            "type" : "boolean",
            "nullable" : true
          },
          "startTimeSecEpochExclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Component_FindComponentSeekPointsByAccessControlledDoorsWSResponse" : {
        "type" : "object",
        "properties" : {
          "seekpoints" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentSeekPointType"
            },
            "nullable" : true
          }
        }
      },
      "Component_FindComponentSeekPointsByComponentWSRequest" : {
        "type" : "object",
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "durationSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "startTimeSecEpochExclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Component_FindComponentSeekPointsByComponentWSResponse" : {
        "type" : "object",
        "properties" : {
          "seekpoints" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentSeekPointType"
            },
            "nullable" : true
          }
        }
      },
      "Component_FindComponentSeekPointsByLocationWSRequest" : {
        "type" : "object",
        "properties" : {
          "durationSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "startTimeSecEpochExclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Component_FindComponentSeekPointsByLocationWSResponse" : {
        "type" : "object",
        "properties" : {
          "seekpoints" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentSeekPointType"
            },
            "nullable" : true
          }
        }
      },
      "Component_FindComponentSeekPointsByOwnerDeviceWSRequest" : {
        "type" : "object",
        "description" : "Component seekpoints search for owner device",
        "properties" : {
          "durationSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "startTimeSecEpochExclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Component_FindComponentSeekPointsByOwnerDeviceWSResponse" : {
        "type" : "object",
        "properties" : {
          "seekpoints" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentSeekPointType"
            },
            "nullable" : true
          }
        }
      },
      "Component_FindComponentSeekPointsByUserWSRequest" : {
        "type" : "object",
        "properties" : {
          "durationSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "startTimeSecEpochExclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Component_FindComponentSeekPointsByUserWSResponse" : {
        "type" : "object",
        "properties" : {
          "seekpoints" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentSeekPointType"
            },
            "nullable" : true
          }
        }
      },
      "Component_FindComponentShadowsByOwnerDeviceWSRequest" : {
        "type" : "object",
        "properties" : {
          "ownerDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Component_FindComponentShadowsByOwnerDeviceWSResponse" : {
        "type" : "object",
        "properties" : {
          "componentShadows" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentShadowType"
            },
            "nullable" : true
          }
        }
      },
      "Component_FindComponentsByOwnerDeviceWSRequest" : {
        "type" : "object",
        "properties" : {
          "ownerDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Component_FindComponentsByOwnerDeviceWSResponse" : {
        "type" : "object",
        "properties" : {
          "components" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BaseComponentType"
            },
            "nullable" : true
          }
        }
      },
      "Component_FindDistinctOriginatorCredentialReceivedEventsByAccessControlledDoorWSRequest" : {
        "type" : "object",
        "properties" : {
          "accessControlledDoorUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "activityFilter" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ActivityEnum"
            },
            "nullable" : true
          },
          "createdAfterMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "createdBeforeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "credSourceFilter" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CredentialSourceEnumType"
            },
            "nullable" : true
          },
          "originatorTypeFilter" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EventOriginatorEnum"
            },
            "nullable" : true
          },
          "userFilter" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Component_FindDistinctOriginatorCredentialReceivedEventsByAccessControlledDoorWSResponse" : {
        "type" : "object",
        "properties" : {
          "events" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Component_AggregatedCredentialReceivedEventInfo"
            },
            "nullable" : true
          }
        }
      },
      "Component_FindDistinctOriginatorCredentialReceivedEventsByLocationWSRequest" : {
        "type" : "object",
        "properties" : {
          "activityFilter" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ActivityEnum"
            },
            "nullable" : true
          },
          "componentCompositeFilter" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          },
          "createdAfterMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "createdBeforeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "credSourceFilter" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CredentialSourceEnumType"
            },
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "originatorTypeFilter" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EventOriginatorEnum"
            },
            "nullable" : true
          },
          "userFilter" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Component_FindDistinctOriginatorCredentialReceivedEventsByLocationWSResponse" : {
        "type" : "object",
        "properties" : {
          "events" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Component_AggregatedCredentialReceivedEventInfo"
            },
            "nullable" : true
          }
        }
      },
      "Component_FindMinimalStateAccessControlledDoorsByLocationWSRequest" : {
        "type" : "object",
        "properties" : {
          "lastEvaluatedKey" : {
            "type" : "string",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "maxPageSize" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Component_FindMinimalStateAccessControlledDoorsByLocationWSResponse" : {
        "type" : "object",
        "properties" : {
          "accessControlledDoors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Component_MinimalStateAccessControlledDoor"
            },
            "nullable" : true
          },
          "lastEvaluatedKey" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Component_FindMinimalStateAccessControlledDoorsWSRequest" : {
        "type" : "object",
        "properties" : {
          "lastEvaluatedKey" : {
            "type" : "string",
            "nullable" : true
          },
          "maxPageSize" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Component_FindMinimalStateAccessControlledDoorsWSResponse" : {
        "type" : "object",
        "properties" : {
          "accessControlledDoors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Component_MinimalStateAccessControlledDoor"
            },
            "nullable" : true
          },
          "lastEvaluatedKey" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Component_GetAccessControlledDoorLabelsForOrgWSRequest" : {
        "type" : "object"
      },
      "Component_GetAccessControlledDoorLabelsForOrgWSResponse" : {
        "type" : "object",
        "properties" : {
          "accessControlledDoorLabels" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "nullable" : true
              },
              "nullable" : true,
              "uniqueItems" : true
            },
            "nullable" : true
          }
        }
      },
      "Component_GetCurrentExpectedAccessControlledDoorStateWSRequest" : {
        "type" : "object",
        "description" : "Determines the expected door state based on the current time and current door configuration",
        "properties" : {
          "accessControlledDoorUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        },
        "required" : [ "accessControlledDoorUuid" ]
      },
      "Component_GetCurrentExpectedAccessControlledDoorStateWSResponse" : {
        "type" : "object",
        "properties" : {
          "activeDoorState" : {
            "$ref" : "#/components/schemas/AccessControlledDoorStateEnumType"
          },
          "activeDoorStateSource" : {
            "$ref" : "#/components/schemas/Schedule_AccessControlledDoorStateSourceEnum"
          },
          "defaultDoorStateSource" : {
            "$ref" : "#/components/schemas/Schedule_AccessControlledDoorStateSourceEnum"
          },
          "defaultState" : {
            "$ref" : "#/components/schemas/AccessControlledDoorStateEnumType"
          },
          "doorStateIfFirstInRequired" : {
            "$ref" : "#/components/schemas/AccessControlledDoorStateEnumType"
          },
          "doorStateIfFirstInSatisfied" : {
            "$ref" : "#/components/schemas/AccessControlledDoorStateEnumType"
          },
          "doorStateSourceIfFirstInRequired" : {
            "$ref" : "#/components/schemas/Schedule_AccessControlledDoorStateSourceEnum"
          },
          "doorStateSourceIfFirstInSatisfied" : {
            "$ref" : "#/components/schemas/Schedule_AccessControlledDoorStateSourceEnum"
          },
          "firstInRequirementEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "firstInRequirementSatisfied" : {
            "type" : "boolean",
            "nullable" : true
          },
          "nextNearestSchedule" : {
            "$ref" : "#/components/schemas/Schedule_AccessControlledDoorNextNearestSchedule"
          }
        }
      },
      "Component_GetFullAccessControlledDoorShadowWSRequest" : {
        "type" : "object",
        "properties" : {
          "accessControlledDoorUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Component_GetFullAccessControlledDoorShadowWSResponse" : {
        "type" : "object",
        "properties" : {
          "doorComponentShadowMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/ComponentShadowType"
            },
            "nullable" : true
          },
          "doorShadow" : {
            "$ref" : "#/components/schemas/AccessControlledDoorShadow"
          }
        }
      },
      "Component_GetOrCreateDevicePhysicalPortConfigWSRequest" : {
        "type" : "object",
        "properties" : {
          "ownerDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Component_GetOrCreateDevicePhysicalPortConfigWSResponse" : {
        "type" : "object",
        "properties" : {
          "detectedInvalidPortConfigs" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/InvalidPhysicalPortConfigType"
            },
            "nullable" : true
          },
          "deviceComponents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BaseComponentType"
            },
            "nullable" : true
          },
          "devicePhysicalPortConfig" : {
            "$ref" : "#/components/schemas/DevicePhysicalPortConfigType"
          }
        }
      },
      "Component_MinimalStateAccessControlledDoor" : {
        "type" : "object",
        "properties" : {
          "door" : {
            "$ref" : "#/components/schemas/AccessControlledDoorType"
          },
          "shadow" : {
            "$ref" : "#/components/schemas/AccessControlledDoorShadow"
          }
        }
      },
      "Component_RemoveAccessControlledDoorLabelWSRequest" : {
        "type" : "object",
        "properties" : {
          "accessControlledDoorUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "label" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Component_RemoveAccessControlledDoorLabelWSResponse" : {
        "type" : "object"
      },
      "Component_UpdateAccessControlledDoorWSRequest" : {
        "type" : "object",
        "properties" : {
          "accessControlledDoorUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "ajarTimeSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "associatedCameras" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "DeviceFacetUuid",
              "description" : "RUUID with optional appended facet information",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "associatedFaceDetectionCameras" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "DeviceFacetUuid",
              "description" : "RUUID with optional appended facet information",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "defaultState" : {
            "$ref" : "#/components/schemas/AccessControlledDoorStateEnumType"
          },
          "directionRadians" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "doorStateToScheduleUuidMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          },
          "dpiComponents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentReferenceType"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "floorNumber" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "forceAllReadersFirstInAuthRequiredLedFeedbackEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "forceAllReadersFirstInUnlockPendingLedFeedbackEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "forceAllReadersOtherReaderUnlockAudioFeedbackEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "forceAllReadersRemoteUnlockAudioFeedbackEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "forcedOpenEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "forcedOpenTimeSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "geofenceEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "geofenceRadius" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "proximityUnlockSettings" : {
            "$ref" : "#/components/schemas/ProximityUnlockSettingsType"
          },
          "readerComponents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentReferenceType"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "relayComponents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentReferenceType"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "relockAfterOpenTimeMs" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "remoteUnlockEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "rexComponents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComponentReferenceType"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "unlockTimeSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "unlockTimeSecRex" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "waveToUnlockSettings" : {
            "$ref" : "#/components/schemas/WaveToUnlockSettingsType"
          }
        }
      },
      "Component_UpdateAccessControlledDoorWSResponse" : {
        "type" : "object",
        "properties" : {
          "accessControlledDoor" : {
            "$ref" : "#/components/schemas/AccessControlledDoorType"
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Component_UpdateIntegratedDoorPositionIndicatorWSRequest" : {
        "type" : "object",
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "normalState" : {
            "$ref" : "#/components/schemas/NormalStateEnumType"
          },
          "port" : {
            "$ref" : "#/components/schemas/DoorPositionIndicatorPortType"
          }
        }
      },
      "Component_UpdateIntegratedDoorPositionIndicatorWSResponse" : {
        "type" : "object",
        "properties" : {
          "component" : {
            "$ref" : "#/components/schemas/IntegratedDoorPositionIndicatorType"
          }
        }
      },
      "Component_UpdateIntegratedDoorRelayWSRequest" : {
        "type" : "object",
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "port" : {
            "$ref" : "#/components/schemas/DoorRelayPortType"
          }
        }
      },
      "Component_UpdateIntegratedDoorRelayWSResponse" : {
        "type" : "object",
        "properties" : {
          "component" : {
            "$ref" : "#/components/schemas/IntegratedDoorRelayType"
          }
        }
      },
      "Component_UpdateIntegratedGenericButtonWSRequest" : {
        "type" : "object",
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "mode" : {
            "$ref" : "#/components/schemas/ButtonModeEnum"
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "port" : {
            "$ref" : "#/components/schemas/ButtonPortType"
          }
        }
      },
      "Component_UpdateIntegratedGenericButtonWSResponse" : {
        "type" : "object",
        "properties" : {
          "component" : {
            "$ref" : "#/components/schemas/IntegratedGenericButtonType"
          }
        }
      },
      "Component_UpdateIntegratedGenericInputWSRequest" : {
        "type" : "object",
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "normalState" : {
            "$ref" : "#/components/schemas/NormalStateEnumType"
          },
          "port" : {
            "$ref" : "#/components/schemas/AuxiliaryInputPortType"
          }
        }
      },
      "Component_UpdateIntegratedGenericInputWSResponse" : {
        "type" : "object",
        "properties" : {
          "component" : {
            "$ref" : "#/components/schemas/IntegratedGenericInputType"
          }
        }
      },
      "Component_UpdateIntegratedGenericRelaySteadyStateWSRequest" : {
        "type" : "object",
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "steadyState" : {
            "$ref" : "#/components/schemas/GenericRelayStateEnumType"
          }
        }
      },
      "Component_UpdateIntegratedGenericRelaySteadyStateWSResponse" : {
        "type" : "object",
        "properties" : {
          "component" : {
            "$ref" : "#/components/schemas/IntegratedGenericRelayType"
          }
        }
      },
      "Component_UpdateIntegratedGenericRelayTransientStateWSRequest" : {
        "type" : "object",
        "properties" : {
          "activate" : {
            "type" : "boolean",
            "nullable" : true
          },
          "componentUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "correlationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "deviceUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          },
          "durationMs" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Component_UpdateIntegratedGenericRelayTransientStateWSResponse" : {
        "type" : "object",
        "properties" : {
          "success" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Component_UpdateIntegratedGenericRelayWSRequest" : {
        "type" : "object",
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "port" : {
            "$ref" : "#/components/schemas/AuxiliaryRelayPortType"
          }
        }
      },
      "Component_UpdateIntegratedGenericRelayWSResponse" : {
        "type" : "object",
        "properties" : {
          "component" : {
            "$ref" : "#/components/schemas/IntegratedGenericRelayType"
          }
        }
      },
      "Component_UpdateIntegratedRequestToExitWSRequest" : {
        "type" : "object",
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "intentOnly" : {
            "type" : "boolean",
            "nullable" : true
          },
          "intentOnlyEvents" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "normalState" : {
            "$ref" : "#/components/schemas/NormalStateEnumType"
          },
          "port" : {
            "$ref" : "#/components/schemas/RequestToExitPortType"
          }
        }
      },
      "Component_UpdateIntegratedRequestToExitWSResponse" : {
        "type" : "object",
        "properties" : {
          "component" : {
            "$ref" : "#/components/schemas/IntegratedRequestToExitType"
          }
        }
      },
      "Component_UpdateOsdpReaderWSRequest" : {
        "type" : "object",
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "disableCardReader" : {
            "type" : "boolean",
            "nullable" : true
          },
          "disableKeypad" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "otherReaderUnlockAudioFeedbackEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "port" : {
            "$ref" : "#/components/schemas/OsdpReaderPortType"
          },
          "remoteUnlockAudioFeedbackEnabled" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Component_UpdateOsdpReaderWSResponse" : {
        "type" : "object",
        "properties" : {
          "component" : {
            "$ref" : "#/components/schemas/OsdpDoorReaderType"
          }
        }
      },
      "Component_UpdateRhombusOsdpReaderWSRequest" : {
        "type" : "object",
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "disableCardReader" : {
            "type" : "boolean",
            "nullable" : true
          },
          "disableWaveToUnlock" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "otherReaderUnlockAudioFeedbackEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "port" : {
            "$ref" : "#/components/schemas/OsdpReaderPortType"
          },
          "remoteUnlockAudioFeedbackEnabled" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Component_UpdateRhombusOsdpReaderWSResponse" : {
        "type" : "object",
        "properties" : {
          "component" : {
            "$ref" : "#/components/schemas/RhombusOsdpDoorReaderType"
          }
        }
      },
      "Component_UpdateWiegandReaderWSRequest" : {
        "type" : "object",
        "properties" : {
          "buzzerPort" : {
            "$ref" : "#/components/schemas/WiegandOutputPortType"
          },
          "componentUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "d0Port" : {
            "$ref" : "#/components/schemas/WiegandDataPortType"
          },
          "d1Port" : {
            "$ref" : "#/components/schemas/WiegandDataPortType"
          },
          "disableCardReader" : {
            "type" : "boolean",
            "nullable" : true
          },
          "disableKeypad" : {
            "type" : "boolean",
            "nullable" : true
          },
          "gledPort" : {
            "$ref" : "#/components/schemas/WiegandOutputPortType"
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "otherReaderUnlockAudioFeedbackEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "remoteUnlockAudioFeedbackEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "rledPort" : {
            "$ref" : "#/components/schemas/WiegandOutputPortType"
          },
          "tamperPort" : {
            "$ref" : "#/components/schemas/WiegandInputPortType"
          }
        }
      },
      "Component_UpdateWiegandReaderWSResponse" : {
        "type" : "object",
        "properties" : {
          "component" : {
            "$ref" : "#/components/schemas/WiegandDoorReaderType"
          }
        }
      },
      "ConnectAudioDeviceToPhoneNumberActionType" : {
        "type" : "object",
        "properties" : {
          "audioDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "doorUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "phoneNumber" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Consignee" : {
        "type" : "object",
        "properties" : {
          "address1" : {
            "type" : "string",
            "nullable" : true
          },
          "address2" : {
            "type" : "string",
            "nullable" : true
          },
          "address3" : {
            "type" : "string",
            "nullable" : true
          },
          "city" : {
            "type" : "string",
            "nullable" : true
          },
          "companyName" : {
            "type" : "string",
            "nullable" : true
          },
          "contactName" : {
            "type" : "string",
            "nullable" : true
          },
          "country" : {
            "type" : "string",
            "nullable" : true
          },
          "phoneNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "postalCode" : {
            "type" : "string",
            "nullable" : true
          },
          "state" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "ContentDisposition" : {
        "type" : "object",
        "properties" : {
          "attachment" : {
            "type" : "boolean",
            "nullable" : true
          },
          "charset" : {
            "type" : "object",
            "nullable" : true,
            "properties" : {
              "registered" : {
                "type" : "boolean",
                "nullable" : true
              }
            }
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "filename" : {
            "type" : "string",
            "nullable" : true
          },
          "formData" : {
            "type" : "boolean",
            "nullable" : true
          },
          "inline" : {
            "type" : "boolean",
            "nullable" : true
          },
          "modificationDate" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "readDate" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "size" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "ContextRecord" : {
        "type" : "object",
        "properties" : {
          "automated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "contextId" : {
            "type" : "string",
            "nullable" : true
          },
          "expiresAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "principalUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "queriedAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "ContextRecordSelectiveUpdate" : {
        "type" : "object",
        "properties" : {
          "realTarget" : {
            "$ref" : "#/components/schemas/ContextRecord"
          },
          "updatedFieldNameMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "boolean",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "CountingActivityEventType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "countingThreshold" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "activityEvent" : {
            "$ref" : "#/components/schemas/ActivityEnum"
          }
        }
      },
      "CredentialEntry" : {
        "type" : "object",
        "discriminator" : {
          "propertyName" : "credSource"
        },
        "nullable" : true,
        "oneOf" : [ {
          "$ref" : "#/components/schemas/CredentialEntryBleWave"
        } ],
        "properties" : {
          "credSource" : {
            "$ref" : "#/components/schemas/CredentialSourceEnumType"
          },
          "credentialId" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "firstInEligible" : {
            "type" : "boolean",
            "nullable" : true
          },
          "originator" : {
            "$ref" : "#/components/schemas/BaseEventOriginator"
          }
        }
      },
      "CredentialEntryBleWave" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "finalRssi" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "firstRssi" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "firstRssiAtIntentElapsed" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "lostAtIntentElapsed" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "lostAtRssi" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "maxRssi" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "maxRssiAtIntentElapsed" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "sessionFirstRssi" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "sessionFirstRssiAtElapsed" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "sessionLostAtElapsed" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "sessionLostAtRssi" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "sessionMaxRssi" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "sessionMaxRssiAtElapsed" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "credSource" : {
            "$ref" : "#/components/schemas/CredentialSourceEnumType"
          },
          "credentialId" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "firstInEligible" : {
            "type" : "boolean",
            "nullable" : true
          },
          "originator" : {
            "$ref" : "#/components/schemas/BaseEventOriginator"
          }
        }
      },
      "CredentialQueryFilter" : {
        "type" : "object",
        "description" : "Filter criteria for finding credential history",
        "properties" : {
          "credTypeFilter" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AccessControlCredentialEnumType"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "lastUsedAccessControlledDoorUuidFilter" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "lastUsedAfterFilter" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "lastUsedBeforeFilter" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "lastUsedLocationUuidFilter" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "workflowStatusFilter" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AccessControlCredentialWorkflowStatusEnumType"
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "CredentialReceivedEventType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "accessGrantOrRevocationUuid" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "activeDoorLockdownState" : {
              "$ref" : "#/components/schemas/DoorLockdownStateEnumType"
            },
            "activeLockdownPlanUuid" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "appName" : {
              "type" : "string",
              "nullable" : true
            },
            "appOS" : {
              "type" : "string",
              "nullable" : true
            },
            "appVersion" : {
              "type" : "string",
              "nullable" : true
            },
            "authDecisionSource" : {
              "$ref" : "#/components/schemas/AuthDecisionSourceEnum"
            },
            "authDecisionUuid" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "authWaitTimeMs" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "authWaitTimeMsTotal" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "authenticationResult" : {
              "$ref" : "#/components/schemas/AccessControlAuthenticationResultEnumType"
            },
            "authorizationResult" : {
              "$ref" : "#/components/schemas/AccessControlAuthorizationResultEnumType"
            },
            "componentCompositeUuid" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "credSource" : {
              "$ref" : "#/components/schemas/CredentialSourceEnumType"
            },
            "credentialHexValue" : {
              "type" : "string",
              "nullable" : true
            },
            "credentialUuid" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "credentialValue" : {
              "type" : "string",
              "nullable" : true
            },
            "credentialValueLengthBits" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "credentials" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/CredentialEntry"
              },
              "nullable" : true
            },
            "deviceModel" : {
              "type" : "string",
              "nullable" : true
            },
            "managedCredentialUuid" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "originator" : {
              "$ref" : "#/components/schemas/BaseEventOriginator"
            },
            "satisfiesFirstInSettingsUuid" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "userAgent" : {
              "type" : "string",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "correlationId" : {
            "type" : "string",
            "nullable" : true
          },
          "createdAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEventEnumType"
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "CredentialSourceEnumType" : {
        "type" : "string",
        "enum" : [ "UNKNOWN", "NFC", "BLE_WAVE", "BLE", "WIEGAND", "REMOTE", "REMOTE_ADMIN", "UNK_3P_OSDP", "APERIO_NFC", "APERIO_LF", "APERIO_KEYPAD", "KEYPAD_WIEGAND", "KEYPAD_OSDP", "BLE_PROX" ]
      },
      "CroppedPermyriadRect" : {
        "type" : "object",
        "properties" : {
          "height" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "width" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "x" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "y" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "CrossingCountsType" : {
        "type" : "object",
        "description" : "List of crossing counts",
        "properties" : {
          "egressCount" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "ingressCount" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "CustomFootageSeekPointType" : {
        "type" : "object",
        "description" : "List of custom footage seek points to create",
        "properties" : {
          "color" : {
            "type" : "string",
            "description" : "Custom activity seekpoint color",
            "enum" : [ "BLUE", "RED", "PURPLE", "TAN", "ORANGE", "TEAL", "GRAY", "BLACK" ],
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "description" : "Custom activity display description, maximum 100 characters",
            "maxLength" : 100,
            "nullable" : true
          },
          "displayOverlay" : {
            "type" : "boolean",
            "description" : "Whether to display this seekpoint as an overlay in Console",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Custom activity display name, maximum 32 characters",
            "maxLength" : 32,
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "UNIX MS timestamp",
            "minimum" : 0,
            "nullable" : true
          }
        },
        "required" : [ "name", "timestampMs" ]
      },
      "CustomImageElement" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "height" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "imageUuid" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "width" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/BadgeTemplateElementEnum"
          },
          "x" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "y" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "CustomLLMActionType" : {
        "type" : "object",
        "properties" : {
          "deviceFacetUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "DeviceFacetUuid",
              "description" : "RUUID with optional appended facet information",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
              "nullable" : true
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "promptUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "CustomLLMEventRuleTriggerType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "deviceFacetUuids" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "DeviceFacetUuid",
                "description" : "RUUID with optional appended facet information",
                "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
                "nullable" : true
              },
              "nullable" : true
            },
            "promptUuid" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/RuleTriggerTypeEnum"
          }
        }
      },
      "CustomTextElement" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "color" : {
              "type" : "string",
              "nullable" : true
            },
            "content" : {
              "type" : "string",
              "nullable" : true
            },
            "maxWidth" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "style" : {
              "type" : "string",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/BadgeTemplateElementEnum"
          },
          "x" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "y" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "CustomerShipmentType" : {
        "type" : "object",
        "description" : "List of customer shipments",
        "properties" : {
          "ait-aitTrackingNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "ait-carrierTrackingNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "ait-depositorOrderNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "ait-destinationAddress" : {
            "type" : "string",
            "nullable" : true
          },
          "ait-isIngramDistributorShipment" : {
            "type" : "boolean",
            "nullable" : true
          },
          "ait-shipmentDate" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "ait-shippedItems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ShippedItemType"
            },
            "nullable" : true
          },
          "interchangeControlNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "lastStateUpdateSec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "rhombus-additionalEmails" : {
            "type" : "string",
            "nullable" : true
          },
          "rhombus-chosenCarrierName" : {
            "type" : "string",
            "nullable" : true
          },
          "rhombus-claimKeyToLicenseMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "nullable" : true
              },
              "nullable" : true,
              "uniqueItems" : true
            },
            "nullable" : true
          },
          "rhombus-claimKeyToLicenseMapV2" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/SalesforceLicenseStartDateTimeAndEndDateTime"
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "rhombus-customerEmails" : {
            "type" : "string",
            "nullable" : true
          },
          "rhombus-customerName" : {
            "type" : "string",
            "nullable" : true
          },
          "rhombus-orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "rhombus-partnerOrgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "rhombus-purchaseOrderNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "rhombus-rmaReturnTrackingNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "rhombus-rmaUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "rhombus-rmaUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          },
          "rhombus-salesForceOpportunityId" : {
            "type" : "string",
            "nullable" : true
          },
          "rhombus-zendeskTicketNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "shipmentCategory" : {
            "type" : "string",
            "enum" : [ "RMA", "PURCHASE_ORDER", "TRIAL", "UNKNOWN" ],
            "nullable" : true
          },
          "shipmentEmailState" : {
            "type" : "string",
            "enum" : [ "SHIPPING_CONFIRMATION_SUCCESS", "SHIPPING_CONFIRMATION_FAILURE", "SHIPPING_SHIPPED_SUCCESS", "SHIPPING_SHIPPED_FAILURE", "UNKNOWN" ],
            "nullable" : true
          },
          "shipmentState" : {
            "type" : "string",
            "enum" : [ "CREATED", "SHIPPED", "DELIVERED", "RETURN_REGISTERED", "RETURN_SENT", "RETURN_DELIVERED", "COMPLETE", "UNKNOWN" ],
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Customer_AcceptUsagePolicyRequest" : {
        "type" : "object",
        "description" : "Request object for accepting the usage policy for the current user."
      },
      "Customer_AcceptUsagePolicyResponse" : {
        "type" : "object",
        "description" : "Response object for accepting the usage policy for the current user."
      },
      "Customer_DeleteNotificationSnoozeSettingWSRequest" : {
        "type" : "object",
        "description" : "Request object for deleting notification snooze settings for a specific entity.",
        "properties" : {
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Customer_DeleteNotificationSnoozeSettingWSResponse" : {
        "type" : "object",
        "description" : "Response object for deleting notification snooze settings.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Customer_GetCurrentPartnerUserWSRequest" : {
        "type" : "object",
        "description" : "Request object for retrieving details about the current authenticated partner user."
      },
      "Customer_GetCurrentPartnerUserWSResponse" : {
        "type" : "object",
        "description" : "Response object containing details about the current authenticated partner user.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "flags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "description" : "Map of user-specific flags and settings",
              "nullable" : true
            },
            "description" : "Map of user-specific flags and settings",
            "nullable" : true
          },
          "notificationSettings" : {
            "$ref" : "#/components/schemas/PartnerNotificationSettingsType"
          },
          "notificationSettingsV2" : {
            "$ref" : "#/components/schemas/PartnerNotificationSettingsV2"
          },
          "permissionGroupUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "user" : {
            "$ref" : "#/components/schemas/WrappedRhombusOrgUserType"
          }
        }
      },
      "Customer_GetCurrentRhombusKeyUserWSRequest" : {
        "type" : "object",
        "description" : "Request object for retrieving RhombusKey user configuration and details for the current user."
      },
      "Customer_GetCurrentRhombusKeyUserWSResponse" : {
        "type" : "object",
        "description" : "Response object containing RhombusKey user configuration, user details, and organization summary details.",
        "properties" : {
          "orgDetails" : {
            "$ref" : "#/components/schemas/User_RhombusKeyOrgDetailsType"
          },
          "rhombusKeyConfig" : {
            "$ref" : "#/components/schemas/RhombusKeyAppConfigType"
          },
          "user" : {
            "$ref" : "#/components/schemas/WrappedRhombusOrgUserType"
          }
        }
      },
      "Customer_GetCurrentUserConsoleOrgsForContextSwitchWSRequest" : {
        "type" : "object",
        "description" : "Request object for retrieving organizations that the current user can context switch into for Console."
      },
      "Customer_GetCurrentUserConsoleOrgsForContextSwitchWSResponse" : {
        "type" : "object",
        "description" : "Response object containing the list of organizations available for context switching in Console.",
        "properties" : {
          "orgs" : {
            "type" : "array",
            "description" : "List of organizations that the user can context switch into",
            "items" : {
              "$ref" : "#/components/schemas/Customer_SelectableOrgForContextSwitch"
            },
            "nullable" : true
          }
        }
      },
      "Customer_GetCurrentUserRhombusKeyOrgsForContextSwitchWSRequest" : {
        "type" : "object",
        "description" : "Request object for retrieving organizations that the current user can context switch into for Rhombus Key."
      },
      "Customer_GetCurrentUserRhombusKeyOrgsForContextSwitchWSResponse" : {
        "type" : "object",
        "description" : "Response object containing the list of organizations available for context switching in Rhombus Key.",
        "properties" : {
          "orgs" : {
            "type" : "array",
            "description" : "List of organizations that the user can context switch into",
            "items" : {
              "$ref" : "#/components/schemas/Customer_SelectableOrgForContextSwitch"
            },
            "nullable" : true
          }
        }
      },
      "Customer_GetCurrentUserSessionsWSRequest" : {
        "type" : "object",
        "description" : "Request object for retrieving the list of active sessions for the current user."
      },
      "Customer_GetCurrentUserSessionsWSResponse" : {
        "type" : "object",
        "description" : "Response object containing the list of active sessions for the current user.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "sessions" : {
            "type" : "array",
            "description" : "List of active sessions for the current user",
            "items" : {
              "$ref" : "#/components/schemas/SessionInfoWSType"
            },
            "nullable" : true
          }
        }
      },
      "Customer_GetCurrentUserWSRequest" : {
        "type" : "object",
        "description" : "Request object for retrieving detailed information about the current authenticated user."
      },
      "Customer_GetCurrentUserWSResponse" : {
        "type" : "object",
        "description" : "Response object containing detailed information about the current authenticated user.",
        "properties" : {
          "customizations" : {
            "$ref" : "#/components/schemas/UserCustomizationsType"
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "flags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "description" : "Map of user-specific flags and settings",
              "nullable" : true
            },
            "description" : "Map of user-specific flags and settings",
            "nullable" : true
          },
          "notificationSettings" : {
            "$ref" : "#/components/schemas/UserNotificationSettingsV3Type"
          },
          "notificationSettingsV2" : {
            "$ref" : "#/components/schemas/UserNotificationSettingsV4Type"
          },
          "permissionGroupUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "user" : {
            "$ref" : "#/components/schemas/WrappedRhombusOrgUserType"
          }
        }
      },
      "Customer_GetDashboardStatusWSResponse" : {
        "type" : "object",
        "description" : "Response object containing dashboard status and information for the current user.",
        "properties" : {
          "dashboardStatus" : {
            "$ref" : "#/components/schemas/DashboardStatus"
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Customer_GetDashboardstatusWSRequest" : {
        "type" : "object",
        "description" : "Request object for retrieving dashboard status and information for the current user."
      },
      "Customer_GetRhombusKeyConfigForCurrentUserWSRequest" : {
        "type" : "object",
        "description" : "Request object for retrieving the RhombusKey mobile app configuration for the current user."
      },
      "Customer_GetRhombusKeyConfigForCurrentUserWSResponse" : {
        "type" : "object",
        "description" : "Response object containing the RhombusKey mobile app configuration for the current user.",
        "properties" : {
          "userRhombusKeyConfig" : {
            "$ref" : "#/components/schemas/RhombusKeyAppConfigType"
          }
        }
      },
      "Customer_GetUserSnoozedNotificationSettingsWSRequest" : {
        "type" : "object",
        "description" : "Request object for retrieving current and planned user notification snooze details."
      },
      "Customer_GetUserSnoozedNotificationSettingsWSResponse" : {
        "type" : "object",
        "description" : "Response object containing current and planned user notification snooze details.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "snoozedForAllNotificationsIntervals" : {
            "type" : "array",
            "description" : "List of intervals when all notifications are snoozed",
            "items" : {
              "$ref" : "#/components/schemas/ScheduledIntervalType"
            },
            "nullable" : true
          },
          "snoozedForComponentCompositesMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "description" : "Map of component composite UUIDs to their snooze notification intervals",
              "items" : {
                "$ref" : "#/components/schemas/ScheduledIntervalType"
              },
              "nullable" : true
            },
            "description" : "Map of component composite UUIDs to their snooze notification intervals",
            "nullable" : true
          },
          "snoozedForDevicesMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "description" : "Map of device UUIDs to their snooze notification intervals",
              "items" : {
                "$ref" : "#/components/schemas/ScheduledIntervalType"
              },
              "nullable" : true
            },
            "description" : "Map of device UUIDs to their snooze notification intervals",
            "nullable" : true
          },
          "snoozedForLocationsMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "description" : "Map of location UUIDs to their snooze notification intervals",
              "items" : {
                "$ref" : "#/components/schemas/ScheduledIntervalType"
              },
              "nullable" : true
            },
            "description" : "Map of location UUIDs to their snooze notification intervals",
            "nullable" : true
          }
        }
      },
      "Customer_LogoutAllOtherCurrentUserSessionsRequest" : {
        "type" : "object",
        "description" : "Request object for logging out all other active sessions for the current user."
      },
      "Customer_LogoutAllOtherCurrentUserSessionsResponse" : {
        "type" : "object",
        "description" : "Response object for logging out all other active sessions for the current user."
      },
      "Customer_SelectableOrgForContextSwitch" : {
        "type" : "object",
        "description" : "List of organizations that the user can context switch into",
        "properties" : {
          "companyThumbnailLogoUrl" : {
            "type" : "string",
            "nullable" : true
          },
          "orgName" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "rhombusKeyLogoUrl" : {
            "type" : "string",
            "nullable" : true
          },
          "userName" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Customer_SetFlagWSRequest" : {
        "type" : "object",
        "description" : "Request object for storing a flag or setting for the current user.",
        "properties" : {
          "flagName" : {
            "type" : "string",
            "description" : "Name of the flag to set",
            "example" : "feature_enabled",
            "nullable" : true
          },
          "flagValue" : {
            "type" : "string",
            "description" : "Value to set for the flag",
            "example" : "true",
            "nullable" : true
          }
        }
      },
      "Customer_SetFlagWSResponse" : {
        "type" : "object",
        "description" : "Response object for storing a flag or setting for the current user.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Customer_SnoozeAllNotificationsWSRequest" : {
        "type" : "object",
        "description" : "Request object for snoozing all user notifications for the current user.",
        "properties" : {
          "durationSec" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Duration in seconds for the snooze period",
            "example" : 3600,
            "nullable" : true
          },
          "scheduledTimestampSec" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Scheduled timestamp in seconds when the snooze should start",
            "example" : 1640995200,
            "nullable" : true
          }
        }
      },
      "Customer_SnoozeAllNotificationsWSResponse" : {
        "type" : "object",
        "description" : "Response object for snoozing all user notifications for the current user.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Customer_SnoozeNotificationsWSRequest" : {
        "type" : "object",
        "description" : "Request object for snoozing user notifications for specific entities.",
        "properties" : {
          "componentCompositeUuids" : {
            "type" : "array",
            "description" : "List of component composite UUIDs to snooze notifications for",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          },
          "deviceUuids" : {
            "type" : "array",
            "description" : "List of device UUIDs to snooze notifications for",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          },
          "durationSec" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Duration in seconds for the snooze period",
            "example" : 3600,
            "nullable" : true
          },
          "locationUuids" : {
            "type" : "array",
            "description" : "List of location UUIDs to snooze notifications for",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          },
          "scheduledTimestampSec" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Scheduled timestamp in seconds when the snooze should start",
            "example" : 1640995200,
            "nullable" : true
          }
        }
      },
      "Customer_SnoozeNotificationsWSResponse" : {
        "type" : "object",
        "description" : "Response object for snoozing user notifications for specific entities.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Customer_UpdateCurrentPartnerWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating details and information for the current authenticated partner user.",
        "properties" : {
          "bypassSaml" : {
            "type" : "boolean",
            "description" : "Whether to bypass SAML authentication for this user",
            "example" : false,
            "nullable" : true
          },
          "mfaEnabled" : {
            "type" : "boolean",
            "description" : "Whether multi-factor authentication is enabled for the user",
            "example" : true,
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the partner user",
            "example" : "John Doe",
            "nullable" : true
          },
          "notificationSettings" : {
            "$ref" : "#/components/schemas/PartnerNotificationSettingsType"
          },
          "permissionGroupUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "smsPhoneNumbers" : {
            "type" : "array",
            "description" : "List of SMS phone numbers for the user",
            "items" : {
              "type" : "string",
              "description" : "List of SMS phone numbers for the user",
              "nullable" : true
            },
            "nullable" : true
          },
          "summaryEmailEnabled" : {
            "type" : "boolean",
            "description" : "Whether summary emails are enabled for the user",
            "example" : false,
            "nullable" : true
          }
        }
      },
      "Customer_UpdateCurrentPartnerWSResponse" : {
        "type" : "object",
        "description" : "Response object for updating details and information for the current authenticated partner user.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Customer_UpdateCurrentUserWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating details and information for the current authenticated user.",
        "properties" : {
          "dashboardCustomizations" : {
            "$ref" : "#/components/schemas/DashboardCustomizations"
          },
          "mfaEnabled" : {
            "type" : "boolean",
            "description" : "Whether multi-factor authentication is enabled for the user",
            "example" : true,
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the user",
            "example" : "John Doe",
            "nullable" : true
          },
          "notificationIntervalsV2" : {
            "type" : "array",
            "description" : "List of notification intervals for the user",
            "items" : {
              "$ref" : "#/components/schemas/NotificationIntervalV2Type"
            },
            "nullable" : true
          },
          "smsPhoneNumbers" : {
            "type" : "array",
            "description" : "List of SMS phone numbers for the user",
            "items" : {
              "type" : "string",
              "description" : "List of SMS phone numbers for the user",
              "nullable" : true
            },
            "nullable" : true
          },
          "summaryEmailEnabled" : {
            "type" : "boolean",
            "description" : "Whether summary emails are enabled for the user",
            "example" : false,
            "nullable" : true
          }
        }
      },
      "Customer_UpdateCurrentUserWSResponse" : {
        "type" : "object",
        "description" : "Response object for updating details and information for the current authenticated user.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Customer_UpdateDashboardCustomizationsWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating dashboard customization settings for the current user.",
        "properties" : {
          "fullCamera" : {
            "type" : "string",
            "description" : "Full camera configuration",
            "example" : "single",
            "nullable" : true
          },
          "fullCameraUpdated" : {
            "type" : "boolean",
            "description" : "Whether the full camera has been updated",
            "example" : false,
            "nullable" : true
          },
          "halfCamera" : {
            "type" : "string",
            "description" : "Half camera configuration",
            "example" : "split",
            "nullable" : true
          },
          "halfCameraUpdated" : {
            "type" : "boolean",
            "description" : "Whether the half camera has been updated",
            "example" : true,
            "nullable" : true
          },
          "layout" : {
            "type" : "string",
            "description" : "Dashboard layout configuration",
            "example" : "grid",
            "nullable" : true
          },
          "layoutUpdated" : {
            "type" : "boolean",
            "description" : "Whether the layout has been updated",
            "example" : true,
            "nullable" : true
          },
          "rememberedLocation" : {
            "type" : "string",
            "description" : "Remembered location for the user",
            "example" : "Main Office",
            "nullable" : true
          },
          "rememberedLocationUpdated" : {
            "type" : "boolean",
            "description" : "Whether the remembered location has been updated",
            "example" : false,
            "nullable" : true
          },
          "report" : {
            "type" : "string",
            "description" : "Report configuration",
            "example" : "daily",
            "nullable" : true
          },
          "reportUpdated" : {
            "type" : "boolean",
            "description" : "Whether the report has been updated",
            "example" : true,
            "nullable" : true
          },
          "videoWall" : {
            "type" : "string",
            "description" : "Video wall configuration",
            "example" : "4x4",
            "nullable" : true
          },
          "videoWallUpdated" : {
            "type" : "boolean",
            "description" : "Whether the video wall has been updated",
            "example" : false,
            "nullable" : true
          }
        }
      },
      "Customer_UpdateDashboardCustomizationsWSResponse" : {
        "type" : "object",
        "description" : "Response object for updating dashboard customization settings for the current user.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Customer_UpdateFrontendCustomizationsWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating frontend customization settings for the current user.",
        "properties" : {
          "customizations" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "description" : "Map of frontend customization settings and their values",
              "nullable" : true
            },
            "description" : "Map of frontend customization settings and their values",
            "nullable" : true
          }
        }
      },
      "Customer_UpdateFrontendCustomizationsWSResponse" : {
        "type" : "object",
        "description" : "Response object for updating frontend customization settings for the current user.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Customer_UpdateRhombusKeyPreferencesForCurrentUserWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating the RhombusKey mobile app preferences for the current user.",
        "properties" : {
          "favoriteAccessControlledDoorUuids" : {
            "type" : "array",
            "description" : "List of favorite access controlled door UUIDs for the user",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          },
          "favoriteAccessControlledDoorUuidsUpdated" : {
            "type" : "boolean",
            "description" : "Whether the favorite access controlled door UUIDs have been updated",
            "example" : true,
            "nullable" : true
          }
        }
      },
      "Customer_UpdateRhombusKeyPreferencesForCurrentUserWSResponse" : {
        "type" : "object",
        "description" : "Response object for updating the RhombusKey mobile app preferences for the current user.",
        "properties" : {
          "userRhombusKeyConfig" : {
            "$ref" : "#/components/schemas/RhombusKeyAppConfigType"
          }
        }
      },
      "DailyFirstInReset" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "minuteOfDay" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/FirstInResetEnum"
          }
        }
      },
      "DashboardCustomizations" : {
        "type" : "object",
        "description" : "Dashboard customization settings for the user",
        "properties" : {
          "fullCamera" : {
            "type" : "string",
            "nullable" : true
          },
          "halfCamera" : {
            "type" : "string",
            "nullable" : true
          },
          "layout" : {
            "type" : "string",
            "nullable" : true
          },
          "rememberedLocation" : {
            "type" : "string",
            "nullable" : true
          },
          "report" : {
            "type" : "string",
            "nullable" : true
          },
          "videoWall" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "DashboardStatus" : {
        "type" : "object",
        "description" : "Dashboard status and information for the current user",
        "properties" : {
          "camerasDown" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "camerasDownByLocation" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "nullable" : true
          },
          "camerasUp" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "healthStatusIndicator" : {
            "type" : "string",
            "enum" : [ "GREEN", "YELLOW", "RED" ],
            "nullable" : true
          },
          "healthStatusMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "locationCameraStatus" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "boolean",
                "nullable" : true
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "totalCameras" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "totalClimateSensors" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "totalDoorSensors" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "totalLocations" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "totalProximitySensors" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "DateRangeFilter" : {
        "type" : "object",
        "description" : "Optional date range filter to limit search results.",
        "properties" : {
          "localEndDateRangeEnd" : {
            "type" : "string",
            "description" : "End of the date range to filter local end date. This date is inclusive.",
            "nullable" : true
          },
          "localEndDateRangeStart" : {
            "type" : "string",
            "description" : "Start of the date range to filter local end date. This date is inclusive.",
            "nullable" : true
          },
          "localStartDateRangeEnd" : {
            "type" : "string",
            "description" : "End of the date range to filter local start date. This date is inclusive.",
            "nullable" : true
          },
          "localStartDateRangeStart" : {
            "type" : "string",
            "description" : "Start of the date range to filter local start date. This date is inclusive.",
            "nullable" : true
          }
        }
      },
      "DeleteSharedLiveVideoStreamForDeviceResponse" : {
        "type" : "object"
      },
      "Developer_CreateEventListenerWSRequest" : {
        "type" : "object",
        "description" : "Request object for creating an event listener.",
        "properties" : {
          "eventListner" : {
            "$ref" : "#/components/schemas/EventListenerType"
          }
        }
      },
      "Developer_CreateEventListenerWSResponse" : {
        "type" : "object",
        "description" : "Response object for creating an event listener.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "eventListenerUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Developer_DeleteEventListenerWSRequest" : {
        "type" : "object",
        "description" : "Request object for deleting an event listener.",
        "properties" : {
          "eventListenerUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Developer_DeleteEventListenerWSResponse" : {
        "type" : "object",
        "description" : "Response object for deleting an event listener.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Developer_GetAllEventListenersWSRequest" : {
        "type" : "object",
        "description" : "Request object for retrieving a list of all event listeners."
      },
      "Developer_GetAllEventListenersWSResponse" : {
        "type" : "object",
        "description" : "Response object containing a list of all event listeners.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "eventListeners" : {
            "type" : "array",
            "description" : "List of all event listeners",
            "items" : {
              "$ref" : "#/components/schemas/EventListenerType"
            },
            "nullable" : true
          }
        }
      },
      "Developer_GetEventListenersForDeviceWSRequest" : {
        "type" : "object",
        "description" : "Request object for retrieving a list of event listeners for a specific device.",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Developer_GetEventListenersForDeviceWSResponse" : {
        "type" : "object",
        "description" : "Response object containing a list of event listeners for a specific device.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "eventListeners" : {
            "type" : "array",
            "description" : "List of event listeners for the specified device",
            "items" : {
              "$ref" : "#/components/schemas/EventListenerType"
            },
            "nullable" : true
          }
        }
      },
      "DeviceActivityRuleTriggerType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "activityEvent" : {
              "$ref" : "#/components/schemas/SimpleDeviceActivityEventType"
            },
            "componentCompositeUuids" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "RUUID",
                "description" : "base 64 (url-safe) uuid string",
                "example" : "AAAAAAAAAAAAAAAAAAAAAA",
                "nullable" : true
              },
              "nullable" : true
            },
            "componentUuids" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "RUUID",
                "description" : "base 64 (url-safe) uuid string",
                "example" : "AAAAAAAAAAAAAAAAAAAAAA",
                "nullable" : true
              },
              "nullable" : true
            },
            "deviceLabels" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "nullable" : true
              },
              "nullable" : true
            },
            "deviceUuids" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "RUUID",
                "description" : "base 64 (url-safe) uuid string",
                "example" : "AAAAAAAAAAAAAAAAAAAAAA",
                "nullable" : true
              },
              "nullable" : true
            },
            "locationUuids" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "RUUID",
                "description" : "base 64 (url-safe) uuid string",
                "example" : "AAAAAAAAAAAAAAAAAAAAAA",
                "nullable" : true
              },
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/RuleTriggerTypeEnum"
          }
        }
      },
      "DeviceAssignableLicenseGroupStats" : {
        "type" : "object",
        "properties" : {
          "assignedCount" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "deviceLicenseFamilyStats" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DeviceLicenseFamilyStats"
            },
            "nullable" : true
          },
          "lastEndDate" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The closest past date on which licenses belonging to the group expired.",
            "nullable" : true
          },
          "nearExpirationCount" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The number of licenses in the group that are currently close to expiration.",
            "nullable" : true
          },
          "nextEndDate" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The closest future date on which licenses belonging to the group will expire.",
            "nullable" : true
          },
          "stateStats" : {
            "$ref" : "#/components/schemas/LicenseStateStats"
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The number of licenses in the group.",
            "nullable" : true
          }
        }
      },
      "DeviceCatalogItem" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "cloudArchiveDays" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "deviceType" : {
              "$ref" : "#/components/schemas/DeviceTypeEnum"
            },
            "licenseFamily" : {
              "type" : "string",
              "enum" : [ "CAMERA", "CAMERA_MS", "VIDEO_INTERCOM", "AUDIO_GATEWAY", "ENVIRONMENTAL_SENSOR", "ENVIRONMENTAL_GATEWAY" ],
              "nullable" : true
            },
            "licenseType" : {
              "$ref" : "#/components/schemas/License"
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "durationMonths" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "productCode" : {
            "type" : "string",
            "nullable" : true
          },
          "productType" : {
            "type" : "string",
            "enum" : [ "DEVICE", "ALERT_MONITORING", "ACCESS_CONTROL", "LICENSE_USAGE", "UNKNOWN" ],
            "nullable" : true
          }
        }
      },
      "DeviceEventRecordType" : {
        "type" : "object",
        "properties" : {
          "activities" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ActivityEnum"
            },
            "nullable" : true
          },
          "componentCompositeUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "componentUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "deviceType" : {
            "$ref" : "#/components/schemas/DeviceTypeEnum"
          },
          "deviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "eventUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "hardwareVariation" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "DeviceFacet" : {
        "type" : "string",
        "format" : "DeviceFacet",
        "description" : "facet information for media",
        "enum" : [ "", "v0", "v1", "v2", "v3", "a0", "v4", "v5", "v6", "v7", "v8", "v9", "v10", "v11", "v12", "v13", "v14", "v15", "v16", "v17", "v18", "v19", "v20", "v21", "v22", "v23", "v24", "v25", "v26", "v27", "v28", "v29", "v30", "v31", "v32", "v33", "v34", "v35", "v36", "v37", "v38", "v39", "v40", "v41", "v42", "v43", "v44", "v45", "v46", "v47", "v48", "v49", "v50", "v51", "a1", "a2", "a3", "a4", "a5", "a6", "a7", "a8", "a9", "a10", "a11", "a12", "a13", "a14", "a15", "a16", "a17", "a18", "a19", "a20", "a21", "a22", "a23", "a24", "a25", "a26", "a27", "a28", "a29", "a30", "a31", "a32", "a33", "a34", "a35", "a36", "a37", "a38", "a39", "a40", "a41", "a42", "a43", "a44", "a45", "a46", "a47", "a48", "a49", "a50", "a51" ],
        "example" : "v0, a0"
      },
      "DeviceFeatureEnum" : {
        "type" : "string",
        "enum" : [ "COLOR_SEARCH", "FACE_RECOGNITION", "LICENSE_PLATE_RECOGNITION", "PEOPLE_COUNTING", "PPE_DETECTION", "UNUSUAL_BEHAVIOR_DETECTION", "VEHICLE_COUNTING", "CAMERA_ENTERPRISE_CLOUD_ARCHIVING", "TIMELAPSE", "VISUAL_TAMPER", "AUDIO_AI_ANALYTICS", "AUDIO_ENTERPRISE_CLOUD_ARCHIVING", "AUDIO_SPEAKER_ENABLED", "BADGE_READER_ENTERPRISE_CLOUD_ARCHIVING", "OBJECT_SEARCH", "UNKNOWN" ]
      },
      "DeviceHealthStatusDetailsEnum" : {
        "type" : "string",
        "enum" : [ "DISCONNECTED", "FIRMWARE_BEHIND", "NOT_RECORDING", "MALFUNCTIONING_MODULES", "CALIBRATING", "DELAYED", "NONE" ]
      },
      "DeviceIntegrationSettings" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "DeviceIntegrationType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "deviceSettingsMap" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/DeviceIntegrationSettings"
              },
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "DeviceLicenseFamilyStats" : {
        "type" : "object",
        "properties" : {
          "assignedCount" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "deviceLicenseFamily" : {
            "type" : "string",
            "enum" : [ "CAMERA", "CAMERA_MS", "VIDEO_INTERCOM", "AUDIO_GATEWAY", "ENVIRONMENTAL_SENSOR", "ENVIRONMENTAL_GATEWAY" ],
            "nullable" : true
          },
          "lastEndDate" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The closest past date on which licenses belonging to the group expired.",
            "nullable" : true
          },
          "nearExpirationCount" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The number of licenses in the group that are currently close to expiration.",
            "nullable" : true
          },
          "nextEndDate" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The closest future date on which licenses belonging to the group will expire.",
            "nullable" : true
          },
          "stateStats" : {
            "$ref" : "#/components/schemas/LicenseStateStats"
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The number of licenses in the group.",
            "nullable" : true
          }
        }
      },
      "DeviceLicenseType" : {
        "type" : "object",
        "description" : "List of device licenses available for the client organization",
        "properties" : {
          "claimKeyUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "createdOn" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "deviceType" : {
            "$ref" : "#/components/schemas/DeviceTypeEnum"
          },
          "deviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "features" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LicenseFeature"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "firstAssignedDate" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "licenseFamily" : {
            "type" : "string",
            "enum" : [ "CAMERA", "CAMERA_MS", "VIDEO_INTERCOM", "AUDIO_GATEWAY", "ENVIRONMENTAL_SENSOR", "ENVIRONMENTAL_GATEWAY" ],
            "nullable" : true
          },
          "licenseToUnassignEmailState" : {
            "type" : "string",
            "enum" : [ "INITIAL_EMAIL_SUCCEEDED", "INITIAL_EMAIL_FAILED", "FIFTEEN_DAY_WARNING_EMAIL_SUCCEEDED", "FIFTEEN_DAY_WARNING_EMAIL_FAILED", "FOURTY_EIGHT_HOUR_WARNING_EMAIL_SUCCEEDED", "FOURTY_EIGHT_HOUR_WARNING_EMAIL_FAILED", "UNKNOWN" ],
            "nullable" : true
          },
          "licenseType" : {
            "$ref" : "#/components/schemas/License"
          },
          "maxDeleteDate" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "priorClaimKeyUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "productCode" : {
            "type" : "string",
            "nullable" : true
          },
          "productType" : {
            "type" : "string",
            "enum" : [ "DEVICE", "ALERT_MONITORING", "ACCESS_CONTROL", "LICENSE_USAGE", "UNKNOWN" ],
            "nullable" : true
          },
          "state" : {
            "type" : "string",
            "enum" : [ "CLAIMED", "RENEWED", "PENDING_RETURN", "NOT_RENEWED", "EXPIRED", "PERMANENTLY_EXPIRED" ],
            "nullable" : true
          },
          "trial" : {
            "type" : "boolean",
            "nullable" : true
          },
          "updatedOn" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "DeviceOrientationEnum" : {
        "type" : "string",
        "enum" : [ "CEILING", "FLOOR", "WALL", "WALL_CROOKED", "INDETERMINATE" ]
      },
      "DevicePhysicalPortConfigType" : {
        "type" : "object",
        "properties" : {
          "boardMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/BoardPhysicalPortConfigType"
            },
            "nullable" : true
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "DeviceSchedule" : {
        "type" : "object",
        "properties" : {
          "invertSchedule" : {
            "type" : "boolean",
            "nullable" : true
          },
          "scheduleUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "unscheduledMessage" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "DeviceStatusEnum" : {
        "type" : "string",
        "enum" : [ "RED", "ORANGE", "YELLOW", "GREEN" ]
      },
      "DeviceTargetScope" : {
        "type" : "string",
        "enum" : [ "ORG", "LOCATION", "DEVICE" ]
      },
      "DeviceTypeEnum" : {
        "type" : "string",
        "enum" : [ "BLE_TRACKER", "CAMERA", "DOOR_SENSOR", "ENVIRONMENTAL_SENSOR", "OCCUPANCY_SENSOR", "AUDIO_GATEWAY", "EXECUTABLE", "BADGE_READER", "DOOR_CONTROLLER", "BLE_BUTTON", "IO_BOARD", "ENVIRONMENTAL_GATEWAY", "NVR", "UNKNOWN" ]
      },
      "DeviceTypeV2" : {
        "type" : "object",
        "description" : "List of all client devices",
        "properties" : {
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "customData" : {
            "type" : "string",
            "nullable" : true
          },
          "deleted" : {
            "type" : "boolean",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "facetNameMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "hardwareId" : {
            "type" : "string",
            "nullable" : true
          },
          "hwVariation" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "mummified" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "pending" : {
            "type" : "boolean",
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "serialNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/DeviceTypeEnum"
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "DeviceVideoSettingsSelectiveUpdate" : {
        "type" : "object",
        "description" : "Update selective video settings",
        "properties" : {
          "alert_rate_limit_human_only" : {
            "$ref" : "#/components/schemas/BurstyRateLimit"
          },
          "alert_rate_limit_motion_only" : {
            "$ref" : "#/components/schemas/BurstyRateLimit"
          },
          "alert_rate_limit_vehicle_only" : {
            "$ref" : "#/components/schemas/BurstyRateLimit"
          },
          "ir_double_tap" : {
            "type" : "boolean",
            "nullable" : true
          },
          "ir_filter_mode" : {
            "type" : "string",
            "enum" : [ "ON", "OFF", "AUTO" ],
            "nullable" : true
          },
          "ir_leds_mode" : {
            "type" : "string",
            "enum" : [ "ON", "OFF", "AUTO" ],
            "nullable" : true
          },
          "updatedSetMethodMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "boolean",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Deviceconfig_GetConfigWSRequest" : {
        "type" : "object",
        "description" : "Request object for retrieving a device's configuration.",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Deviceconfig_GetFacetedUserConfigWSResponse" : {
        "type" : "object",
        "description" : "Response object containing a device's faceted user configuration.",
        "properties" : {
          "config" : {
            "$ref" : "#/components/schemas/Deviceconfig_userconfig_ExternalReadableFacetedUserConfig"
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Deviceconfig_UpdateFacetedUserConfigWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating a device's faceted user configuration.",
        "properties" : {
          "configUpdate" : {
            "$ref" : "#/components/schemas/Deviceconfig_userconfig_ExternalUpdateableFacetedUserConfig"
          }
        }
      },
      "Deviceconfig_settings_ExternalAudioSettingsSelectiveUpdate" : {
        "type" : "object",
        "description" : "Update Audio settings",
        "properties" : {
          "audio_aec_via_software" : {
            "type" : "boolean",
            "nullable" : true
          },
          "audio_external_mic_boost" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "audio_external_mic_volume" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "audio_external_speaker_volume" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "audio_internal_mic_aec_enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "audio_internal_mic_boost" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "audio_internal_mic_volume" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "audio_internal_speaker_volume" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "audio_min_echo_amplitude" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "audio_playback_gain_percent" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "audio_record" : {
            "type" : "boolean",
            "nullable" : true
          },
          "audio_supported" : {
            "type" : "boolean",
            "nullable" : true
          },
          "audio_use_external_mic" : {
            "type" : "boolean",
            "nullable" : true
          },
          "audio_use_external_speaker" : {
            "type" : "boolean",
            "nullable" : true
          },
          "audio_use_internal_speaker" : {
            "type" : "boolean",
            "nullable" : true
          },
          "device_mic_enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "device_near_audio_silenced" : {
            "type" : "boolean",
            "nullable" : true
          },
          "device_speaker_enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "frontendEqualizerHighShelf" : {
            "$ref" : "#/components/schemas/FrontendEqualizerSettings"
          },
          "frontendEqualizerLowShelf" : {
            "$ref" : "#/components/schemas/FrontendEqualizerSettings"
          },
          "frontendEqualizerPeaking1" : {
            "$ref" : "#/components/schemas/FrontendEqualizerSettings"
          },
          "frontendEqualizerPeaking2" : {
            "$ref" : "#/components/schemas/FrontendEqualizerSettings"
          },
          "frontendEqualizerPeaking3" : {
            "$ref" : "#/components/schemas/FrontendEqualizerSettings"
          },
          "frontendNoiseSuppression" : {
            "type" : "boolean",
            "nullable" : true
          },
          "updatedSetMethodMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "boolean",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Deviceconfig_settings_ExternalDeviceSettingsSelectiveUpdate" : {
        "type" : "object",
        "properties" : {
          "bandwidth_reports_disabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "firmware_dev_settings" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "led_mode_blink_period_ms" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "led_mode_when_active" : {
            "type" : "string",
            "enum" : [ "LED_OFF", "LED_RED_SOLID", "LED_GREEN_SOLID", "LED_ORANGE_SOLID", "LED_RED_BLINK", "LED_GREEN_BLINK", "LED_ORANGE_BLINK", "LED_NORMAL" ],
            "nullable" : true
          },
          "led_mode_when_inactive" : {
            "type" : "string",
            "enum" : [ "LED_OFF", "LED_RED_SOLID", "LED_GREEN_SOLID", "LED_ORANGE_SOLID", "LED_RED_BLINK", "LED_GREEN_BLINK", "LED_ORANGE_BLINK", "LED_NORMAL" ],
            "nullable" : true
          },
          "led_stealth_mode" : {
            "type" : "boolean",
            "nullable" : true
          },
          "lightweight_detection_disabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "live_license_invalid" : {
            "type" : "boolean",
            "nullable" : true
          },
          "media_ttl_minutes" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "on_demand_license_invalid" : {
            "type" : "boolean",
            "nullable" : true
          },
          "snapshot_upload_target" : {
            "type" : "string",
            "enum" : [ "0", "1", "2" ],
            "nullable" : true
          },
          "storage_target_free_megabytes" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "storage_target_free_space_permyriad" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "thumbstrip_upload_target" : {
            "type" : "string",
            "enum" : [ "0", "1", "2" ],
            "nullable" : true
          },
          "updatedSetMethodMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "boolean",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Deviceconfig_settings_ExternalDoorControllerSettingsSelectiveUpdate" : {
        "type" : "object",
        "description" : "Update Door Controller settings",
        "properties" : {
          "autocomponentize_readers" : {
            "type" : "boolean",
            "nullable" : true
          },
          "autoregister_readers" : {
            "type" : "boolean",
            "nullable" : true
          },
          "flip_display_orientation" : {
            "type" : "boolean",
            "nullable" : true
          },
          "pressure_switch_tamper_normally_open" : {
            "type" : "boolean",
            "nullable" : true
          },
          "proximity_sensor_tamper_disabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "proximity_sensor_tamper_distance_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "updatedSetMethodMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "boolean",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Deviceconfig_settings_ExternalReadableAudioSettings" : {
        "type" : "object",
        "properties" : {
          "audio_aec_via_software" : {
            "type" : "boolean",
            "nullable" : true
          },
          "audio_analysis_enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "audio_external_mic_boost" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "audio_external_mic_volume" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "audio_external_speaker_volume" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "audio_internal_mic_aec_enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "audio_internal_mic_boost" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "audio_internal_mic_volume" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "audio_internal_speaker_volume" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "audio_min_echo_amplitude" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "audio_playback_gain_percent" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "audio_record" : {
            "type" : "boolean",
            "nullable" : true
          },
          "audio_supported" : {
            "type" : "boolean",
            "nullable" : true
          },
          "audio_use_external_mic" : {
            "type" : "boolean",
            "nullable" : true
          },
          "audio_use_external_speaker" : {
            "type" : "boolean",
            "nullable" : true
          },
          "audio_use_internal_speaker" : {
            "type" : "boolean",
            "nullable" : true
          },
          "device_mic_enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "device_near_audio_silenced" : {
            "type" : "boolean",
            "nullable" : true
          },
          "device_speaker_enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "frontendEqualizerHighShelf" : {
            "$ref" : "#/components/schemas/FrontendEqualizerSettings"
          },
          "frontendEqualizerLowShelf" : {
            "$ref" : "#/components/schemas/FrontendEqualizerSettings"
          },
          "frontendEqualizerPeaking1" : {
            "$ref" : "#/components/schemas/FrontendEqualizerSettings"
          },
          "frontendEqualizerPeaking2" : {
            "$ref" : "#/components/schemas/FrontendEqualizerSettings"
          },
          "frontendEqualizerPeaking3" : {
            "$ref" : "#/components/schemas/FrontendEqualizerSettings"
          },
          "frontendNoiseSuppression" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Deviceconfig_settings_ExternalReadableButtonSettings" : {
        "type" : "object",
        "properties" : {
          "button_emergency_onsite_contact" : {
            "$ref" : "#/components/schemas/EmergencyContact"
          },
          "button_test_mode_enabled" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Deviceconfig_settings_ExternalReadableDeviceSettings" : {
        "type" : "object",
        "properties" : {
          "bandwidth_reports_disabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "cloud_archive_days" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "cloud_archive_upload_schedule" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/WeeklyMinuteIntervalType"
            },
            "nullable" : true
          },
          "cloud_archive_upload_schedule_inverted" : {
            "type" : "boolean",
            "nullable" : true
          },
          "cloud_archive_upload_schedule_uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "firmware_dev_settings" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "led_mode_blink_period_ms" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "led_mode_when_active" : {
            "type" : "string",
            "enum" : [ "LED_OFF", "LED_RED_SOLID", "LED_GREEN_SOLID", "LED_ORANGE_SOLID", "LED_RED_BLINK", "LED_GREEN_BLINK", "LED_ORANGE_BLINK", "LED_NORMAL" ],
            "nullable" : true
          },
          "led_mode_when_inactive" : {
            "type" : "string",
            "enum" : [ "LED_OFF", "LED_RED_SOLID", "LED_GREEN_SOLID", "LED_ORANGE_SOLID", "LED_RED_BLINK", "LED_GREEN_BLINK", "LED_ORANGE_BLINK", "LED_NORMAL" ],
            "nullable" : true
          },
          "led_stealth_mode" : {
            "type" : "boolean",
            "nullable" : true
          },
          "lightweight_detection_disabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "live_license_invalid" : {
            "type" : "boolean",
            "nullable" : true
          },
          "max_event_duration_ms" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "media_ttl_minutes" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "on_demand_license_invalid" : {
            "type" : "boolean",
            "nullable" : true
          },
          "snapshot_upload_target" : {
            "type" : "string",
            "enum" : [ "0", "1", "2" ],
            "nullable" : true
          },
          "storage_target_free_megabytes" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "storage_target_free_space_permyriad" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "thumbstrip_upload_target" : {
            "type" : "string",
            "enum" : [ "0", "1", "2" ],
            "nullable" : true
          }
        }
      },
      "Deviceconfig_settings_ExternalReadableDeviceVideoSettings" : {
        "type" : "object",
        "properties" : {
          "alert_rate_limit_human_only" : {
            "$ref" : "#/components/schemas/BurstyRateLimit"
          },
          "alert_rate_limit_motion_only" : {
            "$ref" : "#/components/schemas/BurstyRateLimit"
          },
          "alert_rate_limit_vehicle_only" : {
            "$ref" : "#/components/schemas/BurstyRateLimit"
          },
          "ir_double_tap" : {
            "type" : "boolean",
            "nullable" : true
          },
          "ir_filter_mode" : {
            "type" : "string",
            "enum" : [ "ON", "OFF", "AUTO" ],
            "nullable" : true
          },
          "ir_leds_mode" : {
            "type" : "string",
            "enum" : [ "ON", "OFF", "AUTO" ],
            "nullable" : true
          }
        }
      },
      "Deviceconfig_settings_ExternalReadableDoorControllerSettings" : {
        "type" : "object",
        "properties" : {
          "autocomponentize_readers" : {
            "type" : "boolean",
            "nullable" : true
          },
          "autoregister_readers" : {
            "type" : "boolean",
            "nullable" : true
          },
          "flip_display_orientation" : {
            "type" : "boolean",
            "nullable" : true
          },
          "pressure_switch_tamper_normally_open" : {
            "type" : "boolean",
            "nullable" : true
          },
          "proximity_sensor_tamper_disabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "proximity_sensor_tamper_distance_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          }
        }
      },
      "Deviceconfig_settings_ExternalReadableVideoSettings" : {
        "type" : "object",
        "properties" : {
          "ai_dewarp_config" : {
            "$ref" : "#/components/schemas/CameraAiDewarpConfigType"
          },
          "behavior_detection" : {
            "type" : "boolean",
            "nullable" : true
          },
          "blocked_debounce_time_ms" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "blocked_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "char_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "color_detection" : {
            "type" : "boolean",
            "nullable" : true
          },
          "con_human_filter" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "con_vehicle_filter" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "cross_counting" : {
            "type" : "boolean",
            "nullable" : true
          },
          "cross_counting_settings" : {
            "$ref" : "#/components/schemas/CameraCrossCountingSettingsType"
          },
          "dewarpMode" : {
            "type" : "string",
            "enum" : [ "NO_TRANSFORM", "NORMAL", "PANORAMA", "SUB_REGION", "VERTICAL_PANORAMA", "TRANSVERSE_MERCATOR", "MERCATOR", "EQUIRECTANGULAR" ],
            "nullable" : true
          },
          "disabled_schedule" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/WeeklyMinuteIntervalType"
            },
            "nullable" : true
          },
          "disabled_schedule_inverted" : {
            "type" : "boolean",
            "nullable" : true
          },
          "disabled_schedule_uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "engagement_counting" : {
            "type" : "boolean",
            "nullable" : true
          },
          "exposure_level" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "face_ai_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "face_counting" : {
            "type" : "boolean",
            "nullable" : true
          },
          "face_counting_nonunique" : {
            "type" : "boolean",
            "nullable" : true
          },
          "face_id_ai_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "face_match_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "face_recognition" : {
            "type" : "boolean",
            "nullable" : true
          },
          "fisheye_display_mode" : {
            "$ref" : "#/components/schemas/FisheyeDisplayMode"
          },
          "floorplan_homography" : {
            "type" : "array",
            "items" : {
              "type" : "array",
              "items" : {
                "type" : "number",
                "format" : "double",
                "nullable" : true
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "hdr_enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "high_res_detection" : {
            "type" : "boolean",
            "nullable" : true
          },
          "human_detection" : {
            "type" : "boolean",
            "nullable" : true
          },
          "human_loitering" : {
            "type" : "boolean",
            "nullable" : true
          },
          "human_loitering_settings" : {
            "$ref" : "#/components/schemas/CameraHumanLoiteringSettingsType"
          },
          "img_brightness" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "img_contrast" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "img_saturation" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "img_sharpness" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "licenseplate_detection" : {
            "type" : "boolean",
            "nullable" : true
          },
          "lpr_ai_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "max_detections_per_frame" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "metering_config" : {
            "$ref" : "#/components/schemas/CameraMeteringConfigType"
          },
          "motion_grid_disabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "motion_grid_window_sec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "motion_lightweight_disabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "motion_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "motor_config" : {
            "$ref" : "#/components/schemas/CameraMotorConfigType"
          },
          "mounting_direction" : {
            "type" : "string",
            "enum" : [ "DOWN", "UP", "SIDEWAYS", "UNKNOWN" ],
            "nullable" : true
          },
          "new_motion_feature_flag" : {
            "type" : "boolean",
            "nullable" : true
          },
          "night_exposure_level" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "night_img_brightness" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "night_img_contrast" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "night_img_saturation" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "night_img_sharpness" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "night_metering_config" : {
            "$ref" : "#/components/schemas/CameraMeteringConfigType"
          },
          "night_sensor_gain_max" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "night_shutter_time_max" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "night_shutter_time_min" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "obj_ai_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "object_search" : {
            "type" : "boolean",
            "nullable" : true
          },
          "people_counting" : {
            "type" : "boolean",
            "nullable" : true
          },
          "person_ai_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "pose_detection" : {
            "type" : "boolean",
            "nullable" : true
          },
          "ppe_detection" : {
            "type" : "boolean",
            "nullable" : true
          },
          "privacy_window_polygons" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RegionPolygonType"
            },
            "nullable" : true
          },
          "privacy_windows" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PermyriadRect"
            },
            "nullable" : true
          },
          "ptz_config" : {
            "$ref" : "#/components/schemas/CameraPTZConfigType"
          },
          "region_for_occupancy" : {
            "$ref" : "#/components/schemas/RegionConfigType"
          },
          "region_of_interest" : {
            "$ref" : "#/components/schemas/RegionConfigType"
          },
          "region_of_interest_groups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RegionOfInterestGroup"
            },
            "nullable" : true
          },
          "resolution" : {
            "$ref" : "#/components/schemas/Deviceconfig_settings_ExternalVideoResolution"
          },
          "rotation" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "segment_max_bytes" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "sensor_gain_max" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "shutter_time_max" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "shutter_time_min" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "snapshot_height" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "snapshot_interval_secs" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "target_ai_fps" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "thumbstrip_disabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "tile_views" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DewarpedView"
            },
            "nullable" : true
          },
          "timelapse" : {
            "type" : "boolean",
            "nullable" : true
          },
          "upload_all_detections" : {
            "type" : "boolean",
            "nullable" : true
          },
          "use_onboard_ai" : {
            "type" : "boolean",
            "nullable" : true
          },
          "use_onboard_lpr" : {
            "type" : "boolean",
            "nullable" : true
          },
          "use_pilot_face_id" : {
            "type" : "boolean",
            "nullable" : true
          },
          "vehicle_ai_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "vehicle_counting" : {
            "type" : "boolean",
            "nullable" : true
          },
          "vehicle_detection" : {
            "type" : "boolean",
            "nullable" : true
          },
          "video_persist_disabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "visual_tamper_config" : {
            "$ref" : "#/components/schemas/CameraVisualTamperConfigType"
          },
          "wdr_enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "wdr_strength" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "zero_motion_video_bitrate_percent" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "zero_motion_video_quality" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Deviceconfig_settings_ExternalVideoResolution" : {
        "type" : "object",
        "properties" : {
          "height" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "width" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Deviceconfig_settings_ExternalVideoSettingsSelectiveUpdate" : {
        "type" : "object",
        "description" : "Update Video Settings",
        "properties" : {
          "blocked_debounce_time_ms" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "blocked_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "char_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "dewarpMode" : {
            "type" : "string",
            "enum" : [ "NO_TRANSFORM", "NORMAL", "PANORAMA", "SUB_REGION", "VERTICAL_PANORAMA", "TRANSVERSE_MERCATOR", "MERCATOR", "EQUIRECTANGULAR" ],
            "nullable" : true
          },
          "disabled_schedule" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/WeeklyMinuteIntervalType"
            },
            "nullable" : true
          },
          "disabled_schedule_inverted" : {
            "type" : "boolean",
            "nullable" : true
          },
          "disabled_schedule_uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "exposure_level" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "fisheye_display_mode" : {
            "$ref" : "#/components/schemas/FisheyeDisplayMode"
          },
          "floorplan_homography" : {
            "type" : "array",
            "items" : {
              "type" : "array",
              "items" : {
                "type" : "number",
                "format" : "double",
                "nullable" : true
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "hdr_enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "high_res_detection" : {
            "type" : "boolean",
            "nullable" : true
          },
          "human_detection" : {
            "type" : "boolean",
            "nullable" : true
          },
          "human_loitering" : {
            "type" : "boolean",
            "nullable" : true
          },
          "human_loitering_settings" : {
            "$ref" : "#/components/schemas/CameraHumanLoiteringSettingsType"
          },
          "img_brightness" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "img_contrast" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "img_saturation" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "img_sharpness" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "max_detections_per_frame" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "metering_config" : {
            "$ref" : "#/components/schemas/CameraMeteringConfigType"
          },
          "motor_config" : {
            "$ref" : "#/components/schemas/CameraMotorConfigType"
          },
          "mounting_direction" : {
            "type" : "string",
            "enum" : [ "DOWN", "UP", "SIDEWAYS", "UNKNOWN" ],
            "nullable" : true
          },
          "night_exposure_level" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "night_img_brightness" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "night_img_contrast" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "night_img_saturation" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "night_img_sharpness" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "night_metering_config" : {
            "$ref" : "#/components/schemas/CameraMeteringConfigType"
          },
          "night_sensor_gain_max" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "night_shutter_time_max" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "night_shutter_time_min" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "object_search" : {
            "type" : "boolean",
            "nullable" : true
          },
          "privacy_window_polygons" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RegionPolygonType"
            },
            "nullable" : true
          },
          "privacy_windows" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PermyriadRect"
            },
            "nullable" : true
          },
          "ptz_config" : {
            "$ref" : "#/components/schemas/CameraPTZConfigType"
          },
          "region_for_occupancy" : {
            "$ref" : "#/components/schemas/RegionConfigType"
          },
          "region_of_interest" : {
            "$ref" : "#/components/schemas/RegionConfigType"
          },
          "region_of_interest_groups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RegionOfInterestGroup"
            },
            "nullable" : true
          },
          "resolution" : {
            "$ref" : "#/components/schemas/Deviceconfig_settings_ExternalVideoResolution"
          },
          "rotation" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "segment_max_bytes" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "sensor_gain_max" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "shutter_time_max" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "shutter_time_min" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "snapshot_height" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "snapshot_interval_secs" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "tile_views" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DewarpedView"
            },
            "nullable" : true
          },
          "updatedSetMethodMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "boolean",
              "nullable" : true
            },
            "nullable" : true
          },
          "upload_all_detections" : {
            "type" : "boolean",
            "nullable" : true
          },
          "use_onboard_lpr" : {
            "type" : "boolean",
            "nullable" : true
          },
          "vehicle_detection" : {
            "type" : "boolean",
            "nullable" : true
          },
          "video_persist_disabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "wdr_enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "wdr_strength" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "zero_motion_video_bitrate_percent" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Deviceconfig_settings_IntRange" : {
        "type" : "object",
        "properties" : {
          "max" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "min" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Deviceconfig_settings_VideoConfigurationDefault" : {
        "type" : "object",
        "description" : "Map of hardware variations to default video configurations",
        "properties" : {
          "humanDetection" : {
            "type" : "boolean",
            "nullable" : true
          },
          "resolution" : {
            "$ref" : "#/components/schemas/Deviceconfig_settings_ExternalVideoResolution"
          },
          "segmentMaxBytes" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "sensorGainMax" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "shutterTimeMin" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "vehicleDetection" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Deviceconfig_settings_VideoConfigurationOption" : {
        "type" : "object",
        "description" : "Map of hardware variations to available video configuration options",
        "properties" : {
          "maxBitrateRange" : {
            "$ref" : "#/components/schemas/Deviceconfig_settings_IntRange"
          },
          "maxZoomPercent" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "resolution" : {
            "$ref" : "#/components/schemas/Deviceconfig_settings_ExternalVideoResolution"
          },
          "wdrRange" : {
            "$ref" : "#/components/schemas/Deviceconfig_settings_IntRange"
          }
        }
      },
      "Deviceconfig_userconfig_ExternalReadableFacetedUserConfig" : {
        "type" : "object",
        "description" : "Device's faceted user configuration",
        "properties" : {
          "audioFacetSettings" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Deviceconfig_settings_ExternalReadableAudioSettings"
            },
            "nullable" : true
          },
          "buttonSettings" : {
            "$ref" : "#/components/schemas/Deviceconfig_settings_ExternalReadableButtonSettings"
          },
          "climateSettings" : {
            "$ref" : "#/components/schemas/ClimateSettings"
          },
          "deviceSettings" : {
            "$ref" : "#/components/schemas/Deviceconfig_settings_ExternalReadableDeviceSettings"
          },
          "deviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "deviceVideoSettings" : {
            "$ref" : "#/components/schemas/Deviceconfig_settings_ExternalReadableDeviceVideoSettings"
          },
          "doorControllerSettings" : {
            "$ref" : "#/components/schemas/Deviceconfig_settings_ExternalReadableDoorControllerSettings"
          },
          "doorReaderSettings" : {
            "$ref" : "#/components/schemas/DoorReaderSettings"
          },
          "doorSensorSettings" : {
            "$ref" : "#/components/schemas/DoorSensorSettings"
          },
          "environmentalGatewaySettings" : {
            "$ref" : "#/components/schemas/EnvironmentalGatewaySettings"
          },
          "lastModified" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "tamperSettings" : {
            "$ref" : "#/components/schemas/TamperSettings"
          },
          "thirdPartyCameraSettings" : {
            "$ref" : "#/components/schemas/ThirdPartyCameraSettings"
          },
          "videoDoorbellSettings" : {
            "$ref" : "#/components/schemas/VideoDoorbellSettings"
          },
          "videoFacetSettings" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Deviceconfig_settings_ExternalReadableVideoSettings"
            },
            "nullable" : true
          }
        }
      },
      "Deviceconfig_userconfig_ExternalUpdateableFacetedUserConfig" : {
        "type" : "object",
        "description" : "Configuration updates to apply to the device",
        "properties" : {
          "audioFacetSettings" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Deviceconfig_settings_ExternalAudioSettingsSelectiveUpdate"
            },
            "description" : "Update Audio settings",
            "nullable" : true
          },
          "buttonSettings" : {
            "$ref" : "#/components/schemas/ButtonSettingsSelectiveUpdate"
          },
          "climateSettings" : {
            "$ref" : "#/components/schemas/ClimateSettingsSelectiveUpdate"
          },
          "deviceSettings" : {
            "$ref" : "#/components/schemas/Deviceconfig_settings_ExternalDeviceSettingsSelectiveUpdate"
          },
          "deviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "deviceVideoSettings" : {
            "$ref" : "#/components/schemas/DeviceVideoSettingsSelectiveUpdate"
          },
          "doorControllerSettings" : {
            "$ref" : "#/components/schemas/Deviceconfig_settings_ExternalDoorControllerSettingsSelectiveUpdate"
          },
          "doorReaderSettings" : {
            "$ref" : "#/components/schemas/DoorReaderSettingsSelectiveUpdate"
          },
          "doorSensorSettings" : {
            "$ref" : "#/components/schemas/DoorSensorSettingsSelectiveUpdate"
          },
          "environmentalGatewaySettings" : {
            "$ref" : "#/components/schemas/EnvironmentalGatewaySettingsSelectiveUpdate"
          },
          "tamperSettings" : {
            "$ref" : "#/components/schemas/TamperSettingsSelectiveUpdate"
          },
          "videoDoorbellSettings" : {
            "$ref" : "#/components/schemas/VideoDoorbellSettingsSelectiveUpdate"
          },
          "videoFacetSettings" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Deviceconfig_settings_ExternalVideoSettingsSelectiveUpdate"
            },
            "description" : "Update Video Settings",
            "nullable" : true
          }
        }
      },
      "Deviceconfig_userconfig_IExternalReadableAudioVideoUserConfig" : {
        "type" : "object",
        "description" : "Doorbell camera configuration settings",
        "properties" : {
          "ai_dewarp_config" : {
            "$ref" : "#/components/schemas/CameraAiDewarpConfigType"
          },
          "audio_aec_via_software" : {
            "type" : "boolean",
            "nullable" : true
          },
          "audio_analysis_enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "audio_external_mic_boost" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "audio_external_mic_volume" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "audio_external_speaker_volume" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "audio_internal_mic_aec_enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "audio_internal_mic_boost" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "audio_internal_mic_volume" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "audio_internal_speaker_volume" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "audio_min_echo_amplitude" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "audio_playback_gain_percent" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "audio_record" : {
            "type" : "boolean",
            "nullable" : true
          },
          "audio_supported" : {
            "type" : "boolean",
            "nullable" : true
          },
          "audio_use_external_mic" : {
            "type" : "boolean",
            "nullable" : true
          },
          "audio_use_external_speaker" : {
            "type" : "boolean",
            "nullable" : true
          },
          "audio_use_internal_speaker" : {
            "type" : "boolean",
            "nullable" : true
          },
          "bandwidth_reports_disabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "behavior_detection" : {
            "type" : "boolean",
            "nullable" : true
          },
          "blocked_debounce_time_ms" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "blocked_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "char_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "cloud_archive_days" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "cloud_archive_upload_schedule" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/WeeklyMinuteIntervalType"
            },
            "nullable" : true
          },
          "cloud_archive_upload_schedule_inverted" : {
            "type" : "boolean",
            "nullable" : true
          },
          "cloud_archive_upload_schedule_uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "color_detection" : {
            "type" : "boolean",
            "nullable" : true
          },
          "con_human_filter" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "con_vehicle_filter" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "cross_counting" : {
            "type" : "boolean",
            "nullable" : true
          },
          "cross_counting_settings" : {
            "$ref" : "#/components/schemas/CameraCrossCountingSettingsType"
          },
          "deviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "device_mic_enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "device_near_audio_silenced" : {
            "type" : "boolean",
            "nullable" : true
          },
          "device_speaker_enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "dewarpMode" : {
            "type" : "string",
            "enum" : [ "NO_TRANSFORM", "NORMAL", "PANORAMA", "SUB_REGION", "VERTICAL_PANORAMA", "TRANSVERSE_MERCATOR", "MERCATOR", "EQUIRECTANGULAR" ],
            "nullable" : true
          },
          "disabled_schedule" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/WeeklyMinuteIntervalType"
            },
            "nullable" : true
          },
          "disabled_schedule_inverted" : {
            "type" : "boolean",
            "nullable" : true
          },
          "disabled_schedule_uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "engagement_counting" : {
            "type" : "boolean",
            "nullable" : true
          },
          "exposure_level" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "face_ai_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "face_counting" : {
            "type" : "boolean",
            "nullable" : true
          },
          "face_counting_nonunique" : {
            "type" : "boolean",
            "nullable" : true
          },
          "face_id_ai_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "face_match_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "face_recognition" : {
            "type" : "boolean",
            "nullable" : true
          },
          "firmware_dev_settings" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "fisheye_display_mode" : {
            "$ref" : "#/components/schemas/FisheyeDisplayMode"
          },
          "floorplan_homography" : {
            "type" : "array",
            "items" : {
              "type" : "array",
              "items" : {
                "type" : "number",
                "format" : "double",
                "nullable" : true
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "frontendEqualizerHighShelf" : {
            "$ref" : "#/components/schemas/FrontendEqualizerSettings"
          },
          "frontendEqualizerLowShelf" : {
            "$ref" : "#/components/schemas/FrontendEqualizerSettings"
          },
          "frontendEqualizerPeaking1" : {
            "$ref" : "#/components/schemas/FrontendEqualizerSettings"
          },
          "frontendEqualizerPeaking2" : {
            "$ref" : "#/components/schemas/FrontendEqualizerSettings"
          },
          "frontendEqualizerPeaking3" : {
            "$ref" : "#/components/schemas/FrontendEqualizerSettings"
          },
          "frontendNoiseSuppression" : {
            "type" : "boolean",
            "nullable" : true
          },
          "hdr_enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "high_res_detection" : {
            "type" : "boolean",
            "nullable" : true
          },
          "human_detection" : {
            "type" : "boolean",
            "nullable" : true
          },
          "human_loitering" : {
            "type" : "boolean",
            "nullable" : true
          },
          "human_loitering_settings" : {
            "$ref" : "#/components/schemas/CameraHumanLoiteringSettingsType"
          },
          "img_brightness" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "img_contrast" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "img_saturation" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "img_sharpness" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "lastModified" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "led_mode_blink_period_ms" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "led_mode_when_active" : {
            "type" : "string",
            "enum" : [ "LED_OFF", "LED_RED_SOLID", "LED_GREEN_SOLID", "LED_ORANGE_SOLID", "LED_RED_BLINK", "LED_GREEN_BLINK", "LED_ORANGE_BLINK", "LED_NORMAL" ],
            "nullable" : true
          },
          "led_mode_when_inactive" : {
            "type" : "string",
            "enum" : [ "LED_OFF", "LED_RED_SOLID", "LED_GREEN_SOLID", "LED_ORANGE_SOLID", "LED_RED_BLINK", "LED_GREEN_BLINK", "LED_ORANGE_BLINK", "LED_NORMAL" ],
            "nullable" : true
          },
          "led_stealth_mode" : {
            "type" : "boolean",
            "nullable" : true
          },
          "licenseplate_detection" : {
            "type" : "boolean",
            "nullable" : true
          },
          "lightweight_detection_disabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "live_license_invalid" : {
            "type" : "boolean",
            "nullable" : true
          },
          "lpr_ai_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "max_detections_per_frame" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "max_event_duration_ms" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "media_ttl_minutes" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "metering_config" : {
            "$ref" : "#/components/schemas/CameraMeteringConfigType"
          },
          "motion_grid_disabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "motion_grid_window_sec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "motion_lightweight_disabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "motion_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "motor_config" : {
            "$ref" : "#/components/schemas/CameraMotorConfigType"
          },
          "mounting_direction" : {
            "type" : "string",
            "enum" : [ "DOWN", "UP", "SIDEWAYS", "UNKNOWN" ],
            "nullable" : true
          },
          "new_motion_feature_flag" : {
            "type" : "boolean",
            "nullable" : true
          },
          "night_exposure_level" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "night_img_brightness" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "night_img_contrast" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "night_img_saturation" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "night_img_sharpness" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "night_metering_config" : {
            "$ref" : "#/components/schemas/CameraMeteringConfigType"
          },
          "night_sensor_gain_max" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "night_shutter_time_max" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "night_shutter_time_min" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "obj_ai_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "object_search" : {
            "type" : "boolean",
            "nullable" : true
          },
          "on_demand_license_invalid" : {
            "type" : "boolean",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "people_counting" : {
            "type" : "boolean",
            "nullable" : true
          },
          "person_ai_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "pose_detection" : {
            "type" : "boolean",
            "nullable" : true
          },
          "ppe_detection" : {
            "type" : "boolean",
            "nullable" : true
          },
          "privacy_window_polygons" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RegionPolygonType"
            },
            "nullable" : true
          },
          "privacy_windows" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PermyriadRect"
            },
            "nullable" : true
          },
          "ptz_config" : {
            "$ref" : "#/components/schemas/CameraPTZConfigType"
          },
          "region_for_occupancy" : {
            "$ref" : "#/components/schemas/RegionConfigType"
          },
          "region_of_interest" : {
            "$ref" : "#/components/schemas/RegionConfigType"
          },
          "region_of_interest_groups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RegionOfInterestGroup"
            },
            "nullable" : true
          },
          "resolution" : {
            "$ref" : "#/components/schemas/Deviceconfig_settings_ExternalVideoResolution"
          },
          "rotation" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "segment_max_bytes" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "sensor_gain_max" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "shutter_time_max" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "shutter_time_min" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "snapshot_height" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "snapshot_interval_secs" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "snapshot_upload_target" : {
            "type" : "string",
            "enum" : [ "0", "1", "2" ],
            "nullable" : true
          },
          "storage_target_free_megabytes" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "storage_target_free_space_permyriad" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "target_ai_fps" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "thumbstrip_disabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "thumbstrip_upload_target" : {
            "type" : "string",
            "enum" : [ "0", "1", "2" ],
            "nullable" : true
          },
          "tile_views" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DewarpedView"
            },
            "nullable" : true
          },
          "timelapse" : {
            "type" : "boolean",
            "nullable" : true
          },
          "upload_all_detections" : {
            "type" : "boolean",
            "nullable" : true
          },
          "use_onboard_ai" : {
            "type" : "boolean",
            "nullable" : true
          },
          "use_onboard_lpr" : {
            "type" : "boolean",
            "nullable" : true
          },
          "use_pilot_face_id" : {
            "type" : "boolean",
            "nullable" : true
          },
          "vehicle_ai_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "vehicle_counting" : {
            "type" : "boolean",
            "nullable" : true
          },
          "vehicle_detection" : {
            "type" : "boolean",
            "nullable" : true
          },
          "video_persist_disabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "visual_tamper_config" : {
            "$ref" : "#/components/schemas/CameraVisualTamperConfigType"
          },
          "wdr_enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "wdr_strength" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "zero_motion_video_bitrate_percent" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "zero_motion_video_quality" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Deviceconfig_userconfig_IExternalReadableDoorControllerUserConfig" : {
        "type" : "object",
        "description" : "Door controller configuration settings",
        "properties" : {
          "autocomponentize_readers" : {
            "type" : "boolean",
            "nullable" : true
          },
          "autoregister_readers" : {
            "type" : "boolean",
            "nullable" : true
          },
          "bandwidth_reports_disabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "cloud_archive_days" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "cloud_archive_upload_schedule" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/WeeklyMinuteIntervalType"
            },
            "nullable" : true
          },
          "cloud_archive_upload_schedule_inverted" : {
            "type" : "boolean",
            "nullable" : true
          },
          "cloud_archive_upload_schedule_uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "deviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "firmware_dev_settings" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "flip_display_orientation" : {
            "type" : "boolean",
            "nullable" : true
          },
          "lastModified" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "led_mode_blink_period_ms" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "led_mode_when_active" : {
            "type" : "string",
            "enum" : [ "LED_OFF", "LED_RED_SOLID", "LED_GREEN_SOLID", "LED_ORANGE_SOLID", "LED_RED_BLINK", "LED_GREEN_BLINK", "LED_ORANGE_BLINK", "LED_NORMAL" ],
            "nullable" : true
          },
          "led_mode_when_inactive" : {
            "type" : "string",
            "enum" : [ "LED_OFF", "LED_RED_SOLID", "LED_GREEN_SOLID", "LED_ORANGE_SOLID", "LED_RED_BLINK", "LED_GREEN_BLINK", "LED_ORANGE_BLINK", "LED_NORMAL" ],
            "nullable" : true
          },
          "led_stealth_mode" : {
            "type" : "boolean",
            "nullable" : true
          },
          "lightweight_detection_disabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "live_license_invalid" : {
            "type" : "boolean",
            "nullable" : true
          },
          "max_event_duration_ms" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "media_ttl_minutes" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "on_demand_license_invalid" : {
            "type" : "boolean",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "pressure_switch_tamper_normally_open" : {
            "type" : "boolean",
            "nullable" : true
          },
          "proximity_sensor_tamper_disabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "proximity_sensor_tamper_distance_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "snapshot_upload_target" : {
            "type" : "string",
            "enum" : [ "0", "1", "2" ],
            "nullable" : true
          },
          "storage_target_free_megabytes" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "storage_target_free_space_permyriad" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "thumbstrip_upload_target" : {
            "type" : "string",
            "enum" : [ "0", "1", "2" ],
            "nullable" : true
          }
        }
      },
      "Deviceconfig_userconfig_IExternalUpdateableAudioVideoUserConfig" : {
        "type" : "object",
        "description" : "Audio/video user configuration update",
        "properties" : {
          "audio_aec_via_software" : {
            "type" : "boolean",
            "nullable" : true
          },
          "audio_external_mic_boost" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "audio_external_mic_volume" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "audio_external_speaker_volume" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "audio_internal_mic_aec_enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "audio_internal_mic_boost" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "audio_internal_mic_volume" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "audio_internal_speaker_volume" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "audio_min_echo_amplitude" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "audio_playback_gain_percent" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "audio_record" : {
            "type" : "boolean",
            "nullable" : true
          },
          "audio_supported" : {
            "type" : "boolean",
            "nullable" : true
          },
          "audio_use_external_mic" : {
            "type" : "boolean",
            "nullable" : true
          },
          "audio_use_external_speaker" : {
            "type" : "boolean",
            "nullable" : true
          },
          "audio_use_internal_speaker" : {
            "type" : "boolean",
            "nullable" : true
          },
          "bandwidth_reports_disabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "blocked_debounce_time_ms" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "blocked_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "char_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "deviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "device_mic_enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "device_near_audio_silenced" : {
            "type" : "boolean",
            "nullable" : true
          },
          "device_speaker_enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "dewarpMode" : {
            "type" : "string",
            "enum" : [ "NO_TRANSFORM", "NORMAL", "PANORAMA", "SUB_REGION", "VERTICAL_PANORAMA", "TRANSVERSE_MERCATOR", "MERCATOR", "EQUIRECTANGULAR" ],
            "nullable" : true
          },
          "disabled_schedule" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/WeeklyMinuteIntervalType"
            },
            "nullable" : true
          },
          "disabled_schedule_inverted" : {
            "type" : "boolean",
            "nullable" : true
          },
          "disabled_schedule_uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "exposure_level" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "firmware_dev_settings" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "fisheye_display_mode" : {
            "$ref" : "#/components/schemas/FisheyeDisplayMode"
          },
          "floorplan_homography" : {
            "type" : "array",
            "items" : {
              "type" : "array",
              "items" : {
                "type" : "number",
                "format" : "double",
                "nullable" : true
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "frontendEqualizerHighShelf" : {
            "$ref" : "#/components/schemas/FrontendEqualizerSettings"
          },
          "frontendEqualizerLowShelf" : {
            "$ref" : "#/components/schemas/FrontendEqualizerSettings"
          },
          "frontendEqualizerPeaking1" : {
            "$ref" : "#/components/schemas/FrontendEqualizerSettings"
          },
          "frontendEqualizerPeaking2" : {
            "$ref" : "#/components/schemas/FrontendEqualizerSettings"
          },
          "frontendEqualizerPeaking3" : {
            "$ref" : "#/components/schemas/FrontendEqualizerSettings"
          },
          "frontendNoiseSuppression" : {
            "type" : "boolean",
            "nullable" : true
          },
          "hdr_enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "high_res_detection" : {
            "type" : "boolean",
            "nullable" : true
          },
          "human_detection" : {
            "type" : "boolean",
            "nullable" : true
          },
          "human_loitering" : {
            "type" : "boolean",
            "nullable" : true
          },
          "human_loitering_settings" : {
            "$ref" : "#/components/schemas/CameraHumanLoiteringSettingsType"
          },
          "img_brightness" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "img_contrast" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "img_saturation" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "img_sharpness" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "lastModified" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "led_mode_blink_period_ms" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "led_mode_when_active" : {
            "type" : "string",
            "enum" : [ "LED_OFF", "LED_RED_SOLID", "LED_GREEN_SOLID", "LED_ORANGE_SOLID", "LED_RED_BLINK", "LED_GREEN_BLINK", "LED_ORANGE_BLINK", "LED_NORMAL" ],
            "nullable" : true
          },
          "led_mode_when_inactive" : {
            "type" : "string",
            "enum" : [ "LED_OFF", "LED_RED_SOLID", "LED_GREEN_SOLID", "LED_ORANGE_SOLID", "LED_RED_BLINK", "LED_GREEN_BLINK", "LED_ORANGE_BLINK", "LED_NORMAL" ],
            "nullable" : true
          },
          "led_stealth_mode" : {
            "type" : "boolean",
            "nullable" : true
          },
          "lightweight_detection_disabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "live_license_invalid" : {
            "type" : "boolean",
            "nullable" : true
          },
          "max_detections_per_frame" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "media_ttl_minutes" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "metering_config" : {
            "$ref" : "#/components/schemas/CameraMeteringConfigType"
          },
          "motor_config" : {
            "$ref" : "#/components/schemas/CameraMotorConfigType"
          },
          "mounting_direction" : {
            "type" : "string",
            "enum" : [ "DOWN", "UP", "SIDEWAYS", "UNKNOWN" ],
            "nullable" : true
          },
          "night_exposure_level" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "night_img_brightness" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "night_img_contrast" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "night_img_saturation" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "night_img_sharpness" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "night_metering_config" : {
            "$ref" : "#/components/schemas/CameraMeteringConfigType"
          },
          "night_sensor_gain_max" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "night_shutter_time_max" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "night_shutter_time_min" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "object_search" : {
            "type" : "boolean",
            "nullable" : true
          },
          "on_demand_license_invalid" : {
            "type" : "boolean",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "privacy_window_polygons" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RegionPolygonType"
            },
            "nullable" : true
          },
          "privacy_windows" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PermyriadRect"
            },
            "nullable" : true
          },
          "ptz_config" : {
            "$ref" : "#/components/schemas/CameraPTZConfigType"
          },
          "region_for_occupancy" : {
            "$ref" : "#/components/schemas/RegionConfigType"
          },
          "region_of_interest" : {
            "$ref" : "#/components/schemas/RegionConfigType"
          },
          "region_of_interest_groups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RegionOfInterestGroup"
            },
            "nullable" : true
          },
          "resolution" : {
            "$ref" : "#/components/schemas/Deviceconfig_settings_ExternalVideoResolution"
          },
          "rotation" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "segment_max_bytes" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "sensor_gain_max" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "shutter_time_max" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "shutter_time_min" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "snapshot_height" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "snapshot_interval_secs" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "snapshot_upload_target" : {
            "type" : "string",
            "enum" : [ "0", "1", "2" ],
            "nullable" : true
          },
          "storage_target_free_megabytes" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "storage_target_free_space_permyriad" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "thumbstrip_upload_target" : {
            "type" : "string",
            "enum" : [ "0", "1", "2" ],
            "nullable" : true
          },
          "tile_views" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DewarpedView"
            },
            "nullable" : true
          },
          "upload_all_detections" : {
            "type" : "boolean",
            "nullable" : true
          },
          "use_onboard_lpr" : {
            "type" : "boolean",
            "nullable" : true
          },
          "vehicle_detection" : {
            "type" : "boolean",
            "nullable" : true
          },
          "video_persist_disabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "wdr_enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "wdr_strength" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "zero_motion_video_bitrate_percent" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Deviceconfig_userconfig_IExternalUpdateableButtonUserConfig" : {
        "type" : "object",
        "description" : "Configuration update for the button sensor",
        "properties" : {
          "button_emergency_onsite_contact" : {
            "$ref" : "#/components/schemas/EmergencyContact"
          },
          "button_test_mode_enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "deviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "lastModified" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Deviceconfig_userconfig_IExternalUpdateableDoorControllerUserConfig" : {
        "type" : "object",
        "description" : "Configuration update for the door controller",
        "properties" : {
          "autocomponentize_readers" : {
            "type" : "boolean",
            "nullable" : true
          },
          "autoregister_readers" : {
            "type" : "boolean",
            "nullable" : true
          },
          "bandwidth_reports_disabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "deviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "firmware_dev_settings" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "flip_display_orientation" : {
            "type" : "boolean",
            "nullable" : true
          },
          "lastModified" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "led_mode_blink_period_ms" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "led_mode_when_active" : {
            "type" : "string",
            "enum" : [ "LED_OFF", "LED_RED_SOLID", "LED_GREEN_SOLID", "LED_ORANGE_SOLID", "LED_RED_BLINK", "LED_GREEN_BLINK", "LED_ORANGE_BLINK", "LED_NORMAL" ],
            "nullable" : true
          },
          "led_mode_when_inactive" : {
            "type" : "string",
            "enum" : [ "LED_OFF", "LED_RED_SOLID", "LED_GREEN_SOLID", "LED_ORANGE_SOLID", "LED_RED_BLINK", "LED_GREEN_BLINK", "LED_ORANGE_BLINK", "LED_NORMAL" ],
            "nullable" : true
          },
          "led_stealth_mode" : {
            "type" : "boolean",
            "nullable" : true
          },
          "lightweight_detection_disabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "live_license_invalid" : {
            "type" : "boolean",
            "nullable" : true
          },
          "media_ttl_minutes" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "on_demand_license_invalid" : {
            "type" : "boolean",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "pressure_switch_tamper_normally_open" : {
            "type" : "boolean",
            "nullable" : true
          },
          "proximity_sensor_tamper_disabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "proximity_sensor_tamper_distance_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "snapshot_upload_target" : {
            "type" : "string",
            "enum" : [ "0", "1", "2" ],
            "nullable" : true
          },
          "storage_target_free_megabytes" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "storage_target_free_space_permyriad" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "thumbstrip_upload_target" : {
            "type" : "string",
            "enum" : [ "0", "1", "2" ],
            "nullable" : true
          }
        }
      },
      "DewarpedView" : {
        "type" : "object",
        "properties" : {
          "aspectRatio" : {
            "$ref" : "#/components/schemas/AspectRatio"
          },
          "pitchDegrees" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "rollDegrees" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "verticalFieldOfViewDegrees" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "yawDegrees" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          }
        }
      },
      "DiagnosticEventType" : {
        "type" : "object",
        "description" : "List of diagnostic events",
        "properties" : {
          "activity" : {
            "type" : "string",
            "enum" : [ "CAMERA_CONNECTED", "CAMERA_DISCONNECTED", "STARTUP", "GATEWAY_CONNECTED", "GATEWAY_DISCONNECTED", "UPDATE_STARTED", "UPDATE_FIRMWARE_DOWNLOADED", "UPDATE_FIRMWARE_APPLIED", "UPDATE_STARTING_REBOOT", "UPDATE_FAILED_MD5_MISMATCH", "UPDATE_FAILED_ACCESS_DENIED", "UPDATE_FAILED_MITM", "UPDATE_FAILED_CONNNECTION_REFUSED", "UPDATE_FAILED_CONNNECTION_TIMEOUT", "UPDATE_FAILED_CONNECTION_REFUSED", "UPDATE_FAILED_CONNECTION_TIMEOUT", "UPDATE_FAILED_DNS_FAILURE", "UPDATE_RUNNING", "BLE_CONNECTED", "BLE_CONNECTION_FAILED", "BLE_DISCONNECTED", "BLE_OP_SUCCESS", "BLE_OP_FAILURE", "UPLOAD_CLIP_SUCCESS", "UPLOAD_CLIP_FAILURE", "NOTIFICATION_FAILURE", "USB_FAILURE_REBOOT", "PERSISTENT_STORAGE_FAILURE", "PING", "FORCED_REBOOT", "AUTO_REBOOT", "AUDIO_HARDWARE_NOT_DETECTED", "ENCRYPTED_CONTAINER_FAILURE_CREATE", "ENCRYPTED_CONTAINER_FAILURE_OPEN", "ENCRYPTED_CONTAINER_FAILURE_MOUNT", "VIDEO_HARDWARE_FAILURE", "WIFI_NETWORK_CHANGED", "AI_ENGINE_DOWNLOADED", "AI_ENGINE_DOWNLOAD_FAILED_MD5_MISMATCH", "AI_ENGINE_CONFIGURED", "AI_ENGINE_CONFIGURATION_FAILED", "MITM_FAILURE", "SERVER_RECONNECT", "AP_CHANGED", "WATCHDOG_KILLED_AGENT", "WATCHDOG_DID_RESET", "CLIMATE_OFFLINE", "CLIMATE_ONLINE", "CLIMATE_LOW_BATTERY", "CLIMATE_PROBE_CONNECTED", "CLIMATE_PROBE_DISCONNECTED", "DOOR_OFFLINE", "DOOR_ONLINE", "DOOR_LOW_BATTERY", "OCCUPANCY_SENSOR_ONLINE", "OCCUPANCY_SENSOR_OFFLINE", "OCCUPANCY_SENSOR_LOW_BATTERY", "BUTTON_OFFLINE", "BUTTON_ONLINE", "BUTTON_LOW_BATTERY", "PROXIMITY_LOW_BATTERY", "DOOR_CONTROLLER_CONNECTED", "DOOR_CONTROLLER_DISCONNECTED", "APERIO_LOW_BATTERY", "APERIO_FLAT_BATTERY", "APERIO_OK_BATTERY", "APERIO_GW_CONNECTED", "APERIO_GW_DISCONNECTED", "BADGE_READER_CONNECTED", "BADGE_READER_DISCONNECTED", "REBOOT", "NETWORK_INTERRUPTION", "OPENPATH_WEBHOOK_FAILURE", "TOAST_WEBHOOK_FAILURE", "KISI_WEBHOOK_FAILURE", "BRIVO_WEBHOOK_FAILURE", "HALO_WEBHOOK_FAILURE", "SALTO_WEBHOOK_FAILURE", "SQUARE_WEBHOOK_FAILURE", "BUTTERFLYMX_WEBHOOK_FAILURE", "ENVOY_WEBHOOK_FAILURE", "GENEA_WEBHOOK_FAILURE", "PRODATAKEY_WEBHOOK_FAILURE", "AMT_WEBHOOK_FAILURE", "PLACEOS_WEBHOOK_FAILURE", "OMNIALERT_WEBHOOK_FAILURE", "FLIC_WEBHOOK_FAILURE", "PIMLOC_WEBHOOK_FAILURE", "NINEONEONECELLULAR_WEBHOOK_FAILURE", "CV_FAILURE", "NFC_HW_FAILURE", "CONFIG_ERROR", "HW_FAILURE", "KEYPAD_ONLINE", "KEYPAD_OFFLINE", "ALM_OVERAGE_APPROACHING", "ALM_OVERAGE_REACHED", "ALM_OVERAGE_EXCEEDED", "ALM_EXCESSIVE_VERIFICATIONS", "ALM_AUTHORITIES_CONTACTED", "ALM_MONITORING_ENABLED", "ALM_MONITORING_DISABLED", "ALM_MONITORING_SETTINGS_CHANGE", "ALM_THREAT_CASE_CLOSED", "ALM_THREAT_DETECTED", "KIOSK_OFFLINE", "KIOSK_ONLINE", "TUNNELED_DEVICE_CONNECTED", "TUNNELED_DEVICE_DISCONNECTED", "SD_CARD_CHANGED", "SUPERVISION_CUT_DETECTED", "SUPERVISION_SHORT_DETECTED", "SUPERVISION_INVALID_SETUP", "THIRD_PARTY_DEVICE_CONNECTED", "THIRD_PARTY_DEVICE_DISCONNECTED", "UNKNOWN" ],
            "nullable" : true
          },
          "apMac" : {
            "type" : "string",
            "nullable" : true
          },
          "asi" : {
            "type" : "string",
            "nullable" : true
          },
          "componentCompositeUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "componentUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "connectionUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "defaultInterface" : {
            "type" : "string",
            "nullable" : true
          },
          "defaultInterfaceMac" : {
            "type" : "string",
            "nullable" : true
          },
          "deviceName" : {
            "type" : "string",
            "nullable" : true
          },
          "deviceType" : {
            "$ref" : "#/components/schemas/DeviceTypeEnum"
          },
          "deviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "firmwareVersion" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "reportingDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "rssi" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "ssid" : {
            "type" : "string",
            "nullable" : true
          },
          "timestamp" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "wifiSignalStrength" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "DiagnosticRuleTriggerType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "deviceLabels" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "nullable" : true
              },
              "nullable" : true
            },
            "deviceUuids" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "RUUID",
                "description" : "base 64 (url-safe) uuid string",
                "example" : "AAAAAAAAAAAAAAAAAAAAAA",
                "nullable" : true
              },
              "nullable" : true
            },
            "diagnosticEvent" : {
              "$ref" : "#/components/schemas/SimpleDiagnosticEventType"
            },
            "locationUuids" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "RUUID",
                "description" : "base 64 (url-safe) uuid string",
                "example" : "AAAAAAAAAAAAAAAAAAAAAA",
                "nullable" : true
              },
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/RuleTriggerTypeEnum"
          }
        }
      },
      "DiceSettings" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabledTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "enablingUser" : {
            "type" : "string",
            "nullable" : true
          },
          "enablingUserUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "DiceType" : {
        "type" : "object",
        "allOf" : [ ],
        "nullable" : true,
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "DiscoveredThirdPartyCameraType" : {
        "type" : "object",
        "description" : "The imported (discovered) third-party camera. This field is populated only if the RTSP URL specified in the import resulted in creation of a new discovery or an addition of a RTSP URL to an existing discovery. It is null, if the RTSP URL already existed or if the import was not successful.",
        "properties" : {
          "codec" : {
            "type" : "string",
            "nullable" : true
          },
          "createdOn" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "ipAddress" : {
            "type" : "string",
            "nullable" : true
          },
          "lastVisibleMs" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "nullable" : true
          },
          "macAddress" : {
            "type" : "string",
            "nullable" : true
          },
          "manufacturer" : {
            "type" : "string",
            "nullable" : true
          },
          "model" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "onvifPassword" : {
            "type" : "string",
            "nullable" : true
          },
          "onvifProfileToken" : {
            "type" : "string",
            "nullable" : true
          },
          "onvifUsername" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "password" : {
            "type" : "string",
            "nullable" : true
          },
          "rtspEndpoints" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RtspEndpoint"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "updatedOn" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "username" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "DoorAjarActivityEventType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "doorAjarThresholdSec" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "activityEvent" : {
            "$ref" : "#/components/schemas/ActivityEnum"
          }
        }
      },
      "DoorAuthFirstInStateEvent" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "acuEventUuid" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "componentCompositeUuid" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "newState" : {
              "$ref" : "#/components/schemas/FirstInFirmwareStatus"
            },
            "originator" : {
              "$ref" : "#/components/schemas/BaseEventOriginator"
            },
            "settingsUuid" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "source" : {
              "$ref" : "#/components/schemas/FirstInSourceEnum"
            },
            "stateChangedAtMs" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "correlationId" : {
            "type" : "string",
            "nullable" : true
          },
          "createdAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEventEnumType"
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "DoorEventType" : {
        "type" : "object",
        "description" : "List of door open/close events for the sensor",
        "properties" : {
          "baseStationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "batteryPercentage" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "bleDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "bleRssi" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "closeBaseStations" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "state" : {
            "type" : "string",
            "enum" : [ "OPEN", "CLOSED", "AJAR" ],
            "nullable" : true
          },
          "stateChanged" : {
            "type" : "boolean",
            "nullable" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "DoorFirstInStateChangeEventReference" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "doorUuidToEventUuidMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          },
          "newState" : {
            "$ref" : "#/components/schemas/FirstInFirmwareStatus"
          },
          "originatingDoorUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "originatingUserUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "originator" : {
            "$ref" : "#/components/schemas/BaseEventOriginator"
          },
          "source" : {
            "$ref" : "#/components/schemas/FirstInSourceEnum"
          },
          "stateChangedAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "DoorLocationLockdownStateEventType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "activatedLockdownPlan" : {
              "$ref" : "#/components/schemas/LockdownPlanReference"
            },
            "activeLockdownPlan" : {
              "$ref" : "#/components/schemas/LockdownPlanReference"
            },
            "acuEventUuid" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "componentCompositeUuid" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "deactivatedLockdownPlan" : {
              "$ref" : "#/components/schemas/LockdownPlanReference"
            },
            "followingTestPlan" : {
              "type" : "boolean",
              "nullable" : true
            },
            "locationLockdownStateChangedAtMillis" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "originator" : {
              "$ref" : "#/components/schemas/BaseEventOriginator"
            },
            "state" : {
              "$ref" : "#/components/schemas/LocationLockdownStateEnumType"
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "correlationId" : {
            "type" : "string",
            "nullable" : true
          },
          "createdAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEventEnumType"
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "DoorLockdownStateEnumType" : {
        "type" : "string",
        "enum" : [ "LOCKED_DOWN", "ACCESS_CONTROLLED", "UNLOCKED", "UNKNOWN" ]
      },
      "DoorLockdownStateEventReference" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "activatedLockdownPlan" : {
            "$ref" : "#/components/schemas/LockdownPlanReference"
          },
          "activeLockdownPlan" : {
            "$ref" : "#/components/schemas/LockdownPlanReference"
          },
          "deactivatedLockdownPlan" : {
            "$ref" : "#/components/schemas/LockdownPlanReference"
          },
          "doorEventUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "doorUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "DoorPolicyType" : {
        "type" : "object",
        "description" : "List of door sensor policies using the schedule",
        "properties" : {
          "defaultAjarThresholdSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "defaultTriggers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ActivityEnum"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "scheduledTriggers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DoorScheduledTriggerType"
            },
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "DoorPositionIndicatorEnumType" : {
        "type" : "string",
        "enum" : [ "integrated", "remote" ]
      },
      "DoorPositionIndicatorPhysicalPortEnumType" : {
        "type" : "string",
        "enum" : [ "GPIO_INPUT", "GPIO_INPUT_SUPERVISED" ]
      },
      "DoorPositionIndicatorPortType" : {
        "type" : "object",
        "properties" : {
          "boardNum" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "portNum" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "portType" : {
            "$ref" : "#/components/schemas/DoorPositionIndicatorPhysicalPortEnumType"
          },
          "supervisionConfiguration" : {
            "$ref" : "#/components/schemas/PortSupervisionConfigurationType"
          }
        }
      },
      "DoorPositionIndicatorShadowType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "state" : {
              "$ref" : "#/components/schemas/DoorPositionIndicatorStateEnumType"
            },
            "stateUpdateEventTimestampMs" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "supervisionState" : {
              "$ref" : "#/components/schemas/SupervisionStateEnumType"
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentShadowEnumType"
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "DoorPositionIndicatorStateChangeEventType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "componentCompositeUuid" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "newState" : {
              "$ref" : "#/components/schemas/DoorPositionIndicatorStateEnumType"
            },
            "newSupervisionState" : {
              "$ref" : "#/components/schemas/SupervisionStateEnumType"
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "correlationId" : {
            "type" : "string",
            "nullable" : true
          },
          "createdAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEventEnumType"
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "DoorPositionIndicatorStateEnumType" : {
        "type" : "string",
        "enum" : [ "OPEN", "CLOSED", "AJAR", "FORCED_OPEN", "ERROR", "UNKNOWN" ]
      },
      "DoorReaderEnumType" : {
        "type" : "string",
        "enum" : [ "wiegand", "osdp", "rhombus_osdp", "aperio_wireless" ]
      },
      "DoorReaderSettings" : {
        "type" : "object",
        "properties" : {
          "dr_enable_audio_feedback" : {
            "type" : "boolean",
            "nullable" : true
          },
          "tof_max_distance" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "tof_min_distance" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "tof_min_signal_over_noise" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          }
        }
      },
      "DoorReaderSettingsSelectiveUpdate" : {
        "type" : "object",
        "description" : "Update Door Reader settings",
        "properties" : {
          "dr_enable_audio_feedback" : {
            "type" : "boolean",
            "nullable" : true
          },
          "tof_max_distance" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "tof_min_distance" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "tof_min_signal_over_noise" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "updatedSetMethodMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "boolean",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "DoorReaderShadowType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "state" : {
              "$ref" : "#/components/schemas/DoorReaderStateEnumType"
            },
            "stateUpdateEventTimestampMs" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentShadowEnumType"
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "DoorReaderStateChangeEventType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "componentCompositeUuid" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "newState" : {
              "$ref" : "#/components/schemas/DoorReaderStateEnumType"
            },
            "reason" : {
              "$ref" : "#/components/schemas/DoorReaderStateChangeReasonEnumType"
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "correlationId" : {
            "type" : "string",
            "nullable" : true
          },
          "createdAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEventEnumType"
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "DoorReaderStateChangeReasonEnumType" : {
        "type" : "string",
        "enum" : [ "FIRMWARE_UPGRADE", "FORCED_REBOOT", "UNKNOWN" ]
      },
      "DoorReaderStateEnumType" : {
        "type" : "string",
        "enum" : [ "CONNECTED", "DISCONNECTED", "UNKNOWN" ]
      },
      "DoorRelayEnumType" : {
        "type" : "string",
        "enum" : [ "integrated", "remote" ]
      },
      "DoorRelayPhysicalPortEnumType" : {
        "type" : "string",
        "enum" : [ "GPIO_OUTPUT" ]
      },
      "DoorRelayPortType" : {
        "type" : "object",
        "properties" : {
          "boardNum" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "portNum" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "portType" : {
            "$ref" : "#/components/schemas/DoorRelayPhysicalPortEnumType"
          }
        }
      },
      "DoorRelayShadowType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "state" : {
              "$ref" : "#/components/schemas/DoorRelayStateEnumType"
            },
            "stateUpdateEventTimestampMs" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentShadowEnumType"
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "DoorRelayStateChangeEventType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "componentCompositeUuid" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "newState" : {
              "$ref" : "#/components/schemas/DoorRelayStateEnumType"
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "correlationId" : {
            "type" : "string",
            "nullable" : true
          },
          "createdAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEventEnumType"
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "DoorRelayStateEnumType" : {
        "type" : "string",
        "enum" : [ "UNLOCKED", "LOCKED", "UNKNOWN" ]
      },
      "DoorScheduleExceptionType" : {
        "type" : "object",
        "description" : "The door schedule exception to update.",
        "properties" : {
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "UNIX timestamp in milliseconds when exception was created.",
            "nullable" : true,
            "readOnly" : true
          },
          "defaultState" : {
            "$ref" : "#/components/schemas/AccessControlledDoorStateEnumType"
          },
          "description" : {
            "type" : "string",
            "description" : "Exception description",
            "nullable" : true
          },
          "doorUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "intervals" : {
            "type" : "array",
            "description" : "List of intervals each specifying door state during date range. List must contain at least one element",
            "items" : {
              "$ref" : "#/components/schemas/LocalInterval"
            },
            "nullable" : true
          },
          "localEndDate" : {
            "type" : "string",
            "description" : "Exception end date in 'yyyy-MM-dd' format. End date is inclusive.",
            "nullable" : true
          },
          "localStartDate" : {
            "type" : "string",
            "description" : "Exception start date in 'yyyy-MM-dd' format. Start date is inclusive.",
            "nullable" : true
          },
          "locationToDoorsMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "description" : "Mapping of location uuid to a list of door uuids, representing the doors assigned to each location. Map must contain at least one entry with at least one door.",
              "items" : {
                "type" : "string",
                "format" : "RUUID",
                "description" : "base 64 (url-safe) uuid string",
                "example" : "AAAAAAAAAAAAAAAAAAAAAA",
                "nullable" : true
              },
              "nullable" : true,
              "uniqueItems" : true
            },
            "description" : "Mapping of location uuid to a list of door uuids, representing the doors assigned to each location. Map must contain at least one entry with at least one door.",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Exception name",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "UNIX timestamp in milliseconds when exception was modified.",
            "nullable" : true,
            "readOnly" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        },
        "required" : [ "intervals", "localEndDate", "localStartDate", "name" ]
      },
      "DoorScheduleFirstInStateEvent" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "acuEventUuid" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "componentCompositeUuid" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "newState" : {
              "$ref" : "#/components/schemas/FirstInFirmwareStatus"
            },
            "originator" : {
              "$ref" : "#/components/schemas/BaseEventOriginator"
            },
            "settingsUuid" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "source" : {
              "$ref" : "#/components/schemas/FirstInSourceEnum"
            },
            "stateChangedAtMs" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "correlationId" : {
            "type" : "string",
            "nullable" : true
          },
          "createdAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEventEnumType"
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "DoorScheduledTriggerType" : {
        "type" : "object",
        "properties" : {
          "ajarThresholdSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "schedule" : {
            "$ref" : "#/components/schemas/WeeklyRepeatingScheduleType"
          },
          "triggerSet" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ActivityEnum"
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "DoorSensorSettings" : {
        "type" : "object",
        "properties" : {
          "ajar_threshold_enabled" : {
            "type" : "boolean",
            "description" : "Option to Enabled or Disable the Ajar Threshold. Defaults to Disabled (False).",
            "nullable" : true
          },
          "ajar_threshold_sec" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Threshold value for Door Sensor Ajar state. Defaults to 30s.",
            "nullable" : true
          }
        }
      },
      "DoorSensorSettingsSelectiveUpdate" : {
        "type" : "object",
        "properties" : {
          "ajar_threshold_enabled" : {
            "type" : "boolean",
            "description" : "Option to Enabled or Disable the Ajar Threshold. Defaults to Disabled (False).",
            "nullable" : true
          },
          "ajar_threshold_sec" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Threshold value for Door Sensor Ajar state. Defaults to 30s.",
            "nullable" : true
          },
          "updatedSetMethodMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "boolean",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "DoorStateChangeEvent" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "componentCompositeUuid" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "newState" : {
              "$ref" : "#/components/schemas/AccessControlledDoorStateEnumType"
            },
            "originator" : {
              "$ref" : "#/components/schemas/BaseEventOriginator"
            },
            "source" : {
              "$ref" : "#/components/schemas/DoorStateSourceEnum"
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "correlationId" : {
            "type" : "string",
            "nullable" : true
          },
          "createdAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEventEnumType"
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "DoorStateOverride" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "expireEarlyMode" : {
            "$ref" : "#/components/schemas/EarlyExpireModeEnum"
          },
          "expiresAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "followFirstInRules" : {
            "type" : "boolean",
            "nullable" : true
          },
          "originator" : {
            "$ref" : "#/components/schemas/BaseEventOriginator"
          },
          "requestedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "startDelaySeconds" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "state" : {
            "$ref" : "#/components/schemas/AccessControlledDoorStateEnumType"
          },
          "type" : {
            "$ref" : "#/components/schemas/ManualDoorStateChangeEnum"
          }
        }
      },
      "DoorStateShadow" : {
        "type" : "object",
        "properties" : {
          "source" : {
            "$ref" : "#/components/schemas/DoorStateSourceEnum"
          },
          "state" : {
            "$ref" : "#/components/schemas/AccessControlledDoorStateEnumType"
          },
          "stateUpdateEventTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "DoorStateSourceEnum" : {
        "type" : "string",
        "enum" : [ "DEFAULT_STATE", "SCHEDULE", "SCHEDULE_EXCEPTION", "FIRST_IN", "DOOR_STATE_OVERRIDE", "LOCKDOWN", "PRIVACY", "UNKNOWN" ]
      },
      "DoorType" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Door_GetDoorEventsForSensorWSRequest" : {
        "type" : "object",
        "description" : "Request object for retrieving door open/close events for a door sensor.",
        "properties" : {
          "createdAfterMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Timestamp in milliseconds to get events created after this time",
            "example" : 1640995200000,
            "nullable" : true
          },
          "createdBeforeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Timestamp in milliseconds to get events created before this time",
            "example" : 1640995200000,
            "nullable" : true
          },
          "limit" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Maximum number of events to return",
            "example" : 100,
            "nullable" : true
          },
          "sensorUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "stateFilter" : {
            "type" : "string",
            "description" : "Filter events by door state",
            "enum" : [ "OPEN", "CLOSED", "AJAR" ],
            "nullable" : true
          }
        }
      },
      "Door_GetDoorEventsForSensorWSResponse" : {
        "type" : "object",
        "description" : "Response object containing door open/close events for a door sensor.",
        "properties" : {
          "doorEvents" : {
            "type" : "array",
            "description" : "List of door open/close events for the sensor",
            "items" : {
              "$ref" : "#/components/schemas/DoorEventType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Door_GetMinimalDoorStatesWSRequest" : {
        "type" : "object",
        "description" : "Request object for retrieving basic state information for all door sensors."
      },
      "Door_GetMinimalDoorStatesWSResponse" : {
        "type" : "object",
        "description" : "Response object containing basic state information for all door sensors.",
        "properties" : {
          "doorStates" : {
            "type" : "array",
            "description" : "List of minimal door state information for all door sensors",
            "items" : {
              "$ref" : "#/components/schemas/Door_MinimalDoorStateType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Door_MinimalDoorStateType" : {
        "type" : "object",
        "description" : "Minimal state information for a door sensor.",
        "properties" : {
          "associatedCameras" : {
            "type" : "array",
            "description" : "List of associated camera device facet UUIDs",
            "items" : {
              "type" : "string",
              "format" : "DeviceFacetUuid",
              "description" : "RUUID with optional appended facet information",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
              "nullable" : true
            },
            "nullable" : true
          },
          "batteryPercent" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Battery percentage of the door sensor",
            "example" : 75,
            "nullable" : true
          },
          "closestBaseStation" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Timestamp in milliseconds when the door sensor was created",
            "example" : 1640995200000,
            "nullable" : true
          },
          "firmwareVersion" : {
            "type" : "string",
            "description" : "Firmware version of the door sensor",
            "example" : "1.2.3",
            "nullable" : true
          },
          "floorNumber" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Floor number where the door sensor is located",
            "example" : 1,
            "nullable" : true
          },
          "health" : {
            "type" : "string",
            "description" : "Enumeration of health status for door sensors.",
            "enum" : [ "GREEN", "RED" ],
            "nullable" : true
          },
          "healthDetails" : {
            "type" : "string",
            "description" : "Enumeration of specific health details for door sensors.",
            "enum" : [ "FIRMWARE_BEHIND", "NO_HEARTBEAT", "NONE" ],
            "nullable" : true
          },
          "hwVariation" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "lastSeenSec" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Timestamp in seconds when the door sensor was last seen",
            "example" : 1640995200,
            "nullable" : true
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "description" : "Latitude coordinate of the door sensor",
            "example" : 37.7749,
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "description" : "Longitude coordinate of the door sensor",
            "example" : -122.4194,
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the door sensor",
            "example" : "Main Entrance Door",
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "sensorUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "serialNumber" : {
            "type" : "string",
            "description" : "Serial number of the door sensor",
            "example" : "DS123456789",
            "nullable" : true
          },
          "signalStrength" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Signal strength of the door sensor",
            "example" : 85,
            "nullable" : true
          },
          "status" : {
            "type" : "string",
            "description" : "Current status of the door",
            "enum" : [ "OPEN", "CLOSED", "AJAR" ],
            "nullable" : true
          }
        }
      },
      "Door_UpdateDoorSensorDetailsWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating details for a door sensor.",
        "properties" : {
          "associatedCameras" : {
            "type" : "array",
            "description" : "List of associated camera device facet UUIDs",
            "items" : {
              "type" : "string",
              "format" : "DeviceFacetUuid",
              "description" : "RUUID with optional appended facet information",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
              "nullable" : true
            },
            "nullable" : true
          },
          "associatedCamerasUpdated" : {
            "type" : "boolean",
            "description" : "Whether the associated cameras have been updated",
            "example" : true,
            "nullable" : true
          },
          "deleted" : {
            "type" : "boolean",
            "description" : "Whether the door sensor is deleted",
            "example" : false,
            "nullable" : true
          },
          "deletedUpdated" : {
            "type" : "boolean",
            "description" : "Whether the deleted status has been updated",
            "example" : false,
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "description" : "Description of the door sensor",
            "example" : "Main entrance door sensor on the first floor",
            "nullable" : true
          },
          "descriptionUpdated" : {
            "type" : "boolean",
            "description" : "Whether the description has been updated",
            "example" : false,
            "nullable" : true
          },
          "floorNumber" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Floor number where the door sensor is located",
            "example" : 1,
            "nullable" : true
          },
          "floorNumberUpdated" : {
            "type" : "boolean",
            "description" : "Whether the floor number has been updated",
            "example" : true,
            "nullable" : true
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "description" : "Latitude coordinate of the door sensor",
            "example" : 37.7749,
            "nullable" : true
          },
          "latitudeUpdated" : {
            "type" : "boolean",
            "description" : "Whether the latitude has been updated",
            "example" : false,
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "locationUuidUpdated" : {
            "type" : "boolean",
            "description" : "Whether the location UUID has been updated",
            "example" : true,
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "description" : "Longitude coordinate of the door sensor",
            "example" : -122.4194,
            "nullable" : true
          },
          "longitudeUpdated" : {
            "type" : "boolean",
            "description" : "Whether the longitude has been updated",
            "example" : false,
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the door sensor",
            "example" : "Main Entrance Door",
            "nullable" : true
          },
          "nameUpdated" : {
            "type" : "boolean",
            "description" : "Whether the name has been updated",
            "example" : true,
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "policyUuidUpdated" : {
            "type" : "boolean",
            "description" : "Whether the policy UUID has been updated",
            "example" : false,
            "nullable" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "subLocationsHierarchyKeyUpdated" : {
            "type" : "boolean",
            "description" : "Whether the sub-locations hierarchy key has been updated",
            "example" : false,
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Door_UpdateDoorSensorDetailsWSResponse" : {
        "type" : "object",
        "description" : "Response object for updating details for a door sensor.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "DoorbellEventType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "componentCompositeUuid" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "newSupervisionState" : {
              "$ref" : "#/components/schemas/SupervisionStateEnumType"
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "correlationId" : {
            "type" : "string",
            "nullable" : true
          },
          "createdAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEventEnumType"
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Doorbellcamera_CreateRuleForDoorbellCameraWSRequest" : {
        "type" : "object",
        "description" : "Request object for creating a rule for a doorbell camera.",
        "properties" : {
          "rule" : {
            "$ref" : "#/components/schemas/Doorbellcamera_ExternalDoorbellCameraComponentRuleType"
          }
        }
      },
      "Doorbellcamera_CreateRuleForDoorbellCameraWSResponse" : {
        "type" : "object",
        "description" : "Response object for creating a rule for a doorbell camera.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "ruleUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Doorbellcamera_CreateSharedLiveVideoStreamWSRequest" : {
        "type" : "object",
        "description" : "Request object for creating a shared live video stream for a doorbell camera.",
        "properties" : {
          "audioGatewayUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          },
          "doorbellCameraUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          },
          "expirationTimeSecs" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Add a expiration date for accessing the stream in seconds",
            "example" : 86400,
            "nullable" : true
          },
          "invertSchedule" : {
            "type" : "boolean",
            "description" : "If given a schedule uuid, will hide the stream during the schedule instead and show it otherwise",
            "example" : false,
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "description" : "If not provided, will be named 'Unnamed'",
            "example" : "Front Door Stream",
            "nullable" : true
          },
          "password" : {
            "type" : "string",
            "description" : "Add a password to allow access to your shared stream. If null or blank password is not set.",
            "example" : "mypassword123",
            "nullable" : true
          },
          "scheduleUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "streamType" : {
            "$ref" : "#/components/schemas/StreamTypeEnum"
          },
          "vodEnabled" : {
            "type" : "boolean",
            "description" : "Enables recording of live footage to a VOD",
            "example" : true,
            "nullable" : true
          }
        },
        "required" : [ "doorbellCameraUuid", "streamType", "vodEnabled" ]
      },
      "Doorbellcamera_CreateSharedLiveVideoStreamWSResponse" : {
        "type" : "object",
        "description" : "Response object for creating a shared live video stream for a doorbell camera.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "sharedLiveM3U8StreamUrl" : {
            "type" : "string",
            "description" : "M3U8 URL for the shared live video stream",
            "example" : "https://example.com/live/m3u8/stream",
            "nullable" : true
          },
          "sharedLiveVideoStreamUrl" : {
            "type" : "string",
            "description" : "URL for the shared live video stream",
            "example" : "https://example.com/live/video/stream",
            "nullable" : true
          },
          "sharedLiveVideoStreamUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Doorbellcamera_DeleteDoorbellCameraWSRequest" : {
        "type" : "object",
        "description" : "Request object for removing a doorbell camera from the organization.",
        "properties" : {
          "doorbellCameraUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "mummify" : {
            "type" : "boolean",
            "description" : "Whether to mummify the doorbell camera",
            "example" : false,
            "nullable" : true
          }
        },
        "required" : [ "doorbellCameraUuid", "mummify" ]
      },
      "Doorbellcamera_DeleteDoorbellCameraWSResponse" : {
        "type" : "object",
        "description" : "Response object for removing a doorbell camera from the organization.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "responseStatus" : {
            "type" : "string",
            "description" : "Status of the delete operation",
            "enum" : [ "BASIC_AUTH_FAILED", "PASSWORD_MISMATCH", "SAME_PASSWORD", "USER_EXISTS", "USER_NOT_FOUND", "DEVICE_NOT_FOUND", "POLICY_NOT_FOUND", "LOCATION_NOT_FOUND", "ORG_NOT_FOUND", "BAD_INPUT", "SUCCESS", "PASSWORD_TOO_SHORT" ],
            "nullable" : true
          }
        }
      },
      "Doorbellcamera_DeleteRuleForDoorbellCameraWSRequest" : {
        "type" : "object",
        "description" : "Request object for deleting a rule for a doorbell camera.",
        "properties" : {
          "doorbellCameraUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "ruleUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Doorbellcamera_DeleteRuleForDoorbellCameraWSResponse" : {
        "type" : "object",
        "description" : "Response object for deleting a rule for a doorbell camera.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Doorbellcamera_DoorbellCameraOfflineLanStreamingInfo" : {
        "type" : "object",
        "description" : "Information for offline LAN streaming of doorbell camera content.",
        "properties" : {
          "accessToken" : {
            "type" : "string",
            "description" : "Access token for offline LAN streaming",
            "example" : "abc123def456",
            "nullable" : true
          },
          "lanAddresses" : {
            "type" : "array",
            "description" : "List of LAN addresses for offline streaming",
            "items" : {
              "type" : "string",
              "description" : "List of LAN addresses for offline streaming",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Doorbellcamera_ExternalDoorbellCameraComponentRuleType" : {
        "type" : "object",
        "description" : "External representation of a doorbell camera component rule.",
        "properties" : {
          "action" : {
            "$ref" : "#/components/schemas/RuleActionType"
          },
          "doorbellCameraComponentUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "doorbellCameraUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "ruleFilters" : {
            "$ref" : "#/components/schemas/RuleFilterType"
          },
          "ruleName" : {
            "type" : "string",
            "description" : "Name of the rule",
            "example" : "Motion Detection Rule",
            "nullable" : true
          },
          "ruleUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "triggerActivity" : {
            "$ref" : "#/components/schemas/ActivityEnum"
          }
        }
      },
      "Doorbellcamera_FindComponentEventsForDoorbellCameraWSRequest" : {
        "type" : "object",
        "description" : "Request object for retrieving component events for a doorbell camera.",
        "properties" : {
          "createdAfterMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Returns events created after (exclusive) the specified millisecond epoch timestamp",
            "example" : 1640995200000,
            "nullable" : true
          },
          "createdBeforeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Returns events created before (exclusive) the specified millisecond epoch timestamp",
            "example" : 1640995200000,
            "nullable" : true
          },
          "doorbellCameraUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "limit" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Limits the number of returned events to the latest LIMIT events. Maximum value is 100.",
            "example" : 50,
            "nullable" : true
          },
          "typeFilter" : {
            "type" : "array",
            "description" : "Limits results to only contain the specified type of events, if applicable",
            "items" : {
              "$ref" : "#/components/schemas/ComponentEventEnumType"
            },
            "nullable" : true
          }
        },
        "required" : [ "doorbellCameraUuid", "limit" ]
      },
      "Doorbellcamera_FindComponentEventsForDoorbellCameraWSResponse" : {
        "type" : "object",
        "description" : "Response object containing component events for a doorbell camera.",
        "properties" : {
          "componentEvents" : {
            "type" : "array",
            "description" : "List of component events for the doorbell camera",
            "items" : {
              "$ref" : "#/components/schemas/ComponentEventType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Doorbellcamera_FindComponentSeekPointsForDoorbellCameraWSRequest" : {
        "type" : "object",
        "description" : "Request object for retrieving component seekpoints for a doorbell camera.",
        "properties" : {
          "doorbellCameraUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "durationSec" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Duration in seconds for the seekpoint query",
            "example" : 3600,
            "nullable" : true
          },
          "startTimeSecEpochExclusive" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start time in seconds epoch (exclusive) for the seekpoint query",
            "example" : 1640995200,
            "nullable" : true
          }
        }
      },
      "Doorbellcamera_FindComponentSeekPointsForDoorbellCameraWSResponse" : {
        "type" : "object",
        "description" : "Response object containing component seekpoints for a doorbell camera.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "seekpoints" : {
            "type" : "array",
            "description" : "List of component seekpoints for the doorbell camera",
            "items" : {
              "$ref" : "#/components/schemas/ComponentSeekPointType"
            },
            "nullable" : true
          }
        }
      },
      "Doorbellcamera_FindSharedLiveVideoStreamsForWSRequest" : {
        "type" : "object",
        "description" : "Request object for finding shared live video streams for a doorbell camera.",
        "properties" : {
          "doorbellCameraUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          }
        }
      },
      "Doorbellcamera_FindSharedLiveVideoStreamsWSResponse" : {
        "type" : "object",
        "description" : "Response object containing shared live video streams for a doorbell camera.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "sharedLiveVideoStreams" : {
            "type" : "array",
            "description" : "List of shared live video streams for the doorbell camera",
            "items" : {
              "$ref" : "#/components/schemas/Camera_SharedLiveVideoStreamWS"
            },
            "nullable" : true
          }
        }
      },
      "Doorbellcamera_GetDoorbellCameraConfigWSResponse" : {
        "type" : "object",
        "description" : "Response object containing doorbell camera configuration.",
        "properties" : {
          "config" : {
            "$ref" : "#/components/schemas/Deviceconfig_userconfig_IExternalReadableAudioVideoUserConfig"
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Doorbellcamera_GetDoorbellCameraFullStateWSResponse" : {
        "type" : "object",
        "description" : "Response object containing detailed state information for a doorbell camera.",
        "properties" : {
          "fullState" : {
            "$ref" : "#/components/schemas/FullDeviceStateType"
          }
        }
      },
      "Doorbellcamera_GetDoorbellCameraMediaUrisWSResponse" : {
        "type" : "object",
        "description" : "Response object containing media URIs for doorbell camera footage and audio.",
        "properties" : {
          "lanCheckUrls" : {
            "type" : "array",
            "description" : "List of LAN check URLs to verify device availability on local network",
            "items" : {
              "type" : "string",
              "description" : "List of LAN check URLs to verify device availability on local network",
              "nullable" : true
            },
            "nullable" : true
          },
          "lanLiveH264Uris" : {
            "type" : "array",
            "description" : "List of LAN URIs for live H.264 video streams",
            "items" : {
              "type" : "string",
              "description" : "List of LAN URIs for live H.264 video streams",
              "nullable" : true
            },
            "nullable" : true
          },
          "lanLiveMpdUris" : {
            "type" : "array",
            "description" : "List of LAN URIs for live MPD streams",
            "items" : {
              "type" : "string",
              "description" : "List of LAN URIs for live MPD streams",
              "nullable" : true
            },
            "nullable" : true
          },
          "lanLiveOpusUris" : {
            "type" : "array",
            "description" : "List of LAN URIs for live Opus audio streams",
            "items" : {
              "type" : "string",
              "description" : "List of LAN URIs for live Opus audio streams",
              "nullable" : true
            },
            "nullable" : true
          },
          "lanVodM3u8UrisTemplates" : {
            "type" : "array",
            "description" : "List of LAN URI templates for VOD M3U8 streams",
            "items" : {
              "type" : "string",
              "description" : "List of LAN URI templates for VOD M3U8 streams",
              "nullable" : true
            },
            "nullable" : true
          },
          "lanVodMpdUrisTemplates" : {
            "type" : "array",
            "description" : "List of LAN URI templates for VOD MPD streams",
            "items" : {
              "type" : "string",
              "description" : "List of LAN URI templates for VOD MPD streams",
              "nullable" : true
            },
            "nullable" : true
          },
          "wanLiveH264Uri" : {
            "type" : "string",
            "description" : "WAN URI for live H.264 video stream",
            "nullable" : true
          },
          "wanLiveMpdUri" : {
            "type" : "string",
            "description" : "WAN URI for live MPD stream",
            "nullable" : true
          },
          "wanLiveOpusUri" : {
            "type" : "string",
            "description" : "WAN URI for live Opus audio stream",
            "nullable" : true
          },
          "wanVodM3u8UriTemplate" : {
            "type" : "string",
            "description" : "WAN URI template for VOD M3U8 streams",
            "nullable" : true
          },
          "wanVodMpdUriTemplate" : {
            "type" : "string",
            "description" : "WAN URI template for VOD MPD streams",
            "nullable" : true
          }
        }
      },
      "Doorbellcamera_GetDoorbellCameraMinimalStateListWSResponse" : {
        "type" : "object",
        "description" : "Response object containing basic state information for all doorbell cameras.",
        "properties" : {
          "minimalStates" : {
            "type" : "array",
            "description" : "List of minimal state information for doorbell cameras",
            "items" : {
              "$ref" : "#/components/schemas/MinimalObservableDeviceStateType"
            },
            "nullable" : true
          }
        }
      },
      "Doorbellcamera_GetDoorbellCameraOfflineLanStreamingInfoWSRequest" : {
        "type" : "object",
        "description" : "Request object for retrieving offline LAN streaming information for doorbell cameras."
      },
      "Doorbellcamera_GetDoorbellCameraOfflineLanStreamingInfoWSResponse" : {
        "type" : "object",
        "description" : "Response object containing offline LAN streaming information for doorbell cameras.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "info" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Doorbellcamera_DoorbellCameraOfflineLanStreamingInfo"
            },
            "description" : "Map of doorbell camera UUIDs to their offline LAN streaming information",
            "nullable" : true
          }
        }
      },
      "Doorbellcamera_GetDoorbellCameraRulesForOrgWSRequest" : {
        "type" : "object",
        "description" : "Request object for retrieving rules for all doorbell cameras in an organization."
      },
      "Doorbellcamera_GetDoorbellCameraRulesForOrgWSResponse" : {
        "type" : "object",
        "description" : "Response object containing rules for all doorbell cameras in an organization.",
        "properties" : {
          "doorbellCameraUuidToRulesMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "description" : "Map of doorbell camera UUIDs to their component rules",
              "items" : {
                "$ref" : "#/components/schemas/Doorbellcamera_ExternalDoorbellCameraComponentRuleType"
              },
              "nullable" : true
            },
            "description" : "Map of doorbell camera UUIDs to their component rules",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Doorbellcamera_GetRulesForDoorbellCameraWSRequest" : {
        "type" : "object",
        "description" : "Request object for retrieving all rules for a doorbell camera.",
        "properties" : {
          "doorbellCameraUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Doorbellcamera_GetRulesForDoorbellCameraWSResponse" : {
        "type" : "object",
        "description" : "Response object containing all rules for a doorbell camera.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "rules" : {
            "type" : "array",
            "description" : "List of component rules for the doorbell camera",
            "items" : {
              "$ref" : "#/components/schemas/Doorbellcamera_ExternalDoorbellCameraComponentRuleType"
            },
            "nullable" : true
          }
        }
      },
      "Doorbellcamera_RebootDoorbellCameraWSRequest" : {
        "type" : "object",
        "description" : "Request object for rebooting a doorbell camera.",
        "properties" : {
          "doorbellCameraUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        },
        "required" : [ "doorbellCameraUuid" ]
      },
      "Doorbellcamera_UpdateDoorbellCameraConfigWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating doorbell camera configuration.",
        "properties" : {
          "configUpdate" : {
            "$ref" : "#/components/schemas/Deviceconfig_userconfig_IExternalUpdateableAudioVideoUserConfig"
          }
        }
      },
      "Doorbellcamera_UpdateDoorbellCameraDetailsWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating hardware details of a doorbell camera.",
        "properties" : {
          "associatedCameras" : {
            "type" : "array",
            "description" : "Optional list of associated camera device facet UUIDs",
            "items" : {
              "type" : "string",
              "format" : "DeviceFacetUuid",
              "description" : "RUUID with optional appended facet information",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
              "nullable" : true
            },
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "description" : "Optional description for the doorbell camera",
            "nullable" : true
          },
          "deviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "directionRadians" : {
            "type" : "number",
            "format" : "float",
            "description" : "Optional direction in radians for the doorbell camera",
            "nullable" : true
          },
          "floorNumber" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Optional floor number where the doorbell camera is located",
            "nullable" : true
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "description" : "Optional latitude coordinate of the doorbell camera",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "description" : "Optional longitude coordinate of the doorbell camera",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Optional name for the doorbell camera",
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Doorcontroller_CreateDoorControllerRuleWSRequest" : {
        "type" : "object",
        "description" : "Request object for creating a rule owned by a door controller.",
        "properties" : {
          "doorControllerUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "rule" : {
            "$ref" : "#/components/schemas/RuleType"
          }
        }
      },
      "Doorcontroller_CreateDoorControllerRuleWSResponse" : {
        "type" : "object",
        "description" : "Response object for creating a rule owned by a door controller.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "rule" : {
            "$ref" : "#/components/schemas/RuleType"
          }
        }
      },
      "Doorcontroller_DeleteDoorControllerRuleWSRequest" : {
        "type" : "object",
        "description" : "Request object for deleting a rule owned by a door controller.",
        "properties" : {
          "doorControllerUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "ruleUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Doorcontroller_DeleteDoorControllerRuleWSResponse" : {
        "type" : "object",
        "description" : "Response object for deleting a rule owned by a door controller."
      },
      "Doorcontroller_DeleteDoorControllerWSRequest" : {
        "type" : "object",
        "description" : "Request object for removing a door controller from the organization.",
        "properties" : {
          "doorControllerUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "mummify" : {
            "type" : "boolean",
            "description" : "Whether to mummify the door controller",
            "example" : false,
            "nullable" : true
          }
        },
        "required" : [ "doorControllerUuid", "mummify" ]
      },
      "Doorcontroller_DeleteDoorControllerWSResponse" : {
        "type" : "object",
        "description" : "Response object for removing a door controller from the organization.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "responseStatus" : {
            "type" : "string",
            "description" : "Status of the delete operation",
            "enum" : [ "BASIC_AUTH_FAILED", "PASSWORD_MISMATCH", "SAME_PASSWORD", "USER_EXISTS", "USER_NOT_FOUND", "DEVICE_NOT_FOUND", "POLICY_NOT_FOUND", "LOCATION_NOT_FOUND", "ORG_NOT_FOUND", "BAD_INPUT", "SUCCESS", "PASSWORD_TOO_SHORT" ],
            "nullable" : true
          }
        }
      },
      "Doorcontroller_DoorControllerDiscoveredAperioDoor" : {
        "type" : "object",
        "description" : "Discovered Aperio door device information.",
        "properties" : {
          "gatewayId" : {
            "type" : "string",
            "description" : "Identifier for the associated Aperio gateway",
            "example" : "gateway_67890",
            "nullable" : true
          },
          "id" : {
            "type" : "string",
            "description" : "Unique identifier for the Aperio door",
            "example" : "door_12345",
            "nullable" : true
          },
          "lastSeenMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Timestamp when the door was last seen",
            "example" : 1640995200000,
            "nullable" : true
          }
        }
      },
      "Doorcontroller_DoorControllerDiscoveredAperioGateway" : {
        "type" : "object",
        "description" : "Discovered Aperio gateway device information.",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Unique identifier for the Aperio gateway",
            "example" : "gateway_12345",
            "nullable" : true
          },
          "ipAddress" : {
            "type" : "string",
            "description" : "IP address of the Aperio gateway",
            "example" : "192.168.1.100",
            "nullable" : true
          },
          "lastSeenMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Timestamp when the gateway was last seen",
            "example" : 1640995200000,
            "nullable" : true
          },
          "model" : {
            "type" : "string",
            "description" : "Model of the Aperio gateway",
            "example" : "AH-GW-01",
            "nullable" : true
          },
          "protocolVersion" : {
            "type" : "string",
            "description" : "Protocol version of the Aperio gateway",
            "example" : "2.1",
            "nullable" : true
          }
        }
      },
      "Doorcontroller_DoorControllerDiscoveredReaderType" : {
        "type" : "object",
        "description" : "List of discovered readers",
        "discriminator" : {
          "propertyName" : "type"
        },
        "oneOf" : [ {
          "$ref" : "#/components/schemas/Doorcontroller_DoorControllerDiscoveredRhombusReaderType"
        }, {
          "$ref" : "#/components/schemas/Doorcontroller_DoorControllerDiscoveredThirdPartyReaderType"
        } ],
        "properties" : {
          "boardNum" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Board number for the reader connection",
            "example" : 1,
            "nullable" : true
          },
          "lastSeenMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Timestamp when the reader was last seen",
            "example" : 1640995200000,
            "nullable" : true
          },
          "online" : {
            "type" : "boolean",
            "description" : "Whether the reader is currently online",
            "example" : true,
            "nullable" : true
          },
          "portNum" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Port number for the reader connection",
            "example" : 0,
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/Doorcontroller_DoorControllerDiscoveredReaderTypeEnum"
          }
        }
      },
      "Doorcontroller_DoorControllerDiscoveredReaderTypeEnum" : {
        "type" : "string",
        "description" : "Enumeration of discovered reader types.",
        "enum" : [ "RHOMBUS", "THIRD_PARTY" ]
      },
      "Doorcontroller_DoorControllerDiscoveredRhombusReaderType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "serialNumber" : {
              "type" : "string",
              "description" : "Serial number of the Rhombus reader",
              "example" : "RR-12345678",
              "nullable" : true
            }
          }
        } ],
        "description" : "Discovered Rhombus reader information.",
        "nullable" : true,
        "properties" : {
          "boardNum" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Board number for the reader connection",
            "example" : 1,
            "nullable" : true
          },
          "lastSeenMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Timestamp when the reader was last seen",
            "example" : 1640995200000,
            "nullable" : true
          },
          "online" : {
            "type" : "boolean",
            "description" : "Whether the reader is currently online",
            "example" : true,
            "nullable" : true
          },
          "portNum" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Port number for the reader connection",
            "example" : 0,
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/Doorcontroller_DoorControllerDiscoveredReaderTypeEnum"
          }
        }
      },
      "Doorcontroller_DoorControllerDiscoveredThirdPartyReaderType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "model" : {
              "type" : "string",
              "format" : "byte",
              "description" : "Model identifier for the third-party reader",
              "example" : "MQ==",
              "nullable" : true
            },
            "serialNumber" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "Serial number of the third-party reader",
              "example" : 12345,
              "nullable" : true
            },
            "vendorCode" : {
              "type" : "array",
              "description" : "Vendor code for the third-party reader",
              "items" : {
                "type" : "string",
                "format" : "byte",
                "description" : "Vendor code for the third-party reader",
                "nullable" : true
              },
              "nullable" : true
            }
          }
        } ],
        "description" : "Discovered third-party reader information.",
        "nullable" : true,
        "properties" : {
          "boardNum" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Board number for the reader connection",
            "example" : 1,
            "nullable" : true
          },
          "lastSeenMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Timestamp when the reader was last seen",
            "example" : 1640995200000,
            "nullable" : true
          },
          "online" : {
            "type" : "boolean",
            "description" : "Whether the reader is currently online",
            "example" : true,
            "nullable" : true
          },
          "portNum" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Port number for the reader connection",
            "example" : 0,
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/Doorcontroller_DoorControllerDiscoveredReaderTypeEnum"
          }
        }
      },
      "Doorcontroller_DoorControllerStateType" : {
        "type" : "object",
        "description" : "State information for a door controller including discovered devices and configuration.",
        "properties" : {
          "configUpdatedAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Timestamp when configuration was last updated",
            "example" : 1640995200000,
            "nullable" : true
          },
          "connectionStatus" : {
            "$ref" : "#/components/schemas/DeviceStatusEnum"
          },
          "defaultInterface" : {
            "type" : "string",
            "description" : "Default network interface of the door controller",
            "example" : "eth0",
            "nullable" : true
          },
          "defaultInterfaceMac" : {
            "type" : "string",
            "description" : "MAC address of the default interface",
            "example" : "00:11:22:33:44:55",
            "nullable" : true
          },
          "deleted" : {
            "type" : "boolean",
            "description" : "Whether the door controller is deleted",
            "example" : false,
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "description" : "Description of the door controller",
            "example" : "Controls access to the main entrance",
            "nullable" : true
          },
          "directionRadians" : {
            "type" : "number",
            "format" : "float",
            "description" : "Direction in radians for the door controller",
            "example" : 1.5708,
            "nullable" : true
          },
          "discoveredAperioDoors" : {
            "type" : "array",
            "description" : "List of discovered Aperio doors",
            "items" : {
              "$ref" : "#/components/schemas/Doorcontroller_DoorControllerDiscoveredAperioDoor"
            },
            "nullable" : true
          },
          "discoveredAperioGateways" : {
            "type" : "array",
            "description" : "List of discovered Aperio gateways",
            "items" : {
              "$ref" : "#/components/schemas/Doorcontroller_DoorControllerDiscoveredAperioGateway"
            },
            "nullable" : true
          },
          "discoveredReaders" : {
            "type" : "array",
            "description" : "List of discovered readers",
            "items" : {
              "$ref" : "#/components/schemas/Doorcontroller_DoorControllerDiscoveredReaderType"
            },
            "nullable" : true
          },
          "firmwareVersion" : {
            "type" : "string",
            "description" : "Firmware version of the door controller",
            "example" : "2.1.0",
            "nullable" : true
          },
          "floorNumber" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Floor number where the door controller is located",
            "example" : 1,
            "nullable" : true
          },
          "grantsUpdatedAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Timestamp when grants were last updated",
            "example" : 1640995200000,
            "nullable" : true
          },
          "hwVariation" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "lanAddresses" : {
            "type" : "array",
            "description" : "List of LAN addresses for the door controller",
            "items" : {
              "type" : "string",
              "description" : "List of LAN addresses for the door controller",
              "nullable" : true
            },
            "nullable" : true
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "description" : "Latitude coordinate of the door controller",
            "example" : 34.0522,
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "description" : "Longitude coordinate of the door controller",
            "example" : -118.2437,
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the door controller",
            "example" : "Main Entrance Controller",
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "serialNumber" : {
            "type" : "string",
            "description" : "Serial number of the door controller",
            "example" : "DC-12345678",
            "nullable" : true
          },
          "state" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "description" : "State information for the door controller",
              "nullable" : true
            },
            "description" : "State information for the door controller",
            "nullable" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "wanAddress" : {
            "type" : "string",
            "description" : "WAN address of the door controller",
            "example" : "203.0.113.1",
            "nullable" : true
          }
        }
      },
      "Doorcontroller_GetDoorControllerConfigWSResponse" : {
        "type" : "object",
        "description" : "Response object containing door controller configuration.",
        "properties" : {
          "config" : {
            "$ref" : "#/components/schemas/Deviceconfig_userconfig_IExternalReadableDoorControllerUserConfig"
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Doorcontroller_GetDoorControllerRuleWSRequest" : {
        "type" : "object",
        "description" : "Request object for retrieving a specific rule owned by a door controller.",
        "properties" : {
          "doorControllerUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "ruleUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Doorcontroller_GetDoorControllerRuleWSResponse" : {
        "type" : "object",
        "description" : "Response object containing a specific rule owned by a door controller.",
        "properties" : {
          "rule" : {
            "$ref" : "#/components/schemas/RuleType"
          }
        }
      },
      "Doorcontroller_GetDoorControllerRulesWSRequest" : {
        "type" : "object",
        "description" : "Request object for retrieving all rules owned by a door controller.",
        "properties" : {
          "doorControllerUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Doorcontroller_GetDoorControllerRulesWSResponse" : {
        "type" : "object",
        "description" : "Response object containing all rules owned by a door controller.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "rules" : {
            "type" : "array",
            "description" : "List of rules owned by the door controller",
            "items" : {
              "$ref" : "#/components/schemas/RuleType"
            },
            "nullable" : true
          }
        }
      },
      "Doorcontroller_GetDoorControllerStateListWSRequest" : {
        "type" : "object",
        "description" : "Request object for retrieving state information for all door controllers in an organization."
      },
      "Doorcontroller_GetDoorControllerStateListWSResponse" : {
        "type" : "object",
        "description" : "Response object containing state information for all door controllers in an organization.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "stateList" : {
            "type" : "array",
            "description" : "List of door controller state information",
            "items" : {
              "$ref" : "#/components/schemas/Doorcontroller_DoorControllerStateType"
            },
            "nullable" : true
          }
        }
      },
      "Doorcontroller_RegisterDiscoveredRhombusReaderWSRequest" : {
        "type" : "object",
        "description" : "Request object for registering a Rhombus reader discovered by a door controller.",
        "properties" : {
          "boardNum" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Board number for the reader connection",
            "example" : 1,
            "nullable" : true
          },
          "doorControllerUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "portNum" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Port number for the reader connection",
            "example" : 0,
            "nullable" : true
          },
          "serialNumber" : {
            "type" : "string",
            "description" : "Serial number of the discovered Rhombus reader",
            "example" : "RR-12345678",
            "nullable" : true
          }
        }
      },
      "Doorcontroller_RegisterDiscoveredRhombusReaderWSResponse" : {
        "type" : "object",
        "description" : "Response object for registering a Rhombus reader discovered by a door controller."
      },
      "Doorcontroller_UpdateDoorControllerConfigWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating door controller configuration.",
        "properties" : {
          "configUpdate" : {
            "$ref" : "#/components/schemas/Deviceconfig_userconfig_IExternalUpdateableDoorControllerUserConfig"
          }
        }
      },
      "Doorcontroller_UpdateDoorControllerDetailsWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating details for a door controller.",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "Description of the door controller",
            "example" : "Controls access to the main entrance",
            "nullable" : true
          },
          "directionRadians" : {
            "type" : "number",
            "format" : "float",
            "description" : "Direction in radians for the door controller",
            "example" : 1.5708,
            "nullable" : true
          },
          "floorNumber" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Floor number where the door controller is located",
            "example" : 1,
            "nullable" : true
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "description" : "Latitude coordinate of the door controller",
            "example" : 34.0522,
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "description" : "Longitude coordinate of the door controller",
            "example" : -118.2437,
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the door controller",
            "example" : "Main Entrance Controller",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        },
        "required" : [ "uuid" ]
      },
      "Doorcontroller_UpdateDoorControllerDetailsWSResponse" : {
        "type" : "object",
        "description" : "Response object for updating details for a door controller.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Doorcontroller_UpdateDoorControllerRuleWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating a rule owned by a door controller.",
        "properties" : {
          "doorControllerUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "rule" : {
            "$ref" : "#/components/schemas/RuleType"
          }
        }
      },
      "Doorcontroller_UpdateDoorControllerRuleWSResponse" : {
        "type" : "object",
        "description" : "Response object for updating a rule owned by a door controller.",
        "properties" : {
          "rule" : {
            "$ref" : "#/components/schemas/RuleType"
          }
        }
      },
      "DropboxSettingsV2" : {
        "type" : "object",
        "description" : "Dropbox integration settings to update",
        "properties" : {
          "accessToken" : {
            "type" : "string",
            "nullable" : true
          },
          "accountEmail" : {
            "type" : "string",
            "nullable" : true
          },
          "accountName" : {
            "type" : "string",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabledTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "enablingUser" : {
            "type" : "string",
            "nullable" : true
          },
          "enablingUserUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "DtcInfo" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "code" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "byte",
              "nullable" : true
            },
            "nullable" : true
          },
          "failing" : {
            "type" : "boolean",
            "nullable" : true
          },
          "hasFailed" : {
            "type" : "boolean",
            "nullable" : true
          },
          "testCompleted" : {
            "type" : "boolean",
            "nullable" : true
          },
          "time" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "DynamoPageRequest" : {
        "type" : "object",
        "description" : "Pagination request for retrieving similar face events",
        "properties" : {
          "lastEvaluatedKey" : {
            "type" : "string",
            "nullable" : true
          },
          "maxPageSize" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "E50ClimateEventType" : {
        "type" : "object",
        "description" : "List of climate events for the environmental gateway",
        "properties" : {
          "activities" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ActivityEnum"
            },
            "nullable" : true
          },
          "alertTriggerThresholds" : {
            "type" : "array",
            "items" : {
              "type" : "number",
              "format" : "double",
              "nullable" : true
            },
            "nullable" : true
          },
          "alertTriggers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ActivityEnum"
            },
            "nullable" : true
          },
          "carbonMonoSense" : {
            "$ref" : "#/components/schemas/COSensorType"
          },
          "clipMetaData" : {
            "$ref" : "#/components/schemas/ClipMetaDataType"
          },
          "co2Sense" : {
            "$ref" : "#/components/schemas/Co2SensorType"
          },
          "derivedValues" : {
            "$ref" : "#/components/schemas/E50DerivedValuesType"
          },
          "deviceType" : {
            "$ref" : "#/components/schemas/DeviceTypeEnum"
          },
          "deviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "firmwareVersion" : {
            "type" : "string",
            "nullable" : true
          },
          "formaSense" : {
            "$ref" : "#/components/schemas/FormaSensorType"
          },
          "hwVariation" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "leakProbe" : {
            "$ref" : "#/components/schemas/LeakProbeType"
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "pmSense" : {
            "$ref" : "#/components/schemas/PmSensorType"
          },
          "policyUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "pressSense" : {
            "$ref" : "#/components/schemas/PressureSensorType"
          },
          "tempProbe" : {
            "$ref" : "#/components/schemas/TempProbeType"
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "E50DerivedValuesType" : {
        "type" : "object",
        "properties" : {
          "airQualityIndex" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "airQualityIndexPollutant" : {
            "$ref" : "#/components/schemas/AirQualityIndexPollutantEnum"
          },
          "calibrating" : {
            "type" : "boolean",
            "nullable" : true
          },
          "deviceOrientation" : {
            "$ref" : "#/components/schemas/DeviceOrientationEnum"
          },
          "falsePositiveConfidencePercent" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "heatIndexDegF" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "heatIndexRangeWarning" : {
            "$ref" : "#/components/schemas/HeatIndexRangeWarningEnum"
          },
          "indoorAirQuality" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "malfunctioningModules" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "smokeConfidencePercent" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "smokeThcConfidencePercent" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "smokeTobaccoConfidencePercent" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "timestampSec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "tvoc" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "vapeConfidencePercent" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "vapeDetected" : {
            "type" : "boolean",
            "nullable" : true
          },
          "vapeThcConfidencePercent" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          }
        }
      },
      "EarlyExpireModeEnum" : {
        "type" : "string",
        "enum" : [ "SCHEDULED_CHANGE", "STEADY_STATE_CHANGE", "OFF" ]
      },
      "EmailSettings" : {
        "type" : "object",
        "properties" : {
          "emailAddresses" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabledTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "enablingUser" : {
            "type" : "string",
            "nullable" : true
          },
          "enablingUserUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Embedding" : {
        "type" : "object",
        "description" : "Returns the generated embedding or null if the embedding could not be generated. If image contains multiple faces, only the first generated embedding is returned.",
        "properties" : {
          "embeddingComparisonType" : {
            "type" : "string",
            "nullable" : true
          },
          "embeddingConfidence" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "embeddingEncodingType" : {
            "$ref" : "#/components/schemas/EmbeddingEncodingType"
          },
          "encodedEmbedding" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "EmbeddingEncodingType" : {
        "type" : "string",
        "enum" : [ "Q_8_24", "IEEE_754" ]
      },
      "EmergencyContact" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "phoneNumber" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "EmergencyResponseContactsIntervalType" : {
        "type" : "object",
        "properties" : {
          "emergencyContactList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EmergencyContact"
            },
            "nullable" : true
          },
          "minuteOfWeekStart" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "minuteOfWeekStop" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "EmergencyResponseContactsScheduleType" : {
        "type" : "object",
        "properties" : {
          "deviceUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          },
          "emergencyContactList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EmergencyContact"
            },
            "nullable" : true
          },
          "scheduleUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Entity" : {
        "type" : "string",
        "description" : "Entity object for exposing to OpenAPI component schemas",
        "enum" : [ "ALARM_MONITORING_LOCATION_SETTINGS", "ALARM_MONITORING_LICENSE", "DEVICE", "LOCATION", "POLICY", "POLICY_ALERT", "POLICY_ADDENDUM", "POLICY_PAUSE", "USER", "CAMERA_USER_CONFIG", "ORG", "USER_PERMISSION_GROUP", "PARTNER_PERMISSION_GROUP", "VIDEO_WALL", "SHARED_CLIPS", "SAVED_CLIPS", "SHARED_STREAMS", "SPLICED_CLIPS", "TIMELAPSE", "AUDIT_EVENTS", "DIAGNOSTIC_EVENTS", "CAMERA_STATE", "CLIMATE_STATE", "DOOR_STATE", "NVR_STATE", "OCCUPANCY_STATE", "PROXIMITY_STATE", "AUDIO_STATE", "CAMERA", "NVR", "DOOR_SENSOR", "CLIMATE_SENSOR", "PROXIMITY_SENSOR", "BOUNDING_BOX", "SEEK_POINT", "SENSOR_SEEK_POINT", "SCHEDULE", "FACE_EVENT", "DEVICE_SHADOW", "THREAT_CASE", "KEYPAD", "COMPONENT_DOOR_READER_SHADOW", "COMPONENT_DOOR_RELAY_SHADOW", "COMPONENT_DOOR_POSITION_INDICATOR_SHADOW", "COMPONENT_APERIO_GATEWAY_SHADOW", "COMPONENT_APERIO_DOOR_EXT_SHADOW", "COMPONENT_REQUEST_TO_EXIT_SHADOW", "COMPONENT_GENERIC_RELAY_SHADOW", "COMPONENT_GENERIC_INPUT_SHADOW", "COMPONENT_GENERIC_BUTTON_SHADOW", "ACCESS_CONTROLLED_DOOR_SHADOW", "ACCESS_CONTROLLED_DOOR", "COMPONENT_SEEKPOINT", "VEHICLE_EVENT", "DEVICE_INTEGRATION", "SHELLY_INTEGRATION", "THIRD_PARTY_CAMERA_DISCOVERY", "THIRD_PARTY_CAMERA_ASSIGNMENT", "THIRD_PARTY_CAMERA_CREDENTIAL", "CHATBOT_QUERY", "KEYPAD_COMMAND", "UNKNOWN" ]
      },
      "EntityTag" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "value" : {
            "type" : "string",
            "nullable" : true
          },
          "weak" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "EnvironmentalGatewaySettings" : {
        "type" : "object",
        "properties" : {
          "data_measurement_interval_sec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "data_upload_interval_sec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "false_positive_confidence_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "leak_detection_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "leak_detector_present" : {
            "type" : "boolean",
            "nullable" : true
          },
          "moist_detection_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "smoke_confidence_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "smoke_thc_confidence_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "smoke_tobacco_confidence_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "vape_alert_backoff_sec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "vape_confidence_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "vape_thc_confidence_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          }
        }
      },
      "EnvironmentalGatewaySettingsSelectiveUpdate" : {
        "type" : "object",
        "description" : "Update Environmental Sensor settings",
        "properties" : {
          "data_measurement_interval_sec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "data_upload_interval_sec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "false_positive_confidence_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "leak_detection_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "leak_detector_present" : {
            "type" : "boolean",
            "nullable" : true
          },
          "moist_detection_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "smoke_confidence_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "smoke_thc_confidence_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "smoke_tobacco_confidence_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "updatedSetMethodMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "boolean",
              "nullable" : true
            },
            "nullable" : true
          },
          "vape_alert_backoff_sec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "vape_confidence_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "vape_thc_confidence_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          }
        }
      },
      "EnvironmentalGatewayShadowType" : {
        "type" : "object",
        "description" : "List of environmental gateway shadows",
        "properties" : {
          "activeAlertTriggers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "nullable" : true
          },
          "apMac" : {
            "type" : "string",
            "nullable" : true
          },
          "carbonMonoSense" : {
            "$ref" : "#/components/schemas/COSensorType"
          },
          "co2Sense" : {
            "$ref" : "#/components/schemas/Co2SensorType"
          },
          "connected" : {
            "type" : "boolean",
            "nullable" : true
          },
          "connectionTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "connectionUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "defaultInterface" : {
            "type" : "string",
            "nullable" : true
          },
          "defaultInterfaceMac" : {
            "type" : "string",
            "nullable" : true
          },
          "derivedValues" : {
            "$ref" : "#/components/schemas/E50DerivedValuesType"
          },
          "deviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "disconnectTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "externalIPAddress" : {
            "type" : "string",
            "nullable" : true
          },
          "firmwareUpdateInProgress" : {
            "type" : "boolean",
            "nullable" : true
          },
          "firmwareUpdateTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "firmwareVersion" : {
            "type" : "string",
            "nullable" : true
          },
          "formaSense" : {
            "$ref" : "#/components/schemas/FormaSensorType"
          },
          "hardwareUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "internalWanAddress" : {
            "type" : "string",
            "nullable" : true
          },
          "jumpHostUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "lanAddresses" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "leakProbe" : {
            "$ref" : "#/components/schemas/LeakProbeType"
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "pmSense" : {
            "$ref" : "#/components/schemas/PmSensorType"
          },
          "pressSense" : {
            "$ref" : "#/components/schemas/PressureSensorType"
          },
          "prevConnected" : {
            "type" : "boolean",
            "nullable" : true
          },
          "prevConnectedUpdateTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "region" : {
            "type" : "string",
            "nullable" : true
          },
          "secondaryLanAddresses" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "ssid" : {
            "type" : "string",
            "nullable" : true
          },
          "state" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "nullable" : true
            },
            "nullable" : true
          },
          "stateUpdatedTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "tempProbe" : {
            "$ref" : "#/components/schemas/TempProbeType"
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/DeviceTypeEnum"
          },
          "wanAddress" : {
            "type" : "string",
            "nullable" : true
          },
          "wifiSignalStrength" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "EnvoyCustomField" : {
        "type" : "object",
        "properties" : {
          "field" : {
            "type" : "string",
            "nullable" : true
          },
          "value" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "EnvoyDelivery" : {
        "type" : "object",
        "properties" : {
          "carrier" : {
            "$ref" : "#/components/schemas/EnvoyDeliveryInfo"
          },
          "carrierInfo" : {
            "$ref" : "#/components/schemas/EnvoyDeliveryInfo"
          },
          "deliveryArea" : {
            "$ref" : "#/components/schemas/EnvoyDeliveryInfo"
          },
          "deliveryAreaInfo" : {
            "$ref" : "#/components/schemas/EnvoyDeliveryInfo"
          },
          "locationId" : {
            "type" : "string",
            "nullable" : true
          },
          "pickedUpAt" : {
            "type" : "string",
            "nullable" : true
          },
          "pickedUpBy" : {
            "$ref" : "#/components/schemas/EnvoyPersonInfo"
          },
          "receivedTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "recipient" : {
            "$ref" : "#/components/schemas/EnvoyPersonInfo"
          },
          "status" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "EnvoyDeliveryInfo" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "EnvoyExpectedGuest" : {
        "type" : "object",
        "properties" : {
          "expectedArrivalAt" : {
            "type" : "string",
            "nullable" : true
          },
          "expectedArrivalTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "host" : {
            "$ref" : "#/components/schemas/EnvoyPersonInfo"
          },
          "invitee" : {
            "$ref" : "#/components/schemas/EnvoyPersonInfo"
          },
          "locationId" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "EnvoyGuest" : {
        "type" : "object",
        "properties" : {
          "agreementsStatus" : {
            "type" : "string",
            "nullable" : true
          },
          "email" : {
            "type" : "string",
            "nullable" : true
          },
          "fullName" : {
            "type" : "string",
            "nullable" : true
          },
          "host" : {
            "$ref" : "#/components/schemas/EnvoyPersonInfo"
          },
          "locationId" : {
            "type" : "string",
            "nullable" : true
          },
          "notes" : {
            "type" : "string",
            "nullable" : true
          },
          "signedInAt" : {
            "type" : "string",
            "nullable" : true
          },
          "signedInTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "signedOutAt" : {
            "type" : "string",
            "nullable" : true
          },
          "signedOutTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "EnvoyInvite" : {
        "type" : "object",
        "properties" : {
          "customFields" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EnvoyCustomField"
            },
            "nullable" : true
          },
          "expectedArrivalAt" : {
            "type" : "string",
            "nullable" : true
          },
          "expectedDepartureAt" : {
            "type" : "string",
            "nullable" : true
          },
          "flowId" : {
            "type" : "string",
            "nullable" : true
          },
          "hostEmployeeId" : {
            "type" : "string",
            "nullable" : true
          },
          "inviteId" : {
            "type" : "string",
            "nullable" : true
          },
          "invitee" : {
            "$ref" : "#/components/schemas/EnvoyPersonInfo"
          },
          "locationId" : {
            "type" : "string",
            "nullable" : true
          },
          "notes" : {
            "type" : "string",
            "nullable" : true
          },
          "sendEmailToInvitee" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "EnvoyLocation" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "EnvoyLocationInfoType" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "assignedCameraList" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          },
          "locationName" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "EnvoyPersonInfo" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "type" : "string",
            "nullable" : true
          },
          "locationIds" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "locations" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "type" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "EnvoySettings" : {
        "type" : "object",
        "description" : "Envoy visitor management integration settings to update",
        "properties" : {
          "createSeekPoints" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabledTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "enablingUser" : {
            "type" : "string",
            "nullable" : true
          },
          "enablingUserUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "envoyIntegrationInstalled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "indexFaces" : {
            "type" : "boolean",
            "nullable" : true
          },
          "locationInfoMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/EnvoyLocationInfoType"
            },
            "nullable" : true
          },
          "migrated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "refreshToken" : {
            "type" : "string",
            "nullable" : true
          },
          "saveClips" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "EnvoyType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "alertUnauthorizedFaces" : {
              "type" : "boolean",
              "nullable" : true
            },
            "apiToken" : {
              "type" : "string",
              "nullable" : true
            },
            "badgeAuthDisablesAlarmMonitoring" : {
              "type" : "boolean",
              "nullable" : true
            },
            "createSeekPoints" : {
              "type" : "boolean",
              "nullable" : true
            },
            "doorInfoMap" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/BadgeIntegrationDoorInfoType"
              },
              "nullable" : true
            },
            "doorsValidated" : {
              "type" : "boolean",
              "nullable" : true
            },
            "envoyIntegrationInstalled" : {
              "type" : "boolean",
              "nullable" : true
            },
            "envoyUserSettingsMap" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/EnvoyUserSettings"
              },
              "nullable" : true
            },
            "identifyFacesFromBadge" : {
              "type" : "boolean",
              "nullable" : true
            },
            "indexFaces" : {
              "type" : "boolean",
              "nullable" : true
            },
            "locationInfoMap" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/EnvoyLocationInfoType"
              },
              "nullable" : true
            },
            "misconfiguredDoors" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "nullable" : true
              },
              "nullable" : true
            },
            "refreshToken" : {
              "type" : "string",
              "nullable" : true
            },
            "saveClips" : {
              "type" : "boolean",
              "nullable" : true
            },
            "tokenValid" : {
              "type" : "boolean",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "EnvoyUserSettings" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "guestsEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "packagesEnabled" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "EpochSecondsProvisioner" : {
        "type" : "object",
        "discriminator" : {
          "propertyName" : "type"
        },
        "oneOf" : [ {
          "$ref" : "#/components/schemas/StaticEpochSecondsProvisioner"
        } ],
        "properties" : {
          "type" : {
            "type" : "string"
          }
        },
        "required" : [ "type" ]
      },
      "Ethernettester_GetEthernetTesterConfigWSRequest" : {
        "type" : "object",
        "description" : "Request object for retrieving Ethernet tester configuration.",
        "properties" : {
          "version" : {
            "type" : "string",
            "description" : "Version of the Ethernet tester configuration",
            "example" : "1.0",
            "nullable" : true
          }
        }
      },
      "Ethernettester_GetEthernetTesterConfigWSResponse" : {
        "type" : "object",
        "description" : "Response object containing Ethernet tester configuration.",
        "properties" : {
          "configJson" : {
            "type" : "string",
            "description" : "JSON configuration for the Ethernet tester",
            "example" : "{\"testMode\":\"ping\",\"targetHost\":\"192.168.1.1\"}",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "EventCount" : {
        "type" : "object",
        "properties" : {
          "count" : {
            "type" : "number",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "EventListenerType" : {
        "type" : "object",
        "description" : "List of event listeners for the specified device",
        "properties" : {
          "activities" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ActivityEnum"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "clientCertificate" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "byte",
              "nullable" : true
            },
            "nullable" : true
          },
          "clientKey" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "byte",
              "nullable" : true
            },
            "nullable" : true
          },
          "deviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "hostname" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "trustedCertificate" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "byte",
              "nullable" : true
            },
            "nullable" : true
          },
          "uri" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "EventOriginatorEnum" : {
        "type" : "string",
        "enum" : [ "USER", "SUPPORT_AUTHORITY", "API_TOKEN", "RULE", "COMPONENT_COMPOSITE_EVENT", "UNKNOWN" ]
      },
      "EventOriginatorEnum_Minimal" : {
        "type" : "string",
        "enum" : [ "USER", "SUPPORT_AUTHORITY", "API_TOKEN", "RULE", "COMPONENT_COMPOSITE_EVENT", "UNKNOWN" ]
      },
      "Event_CreateSharedClipGroupWSRequest" : {
        "type" : "object",
        "description" : "Request object for creating a shared clip group.",
        "properties" : {
          "expirationTimeSecs" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Expiration time in seconds for the shared clip group",
            "example" : 86400,
            "nullable" : true
          },
          "plaintextPassword" : {
            "type" : "string",
            "description" : "Optional password for accessing the shared clip group",
            "example" : "mypassword123",
            "nullable" : true
          },
          "title" : {
            "type" : "string",
            "description" : "Title for the shared clip group",
            "example" : "Security Incident - Main Entrance",
            "nullable" : true
          },
          "uuids" : {
            "type" : "array",
            "description" : "List of UUIDs for clips to include in the shared group",
            "items" : {
              "$ref" : "#/components/schemas/Event_RuuidWrapper"
            },
            "nullable" : true
          }
        }
      },
      "Event_CreateSharedClipGroupWSResponse" : {
        "type" : "object",
        "description" : "Response object for creating a shared clip group.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "shareUrl" : {
            "type" : "string",
            "description" : "URL for accessing the shared clip group",
            "example" : "https://share.rhombus.com/clips/abc123",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Event_DeleteAlertMonitoringThreatCaseByStatusWSRequest" : {
        "type" : "object",
        "description" : "Request object for deleting alert monitoring threat cases by status.",
        "properties" : {
          "status" : {
            "$ref" : "#/components/schemas/ThreatCaseStatus"
          }
        }
      },
      "Event_DeleteAlertMonitoringThreatCaseByStatusWSResponse" : {
        "type" : "object",
        "description" : "Response object for deleting alert monitoring threat cases by status.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Event_DeleteAlertMonitoringThreatCaseWSRequest" : {
        "type" : "object",
        "description" : "Request object for deleting alert monitoring threat cases.",
        "properties" : {
          "threatCaseUuids" : {
            "type" : "array",
            "description" : "List of threat case UUIDs to delete",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Event_DeleteAlertMonitoringThreatCaseWSResponse" : {
        "type" : "object",
        "description" : "Response object for deleting alert monitoring threat cases.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Event_DeleteSavedClipWSRequest" : {
        "type" : "object",
        "description" : "Request object for deleting a saved clip.",
        "properties" : {
          "savedClipUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Event_DeleteSavedClipWSResponse" : {
        "type" : "object",
        "description" : "Response object for deleting a saved clip.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Event_DeleteSharedClipGroupWSRequest" : {
        "type" : "object",
        "description" : "Request object for deleting a shared clip group.",
        "properties" : {
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Event_DeleteSharedClipGroupWSResponse" : {
        "type" : "object",
        "description" : "Response object for deleting a shared clip group.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Event_DismissAllPolicyAlertsForDeviceWSRequest" : {
        "type" : "object",
        "description" : "Request object for dismissing all policy alerts for specific devices.",
        "properties" : {
          "deviceUuids" : {
            "type" : "array",
            "description" : "List of device UUIDs to dismiss alerts for",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Event_DismissAllPolicyAlertsForDeviceWSResponse" : {
        "type" : "object",
        "description" : "Response object for dismissing all policy alerts for specific devices.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Event_DismissAllPolicyAlertsWSRequest" : {
        "type" : "object",
        "description" : "Request object for dismissing all policy alerts."
      },
      "Event_DismissAllPolicyAlertsWSResponse" : {
        "type" : "object",
        "description" : "Response object for dismissing all policy alerts.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Event_DismissPolicyAlertWSRequest" : {
        "type" : "object",
        "description" : "Request object for dismissing a policy alert.",
        "properties" : {
          "alertUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Event_DismissPolicyAlertWSResponse" : {
        "type" : "object",
        "description" : "Response object for dismissing a policy alert.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Event_DismissPolicyAlertsWSRequest" : {
        "type" : "object",
        "description" : "Request object for dismissing multiple policy alerts.",
        "properties" : {
          "alertUuids" : {
            "type" : "array",
            "description" : "List of policy alert UUIDs to dismiss",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Event_DismissPolicyAlertsWSResponse" : {
        "type" : "object",
        "description" : "Response object for dismissing multiple policy alerts.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Event_FrontendCell" : {
        "type" : "object",
        "description" : "Represents a cell in the motion grid with column and row coordinates.",
        "properties" : {
          "col" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Column coordinate of the cell",
            "example" : 5,
            "nullable" : true
          },
          "row" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Row coordinate of the cell",
            "example" : 3,
            "nullable" : true
          }
        }
      },
      "Event_GetAlertMonitoringThreatCaseWSRequest" : {
        "type" : "object",
        "description" : "Request object for retrieving a specific alert monitoring threat case.",
        "properties" : {
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Event_GetAlertMonitoringThreatCaseWSResponse" : {
        "type" : "object",
        "description" : "Response object containing a specific alert monitoring threat case.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "threatCase" : {
            "$ref" : "#/components/schemas/AlertMonitoringThreatCaseType"
          }
        }
      },
      "Event_GetAlertMonitoringThreatCasesWSRequest" : {
        "type" : "object",
        "description" : "Request object for retrieving alert monitoring threat cases with filtering and pagination options.",
        "properties" : {
          "afterTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Filter for threat cases after this timestamp",
            "example" : 1640995200000,
            "nullable" : true
          },
          "beforeTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Filter for threat cases before this timestamp",
            "example" : 1641081600000,
            "nullable" : true
          },
          "deviceFilter" : {
            "type" : "array",
            "description" : "List of device UUIDs to filter by",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          },
          "lastEvaluatedKey" : {
            "type" : "string",
            "nullable" : true
          },
          "lastTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Last timestamp for pagination",
            "example" : 1640995200000,
            "nullable" : true
          },
          "lastUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "locationFilter" : {
            "type" : "array",
            "description" : "List of location UUIDs to filter by",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          },
          "maxPageSize" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "maxResults" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Maximum number of results to return",
            "example" : 100,
            "nullable" : true
          },
          "mostRecent" : {
            "type" : "boolean",
            "description" : "Whether to return only the most recent threat cases",
            "example" : true,
            "nullable" : true
          },
          "statusFilter" : {
            "type" : "array",
            "description" : "List of threat case statuses to filter by",
            "items" : {
              "$ref" : "#/components/schemas/ThreatCaseStatus"
            },
            "nullable" : true
          }
        }
      },
      "Event_GetAlertMonitoringThreatCasesWSResponse" : {
        "type" : "object",
        "description" : "Response object containing alert monitoring threat cases with pagination information.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "lastEvaluatedKey" : {
            "type" : "string",
            "nullable" : true
          },
          "threatCases" : {
            "type" : "array",
            "description" : "List of threat cases matching the request criteria",
            "items" : {
              "$ref" : "#/components/schemas/AlertMonitoringThreatCaseType"
            },
            "nullable" : true
          }
        }
      },
      "Event_GetClipWithProgressWSRequest" : {
        "type" : "object",
        "description" : "Request object for retrieving a specific clip with progress information.",
        "properties" : {
          "clipUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        },
        "required" : [ "clipUuid" ]
      },
      "Event_GetClipWithProgressWSResponse" : {
        "type" : "object",
        "description" : "Response object containing a specific clip with progress information.",
        "properties" : {
          "clip" : {
            "$ref" : "#/components/schemas/Event_SavedClipWithProgressType"
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Event_GetClipsWithProgressWSRequest" : {
        "type" : "object",
        "description" : "Request object for retrieving clips with progress information and filtering options.",
        "properties" : {
          "deviceUuidFilters" : {
            "type" : "array",
            "description" : "Device uuids to filter clips by.",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          },
          "excludeAlertMonitoringClips" : {
            "type" : "boolean",
            "default" : false,
            "description" : "Filter to exclude clips created for alarm monitoring verification.",
            "nullable" : true
          },
          "filterByPrivate" : {
            "type" : "boolean",
            "default" : false,
            "description" : "Filter to only include private clips in the result.",
            "nullable" : true
          },
          "locationUuidFilters" : {
            "type" : "array",
            "description" : "Location uuids to filter clips by.",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 100,
            "description" : "Page size",
            "maximum" : 200,
            "minimum" : 1,
            "nullable" : true
          },
          "pageToken" : {
            "type" : "string",
            "description" : "Page token received from the previous search request.",
            "example" : "next_page_token_123",
            "nullable" : true
          },
          "searchFilter" : {
            "type" : "string",
            "description" : "Search filter for clips",
            "example" : "motion detected",
            "nullable" : true
          },
          "sortField" : {
            "type" : "string",
            "description" : "Field to sort clips by",
            "example" : "timestamp",
            "nullable" : true
          },
          "sortOrder" : {
            "type" : "string",
            "description" : "Sort order (asc or desc)",
            "example" : "desc",
            "nullable" : true
          },
          "timestampFilterField" : {
            "type" : "string",
            "description" : "Timestamp to filter clips by (either clip creation date or clip footage date).",
            "nullable" : true
          },
          "timestampMsAfter" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Timestamp to find clips after this time.",
            "example" : 1640995200000,
            "nullable" : true
          },
          "timestampMsBefore" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Timestamp to find clips before this time",
            "example" : 1641081600000,
            "nullable" : true
          }
        },
        "required" : [ "pageSize" ]
      },
      "Event_GetClipsWithProgressWSResponse" : {
        "type" : "object",
        "description" : "Response object containing clips with progress information.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "pageToken" : {
            "type" : "string",
            "description" : "Token to be supplied on the next search request to get the next page. If token is null, there is no more data available.",
            "nullable" : true
          },
          "savedClips" : {
            "type" : "array",
            "description" : "List of saved clips with progress information",
            "items" : {
              "$ref" : "#/components/schemas/Event_SavedClipWithProgressType"
            },
            "nullable" : true
          }
        }
      },
      "Event_GetExpiringPolicyAlertsWSRequest" : {
        "type" : "object",
        "description" : "Request object for retrieving expiring policy alerts.",
        "properties" : {
          "expiresBeforeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Epoch timestamp in milliseconds. Used to find policy alerts that expire before this timestamp.\n",
            "nullable" : true
          },
          "lastEvaluatedKey" : {
            "type" : "string",
            "nullable" : true
          },
          "maxPageSize" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        },
        "required" : [ "expiresBeforeMs" ]
      },
      "Event_GetExpiringPolicyAlertsWSResponse" : {
        "type" : "object",
        "description" : "Response object containing a list of expiring policy alerts.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "lastEvaluatedKey" : {
            "type" : "string",
            "description" : "Key used to resume pagination, if applicable",
            "nullable" : true
          },
          "policyAlerts" : {
            "type" : "array",
            "description" : "List of expiring policy alerts",
            "items" : {
              "$ref" : "#/components/schemas/BasePolicyAlertType"
            },
            "nullable" : true
          }
        }
      },
      "Event_GetMotionGridCountsWSResponse" : {
        "type" : "object",
        "description" : "Response object containing motion grid counts for a device.",
        "properties" : {
          "countGrid" : {
            "type" : "array",
            "description" : "Matrix where each cell is a fraction of the camera's resolution and stores the total number of motion events that occurred in the given timeframe",
            "items" : {
              "type" : "array",
              "description" : "Matrix where each cell is a fraction of the camera's resolution and stores the total number of motion events that occurred in the given timeframe",
              "items" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Matrix where each cell is a fraction of the camera's resolution and stores the total number of motion events that occurred in the given timeframe",
                "nullable" : true
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Event_GetMotionGridWSRequest" : {
        "type" : "object",
        "description" : "Request object for retrieving motion grid data for a device.",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          },
          "endTimeUtcSecs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "End time as a UNIX timestamp in seconds",
            "example" : 1641081600,
            "nullable" : true
          },
          "startTimeUtcSecs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start time as a UNIX timestamp in seconds",
            "example" : 1640995200,
            "nullable" : true
          }
        },
        "required" : [ "deviceUuid", "endTimeUtcSecs", "startTimeUtcSecs" ]
      },
      "Event_GetMotionGridWSResponse" : {
        "type" : "object",
        "description" : "Response object containing motion grid data for a device.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "motionCells" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "description" : "Map of timestamps to motion grid cells",
              "items" : {
                "$ref" : "#/components/schemas/Event_FrontendCell"
              },
              "nullable" : true
            },
            "description" : "Map of timestamps to motion grid cells",
            "nullable" : true
          }
        }
      },
      "Event_GetPolicyAlertCountWSRequest" : {
        "type" : "object",
        "description" : "Request object for retrieving the count of policy alerts.",
        "properties" : {
          "maxResultsSize" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Maximum number of results to count",
            "example" : 1000,
            "nullable" : true
          }
        }
      },
      "Event_GetPolicyAlertCountWSResponse" : {
        "type" : "object",
        "description" : "Response object containing the count of policy alerts.",
        "properties" : {
          "count" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Count of policy alerts",
            "example" : 42,
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Event_GetPolicyAlertDetailsWSRequest" : {
        "type" : "object",
        "description" : "Request object for retrieving detailed information about a policy alert.",
        "properties" : {
          "policyAlertUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Event_GetPolicyAlertDetailsWSResponse" : {
        "type" : "object",
        "description" : "Response object containing detailed information about a policy alert.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "policyAlert" : {
            "$ref" : "#/components/schemas/PolicyAlertWithDetailsType"
          }
        }
      },
      "Event_GetPolicyAlertGroupsForDeviceWSRequest" : {
        "type" : "object",
        "description" : "Request object for retrieving policy alert groups for a specific device.",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "lastTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Last timestamp for pagination (required with LastUuid)",
            "example" : 1640995200000,
            "nullable" : true
          },
          "lastUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "maxResults" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Maximum number of results to return",
            "example" : 100,
            "nullable" : true
          }
        }
      },
      "Event_GetPolicyAlertGroupsForDeviceWSResponse" : {
        "type" : "object",
        "description" : "Response object containing policy alert groups for a specific device.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "policyAlertGroups" : {
            "type" : "array",
            "description" : "List of policy alert groups for the device",
            "items" : {
              "$ref" : "#/components/schemas/Event_PolicyAlertGroupV2"
            },
            "nullable" : true
          }
        }
      },
      "Event_GetPolicyAlertGroupsForLocationWSRequest" : {
        "type" : "object",
        "description" : "Request object for retrieving policy alert groups for a specific location.",
        "properties" : {
          "lastTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Last timestamp for pagination",
            "example" : 1640995200000,
            "nullable" : true
          },
          "lastUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "maxResults" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Maximum number of results to return",
            "example" : 100,
            "nullable" : true
          }
        }
      },
      "Event_GetPolicyAlertGroupsForLocationWSResponse" : {
        "type" : "object",
        "description" : "Response object containing policy alert groups for a specific location.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "policyAlertGroups" : {
            "type" : "array",
            "description" : "List of policy alert groups for the location",
            "items" : {
              "$ref" : "#/components/schemas/Event_PolicyAlertGroupV2"
            },
            "nullable" : true
          }
        }
      },
      "Event_GetPolicyAlertGroupsV2WSRequest" : {
        "type" : "object",
        "description" : "Request object for retrieving policy alert groups V2 with pagination options.",
        "properties" : {
          "lastTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Last timestamp for pagination",
            "example" : 1640995200000,
            "nullable" : true
          },
          "lastUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "maxResults" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Maximum number of results to return",
            "example" : 100,
            "nullable" : true
          }
        }
      },
      "Event_GetPolicyAlertGroupsV2WSResponse" : {
        "type" : "object",
        "description" : "Response object containing policy alert groups V2.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "policyAlertGroups" : {
            "type" : "array",
            "description" : "List of policy alert groups V2",
            "items" : {
              "$ref" : "#/components/schemas/Event_PolicyAlertGroupV2"
            },
            "nullable" : true
          }
        }
      },
      "Event_GetPolicyAlertV2WSRequest" : {
        "type" : "object",
        "description" : "Request object for retrieving a specific policy alert V2.",
        "properties" : {
          "policyAlertUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Event_GetPolicyAlertV2WSResponse" : {
        "type" : "object",
        "description" : "Response object containing a specific policy alert V2.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "policyAlert" : {
            "$ref" : "#/components/schemas/PolicyAlertV2Type"
          }
        }
      },
      "Event_GetPolicyAlertWSRequest" : {
        "type" : "object",
        "description" : "Request object for retrieving a specific policy alert.",
        "properties" : {
          "policyAlertUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Event_GetPolicyAlertWSResponse" : {
        "type" : "object",
        "description" : "Response object containing a specific policy alert.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "policyAlert" : {
            "$ref" : "#/components/schemas/BasePolicyAlertType"
          }
        }
      },
      "Event_GetPolicyAlertsV2WSRequest" : {
        "type" : "object",
        "description" : "Request object for retrieving policy alerts V2 with filtering and pagination options.",
        "properties" : {
          "afterTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Filter for alerts after this timestamp",
            "example" : 1640995200000,
            "nullable" : true
          },
          "beforeTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Filter for alerts before this timestamp",
            "example" : 1641081600000,
            "nullable" : true
          },
          "deviceFilter" : {
            "type" : "array",
            "description" : "List of device UUIDs to filter by",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          },
          "lastTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Last timestamp for pagination",
            "example" : 1640995200000,
            "nullable" : true
          },
          "lastUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "locationFilter" : {
            "type" : "array",
            "description" : "List of location UUIDs to filter by",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          },
          "maxResults" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Maximum number of results to return",
            "example" : 100,
            "nullable" : true
          }
        }
      },
      "Event_GetPolicyAlertsV2WSResponse" : {
        "type" : "object",
        "description" : "Response object containing policy alerts V2 with filtering and pagination options.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "oldestPolicyAlert" : {
            "$ref" : "#/components/schemas/PolicyAlertV2Type"
          },
          "policyAlerts" : {
            "type" : "array",
            "description" : "List of policy alerts V2 matching the request criteria",
            "items" : {
              "$ref" : "#/components/schemas/PolicyAlertV2Type"
            },
            "nullable" : true
          }
        }
      },
      "Event_GetPolicyAlertsWSRequest" : {
        "type" : "object",
        "description" : "Request object for retrieving policy alerts with filtering and pagination options.",
        "properties" : {
          "accessControlledDoorFilter" : {
            "type" : "array",
            "description" : "Filter including chosen Access Controlled Doors",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          },
          "afterTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Enter starting timestamp interval in UNIX ms",
            "example" : 1640995200000,
            "nullable" : true
          },
          "beforeTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Enter ending timestamp interval in UNIX ms",
            "example" : 1641081600000,
            "nullable" : true
          },
          "deviceFilter" : {
            "type" : "array",
            "description" : "Filter including chosen Devices",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          },
          "lastTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Search with last known TimestampMs (Required for Pagination)",
            "example" : 1640995200000,
            "nullable" : true
          },
          "lastUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "locationFilter" : {
            "type" : "array",
            "description" : "Filter any locations you would like to include",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          },
          "maxResults" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Set a max result limit",
            "example" : 100,
            "nullable" : true
          }
        }
      },
      "Event_GetPolicyAlertsWSResponse" : {
        "type" : "object",
        "description" : "Response object containing a list of policy alerts.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "policyAlerts" : {
            "type" : "array",
            "description" : "List of policy alerts matching the request criteria",
            "items" : {
              "$ref" : "#/components/schemas/BasePolicyAlertType"
            },
            "nullable" : true
          }
        }
      },
      "Event_GetSavedClipCountWSRequest" : {
        "type" : "object",
        "description" : "Request object for retrieving the count of saved clips with filtering options.",
        "properties" : {
          "deviceFilter" : {
            "type" : "array",
            "description" : "List of device UUIDs to filter clips by",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          },
          "endTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "End time in milliseconds for filtering clips",
            "example" : 1641081600000,
            "nullable" : true
          },
          "locationFilter" : {
            "type" : "array",
            "description" : "List of location UUIDs to filter clips by",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          },
          "startTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start time in milliseconds for filtering clips",
            "example" : 1640995200000,
            "nullable" : true
          }
        }
      },
      "Event_GetSavedClipCountWSResponse" : {
        "type" : "object",
        "description" : "Response object containing the count of saved clips.",
        "properties" : {
          "count" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Count of org-wide saved clips matching the filter criteria",
            "example" : 42,
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "privateCount" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Count of private saved clips matching the filter criteria",
            "example" : 10,
            "nullable" : true
          }
        }
      },
      "Event_GetSavedClipDetailsWSRequest" : {
        "type" : "object",
        "description" : "Request object for retrieving detailed information about a saved clip.",
        "properties" : {
          "clipUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Event_GetSavedClipDetailsWSResponse" : {
        "type" : "object",
        "description" : "Response object containing detailed information about a saved clip.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "savedClip" : {
            "$ref" : "#/components/schemas/SavedClipWithDetailsType"
          }
        }
      },
      "Event_GetSavedClipsByExternalTransactionIdWSRequest" : {
        "type" : "object",
        "description" : "Request object for retrieving saved clips by external transaction ID.",
        "properties" : {
          "externalTransactionId" : {
            "type" : "string",
            "description" : "External transaction ID to search for saved clips",
            "example" : "txn_123456789",
            "nullable" : true
          }
        }
      },
      "Event_GetSavedClipsByExternalTransactionIdWSResponse" : {
        "type" : "object",
        "description" : "Response object containing saved clips by external transaction ID.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "savedClips" : {
            "type" : "array",
            "description" : "List of saved clips matching the external transaction ID",
            "items" : {
              "$ref" : "#/components/schemas/SavedClipV2Type"
            },
            "nullable" : true
          }
        }
      },
      "Event_GetSavedClipsV2WSRequest" : {
        "type" : "object",
        "description" : "Request object for retrieving saved clips with pagination.",
        "properties" : {
          "maxPageSize" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Set max results returned. Note: in future this will be defaulted to 100",
            "example" : 100,
            "nullable" : true
          },
          "pageTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Timestamp start to specify page of up to 100 saved clips",
            "example" : 1640995200000,
            "nullable" : true
          }
        }
      },
      "Event_GetSavedClipsV2WSResponse" : {
        "type" : "object",
        "description" : "Response object containing saved clips with pagination.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "savedClips" : {
            "type" : "array",
            "description" : "List of saved clips",
            "items" : {
              "$ref" : "#/components/schemas/SavedClipV2Type"
            },
            "nullable" : true
          }
        }
      },
      "Event_GetSavedClipsWSRequest" : {
        "type" : "object",
        "description" : "Request object for retrieving saved clips (deprecated)."
      },
      "Event_GetSavedClipsWSResponse" : {
        "type" : "object",
        "description" : "Response object containing saved clips (deprecated).",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "savedClips" : {
            "type" : "array",
            "description" : "List of saved clips",
            "items" : {
              "$ref" : "#/components/schemas/SavedClipV2Type"
            },
            "nullable" : true
          }
        }
      },
      "Event_GetSharedClipGroupDetailsWSRequest" : {
        "type" : "object",
        "description" : "Request object for retrieving detailed information about a shared clip group.",
        "properties" : {
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Event_GetSharedClipGroupDetailsWSResponse" : {
        "type" : "object",
        "description" : "Response object containing detailed information about a shared clip group.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "sharedClipGroup" : {
            "$ref" : "#/components/schemas/SharedClipGroupWithDetailsType"
          }
        }
      },
      "Event_GetSharedClipGroupsV2WSRequest" : {
        "type" : "object",
        "description" : "Request object for retrieving shared clip groups with date filtering.",
        "properties" : {
          "createdAfterMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Filter for clip groups created after this timestamp",
            "example" : 1640995200000,
            "nullable" : true
          },
          "createdBeforeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Filter for clip groups created before this timestamp",
            "example" : 1641081600000,
            "nullable" : true
          }
        }
      },
      "Event_GetSharedClipGroupsV2WSResponse" : {
        "type" : "object",
        "description" : "Response object containing shared clip groups with date filtering.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "sharedClipGroups" : {
            "type" : "array",
            "description" : "List of shared clip groups",
            "items" : {
              "$ref" : "#/components/schemas/SharedClipGroupWrapperV2Type"
            },
            "nullable" : true
          }
        }
      },
      "Event_GetSharedClipGroupsWSRequest" : {
        "type" : "object",
        "description" : "Request object for retrieving shared clip groups (deprecated)."
      },
      "Event_GetSharedClipGroupsWSResponse" : {
        "type" : "object",
        "description" : "Response object containing shared clip groups (deprecated).",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "sharedClipGroups" : {
            "type" : "array",
            "description" : "List of shared clip groups",
            "items" : {
              "$ref" : "#/components/schemas/SharedClipGroupWrapperType"
            },
            "nullable" : true
          }
        }
      },
      "Event_GetSplicedClipsInProgressWSRequest" : {
        "type" : "object",
        "description" : "Request object for retrieving spliced clips in progress (deprecated)."
      },
      "Event_GetSplicedClipsInProgressWSResponse" : {
        "type" : "object",
        "description" : "Response object containing spliced clips in progress (deprecated).",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "splicedClips" : {
            "type" : "array",
            "description" : "List of spliced clips currently in progress",
            "items" : {
              "$ref" : "#/components/schemas/SplicedClipType"
            },
            "nullable" : true
          }
        }
      },
      "Event_GetUnhealthyDeviceAlertsWSRequest" : {
        "type" : "object",
        "description" : "Request object for retrieving unhealthy device alerts."
      },
      "Event_GetUnhealthyDeviceAlertsWSResponse" : {
        "type" : "object",
        "description" : "Response object containing unhealthy device alerts.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "unhealthyDeviceAlerts" : {
            "type" : "array",
            "description" : "List of unhealthy device alerts",
            "items" : {
              "$ref" : "#/components/schemas/UnHealthyDeviceAlertType"
            },
            "nullable" : true
          }
        }
      },
      "Event_MuteNotificationsForDevicetWSRequest" : {
        "type" : "object",
        "description" : "Request object for muting notifications for a specific device.",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "durationSec" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Duration to mute notifications in seconds",
            "example" : 3600,
            "nullable" : true
          }
        }
      },
      "Event_MuteNotificationsForDevicetWSResponse" : {
        "type" : "object",
        "description" : "Response object for muting notifications for a specific device.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Event_PolicyAlertGroupV2" : {
        "type" : "object",
        "description" : "Group of policy alerts V2 with time range information.",
        "properties" : {
          "endTime" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "End time of the alert group (descending chronological order)",
            "example" : 1641081600000,
            "nullable" : true
          },
          "policyAlerts" : {
            "type" : "array",
            "description" : "List of policy alerts V2 in the group",
            "items" : {
              "$ref" : "#/components/schemas/PolicyAlertV2Type"
            },
            "nullable" : true
          },
          "startTime" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start time of the alert group (descending chronological order)",
            "example" : 1640995200000,
            "nullable" : true
          }
        }
      },
      "Event_ReportBadPolicyAlertWSRequest" : {
        "type" : "object",
        "description" : "Request object for reporting a bad policy alert.",
        "properties" : {
          "policyAlert" : {
            "$ref" : "#/components/schemas/PolicyAlertV2Type"
          }
        }
      },
      "Event_ReportBadPolicyAlertWSResponse" : {
        "type" : "object",
        "description" : "Response object for reporting a bad policy alert.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Event_RuuidWrapper" : {
        "type" : "object",
        "description" : "Wrapper object containing UUIDs for alerts and events.",
        "properties" : {
          "alertUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "eventUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Event_SavePolicyAlertWSRequest" : {
        "type" : "object",
        "description" : "Request object for saving a policy alert as a clip.",
        "properties" : {
          "alertUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "fisheyePresentationMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "description" : "Map of device UUIDs to dewarped view configurations for fisheye cameras",
              "items" : {
                "$ref" : "#/components/schemas/DewarpedView"
              },
              "nullable" : true
            },
            "description" : "Map of device UUIDs to dewarped view configurations for fisheye cameras",
            "nullable" : true
          },
          "savedClipDescription" : {
            "type" : "string",
            "description" : "Description for the saved clip",
            "example" : "Motion detected at main entrance",
            "nullable" : true
          },
          "savedClipTitle" : {
            "type" : "string",
            "description" : "Title for the saved clip",
            "example" : "Security Incident - Motion Detected",
            "nullable" : true
          }
        }
      },
      "Event_SavePolicyAlertWSResponse" : {
        "type" : "object",
        "description" : "Response object for saving a policy alert as a clip.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Event_SavedClipWithProgressType" : {
        "type" : "object",
        "description" : "Saved clip with progress information for processing operations.",
        "properties" : {
          "accessSettings" : {
            "$ref" : "#/components/schemas/ClipAccessSettings"
          },
          "alterMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/AlteredView"
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "analyzed" : {
            "type" : "boolean",
            "nullable" : true
          },
          "byteCount" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "clipLocation" : {
            "$ref" : "#/components/schemas/MetaDataLocationType"
          },
          "consoleDelete" : {
            "type" : "boolean",
            "nullable" : true
          },
          "createdAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "currentOperation" : {
            "type" : "string",
            "description" : "Current operation being performed on the clip",
            "example" : "Processing video",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "devicePresentationOrder" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "DeviceFacetUuid",
              "description" : "RUUID with optional appended facet information",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
              "nullable" : true
            },
            "nullable" : true
          },
          "deviceUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          },
          "deviceUuidMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/MetaDataLocationType"
            },
            "nullable" : true
          },
          "deviceUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "DeviceFacetUuid",
              "description" : "RUUID with optional appended facet information",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
              "nullable" : true
            },
            "nullable" : true
          },
          "durationSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "externalTransactionId" : {
            "type" : "string",
            "nullable" : true
          },
          "fisheyeMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/DewarpedView"
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "integrationUploadList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/IntegrationEnum"
            },
            "nullable" : true
          },
          "isMonitoringClip" : {
            "type" : "boolean",
            "nullable" : true
          },
          "isVendorClip" : {
            "type" : "boolean",
            "nullable" : true
          },
          "lastUpdatedSec" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Last update timestamp in seconds",
            "example" : 1640995200,
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "percentComplete" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Percentage of completion for the current operation",
            "example" : 75,
            "nullable" : true
          },
          "sendToSharedStorage" : {
            "type" : "boolean",
            "nullable" : true
          },
          "sha256Hex" : {
            "type" : "string",
            "nullable" : true
          },
          "sourceAlertUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "status" : {
            "type" : "string",
            "enum" : [ "INITIATING", "UPLOADING", "RENDERING", "FAILED", "COMPLETE", "OFFLINE", "UNKNOWN" ],
            "nullable" : true
          },
          "thumbnailLocation" : {
            "$ref" : "#/components/schemas/MetaDataLocationType"
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "title" : {
            "type" : "string",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "videoResolution" : {
            "$ref" : "#/components/schemas/Resolution"
          }
        }
      },
      "Event_SearchMotionGridWSRequest" : {
        "type" : "object",
        "description" : "Request object for searching motion grid data.",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          },
          "endTimeUtcSecs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "End time as a UNIX timestamp in seconds",
            "example" : 1641081600,
            "nullable" : true
          },
          "searchCells" : {
            "type" : "array",
            "description" : "List of motion grid cells to include in the search",
            "items" : {
              "$ref" : "#/components/schemas/Event_FrontendCell"
            },
            "nullable" : true
          },
          "startTimeUtcSecs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start time as a UNIX timestamp in seconds",
            "example" : 1640995200,
            "nullable" : true
          }
        },
        "required" : [ "deviceUuid", "endTimeUtcSecs", "searchCells", "startTimeUtcSecs" ]
      },
      "Event_SearchMotionGridWSResponse" : {
        "type" : "object",
        "description" : "Response object containing motion grid search results.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "timeUtcSecsList" : {
            "type" : "array",
            "description" : "List of timestamps where motion was detected in the specified cells",
            "items" : {
              "type" : "integer",
              "format" : "int64",
              "description" : "List of timestamps where motion was detected in the specified cells",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Event_SearchMotionGridWithActivitiesWSRequest" : {
        "type" : "object",
        "description" : "Request object for searching motion grid data with activity information.",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          },
          "endTimeUtcSecs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "End time as a UNIX timestamp in seconds",
            "example" : 1641081600,
            "nullable" : true
          },
          "searchCells" : {
            "type" : "array",
            "description" : "List of motion grid cells to include in the search",
            "items" : {
              "$ref" : "#/components/schemas/Event_FrontendCell"
            },
            "nullable" : true
          },
          "startTimeUtcSecs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start time as a UNIX timestamp in seconds",
            "example" : 1640995200,
            "nullable" : true
          }
        },
        "required" : [ "deviceUuid", "endTimeUtcSecs", "searchCells", "startTimeUtcSecs" ]
      },
      "Event_SearchMotionGridWithActivitiesWSResponse" : {
        "type" : "object",
        "description" : "Response object containing motion grid search results with activity information.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "timeUtcSecsToActivityMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Event_SearchMotionGridWithActivitiesWSResponse_MotionGridActivity"
            },
            "description" : "Map of timestamps to motion grid activities",
            "nullable" : true
          }
        }
      },
      "Event_SearchMotionGridWithActivitiesWSResponse_ActivityWithId" : {
        "type" : "object",
        "description" : "Activity information with object ID.",
        "properties" : {
          "activity" : {
            "$ref" : "#/components/schemas/ActivityEnum"
          },
          "objectId" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Object ID associated with the activity",
            "example" : 123,
            "nullable" : true
          }
        }
      },
      "Event_SearchMotionGridWithActivitiesWSResponse_MotionGridActivity" : {
        "type" : "object",
        "description" : "Motion grid activity information for a specific timestamp.",
        "properties" : {
          "activities" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ActivityEnum"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "activitiesWithId" : {
            "type" : "array",
            "description" : "List of activities with object IDs",
            "items" : {
              "$ref" : "#/components/schemas/Event_SearchMotionGridWithActivitiesWSResponse_ActivityWithId"
            },
            "nullable" : true
          },
          "bestTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Best timestamp in milliseconds for the activity",
            "example" : 1640995200000,
            "nullable" : true
          }
        }
      },
      "Event_UnSavePolicyAlertWSRequest" : {
        "type" : "object",
        "description" : "Request object for unsaving a policy alert (deprecated).",
        "properties" : {
          "alertUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "savedClipUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Event_UnSavePolicyAlertWSResponse" : {
        "type" : "object",
        "description" : "Response object for unsaving a policy alert (deprecated).",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Event_UpdatePolicyAlertTextDescriptionWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating the text description of a policy alert.",
        "properties" : {
          "alertUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "textDescription" : {
            "type" : "string",
            "description" : "Text description for the policy alert",
            "example" : "Motion detected at main entrance",
            "nullable" : true
          }
        }
      },
      "Event_UpdatePolicyAlertTextDescriptionWSResponse" : {
        "type" : "object",
        "description" : "Response object for updating the text description of a policy alert.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Event_UpdateSavedClipWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating a saved clip.",
        "properties" : {
          "accessSettings" : {
            "$ref" : "#/components/schemas/ClipAccessSettings"
          },
          "description" : {
            "type" : "string",
            "description" : "Updated description for the saved clip",
            "example" : "Updated description of the security incident",
            "nullable" : true
          },
          "savedClipUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "title" : {
            "type" : "string",
            "description" : "Updated title for the saved clip",
            "example" : "Updated Security Incident",
            "nullable" : true
          }
        },
        "required" : [ "savedClipUuid" ]
      },
      "Event_UpdateSavedClipWSResponse" : {
        "type" : "object",
        "description" : "Response object for updating a saved clip.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Event_UpdateSharedClipGroupWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating a shared clip group.",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "Description for the shared clip group",
            "example" : "Updated description of the security incident",
            "nullable" : true
          },
          "expirationTimeSecs" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "writeOnly" : true
          },
          "plaintextPassword" : {
            "type" : "string",
            "description" : "Password for accessing the shared clip group",
            "example" : "newpassword123",
            "nullable" : true
          },
          "sharedClipUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "title" : {
            "type" : "string",
            "description" : "Title for the shared clip group",
            "example" : "Updated Security Incident",
            "nullable" : true
          }
        }
      },
      "Event_UpdateSharedClipGroupWSResponse" : {
        "type" : "object",
        "description" : "Response object for updating a shared clip group.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "shareUrl" : {
            "type" : "string",
            "description" : "URL for accessing the updated shared clip group",
            "example" : "https://share.rhombus.com/clips/abc123",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Event_groups_CreateClipGroupWSRequest" : {
        "type" : "object",
        "description" : "Request object for creating a clip group.",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "Description for the clip group",
            "example" : "Motion detected at main entrance",
            "nullable" : true
          },
          "title" : {
            "type" : "string",
            "description" : "Title for the clip group",
            "example" : "Security Incident - Main Entrance",
            "nullable" : true
          },
          "uuids" : {
            "type" : "array",
            "description" : "List of UUIDs for clips to include in the group",
            "items" : {
              "$ref" : "#/components/schemas/Event_RuuidWrapper"
            },
            "nullable" : true
          }
        }
      },
      "Event_groups_CreateClipGroupWSResponse" : {
        "type" : "object",
        "description" : "Response object for creating a clip group.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Event_groups_DeleteClipGroupWSRequest" : {
        "type" : "object",
        "description" : "Request object for deleting a clip group.",
        "properties" : {
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Event_groups_DeleteClipGroupWSResponse" : {
        "type" : "object",
        "description" : "Response object for deleting a clip group.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Event_groups_GetClipGroupDetailsWSRequest" : {
        "type" : "object",
        "description" : "Request object for retrieving detailed information about a clip group.",
        "properties" : {
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Event_groups_GetClipGroupDetailsWSResponse" : {
        "type" : "object",
        "description" : "Response object containing detailed information about a clip group.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "group" : {
            "$ref" : "#/components/schemas/ClipGroupWithDetailsType"
          }
        }
      },
      "Event_groups_GetClipGroupsForOrgWSRequest" : {
        "type" : "object",
        "description" : "Request object for retrieving clip groups for an organization with date filtering.",
        "properties" : {
          "createdAfterMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Filter for clip groups created after this timestamp",
            "example" : 1640995200000,
            "nullable" : true
          },
          "createdBeforeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Filter for clip groups created before this timestamp",
            "example" : 1641081600000,
            "nullable" : true
          }
        }
      },
      "Event_groups_GetClipGroupsForOrgWSResponse" : {
        "type" : "object",
        "description" : "Response object containing clip groups for an organization.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "groups" : {
            "type" : "array",
            "description" : "List of clip groups for the organization",
            "items" : {
              "$ref" : "#/components/schemas/ClipGroupType"
            },
            "nullable" : true
          }
        }
      },
      "Event_groups_UpdateClipGroupWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating a clip group.",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "Description for the clip group",
            "example" : "Updated description of the security incident",
            "nullable" : true
          },
          "title" : {
            "type" : "string",
            "description" : "Title for the clip group",
            "example" : "Updated Security Incident",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "uuids" : {
            "type" : "array",
            "description" : "List of UUIDs for clips to include in the group",
            "items" : {
              "$ref" : "#/components/schemas/Event_RuuidWrapper"
            },
            "nullable" : true
          }
        }
      },
      "Event_groups_UpdateClipGroupWSResponse" : {
        "type" : "object",
        "description" : "Response object for updating a clip group.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Eventsearch_CombinedSeekPointType" : {
        "type" : "object",
        "description" : "Combined seekpoint type containing information from various event sources including timestamps, activities, and metadata.",
        "properties" : {
          "activity" : {
            "$ref" : "#/components/schemas/ActivityEnum"
          },
          "cameraUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          },
          "customActivityColor" : {
            "type" : "string",
            "description" : "Custom color for the activity display",
            "enum" : [ "BLUE", "RED", "PURPLE", "TAN", "ORANGE", "TEAL", "GRAY", "BLACK" ],
            "nullable" : true
          },
          "customActivityDescription" : {
            "type" : "string",
            "description" : "Custom description for the activity",
            "example" : "A person was detected in the camera view",
            "nullable" : true
          },
          "customActivityDisplayName" : {
            "type" : "string",
            "description" : "Custom display name for the activity",
            "example" : "Person Detected",
            "nullable" : true
          },
          "faceName" : {
            "type" : "string",
            "description" : "Name of the face detected in this seekpoint",
            "example" : "John Doe",
            "nullable" : true
          },
          "licensePlate" : {
            "type" : "string",
            "description" : "License plate detected in this seekpoint",
            "example" : "ABC123",
            "nullable" : true
          },
          "objectId" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Object ID for tracking purposes",
            "example" : 12345,
            "nullable" : true
          },
          "originalEvent" : {
            "type" : "object",
            "description" : "Original event object that generated this seekpoint",
            "nullable" : true
          },
          "seekpointEndTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "End time in milliseconds for the seekpoint duration",
            "example" : 1640995300000,
            "nullable" : true
          },
          "seekpointStartTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start time in milliseconds for the seekpoint duration",
            "example" : 1640995200000,
            "nullable" : true
          },
          "thumbnailUrl" : {
            "type" : "string",
            "description" : "URL to the thumbnail image for this seekpoint",
            "example" : "https://example.com/thumbnail.jpg",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Timestamp in milliseconds when the seekpoint occurred",
            "example" : 1640995200000,
            "nullable" : true
          },
          "unidentifiedFaceId" : {
            "type" : "string",
            "description" : "ID for unidentified faces",
            "example" : "face_12345",
            "nullable" : true
          }
        }
      },
      "Eventsearch_GetCameraOrDoorbellCameraSeekpointsWSResponse" : {
        "type" : "object",
        "description" : "Response object containing seekpoints from camera or doorbell camera events.",
        "properties" : {
          "combinedSeekpoints" : {
            "type" : "array",
            "description" : "List of combined seekpoints from camera or doorbell camera events",
            "items" : {
              "$ref" : "#/components/schemas/Eventsearch_CombinedSeekPointType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Eventsearch_GetEventSeekpointsV2WSRequest" : {
        "type" : "object",
        "description" : "Request object for retrieving event seekpoints V2 with enhanced filtering and clustering options.",
        "properties" : {
          "accessControlledDoorUuids" : {
            "type" : "array",
            "description" : "Set of access controlled door uuids to retrieve component seekpoints for.",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "activityFilter" : {
            "type" : "array",
            "description" : "Optional filter to specify what activities are returned.",
            "items" : {
              "$ref" : "#/components/schemas/ActivityEnum"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "clothingColorFilter" : {
            "type" : "array",
            "description" : "Optional filter to specify which human motion seekpoints are returned.",
            "items" : {
              "type" : "string",
              "description" : "Optional filter to specify which human motion seekpoints are returned.",
              "enum" : [ "BLACK", "BLUE", "BROWN", "GRAYWHITE", "GREEN", "ORANGE", "PINK", "PURPLE", "RED", "YELLOW", "UNKNOWN" ],
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "clusterIntervalSec" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "An optional interval X (in seconds) that, when specified, causes this endpoint to return a smaller collection of seekpoints. These seekpoints represent clusters of activities that occur consecutively within X seconds of each other.",
            "nullable" : true
          },
          "deviceUuids" : {
            "type" : "array",
            "description" : "Set of device facet uuids to retrieve footage seekpoints for.",
            "items" : {
              "type" : "string",
              "format" : "DeviceFacetUuid",
              "description" : "RUUID with optional appended facet information",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "durationSec" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Duration in seconds since the start time to retrieve seekpoints for.",
            "nullable" : true
          },
          "includeAnyMotion" : {
            "type" : "boolean",
            "default" : false,
            "description" : "Determines whether or not any motion seekpoints are returned.",
            "nullable" : true
          },
          "includeIntegrationEvents" : {
            "type" : "boolean",
            "default" : false,
            "description" : "Determines whether or not to include any seekpoints from enabled integrations.",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "searchCells" : {
            "type" : "array",
            "description" : "Optional filter used to limit the seekpoint search to the region provided.",
            "items" : {
              "$ref" : "#/components/schemas/Event_FrontendCell"
            },
            "nullable" : true
          },
          "startTimeSec" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "UNIX timestamp in seconds for when to start retrieving seekpoints.",
            "nullable" : true
          },
          "vehicleColorFilter" : {
            "type" : "array",
            "description" : "Optional filter to specify which vehicle motion seekpoints are returned.",
            "items" : {
              "type" : "string",
              "description" : "Optional filter to specify which vehicle motion seekpoints are returned.",
              "enum" : [ "BLACK", "BLUE", "BROWN", "GRAYWHITE", "GREEN", "ORANGE", "PINK", "PURPLE", "RED", "YELLOW", "UNKNOWN" ],
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        },
        "required" : [ "durationSec", "startTimeSec" ]
      },
      "Eventsearch_GetEventSeekpointsWSRequest" : {
        "type" : "object",
        "description" : "Request object for retrieving event seekpoints with various search criteria and filtering options.",
        "properties" : {
          "activitySet" : {
            "type" : "array",
            "description" : "Set of activity types to filter seekpoints by",
            "items" : {
              "$ref" : "#/components/schemas/ActivityEnum"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "componentSeekPointsByAccessControlledDoorWSRequest" : {
            "$ref" : "#/components/schemas/Component_FindComponentSeekPointsByAccessControlledDoorWSRequest"
          },
          "componentSeekPointsByAccessControlledDoorsWSRequest" : {
            "$ref" : "#/components/schemas/Component_FindComponentSeekPointsByAccessControlledDoorsWSRequest"
          },
          "componentSeekPointsByOwnerDeviceWSRequest" : {
            "$ref" : "#/components/schemas/Component_FindComponentSeekPointsByOwnerDeviceWSRequest"
          },
          "durationSec" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Duration in seconds for the search window",
            "example" : 3600,
            "nullable" : true
          },
          "searchColorAndVehicleByColorWSRequest" : {
            "$ref" : "#/components/schemas/Eventsearch_SearchClothingAndVehicleByColorWSRequest"
          },
          "searchMotionGridWithActivitiesWSRequest" : {
            "$ref" : "#/components/schemas/Event_SearchMotionGridWithActivitiesWSRequest"
          },
          "seekpointsWSRequest" : {
            "$ref" : "#/components/schemas/Common_devices_GetSeekpointsWSRequest"
          },
          "startTimeSec" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start time in seconds for the search window",
            "example" : 1640995200,
            "nullable" : true
          },
          "videoFootageWSRequest" : {
            "$ref" : "#/components/schemas/Eventsearch_VideoFootageWSRequest"
          }
        }
      },
      "Eventsearch_GetEventSeekpointsWSResponse" : {
        "type" : "object",
        "description" : "Response object containing combined seekpoints from various event sources.",
        "properties" : {
          "combinedSeekpoints" : {
            "type" : "array",
            "description" : "List of combined seekpoints from various event sources",
            "items" : {
              "$ref" : "#/components/schemas/Eventsearch_CombinedSeekPointType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Eventsearch_SearchClothingAndVehicleByColorWSRequest" : {
        "type" : "object",
        "description" : "Request object for searching clothing and vehicle events by color with time and device filtering.",
        "properties" : {
          "clothingColorFilter" : {
            "type" : "array",
            "description" : "Set of clothing colors to filter the search by",
            "items" : {
              "type" : "string",
              "description" : "Set of clothing colors to filter the search by",
              "enum" : [ "BLACK", "BLUE", "BROWN", "GRAYWHITE", "GREEN", "ORANGE", "PINK", "PURPLE", "RED", "YELLOW", "UNKNOWN" ],
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "deviceFilter" : {
            "type" : "array",
            "description" : "List of device UUIDs to filter the search by",
            "items" : {
              "type" : "string",
              "format" : "DeviceFacetUuid",
              "description" : "RUUID with optional appended facet information",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
              "nullable" : true
            },
            "nullable" : true
          },
          "endTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "End time in milliseconds for the search window",
            "example" : 1641081600000,
            "nullable" : true
          },
          "startTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start time in milliseconds for the search window",
            "example" : 1640995200000,
            "nullable" : true
          },
          "vehicleColorFilter" : {
            "type" : "array",
            "description" : "Set of vehicle colors to filter the search by",
            "items" : {
              "type" : "string",
              "description" : "Set of vehicle colors to filter the search by",
              "enum" : [ "BLACK", "BLUE", "BROWN", "GRAYWHITE", "GREEN", "ORANGE", "PINK", "PURPLE", "RED", "YELLOW", "UNKNOWN" ],
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "Eventsearch_VideoFootageWSRequest" : {
        "type" : "object",
        "description" : "Request object for video footage search with camera selection and multi-camera options.",
        "properties" : {
          "cameraUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          },
          "cameraUuids" : {
            "type" : "array",
            "description" : "List of camera UUIDs to search for video footage",
            "items" : {
              "type" : "string",
              "format" : "DeviceFacetUuid",
              "description" : "RUUID with optional appended facet information",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
              "nullable" : true
            },
            "nullable" : true
          },
          "duration" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Duration in seconds",
            "example" : 3600,
            "nullable" : true
          },
          "includeAnyMotion" : {
            "type" : "boolean",
            "description" : "Whether to include any motion events",
            "example" : true,
            "nullable" : true
          },
          "startTime" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start time in seconds since epoch",
            "example" : 1640995200,
            "nullable" : true
          },
          "useMultiCamera" : {
            "type" : "boolean",
            "description" : "Whether to use multi-camera search functionality",
            "example" : true,
            "nullable" : true
          }
        }
      },
      "Export_ExportAuditEventsWSRequest" : {
        "type" : "object",
        "description" : "Request object for exporting audit events to CSV format with filtering options.",
        "properties" : {
          "endInterval" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "End time interval in milliseconds for filtering audit events",
            "example" : 1641081600000,
            "nullable" : true
          },
          "excludeActions" : {
            "type" : "array",
            "description" : "If not empty, events with actions specified in the list are filtered out. If both include and exclude actions are specified, exclude actions are ignored.",
            "items" : {
              "type" : "string",
              "description" : "If not empty, events with actions specified in the list are filtered out. If both include and exclude actions are specified, exclude actions are ignored.",
              "enum" : [ "THREAT_CASE_ESCALATED", "THREAT_CASE_CANCELLED", "THREAT_CASE_DISMISSED", "THREAT_CASE_DELETED", "THREAT_CASE_DELETE_BY_STATUS", "PIN_CREATED", "PIN_DELETED", "ALM_PIN_CREATE", "ALM_PIN_BULK_CREATE", "ALM_PIN_UPDATE", "ALM_PIN_ROTATE", "ALM_PIN_BULK_ROTATE", "ALM_PIN_DELETE", "BASIC_AUTH_SUCCESS", "BASIC_AUTH_FAILURE", "SAML_LOGIN_WEB", "LOGIN_WEB", "PASSWORDLESS_LOGIN_WEB", "PARTNER_LOGIN_WEB", "PARTNER_PASSWORDLESS_LOGIN_WEB", "SAML_LOGIN_FAILURE_WEB", "LOGIN_FAILURE_WEB", "RHOMBUS_KEY_LOGIN", "RHOMBUS_KEY_PASSWORDLESS_LOGIN", "RHOMBUS_KEY_SAML_LOGIN", "LOGOUT_WEB", "PARTNER_LOGOUT_WEB", "WEB_CONSOLE_ACCESS", "MOBILE_CONSOLE_ACCESS", "SAML_LOGIN_MOBILE", "PARTNER_LOGIN_MOBILE", "PARTNER_PASSWORDLESS_LOGIN_MOBILE", "LOGIN_MOBILE", "PASSWORDLESS_LOGIN_MOBILE", "SAML_LOGIN_FAILURE_MOBILE", "LOGIN_FAILURE_MOBILE", "LOGOUT_MOBILE", "PARTNER_LOGOUT_MOBILE", "MOBILE_ACCESS", "PARTNER_LOGIN_MOBIlE_REFRESH", "LOGIN_MOBIlE_REFRESH", "RHOMBUS_KEY_LOGIN_REFRESH", "CAMERA_WIFI_NETWORK_CHANGED", "CAMERA_FORCED_REBOOT", "AUDIO_GATEWAY_FORCED_REBOOT", "ENVIRONMENTAL_GATEWAY_FORCED_REBOOT", "DOORBELL_CAMERA_FORCED_REBOOT", "BADGE_READER_FORCED_REBOOT", "FIRMWARE_UPDATE_CAMERA", "DELETE_CAMERA", "DELETE_USER", "DELETE_LOCATION", "LOCATION_UPDATED", "DELETE_ROLE", "ERASE_CAMERA", "POLICY_UPDATE", "POLICY_DELETE", "POLICY_PAUSED_LOCATION", "POLICY_PAUSED_DEVICE", "POLICY_PAUSED_COMPONENT_COMPOSITE", "CREATE_POLICY_ADDENDUM", "DEVICE_REGISTERED", "DEVICE_UPDATE", "DEVICE_SETTINGS_UPDATE", "REVERT_TO_DEFAULTS", "DEVICE_FEATURE_UPDATE", "DEVICE_ORG_REASSIGN", "CLAIMKEY_RENEWAL_CREATED", "LICENSES_CLAIMED", "LICENSES_RETURNED", "LICENSE_ASSIGNED", "LICENSE_CREATED", "LICENSE_UPDATED", "USER_UPDATE", "USER_CREATE", "USER_IMPORT", "BULK_PROVISION_CREDENTIALS", "ROLE_CREATE", "POLICY_CREATE", "PARTNER_CLIENT_CREATE", "PARTNER_CUSTOMIZE_CLIENT", "PARTNER_CUSTOMIZE_CLIENT_DEVICE", "ORG_UPDATE", "DELETE_ORG", "DISABLE_ORG", "CREATE_ORG", "ROLE_UPDATE", "USER_ROLE_UPDATE", "USER_EMAIL_UPDATE", "TIMELAPSE_CREATE", "TIMELAPSE_DELETE", "ALERT_DISMISS", "ALL_ALERT_DISMISS", "SAVED_CLIP_CREATE", "SAVED_CLIP_DELETE", "CLIP_GROUP_CREATED", "CLIP_GROUP_DELETE", "SHARED_CLIP_DELETE", "SHARED_CLIP_CREATE", "SHARED_LINK_SENT", "SHARED_LIVE_VIDEO_STREAM_WITH_PASSWORD_CREATE", "SHARED_LIVE_VIDEO_STREAM_WITHOUT_PASSWORD_CREATE", "SHARED_LIVE_VIDEO_STREAM_DELETE", "SHARED_VIDEOWALL_WITH_PASSWORD_CREATE", "SHARED_VIDEOWALL_WITHOUT_PASSWORD_CREATE", "SHARED_VIDEOWALL_DELETE", "RAW_HTTP_STREAM_CREATED", "RAW_HTTP_STREAM_DELETED", "SETUP_VIRTUAL_MFA_DEVICE", "DELETE_VIRTUAL_MFA_DEVICE", "SETUP_SCIM_API_ACCESS", "REVOKE_SCIM_API_ACCESS", "AUDIT_EXPORT", "COUNT_EXPORT", "DIAGNOSTIC_EXPORT", "INVENTORY_EXPORT", "USERS_EXPORT", "UPTIME_EXPORT", "SUPPORT_TICKET_OPEN", "RMA_OPEN", "FEEDBACK_CREATE", "SUPPORT_ACCESS_GRANT", "SUPPORT_ACCESS_REVOKE", "SUPPORT_PARTNER_ADD", "SUPPORT_PARTNER_REMOVE", "SUPPORT_PARTNER_LOGIN_ACCESS_EXPIRED", "SUPPORT_SEARCH_TICKETS", "ACCEPT_UAP", "ACCEPT_RHOMBUS_UAP", "ACCEPT_ALERTMONITORING_UAP", "CREATE_SEEKPOINT", "DELETE_CUSTOM_SEEKPOINT", "UPDATE_INTEGRATION_SAML", "UPDATE_INTEGRATION_SLACK", "UPDATE_INTEGRATION_SLACK_V2", "DELETE_INTEGRATION_SLACK_V2", "UPDATE_INTEGRATION_BOX", "DELETE_INTEGRATION_BOX", "UPDATE_INTEGRATION_GOOGLE", "DELETE_INTEGRATION_GOOGLE", "UPDATE_INTEGRATION_GOOGLE_V2", "DELETE_INTEGRATION_GOOGLE_V2", "UPDATE_INTEGRATION_PAGERDUTY", "DELETE_INTEGRATION_PAGERDUTY", "UPDATE_INTEGRATION_SERVICENOW", "DELETE_INTEGRATION_SERVICENOW", "UPDATE_INTEGRATION_OFFICE365", "DELETE_INTEGRATION_OFFICE365", "UPDATE_INTEGRATION_DROPBOX", "DELETE_INTEGRATION_DROPBOX", "UPDATE_INTEGRATION_SQUARE", "DELETE_INTEGRATION_SQUARE", "UPDATE_INTEGRATION_AWS", "DELETE_INTEGRATION_AWS", "UPDATE_INTEGRATION_HALO", "DELETE_INTEGRATION_HALO", "UPDATE_INTEGRATION_WEBHOOK", "DELETE_INTEGRATION_WEBHOOK", "UPDATE_INTEGRATION_EMAIL", "DELETE_INTEGRATION_EMAIL", "UPDATE_INTEGRATION_MATTERMOST", "DELETE_INTEGRATION_MATTERMOST", "UPDATE_INTEGRATION_OPENPATH", "DELETE_INTEGRATION_OPENPATH", "UPDATE_INTEGRATION_AVIGILON_ALTA", "DELETE_INTEGRATION_AVIGILON_ALTA", "UPDATE_INTEGRATION_DICE", "DELETE_INTEGRATION_DICE", "UPDATE_INTEGRATION_LUMEO", "DELETE_INTEGRATION_LUMEO", "UPDATE_INTEGRATION_DEVICE", "DELETE_INTEGRATION_DEVICE", "UPDATE_INTEGRATION_GUESTMANAGEMENT", "DELETE_INTEGRATION_GUESTMANAGEMENT", "UPDATE_GUESTMANAGEMENT_SETTINGS", "DELETE_GUESTMANAGEMENT_SETTINGS", "INVITE_GUEST", "CREATE_GUEST", "CHECKIN_GUEST", "CHECKOUT_GUEST", "UPDATE_GUEST", "DELETE_GUEST", "ACTIVATE_KIOSK", "UPDATE_INTEGRATION_OMNIALERT", "DELETE_INTEGRATION_OMNIALERT", "UPDATE_INTEGRATION_OPENTECHALLIANCE", "DELETE_INTEGRATION_OPENTECHALLIANCE", "UPDATE_INTEGRATION_TOAST", "DELETE_INTEGRATION_TOAST", "UPDATE_INTEGRATION_KISI", "DELETE_INTEGRATION_KISI", "UPDATE_INTEGRATION_BRIVO", "DELETE_INTEGRATION_BRIVO", "UPDATE_INTEGRATION_BUTTERFLYMX", "DELETE_INTEGRATION_BUTTERFLYMX", "UPDATE_INTEGRATION_ENVOY", "DELETE_INTEGRATION_ENVOY", "CREATE_ENVOY_INVITE", "UPDATE_INTEGRATION_SALTO", "UPDATE_INTEGRATION_PDK", "DELETE_INTEGRATION_PDK", "UPDATE_INTEGRATION_GENEA", "DELETE_INTEGRATION_GENEA", "UPDATE_INTEGRATION_MICROSOFTTEAMS", "DELETE_INTEGRATION_MICROSOFTTEAMS", "UPDATE_INTEGRATION_AMT", "DELETE_INTEGRATION_AMT", "UPDATE_INTEGRATION_PLACEOS", "DELETE_INTEGRATION_PLACEOS", "UPDATE_INTEGRATION_INTUIFACE", "DELETE_INTEGRATION_INTUIFACE", "UPDATE_INTEGRATION_INFORMACAST", "DELETE_INTEGRATION_INFORMACAST", "UPDATE_INTEGRATION_INNERRANGE", "DELETE_INTEGRATION_INNERRANGE", "UPDATE_INTEGRATION_SHELLY", "DELETE_INTEGRATION_SHELLY", "UPDATE_INTEGRATION_FLIC", "DELETE_INTEGRATION_FLIC", "UPDATE_INTEGRATION_NINEONEONECELLULAR", "DELETE_INTEGRATION_NINEONEONECELLULAR", "UPDATE_INTEGRATION_PIMLOC", "DELETE_INTEGRATION_PIMLOC", "UPDATE_INTEGRATION_RAPTOR", "DELETE_INTEGRATION_RAPTOR", "UPDATE_INTEGRATION_LLM", "DELETE_INTEGRATION_LLM", "UPDATE_INTEGRATION_NOONLIGHT", "UPDATE_INTEGRATION_ALARM_MONITORING", "ENABLE_LIVE_ALARM_MONITORING", "ENABLE_LIVE_ALARM_MONITORING_LOCATION", "CREATE_ALARM_MONITORING_SETTINGS", "UPDATE_ALARM_MONITORING_SETTINGS", "DELETE_ALARM_MONITORING_SETTINGS", "ENABLE_ALARM_MONITORING_SETTINGS", "DISABLE_ALARM_MONITORING_SETTINGS", "REPORT_VEHICLE_EVENT", "API_TOKEN_REQUEST", "API_TOKEN_REVOKE", "API_INVOCATION", "API_OAUTH_TOKEN_REQUEST", "API_OAUTH_TOKEN_REFRESH", "API_OAUTH_TOKEN_REVOKE", "API_OAUTH_INVOCATION", "API_OAUTH_SUBMIT_APPLICATION", "API_OAUTH_UPDATE_APPLICATION", "API_OAUTH_DELETE_APPLICATION", "API_OAUTH_AUTHORIZE", "VIDEO_WALL_CREATE", "VIDEO_WALL_UPDATE", "VIDEO_WALL_DELETE", "VIEW_SHARE_TIMELAPSE", "VIEW_SHARE_CLIP", "VIEW_SHARE_STREAM", "VIEW_SHARE_VIDEOWALL", "VIEW_CAMERA_VOD", "CAMERA_POLICY_UPDATE", "CAMERA_POLICY_CREATE", "CAMERA_POLICY_DELETE", "TAG_POLICY_UPDATE", "TAG_POLICY_CREATE", "TAG_POLICY_DELETE", "CLIMATE_POLICY_UPDATE", "CLIMATE_POLICY_CREATE", "CLIMATE_POLICY_DELETE", "DOOR_POLICY_UPDATE", "DOOR_POLICY_CREATE", "DOOR_POLICY_DELETE", "DOOR_SCHEDULE_EXCEPTION_UPDATE", "DOOR_SCHEDULE_EXCEPTION_CREATE", "DOOR_SCHEDULE_EXCEPTION_DELETE", "ACCESS_CONTROLLED_DOOR_POLICY_UPDATE", "ACCESS_CONTROLLED_DOOR_POLICY_CREATE", "ACCESS_CONTROLLED_DOOR_POLICY_DELETE", "VIDEO_INTERCOM_POLICY_UPDATE", "VIDEO_INTERCOM_POLICY_CREATE", "VIDEO_INTERCOM_POLICY_DELETE", "OCCUPANCY_POLICY_UPDATE", "OCCUPANCY_POLICY_CREATE", "OCCUPANCY_POLICY_DELETE", "AUDIO_POLICY_UPDATE", "AUDIO_POLICY_CREATE", "AUDIO_POLICY_DELETE", "SCHEDULE_CREATE", "SCHEDULE_DELETE", "SCHEDULE_UPDATE", "CUSTOM_EVENT_CREATE", "CUSTOM_EVENT_DELETE", "CUSTOM_EVENT_UPDATE", "UPLOAD_FLOORPLAN", "ORG_AUDIO_RECORD_UPDATE", "ORG_AUDIO_ANALYSIS_UPDATE", "ORG_LLM_USAGE_UPDATE", "DOOR_ACCESS_UNLOCK", "RHOMBUS_KEY_DOOR_UNLOCK", "UPLOAD_ACCESS_CONTROLLED_DOOR", "UPLOAD_USER_PROFILE_PICTURE", "ACCESS_GRANT_CREATE", "ACCESS_GRANT_UPDATE", "ACCESS_GRANT_DELETE", "ACCESS_REVOCATION_CREATE", "ACCESS_REVOCATION_UPDATE", "ACCESS_REVOCATION_DELETE", "ACCESS_CONTROLLED_DOOR_CREATE", "ACCESS_CONTROLLED_DOOR_UPDATE", "ACCESS_CONTROLLED_DOOR_DELETE", "AC_CRED_RHOMBUS_SECURE_CSN_CREATE", "AC_CRED_RHOMBUS_SECURE_CSN_UPDATE", "AC_CRED_RHOMBUS_SECURE_CSN_DELETE", "AC_CRED_RHOMBUS_SECURE_CSN_REVOKED", "AC_CRED_STANDARD_CSN_CREATE", "AC_CRED_STANDARD_CSN_UPDATE", "AC_CRED_STANDARD_CSN_DELETE", "AC_CRED_STANDARD_CSN_REVOKED", "AC_CRED_RHOMBUS_SECURE_MOBILE_CREATE", "AC_CRED_RHOMBUS_SECURE_MOBILE_UPDATE", "AC_CRED_RHOMBUS_SECURE_MOBILE_DELETE", "AC_CRED_RHOMBUS_SECURE_MOBILE_REVOKED", "AC_CRED_PIN_CREATE", "AC_CRED_PIN_BULK_CREATE", "AC_CRED_PIN_UPDATE", "AC_CRED_PIN_ROTATE", "AC_CRED_PIN_BULK_ROTATE", "AC_CRED_PIN_DELETE", "AC_CRED_PIN_REVOKED", "AC_CRED_WIEGAND_CREATE", "AC_CRED_WIEGAND_UPDATE", "AC_CRED_WIEGAND_DELETE", "AC_CRED_WIEGAND_REVOKED", "AC_CRED_NOTE_UPDATE", "AC_LOCKDOWN_PLAN_CREATED", "AC_LOCKDOWN_PLAN_UPDATED", "AC_LOCKDOWN_PLAN_DELETED", "AC_LOCKDOWN_ACTIVATED", "AC_LOCKDOWN_DEACTIVATED", "AC_COMPONENT_POWER_CYCLE", "AC_DOOR_STATE_OVERRIDE_APPLIED", "AC_DOOR_STATE_OVERRIDE_CANCELLED", "SCIM_GET_ALL_USERS", "SCIM_POST_CREATE_USER", "SCIM_PUT_UPDATE_USER", "SCIM_PATCH_UPDATE_USER", "SCIM_GET_USER_BY_ID", "SCIM_DELETE_USER_BY_ID", "SCIM_GET_ALL_GROUPS", "SCIM_POST_CREATE_GROUP", "SCIM_PUT_UPDATE_GROUP", "SCIM_PATCH_UPDATE_GROUP", "SCIM_GET_GROUP_BY_ID", "SCIM_DELETE_GROUP_BY_ID", "CREATE_ACCESS_CONTROL_GROUP", "UPDATE_ACCESS_CONTROL_GROUP", "DELETE_ACCESS_CONTROL_GROUP", "RULE_CREATE", "RULE_DELETE", "RULE_UPDATE", "RULE_PAUSE", "UPLOAD_FACES", "UPDATE_FACE", "REPORT_FACE_EVENT", "FACE_EVENT_UPDATED", "FACE_EVENT_DELETED", "FACE_PERSON_CREATED", "FACE_PERSON_UPDATED", "FACE_PERSON_DELETED", "FACE_MATCHMAKER_CREATED", "FACE_MATCHMAKER_DELETED", "FACE_MATCHMAKER_UPLOADED", "FACE_MATCHING_CONFIG_UPDATED", "EXPUNGE_FACES_ORG", "EXPUNGE_VEHICLES_ORG", "DEVICE_NETWORK_CONFIGURATION_CHANGE", "KIOSK_UPDATED", "KIOSK_DELETED", "KIOSK_CREATED", "UPDATE_APERIO_FIRMWARE", "UPDATE_INTEGRATION_APERIO", "DELETE_INTEGRATION_APERIO", "THIRD_PARTY_CAMERA_CREATE", "THIRD_PARTY_CAMERA_DELETE", "THIRD_PARTY_CAMERA_UPDATED", "THIRD_PARTY_CAMERA_ASSIGNED_TO_CORE", "THIRD_PARTY_CAMERA_ASSIGNED_TO_LITE", "THIRD_PARTY_CAMERA_UNASSIGNED", "THIRD_PARTY_CAMERA_PASSWORD_CREATE", "THIRD_PARTY_CAMERA_PASSWORD_DELTE", "CREATE_CHATBOT_CONFIG", "UPDATE_CHATBOT_CONFIG", "DELETE_CHATBOT_CONFIG", "UNKNOWN" ],
              "nullable" : true
            },
            "nullable" : true
          },
          "includeActions" : {
            "type" : "array",
            "description" : "If not empty, only events with actions specified in the list are included. If both include and exclude actions are specified, exclude actions are ignored.",
            "items" : {
              "type" : "string",
              "description" : "If not empty, only events with actions specified in the list are included. If both include and exclude actions are specified, exclude actions are ignored.",
              "enum" : [ "THREAT_CASE_ESCALATED", "THREAT_CASE_CANCELLED", "THREAT_CASE_DISMISSED", "THREAT_CASE_DELETED", "THREAT_CASE_DELETE_BY_STATUS", "PIN_CREATED", "PIN_DELETED", "ALM_PIN_CREATE", "ALM_PIN_BULK_CREATE", "ALM_PIN_UPDATE", "ALM_PIN_ROTATE", "ALM_PIN_BULK_ROTATE", "ALM_PIN_DELETE", "BASIC_AUTH_SUCCESS", "BASIC_AUTH_FAILURE", "SAML_LOGIN_WEB", "LOGIN_WEB", "PASSWORDLESS_LOGIN_WEB", "PARTNER_LOGIN_WEB", "PARTNER_PASSWORDLESS_LOGIN_WEB", "SAML_LOGIN_FAILURE_WEB", "LOGIN_FAILURE_WEB", "RHOMBUS_KEY_LOGIN", "RHOMBUS_KEY_PASSWORDLESS_LOGIN", "RHOMBUS_KEY_SAML_LOGIN", "LOGOUT_WEB", "PARTNER_LOGOUT_WEB", "WEB_CONSOLE_ACCESS", "MOBILE_CONSOLE_ACCESS", "SAML_LOGIN_MOBILE", "PARTNER_LOGIN_MOBILE", "PARTNER_PASSWORDLESS_LOGIN_MOBILE", "LOGIN_MOBILE", "PASSWORDLESS_LOGIN_MOBILE", "SAML_LOGIN_FAILURE_MOBILE", "LOGIN_FAILURE_MOBILE", "LOGOUT_MOBILE", "PARTNER_LOGOUT_MOBILE", "MOBILE_ACCESS", "PARTNER_LOGIN_MOBIlE_REFRESH", "LOGIN_MOBIlE_REFRESH", "RHOMBUS_KEY_LOGIN_REFRESH", "CAMERA_WIFI_NETWORK_CHANGED", "CAMERA_FORCED_REBOOT", "AUDIO_GATEWAY_FORCED_REBOOT", "ENVIRONMENTAL_GATEWAY_FORCED_REBOOT", "DOORBELL_CAMERA_FORCED_REBOOT", "BADGE_READER_FORCED_REBOOT", "FIRMWARE_UPDATE_CAMERA", "DELETE_CAMERA", "DELETE_USER", "DELETE_LOCATION", "LOCATION_UPDATED", "DELETE_ROLE", "ERASE_CAMERA", "POLICY_UPDATE", "POLICY_DELETE", "POLICY_PAUSED_LOCATION", "POLICY_PAUSED_DEVICE", "POLICY_PAUSED_COMPONENT_COMPOSITE", "CREATE_POLICY_ADDENDUM", "DEVICE_REGISTERED", "DEVICE_UPDATE", "DEVICE_SETTINGS_UPDATE", "REVERT_TO_DEFAULTS", "DEVICE_FEATURE_UPDATE", "DEVICE_ORG_REASSIGN", "CLAIMKEY_RENEWAL_CREATED", "LICENSES_CLAIMED", "LICENSES_RETURNED", "LICENSE_ASSIGNED", "LICENSE_CREATED", "LICENSE_UPDATED", "USER_UPDATE", "USER_CREATE", "USER_IMPORT", "BULK_PROVISION_CREDENTIALS", "ROLE_CREATE", "POLICY_CREATE", "PARTNER_CLIENT_CREATE", "PARTNER_CUSTOMIZE_CLIENT", "PARTNER_CUSTOMIZE_CLIENT_DEVICE", "ORG_UPDATE", "DELETE_ORG", "DISABLE_ORG", "CREATE_ORG", "ROLE_UPDATE", "USER_ROLE_UPDATE", "USER_EMAIL_UPDATE", "TIMELAPSE_CREATE", "TIMELAPSE_DELETE", "ALERT_DISMISS", "ALL_ALERT_DISMISS", "SAVED_CLIP_CREATE", "SAVED_CLIP_DELETE", "CLIP_GROUP_CREATED", "CLIP_GROUP_DELETE", "SHARED_CLIP_DELETE", "SHARED_CLIP_CREATE", "SHARED_LINK_SENT", "SHARED_LIVE_VIDEO_STREAM_WITH_PASSWORD_CREATE", "SHARED_LIVE_VIDEO_STREAM_WITHOUT_PASSWORD_CREATE", "SHARED_LIVE_VIDEO_STREAM_DELETE", "SHARED_VIDEOWALL_WITH_PASSWORD_CREATE", "SHARED_VIDEOWALL_WITHOUT_PASSWORD_CREATE", "SHARED_VIDEOWALL_DELETE", "RAW_HTTP_STREAM_CREATED", "RAW_HTTP_STREAM_DELETED", "SETUP_VIRTUAL_MFA_DEVICE", "DELETE_VIRTUAL_MFA_DEVICE", "SETUP_SCIM_API_ACCESS", "REVOKE_SCIM_API_ACCESS", "AUDIT_EXPORT", "COUNT_EXPORT", "DIAGNOSTIC_EXPORT", "INVENTORY_EXPORT", "USERS_EXPORT", "UPTIME_EXPORT", "SUPPORT_TICKET_OPEN", "RMA_OPEN", "FEEDBACK_CREATE", "SUPPORT_ACCESS_GRANT", "SUPPORT_ACCESS_REVOKE", "SUPPORT_PARTNER_ADD", "SUPPORT_PARTNER_REMOVE", "SUPPORT_PARTNER_LOGIN_ACCESS_EXPIRED", "SUPPORT_SEARCH_TICKETS", "ACCEPT_UAP", "ACCEPT_RHOMBUS_UAP", "ACCEPT_ALERTMONITORING_UAP", "CREATE_SEEKPOINT", "DELETE_CUSTOM_SEEKPOINT", "UPDATE_INTEGRATION_SAML", "UPDATE_INTEGRATION_SLACK", "UPDATE_INTEGRATION_SLACK_V2", "DELETE_INTEGRATION_SLACK_V2", "UPDATE_INTEGRATION_BOX", "DELETE_INTEGRATION_BOX", "UPDATE_INTEGRATION_GOOGLE", "DELETE_INTEGRATION_GOOGLE", "UPDATE_INTEGRATION_GOOGLE_V2", "DELETE_INTEGRATION_GOOGLE_V2", "UPDATE_INTEGRATION_PAGERDUTY", "DELETE_INTEGRATION_PAGERDUTY", "UPDATE_INTEGRATION_SERVICENOW", "DELETE_INTEGRATION_SERVICENOW", "UPDATE_INTEGRATION_OFFICE365", "DELETE_INTEGRATION_OFFICE365", "UPDATE_INTEGRATION_DROPBOX", "DELETE_INTEGRATION_DROPBOX", "UPDATE_INTEGRATION_SQUARE", "DELETE_INTEGRATION_SQUARE", "UPDATE_INTEGRATION_AWS", "DELETE_INTEGRATION_AWS", "UPDATE_INTEGRATION_HALO", "DELETE_INTEGRATION_HALO", "UPDATE_INTEGRATION_WEBHOOK", "DELETE_INTEGRATION_WEBHOOK", "UPDATE_INTEGRATION_EMAIL", "DELETE_INTEGRATION_EMAIL", "UPDATE_INTEGRATION_MATTERMOST", "DELETE_INTEGRATION_MATTERMOST", "UPDATE_INTEGRATION_OPENPATH", "DELETE_INTEGRATION_OPENPATH", "UPDATE_INTEGRATION_AVIGILON_ALTA", "DELETE_INTEGRATION_AVIGILON_ALTA", "UPDATE_INTEGRATION_DICE", "DELETE_INTEGRATION_DICE", "UPDATE_INTEGRATION_LUMEO", "DELETE_INTEGRATION_LUMEO", "UPDATE_INTEGRATION_DEVICE", "DELETE_INTEGRATION_DEVICE", "UPDATE_INTEGRATION_GUESTMANAGEMENT", "DELETE_INTEGRATION_GUESTMANAGEMENT", "UPDATE_GUESTMANAGEMENT_SETTINGS", "DELETE_GUESTMANAGEMENT_SETTINGS", "INVITE_GUEST", "CREATE_GUEST", "CHECKIN_GUEST", "CHECKOUT_GUEST", "UPDATE_GUEST", "DELETE_GUEST", "ACTIVATE_KIOSK", "UPDATE_INTEGRATION_OMNIALERT", "DELETE_INTEGRATION_OMNIALERT", "UPDATE_INTEGRATION_OPENTECHALLIANCE", "DELETE_INTEGRATION_OPENTECHALLIANCE", "UPDATE_INTEGRATION_TOAST", "DELETE_INTEGRATION_TOAST", "UPDATE_INTEGRATION_KISI", "DELETE_INTEGRATION_KISI", "UPDATE_INTEGRATION_BRIVO", "DELETE_INTEGRATION_BRIVO", "UPDATE_INTEGRATION_BUTTERFLYMX", "DELETE_INTEGRATION_BUTTERFLYMX", "UPDATE_INTEGRATION_ENVOY", "DELETE_INTEGRATION_ENVOY", "CREATE_ENVOY_INVITE", "UPDATE_INTEGRATION_SALTO", "UPDATE_INTEGRATION_PDK", "DELETE_INTEGRATION_PDK", "UPDATE_INTEGRATION_GENEA", "DELETE_INTEGRATION_GENEA", "UPDATE_INTEGRATION_MICROSOFTTEAMS", "DELETE_INTEGRATION_MICROSOFTTEAMS", "UPDATE_INTEGRATION_AMT", "DELETE_INTEGRATION_AMT", "UPDATE_INTEGRATION_PLACEOS", "DELETE_INTEGRATION_PLACEOS", "UPDATE_INTEGRATION_INTUIFACE", "DELETE_INTEGRATION_INTUIFACE", "UPDATE_INTEGRATION_INFORMACAST", "DELETE_INTEGRATION_INFORMACAST", "UPDATE_INTEGRATION_INNERRANGE", "DELETE_INTEGRATION_INNERRANGE", "UPDATE_INTEGRATION_SHELLY", "DELETE_INTEGRATION_SHELLY", "UPDATE_INTEGRATION_FLIC", "DELETE_INTEGRATION_FLIC", "UPDATE_INTEGRATION_NINEONEONECELLULAR", "DELETE_INTEGRATION_NINEONEONECELLULAR", "UPDATE_INTEGRATION_PIMLOC", "DELETE_INTEGRATION_PIMLOC", "UPDATE_INTEGRATION_RAPTOR", "DELETE_INTEGRATION_RAPTOR", "UPDATE_INTEGRATION_LLM", "DELETE_INTEGRATION_LLM", "UPDATE_INTEGRATION_NOONLIGHT", "UPDATE_INTEGRATION_ALARM_MONITORING", "ENABLE_LIVE_ALARM_MONITORING", "ENABLE_LIVE_ALARM_MONITORING_LOCATION", "CREATE_ALARM_MONITORING_SETTINGS", "UPDATE_ALARM_MONITORING_SETTINGS", "DELETE_ALARM_MONITORING_SETTINGS", "ENABLE_ALARM_MONITORING_SETTINGS", "DISABLE_ALARM_MONITORING_SETTINGS", "REPORT_VEHICLE_EVENT", "API_TOKEN_REQUEST", "API_TOKEN_REVOKE", "API_INVOCATION", "API_OAUTH_TOKEN_REQUEST", "API_OAUTH_TOKEN_REFRESH", "API_OAUTH_TOKEN_REVOKE", "API_OAUTH_INVOCATION", "API_OAUTH_SUBMIT_APPLICATION", "API_OAUTH_UPDATE_APPLICATION", "API_OAUTH_DELETE_APPLICATION", "API_OAUTH_AUTHORIZE", "VIDEO_WALL_CREATE", "VIDEO_WALL_UPDATE", "VIDEO_WALL_DELETE", "VIEW_SHARE_TIMELAPSE", "VIEW_SHARE_CLIP", "VIEW_SHARE_STREAM", "VIEW_SHARE_VIDEOWALL", "VIEW_CAMERA_VOD", "CAMERA_POLICY_UPDATE", "CAMERA_POLICY_CREATE", "CAMERA_POLICY_DELETE", "TAG_POLICY_UPDATE", "TAG_POLICY_CREATE", "TAG_POLICY_DELETE", "CLIMATE_POLICY_UPDATE", "CLIMATE_POLICY_CREATE", "CLIMATE_POLICY_DELETE", "DOOR_POLICY_UPDATE", "DOOR_POLICY_CREATE", "DOOR_POLICY_DELETE", "DOOR_SCHEDULE_EXCEPTION_UPDATE", "DOOR_SCHEDULE_EXCEPTION_CREATE", "DOOR_SCHEDULE_EXCEPTION_DELETE", "ACCESS_CONTROLLED_DOOR_POLICY_UPDATE", "ACCESS_CONTROLLED_DOOR_POLICY_CREATE", "ACCESS_CONTROLLED_DOOR_POLICY_DELETE", "VIDEO_INTERCOM_POLICY_UPDATE", "VIDEO_INTERCOM_POLICY_CREATE", "VIDEO_INTERCOM_POLICY_DELETE", "OCCUPANCY_POLICY_UPDATE", "OCCUPANCY_POLICY_CREATE", "OCCUPANCY_POLICY_DELETE", "AUDIO_POLICY_UPDATE", "AUDIO_POLICY_CREATE", "AUDIO_POLICY_DELETE", "SCHEDULE_CREATE", "SCHEDULE_DELETE", "SCHEDULE_UPDATE", "CUSTOM_EVENT_CREATE", "CUSTOM_EVENT_DELETE", "CUSTOM_EVENT_UPDATE", "UPLOAD_FLOORPLAN", "ORG_AUDIO_RECORD_UPDATE", "ORG_AUDIO_ANALYSIS_UPDATE", "ORG_LLM_USAGE_UPDATE", "DOOR_ACCESS_UNLOCK", "RHOMBUS_KEY_DOOR_UNLOCK", "UPLOAD_ACCESS_CONTROLLED_DOOR", "UPLOAD_USER_PROFILE_PICTURE", "ACCESS_GRANT_CREATE", "ACCESS_GRANT_UPDATE", "ACCESS_GRANT_DELETE", "ACCESS_REVOCATION_CREATE", "ACCESS_REVOCATION_UPDATE", "ACCESS_REVOCATION_DELETE", "ACCESS_CONTROLLED_DOOR_CREATE", "ACCESS_CONTROLLED_DOOR_UPDATE", "ACCESS_CONTROLLED_DOOR_DELETE", "AC_CRED_RHOMBUS_SECURE_CSN_CREATE", "AC_CRED_RHOMBUS_SECURE_CSN_UPDATE", "AC_CRED_RHOMBUS_SECURE_CSN_DELETE", "AC_CRED_RHOMBUS_SECURE_CSN_REVOKED", "AC_CRED_STANDARD_CSN_CREATE", "AC_CRED_STANDARD_CSN_UPDATE", "AC_CRED_STANDARD_CSN_DELETE", "AC_CRED_STANDARD_CSN_REVOKED", "AC_CRED_RHOMBUS_SECURE_MOBILE_CREATE", "AC_CRED_RHOMBUS_SECURE_MOBILE_UPDATE", "AC_CRED_RHOMBUS_SECURE_MOBILE_DELETE", "AC_CRED_RHOMBUS_SECURE_MOBILE_REVOKED", "AC_CRED_PIN_CREATE", "AC_CRED_PIN_BULK_CREATE", "AC_CRED_PIN_UPDATE", "AC_CRED_PIN_ROTATE", "AC_CRED_PIN_BULK_ROTATE", "AC_CRED_PIN_DELETE", "AC_CRED_PIN_REVOKED", "AC_CRED_WIEGAND_CREATE", "AC_CRED_WIEGAND_UPDATE", "AC_CRED_WIEGAND_DELETE", "AC_CRED_WIEGAND_REVOKED", "AC_CRED_NOTE_UPDATE", "AC_LOCKDOWN_PLAN_CREATED", "AC_LOCKDOWN_PLAN_UPDATED", "AC_LOCKDOWN_PLAN_DELETED", "AC_LOCKDOWN_ACTIVATED", "AC_LOCKDOWN_DEACTIVATED", "AC_COMPONENT_POWER_CYCLE", "AC_DOOR_STATE_OVERRIDE_APPLIED", "AC_DOOR_STATE_OVERRIDE_CANCELLED", "SCIM_GET_ALL_USERS", "SCIM_POST_CREATE_USER", "SCIM_PUT_UPDATE_USER", "SCIM_PATCH_UPDATE_USER", "SCIM_GET_USER_BY_ID", "SCIM_DELETE_USER_BY_ID", "SCIM_GET_ALL_GROUPS", "SCIM_POST_CREATE_GROUP", "SCIM_PUT_UPDATE_GROUP", "SCIM_PATCH_UPDATE_GROUP", "SCIM_GET_GROUP_BY_ID", "SCIM_DELETE_GROUP_BY_ID", "CREATE_ACCESS_CONTROL_GROUP", "UPDATE_ACCESS_CONTROL_GROUP", "DELETE_ACCESS_CONTROL_GROUP", "RULE_CREATE", "RULE_DELETE", "RULE_UPDATE", "RULE_PAUSE", "UPLOAD_FACES", "UPDATE_FACE", "REPORT_FACE_EVENT", "FACE_EVENT_UPDATED", "FACE_EVENT_DELETED", "FACE_PERSON_CREATED", "FACE_PERSON_UPDATED", "FACE_PERSON_DELETED", "FACE_MATCHMAKER_CREATED", "FACE_MATCHMAKER_DELETED", "FACE_MATCHMAKER_UPLOADED", "FACE_MATCHING_CONFIG_UPDATED", "EXPUNGE_FACES_ORG", "EXPUNGE_VEHICLES_ORG", "DEVICE_NETWORK_CONFIGURATION_CHANGE", "KIOSK_UPDATED", "KIOSK_DELETED", "KIOSK_CREATED", "UPDATE_APERIO_FIRMWARE", "UPDATE_INTEGRATION_APERIO", "DELETE_INTEGRATION_APERIO", "THIRD_PARTY_CAMERA_CREATE", "THIRD_PARTY_CAMERA_DELETE", "THIRD_PARTY_CAMERA_UPDATED", "THIRD_PARTY_CAMERA_ASSIGNED_TO_CORE", "THIRD_PARTY_CAMERA_ASSIGNED_TO_LITE", "THIRD_PARTY_CAMERA_UNASSIGNED", "THIRD_PARTY_CAMERA_PASSWORD_CREATE", "THIRD_PARTY_CAMERA_PASSWORD_DELTE", "CREATE_CHATBOT_CONFIG", "UPDATE_CHATBOT_CONFIG", "DELETE_CHATBOT_CONFIG", "UNKNOWN" ],
              "nullable" : true
            },
            "nullable" : true
          },
          "startInterval" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start time interval in milliseconds for filtering audit events",
            "example" : 1640995200000,
            "nullable" : true
          }
        }
      },
      "Export_ExportClimateEventsWSRequest" : {
        "type" : "object",
        "description" : "Request object for exporting climate sensor events with time filtering.",
        "properties" : {
          "createdAfterMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start time in milliseconds for filtering climate events",
            "example" : 1640995200000,
            "nullable" : true
          },
          "createdBeforeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "End time in milliseconds for filtering climate events",
            "example" : 1641081600000,
            "nullable" : true
          },
          "sensorUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Export_ExportCountReportsWSRequest" : {
        "type" : "object",
        "description" : "Request object for exporting count reports with configurable intervals, scopes, and time ranges.",
        "properties" : {
          "endDate" : {
            "type" : "string",
            "deprecated" : true,
            "description" : "Enter the ending date in in ISO 8601 format",
            "example" : "2024-07-17T00:00:00Z",
            "nullable" : true
          },
          "endTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "End datetime as a UNIX timestamp in milliseconds",
            "example" : 1721416242907,
            "minimum" : 0,
            "nullable" : true
          },
          "interval" : {
            "type" : "string",
            "description" : "The chosen interval time of reports",
            "enum" : [ "MINUTELY", "QUARTERHOURLY", "HOURLY", "DAILY", "WEEKLY", "MONTHLY" ],
            "nullable" : true
          },
          "scope" : {
            "type" : "string",
            "description" : "The chosen scope of report by Device, Organization, Region or Location",
            "enum" : [ "REGION", "DEVICE", "LOCATION", "ORG" ],
            "nullable" : true
          },
          "startDate" : {
            "type" : "string",
            "deprecated" : true,
            "description" : "Enter the starting date in ISO 8601 format",
            "example" : "2024-07-17T00:00:00Z",
            "nullable" : true
          },
          "startTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start datetime as a UNIX timestamp in milliseconds",
            "example" : 1719861042000,
            "minimum" : 0,
            "nullable" : true
          },
          "type" : {
            "type" : "string",
            "description" : "Type of alert to fetch",
            "enum" : [ "CROWD", "PEOPLE", "FACES", "MOTION", "BANDWIDTH", "VEHICLES", "LICENSEPLATES", "ALERTS", "AM_VERIFICATION", "DWELL" ],
            "nullable" : true
          },
          "uuidList" : {
            "type" : "array",
            "description" : "Enter the UUID of device(s) or location(s)",
            "items" : {
              "type" : "string",
              "format" : "DeviceFacetUuid",
              "description" : "RUUID with optional appended facet information",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
              "nullable" : true
            },
            "nullable" : true
          }
        },
        "required" : [ "endTimeMs", "interval", "scope", "startTimeMs", "type" ]
      },
      "Export_ExportDiagnosticEventsWSRequest" : {
        "type" : "object",
        "description" : "Request object for exporting diagnostic events with time interval filtering.",
        "properties" : {
          "endInterval" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "End time interval in milliseconds for filtering diagnostic events",
            "example" : 1641081600000,
            "nullable" : true
          },
          "startInterval" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start time interval in milliseconds for filtering diagnostic events",
            "example" : 1640995200000,
            "nullable" : true
          }
        }
      },
      "Export_ExportDoorEventsWSRequest" : {
        "type" : "object",
        "description" : "Request object for exporting door sensor events with time filtering.",
        "properties" : {
          "createdAfterMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start time in milliseconds for filtering door events",
            "example" : 1640995200000,
            "nullable" : true
          },
          "createdBeforeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "End time in milliseconds for filtering door events",
            "example" : 1641081600000,
            "nullable" : true
          },
          "sensorUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Export_ExportEnvironmentalGatewayEventsWSRequest" : {
        "type" : "object",
        "description" : "Request object for exporting environmental gateway events with time filtering.",
        "properties" : {
          "createdAfterMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start time in milliseconds for filtering environmental gateway events",
            "example" : 1640995200000,
            "nullable" : true
          },
          "createdBeforeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "End time in milliseconds for filtering environmental gateway events",
            "example" : 1641081600000,
            "nullable" : true
          },
          "deviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Export_ExportInventoryWSRequest" : {
        "type" : "object",
        "description" : "Request object for exporting device inventory information to CSV format.",
        "properties" : {
          "cameraUuids" : {
            "type" : "array",
            "deprecated" : true,
            "description" : "List of camera UUIDs to export (deprecated, use deviceUuids instead)",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "deprecated" : true,
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          },
          "deviceUuids" : {
            "type" : "array",
            "description" : "List of device UUIDs to export inventory for",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Export_ExportMotionEventsWSRequest" : {
        "type" : "object",
        "description" : "Request object for exporting motion events from motion sensors with time filtering.",
        "properties" : {
          "createdAfterMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "After datetime provided as a UNIX timestamp in milliseconds",
            "example" : 1640995200000,
            "minimum" : 0,
            "nullable" : true
          },
          "createdBeforeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Before datetime provided as a UNIX timestamp in milliseconds",
            "example" : 1641081600000,
            "minimum" : 0,
            "nullable" : true
          },
          "deviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        },
        "required" : [ "deviceUuid" ]
      },
      "Export_ExportPeopleCountEventsWSRequest" : {
        "type" : "object",
        "description" : "Request object for exporting people count events with time interval filtering.",
        "properties" : {
          "endInterval" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "End time interval in milliseconds for filtering people count events",
            "example" : 1641081600000,
            "nullable" : true
          },
          "startInterval" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start time interval in milliseconds for filtering people count events",
            "example" : 1640995200000,
            "nullable" : true
          }
        }
      },
      "Export_ExportPeopleEventsWSRequest" : {
        "type" : "object",
        "description" : "Request object for exporting people detection events with time interval filtering.",
        "properties" : {
          "endInterval" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "End time interval in milliseconds for filtering people events",
            "example" : 1641081600000,
            "nullable" : true
          },
          "startInterval" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start time interval in milliseconds for filtering people events",
            "example" : 1640995200000,
            "nullable" : true
          }
        }
      },
      "Export_ExportProximityEventsWSRequest" : {
        "type" : "object",
        "description" : "Request object for exporting proximity events with time filtering and tag selection.",
        "properties" : {
          "createBeforeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true,
            "writeOnly" : true
          },
          "createdAfterMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start time in milliseconds for filtering proximity events",
            "example" : 1640995200000,
            "nullable" : true
          },
          "createdBeforeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "End time in milliseconds for filtering proximity events",
            "example" : 1641081600000,
            "nullable" : true
          },
          "tagUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Export_ExportProximityLocomotionEventsWSRequest" : {
        "type" : "object",
        "description" : "Request object for exporting proximity locomotion events with time filtering and tag selection.",
        "properties" : {
          "createBeforeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true,
            "writeOnly" : true
          },
          "createdAfterMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start time in milliseconds for filtering proximity locomotion events",
            "example" : 1640995200000,
            "nullable" : true
          },
          "createdBeforeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "End time in milliseconds for filtering proximity locomotion events",
            "example" : 1641081600000,
            "nullable" : true
          },
          "tagUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Export_ExportUptimeWSRequest" : {
        "type" : "object",
        "description" : "Request object for exporting device uptime reports with configurable time ranges and granularity.",
        "properties" : {
          "cameraUuids" : {
            "type" : "array",
            "deprecated" : true,
            "description" : "Use deviceUuids instead",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "deprecated" : true,
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          },
          "deviceUuids" : {
            "type" : "array",
            "description" : "List of device UUIDs to export uptime reports for",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          },
          "endDateTime" : {
            "type" : "string",
            "description" : "End date and time for the uptime report",
            "example" : "2024-01-31T23:59:59Z",
            "nullable" : true
          },
          "granularity" : {
            "type" : "string",
            "description" : "Time granularity for the uptime report",
            "enum" : [ "NANOSECONDS", "MICROSECONDS", "MILLISECONDS", "SECONDS", "MINUTES", "HOURS", "DAYS" ],
            "nullable" : true
          },
          "startDateTime" : {
            "type" : "string",
            "description" : "Start date and time for the uptime report",
            "example" : "2024-01-01T00:00:00Z",
            "nullable" : true
          }
        }
      },
      "Export_ExportUsersWSRequest" : {
        "type" : "object",
        "description" : "Request object for exporting user information to CSV format.",
        "properties" : {
          "userUuids" : {
            "type" : "array",
            "description" : "List of user UUIDs to export information for",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Export_ExportVehicleEventsWSRequest" : {
        "type" : "object",
        "description" : "Request object for exporting vehicle events with filtering by time, devices, labels, and plate numbers.",
        "properties" : {
          "deviceUuids" : {
            "type" : "array",
            "description" : "List of device UUIDs to filter vehicle events by",
            "items" : {
              "type" : "string",
              "format" : "DeviceFacetUuid",
              "description" : "RUUID with optional appended facet information",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
              "nullable" : true
            },
            "nullable" : true
          },
          "fuzzy" : {
            "type" : "boolean",
            "description" : "Whether to use fuzzy search on the provided plate numbers",
            "example" : true,
            "nullable" : true
          },
          "interval" : {
            "$ref" : "#/components/schemas/TimeInterval"
          },
          "labels" : {
            "type" : "array",
            "description" : "List of vehicle labels to filter by",
            "example" : [ "car", "truck", "motorcycle" ],
            "items" : {
              "type" : "string",
              "description" : "List of vehicle labels to filter by",
              "example" : "[\"car\",\"truck\",\"motorcycle\"]",
              "nullable" : true
            },
            "nullable" : true
          },
          "plateNumbers" : {
            "type" : "array",
            "description" : "List of license plate numbers to filter by",
            "example" : [ "ABC123", "XYZ789" ],
            "items" : {
              "type" : "string",
              "description" : "List of license plate numbers to filter by",
              "example" : "[\"ABC123\",\"XYZ789\"]",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "FaceUploadMetadata" : {
        "type" : "object",
        "description" : "List of face upload metadata for the transaction",
        "properties" : {
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "faceId" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "origS3Key" : {
            "type" : "string",
            "nullable" : true
          },
          "personUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "success" : {
            "type" : "boolean",
            "nullable" : true
          },
          "transactionId" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Facerecognition_faceevent_DeleteFaceEventWSRequest" : {
        "type" : "object",
        "description" : "Request object for deleting a face event.",
        "properties" : {
          "eventUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Facerecognition_faceevent_DeleteFaceEventWSResponse" : {
        "type" : "object",
        "description" : "Response object for deleting a face event."
      },
      "Facerecognition_faceevent_ExportFaceEventsByOrgWSRequest" : {
        "type" : "object",
        "description" : "Request object for exporting face events by organization with search filtering.",
        "properties" : {
          "searchFilter" : {
            "$ref" : "#/components/schemas/Facerecognition_faceevent_ExternalFaceEventSearchFilter"
          }
        }
      },
      "Facerecognition_faceevent_ExternalFaceEvent" : {
        "type" : "object",
        "description" : "External face event object containing face recognition data with person matches, embeddings, and metadata.",
        "properties" : {
          "detectionConfidence" : {
            "type" : "number",
            "format" : "float",
            "description" : "Confidence value indicating the likelihood that the detected image is a face",
            "example" : 0.98,
            "nullable" : true
          },
          "deviceUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          },
          "embeddingConfidence" : {
            "type" : "number",
            "format" : "float",
            "description" : "Confidence value associated with the embedding generated for the face image",
            "example" : 0.95,
            "nullable" : true
          },
          "eventTimestamp" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Timestamp when the face event occurred",
            "example" : 1640995200000,
            "nullable" : true
          },
          "faceName" : {
            "type" : "string",
            "description" : "Name of the person that matched the face image. If selectedPersonMatch is not null, faceName will be equal to the name field of selectedPersonMatch.",
            "nullable" : true
          },
          "hasEmbedding" : {
            "type" : "boolean",
            "description" : "Whether the face event has an embedding",
            "example" : true,
            "nullable" : true
          },
          "imageS3Key" : {
            "type" : "string",
            "description" : "S3 key for the face event image",
            "example" : "face-events/images/event_123.jpg",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "personUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "pitch" : {
            "type" : "number",
            "format" : "float",
            "description" : "Pitch angle of the detected face",
            "example" : 15.5,
            "nullable" : true
          },
          "roll" : {
            "type" : "number",
            "format" : "float",
            "description" : "Roll angle of the detected face",
            "example" : 2.3,
            "nullable" : true
          },
          "selectedPersonMatch" : {
            "$ref" : "#/components/schemas/Facerecognition_faceevent_ExternalPersonMatch"
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "thumbnailS3Key" : {
            "type" : "string",
            "description" : "S3 key for the face event thumbnail",
            "example" : "face-events/thumbnails/event_123.jpg",
            "nullable" : true
          },
          "topPersonMatches" : {
            "type" : "array",
            "description" : "Top person matches found for the face image.",
            "items" : {
              "$ref" : "#/components/schemas/Facerecognition_faceevent_ExternalPersonMatch"
            },
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "yaw" : {
            "type" : "number",
            "format" : "float",
            "description" : "Yaw angle of the detected face",
            "example" : -5.7,
            "nullable" : true
          }
        }
      },
      "Facerecognition_faceevent_ExternalFaceEventSearchFilter" : {
        "type" : "object",
        "description" : "Search filter for face events with embedding presence filtering.",
        "properties" : {
          "deviceUuids" : {
            "type" : "array",
            "description" : "Optional filter by a set of devices.",
            "items" : {
              "type" : "string",
              "format" : "DeviceFacetUuid",
              "description" : "RUUID with optional appended facet information",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
              "nullable" : true
            },
            "nullable" : true
          },
          "faceNameContains" : {
            "type" : "string",
            "description" : "Optional filter by name substring. The face event is a match if its face name contains the specified value. The search will only be performed if the provided value is at least 3 characters long after trimming leading and trailing spaces. If both faceNameContains and faceNames are specified, faceNameContains takes a precedence.",
            "nullable" : true
          },
          "faceNames" : {
            "type" : "array",
            "description" : "Optional filter by people names.",
            "items" : {
              "type" : "string",
              "description" : "Optional filter by people names.",
              "nullable" : true
            },
            "nullable" : true
          },
          "hasEmbedding" : {
            "type" : "boolean",
            "description" : "Optional filter by the presence or absence of an embedding.",
            "nullable" : true
          },
          "hasName" : {
            "type" : "boolean",
            "description" : "Optional filter by the presence or absence of a person name.",
            "nullable" : true
          },
          "labels" : {
            "type" : "array",
            "description" : "Optional filter by labels.",
            "items" : {
              "type" : "string",
              "description" : "Optional filter by labels.",
              "nullable" : true
            },
            "nullable" : true
          },
          "locationUuids" : {
            "type" : "array",
            "description" : "Optional filter by a set of locations.",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          },
          "personUuids" : {
            "type" : "array",
            "description" : "Optional filter by a set of people.",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          },
          "timestampFilter" : {
            "$ref" : "#/components/schemas/TimestampFilter"
          }
        }
      },
      "Facerecognition_faceevent_ExternalFaceEventSimilaritySearchFilter" : {
        "type" : "object",
        "description" : "Search filter for finding similar face events with similarity thresholds and confidence settings.",
        "properties" : {
          "deviceUuids" : {
            "type" : "array",
            "description" : "Optional filter by a set of devices.",
            "items" : {
              "type" : "string",
              "format" : "DeviceFacetUuid",
              "description" : "RUUID with optional appended facet information",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
              "nullable" : true
            },
            "nullable" : true
          },
          "embeddingConfidenceThreshold" : {
            "type" : "number",
            "format" : "float",
            "description" : "Optional face embedding confidence threshold used to filter out face events with embeddingconfidence values less than the specified threshold. Valid range [0,1].",
            "maximum" : 1,
            "minimum" : 0,
            "nullable" : true
          },
          "faceMatchDistanceThreshold" : {
            "type" : "number",
            "format" : "float",
            "description" : "Optional face match distance threshold used to compare face event images. Defaults to 0.7.Valid range [0,1].",
            "maximum" : 1,
            "minimum" : 0,
            "nullable" : true
          },
          "faceNameContains" : {
            "type" : "string",
            "description" : "Optional filter by name substring. The face event is a match if its face name contains the specified value. The search will only be performed if the provided value is at least 3 characters long after trimming leading and trailing spaces. If both faceNameContains and faceNames are specified, faceNameContains takes a precedence.",
            "nullable" : true
          },
          "faceNames" : {
            "type" : "array",
            "description" : "Optional filter by people names.",
            "items" : {
              "type" : "string",
              "description" : "Optional filter by people names.",
              "nullable" : true
            },
            "nullable" : true
          },
          "hasName" : {
            "type" : "boolean",
            "description" : "Optional filter by the presence or absence of a person name.",
            "nullable" : true
          },
          "labels" : {
            "type" : "array",
            "description" : "Optional filter by labels.",
            "items" : {
              "type" : "string",
              "description" : "Optional filter by labels.",
              "nullable" : true
            },
            "nullable" : true
          },
          "locationUuids" : {
            "type" : "array",
            "description" : "Optional filter by a set of locations.",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          },
          "personUuids" : {
            "type" : "array",
            "description" : "Optional filter by a set of people.",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          },
          "timestampFilter" : {
            "$ref" : "#/components/schemas/TimestampFilter"
          }
        }
      },
      "Facerecognition_faceevent_ExternalPersonMatch" : {
        "type" : "object",
        "description" : "Person match information for face recognition events with confidence scoring.",
        "properties" : {
          "confidence" : {
            "type" : "number",
            "format" : "float",
            "description" : "Match confidence level expressed as a value in range[0,1]",
            "example" : 0.95,
            "nullable" : true
          },
          "faceId" : {
            "type" : "string",
            "description" : "Face ID associated with the person match",
            "example" : "face_12345",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the person matched",
            "example" : "John Doe",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Facerecognition_faceevent_FindFaceEventsByDeviceForReportingWSRequest" : {
        "type" : "object",
        "description" : "Request object for finding face events by device for reporting purposes with timestamp filtering and pagination.",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          },
          "pageRequest" : {
            "$ref" : "#/components/schemas/DynamoPageRequest"
          },
          "timestampFilter" : {
            "$ref" : "#/components/schemas/Facerecognition_faceevent_ReportTimestampFilter"
          }
        }
      },
      "Facerecognition_faceevent_FindFaceEventsByDeviceForReportingWSResponse" : {
        "type" : "object",
        "description" : "Response object containing face events by device for reporting purposes with pagination information.",
        "properties" : {
          "faceEvents" : {
            "type" : "array",
            "description" : "List of face events by device for reporting purposes",
            "items" : {
              "$ref" : "#/components/schemas/Facerecognition_faceevent_ExternalFaceEvent"
            },
            "nullable" : true
          },
          "lastEvaluatedKey" : {
            "type" : "string",
            "description" : "Pagination key for retrieving the next page of face events by device for reporting",
            "example" : "next_page_key_123",
            "nullable" : true
          }
        }
      },
      "Facerecognition_faceevent_FindFaceEventsByLocationForReportingWSRequest" : {
        "type" : "object",
        "description" : "Request object for finding face events by location for reporting purposes with timestamp filtering and pagination.",
        "properties" : {
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "pageRequest" : {
            "$ref" : "#/components/schemas/DynamoPageRequest"
          },
          "timestampFilter" : {
            "$ref" : "#/components/schemas/Facerecognition_faceevent_ReportTimestampFilter"
          }
        }
      },
      "Facerecognition_faceevent_FindFaceEventsByLocationForReportingWSResponse" : {
        "type" : "object",
        "description" : "Response object containing face events by location for reporting purposes with pagination information.",
        "properties" : {
          "faceEvents" : {
            "type" : "array",
            "description" : "List of face events by location for reporting purposes",
            "items" : {
              "$ref" : "#/components/schemas/Facerecognition_faceevent_ExternalFaceEvent"
            },
            "nullable" : true
          },
          "lastEvaluatedKey" : {
            "type" : "string",
            "description" : "Pagination key for retrieving the next page of face events by location for reporting",
            "example" : "next_page_key_123",
            "nullable" : true
          }
        }
      },
      "Facerecognition_faceevent_FindFaceEventsByOrgForReportingWSRequest" : {
        "type" : "object",
        "description" : "Request object for finding face events by organization for reporting purposes with timestamp filtering and pagination.",
        "properties" : {
          "pageRequest" : {
            "$ref" : "#/components/schemas/DynamoPageRequest"
          },
          "timestampFilter" : {
            "$ref" : "#/components/schemas/Facerecognition_faceevent_ReportTimestampFilter"
          }
        }
      },
      "Facerecognition_faceevent_FindFaceEventsByOrgForReportingWSResponse" : {
        "type" : "object",
        "description" : "Response object containing face events for reporting purposes with pagination information.",
        "properties" : {
          "faceEvents" : {
            "type" : "array",
            "description" : "List of face events for reporting purposes",
            "items" : {
              "$ref" : "#/components/schemas/Facerecognition_faceevent_ExternalFaceEvent"
            },
            "nullable" : true
          },
          "lastEvaluatedKey" : {
            "type" : "string",
            "description" : "Pagination key for retrieving the next page of face events for reporting",
            "example" : "next_page_key_123",
            "nullable" : true
          }
        }
      },
      "Facerecognition_faceevent_FindFaceEventsByOrgWSRequest" : {
        "type" : "object",
        "description" : "Request object for finding face events by organization with search filtering and pagination.",
        "properties" : {
          "pageRequest" : {
            "$ref" : "#/components/schemas/DynamoPageRequest"
          },
          "searchFilter" : {
            "$ref" : "#/components/schemas/Facerecognition_faceevent_ExternalFaceEventSearchFilter"
          }
        }
      },
      "Facerecognition_faceevent_FindFaceEventsByOrgWSResponse" : {
        "type" : "object",
        "description" : "Response object containing face events for an organization with pagination information.",
        "properties" : {
          "faceEvents" : {
            "type" : "array",
            "description" : "List of face events matching the search criteria",
            "items" : {
              "$ref" : "#/components/schemas/Facerecognition_faceevent_ExternalFaceEvent"
            },
            "nullable" : true
          },
          "lastEvaluatedKey" : {
            "type" : "string",
            "description" : "Pagination key for retrieving the next page of results",
            "example" : "next_page_key_123",
            "nullable" : true
          }
        }
      },
      "Facerecognition_faceevent_FindSimilarFaceEventsByEmbeddingWSRequest" : {
        "type" : "object",
        "description" : "Request object for finding face events similar to a face embedding with search filtering and pagination.",
        "properties" : {
          "embedding" : {
            "$ref" : "#/components/schemas/Embedding"
          },
          "pageRequest" : {
            "$ref" : "#/components/schemas/DynamoPageRequest"
          },
          "searchFilter" : {
            "$ref" : "#/components/schemas/Facerecognition_faceevent_ExternalFaceEventSimilaritySearchFilter"
          }
        }
      },
      "Facerecognition_faceevent_FindSimilarFaceEventsByEmbeddingWSResponse" : {
        "type" : "object",
        "description" : "Response object containing face events similar to a face embedding with pagination information.",
        "properties" : {
          "faceEvents" : {
            "type" : "array",
            "description" : "List of face events similar to the specified face embedding",
            "items" : {
              "$ref" : "#/components/schemas/Facerecognition_faceevent_ExternalFaceEvent"
            },
            "nullable" : true
          },
          "lastEvaluatedKey" : {
            "type" : "string",
            "description" : "Pagination key for retrieving the next page of similar face events",
            "example" : "next_page_key_123",
            "nullable" : true
          }
        }
      },
      "Facerecognition_faceevent_FindSimilarFaceEventsByFaceMatchmakerWSRequest" : {
        "type" : "object",
        "description" : "Request object for finding face events similar to a face ID using face matchmaker with search filtering and pagination.",
        "properties" : {
          "faceId" : {
            "type" : "string",
            "description" : "Face ID to find similar face events for",
            "example" : "face_12345",
            "nullable" : true
          },
          "pageRequest" : {
            "$ref" : "#/components/schemas/DynamoPageRequest"
          },
          "searchFilter" : {
            "$ref" : "#/components/schemas/Facerecognition_faceevent_ExternalFaceEventSimilaritySearchFilter"
          }
        }
      },
      "Facerecognition_faceevent_FindSimilarFaceEventsByFaceMatchmakerWSResponse" : {
        "type" : "object",
        "description" : "Response object containing face events similar to a face ID using face matchmaker with pagination information.",
        "properties" : {
          "faceEvents" : {
            "type" : "array",
            "description" : "List of face events similar to the specified face ID",
            "items" : {
              "$ref" : "#/components/schemas/Facerecognition_faceevent_ExternalFaceEvent"
            },
            "nullable" : true
          },
          "lastEvaluatedKey" : {
            "type" : "string",
            "description" : "Pagination key for retrieving the next page of similar face events",
            "example" : "next_page_key_123",
            "nullable" : true
          }
        }
      },
      "Facerecognition_faceevent_FindSimilarFaceEventsWSRequest" : {
        "type" : "object",
        "description" : "Request object for finding face events similar to a specified face event with search filtering and pagination.",
        "properties" : {
          "faceEventUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "pageRequest" : {
            "$ref" : "#/components/schemas/DynamoPageRequest"
          },
          "searchFilter" : {
            "$ref" : "#/components/schemas/Facerecognition_faceevent_ExternalFaceEventSimilaritySearchFilter"
          }
        }
      },
      "Facerecognition_faceevent_FindSimilarFaceEventsWSResponse" : {
        "type" : "object",
        "description" : "Response object containing face events similar to a specified face event with pagination information.",
        "properties" : {
          "faceEvents" : {
            "type" : "array",
            "description" : "List of face events similar to the specified face event",
            "items" : {
              "$ref" : "#/components/schemas/Facerecognition_faceevent_ExternalFaceEvent"
            },
            "nullable" : true
          },
          "lastEvaluatedKey" : {
            "type" : "string",
            "description" : "Pagination key for retrieving the next page of similar face events",
            "example" : "next_page_key_123",
            "nullable" : true
          }
        }
      },
      "Facerecognition_faceevent_GetFaceEventWSRequest" : {
        "type" : "object",
        "description" : "Request object for retrieving a specific face event by UUID.",
        "properties" : {
          "eventUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Facerecognition_faceevent_GetFaceEventWSResponse" : {
        "type" : "object",
        "description" : "Response object containing a specific face event.",
        "properties" : {
          "faceEvent" : {
            "$ref" : "#/components/schemas/Facerecognition_faceevent_ExternalFaceEvent"
          }
        }
      },
      "Facerecognition_faceevent_ProcessFaceEventSearchImageWSResponse" : {
        "type" : "object",
        "description" : "Response object containing processed face search image with embedding and base64 image data.",
        "properties" : {
          "embedding" : {
            "$ref" : "#/components/schemas/Embedding"
          },
          "imageBase64" : {
            "type" : "string",
            "description" : "Base64 encoded image used for embedding generation. The image in the request may have been modified(cropped) in order to generate embedding.",
            "nullable" : true
          }
        }
      },
      "Facerecognition_faceevent_ReportTimestampFilter" : {
        "type" : "object",
        "description" : "Filter object for reporting face events with timestamp range and interval configuration.",
        "properties" : {
          "rangeStart" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Start date for the reporting range",
            "example" : "2024-01-01T00:00:00Z",
            "nullable" : true
          },
          "reportInterval" : {
            "type" : "string",
            "description" : "Report interval for filtering face events",
            "enum" : [ "MINUTELY", "QUARTERHOURLY", "HOURLY", "DAILY", "WEEKLY", "MONTHLY" ],
            "nullable" : true
          }
        }
      },
      "Facerecognition_faceevent_UpdateFaceEventWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating a face event with person association information.",
        "properties" : {
          "eventUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "personName" : {
            "type" : "string",
            "description" : "Name of the person associated with the face event. Ignored if person UUID matches to one of the top person matches.",
            "nullable" : true
          },
          "personUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Facerecognition_faceevent_UpdateFaceEventWSResponse" : {
        "type" : "object",
        "description" : "Response object for updating a face event.",
        "properties" : {
          "faceEvent" : {
            "$ref" : "#/components/schemas/Facerecognition_faceevent_ExternalFaceEvent"
          }
        }
      },
      "Facerecognition_matchmaker_CreateFaceMatchmakerFromSightingWSRequest" : {
        "type" : "object",
        "description" : "Request object for creating a face matchmaker from a face event sighting.",
        "properties" : {
          "faceEventUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "personUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Facerecognition_matchmaker_CreateFaceMatchmakerFromSightingWSResponse" : {
        "type" : "object",
        "description" : "Response object for creating a face matchmaker from a face event sighting.",
        "properties" : {
          "faceMatchmaker" : {
            "$ref" : "#/components/schemas/Facerecognition_matchmaker_ExternalFaceMatchmaker"
          }
        }
      },
      "Facerecognition_matchmaker_CreatePersonAndFaceMatchmakersWSResponse" : {
        "type" : "object",
        "description" : "Response object for creating a person and associated face matchmakers.",
        "properties" : {
          "faceMatchmakers" : {
            "type" : "array",
            "description" : "List of created face matchmakers for the person",
            "items" : {
              "$ref" : "#/components/schemas/Facerecognition_matchmaker_ExternalFaceMatchmaker"
            },
            "nullable" : true
          },
          "person" : {
            "$ref" : "#/components/schemas/Person"
          },
          "transactionId" : {
            "type" : "string",
            "description" : "Transaction ID for tracking the creation process",
            "example" : "txn_12345",
            "nullable" : true
          }
        }
      },
      "Facerecognition_matchmaker_DeleteFaceMatchmakerWSRequest" : {
        "type" : "object",
        "description" : "Request object for deleting a face matchmaker.",
        "properties" : {
          "faceId" : {
            "type" : "string",
            "description" : "Face ID of the matchmaker to delete",
            "example" : "face_12345",
            "nullable" : true
          }
        }
      },
      "Facerecognition_matchmaker_DeleteFaceMatchmakerWSResponse" : {
        "type" : "object",
        "description" : "Response object for deleting a face matchmaker."
      },
      "Facerecognition_matchmaker_ExternalFaceMatchmaker" : {
        "type" : "object",
        "description" : "External face matchmaker object containing face recognition matchmaker data and metadata.",
        "properties" : {
          "createdOn" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Date when the face matchmaker was created",
            "example" : "2024-01-01T00:00:00Z",
            "nullable" : true
          },
          "id" : {
            "type" : "string",
            "description" : "Unique identifier for the face matchmaker",
            "example" : "face_12345",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "personUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "uploaded" : {
            "type" : "boolean",
            "description" : "Whether the face matchmaker has been uploaded",
            "example" : true,
            "nullable" : true
          }
        }
      },
      "Facerecognition_matchmaker_FileUploadResult" : {
        "type" : "object",
        "description" : "Result of a file upload process for face matchmaker creation, including success status and error messages.",
        "properties" : {
          "fileName" : {
            "type" : "string",
            "description" : "The name of the uploaded file.",
            "nullable" : true
          },
          "message" : {
            "type" : "string",
            "description" : "Error message that occurred during upload.",
            "nullable" : true
          },
          "success" : {
            "type" : "boolean",
            "description" : "Indicates whether the file upload was successful. Note, that even if upload was successful, subsequent operations, such as adding the uploaded file as a matchmaker, may fail.",
            "nullable" : true
          }
        }
      },
      "Facerecognition_matchmaker_FindFaceMatchmakersByOrgWSRequest" : {
        "type" : "object",
        "description" : "Request object for finding face matchmakers by organization."
      },
      "Facerecognition_matchmaker_FindFaceMatchmakersByOrgWSResponse" : {
        "type" : "object",
        "description" : "Response object containing face matchmakers for an organization.",
        "properties" : {
          "faceMatchmakers" : {
            "type" : "array",
            "description" : "List of face matchmakers for the organization",
            "items" : {
              "$ref" : "#/components/schemas/Facerecognition_matchmaker_ExternalFaceMatchmaker"
            },
            "nullable" : true
          }
        }
      },
      "Facerecognition_matchmaker_FindFaceMatchmakersByPersonWSRequest" : {
        "type" : "object",
        "description" : "Request object for finding face matchmakers by person UUID.",
        "properties" : {
          "personUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Facerecognition_matchmaker_FindFaceMatchmakersByPersonWSResponse" : {
        "type" : "object",
        "description" : "Response object containing face matchmakers for a specific person.",
        "properties" : {
          "faceMatchmakers" : {
            "type" : "array",
            "description" : "List of face matchmakers for the specified person",
            "items" : {
              "$ref" : "#/components/schemas/Facerecognition_matchmaker_ExternalFaceMatchmaker"
            },
            "nullable" : true
          }
        }
      },
      "Facerecognition_matchmaker_FindFaceUploadMetadataByTransactionWSRequest" : {
        "type" : "object",
        "description" : "Request object for finding face upload metadata by transaction ID.",
        "properties" : {
          "transactionId" : {
            "type" : "string",
            "description" : "Transaction ID to find face upload metadata for",
            "example" : "txn_12345",
            "nullable" : true
          }
        }
      },
      "Facerecognition_matchmaker_FindFaceUploadMetadataByTransactionWSResponse" : {
        "type" : "object",
        "description" : "Response object containing face upload metadata for a transaction.",
        "properties" : {
          "faceUploadMetadata" : {
            "type" : "array",
            "description" : "List of face upload metadata for the transaction",
            "items" : {
              "$ref" : "#/components/schemas/FaceUploadMetadata"
            },
            "nullable" : true
          }
        }
      },
      "Facerecognition_matchmaker_GetFaceMatchingConfigWSRequest" : {
        "type" : "object",
        "description" : "Request object for retrieving face matching configuration."
      },
      "Facerecognition_matchmaker_GetFaceMatchingConfigWSResponse" : {
        "type" : "object",
        "description" : "Response object containing face matching configuration settings.",
        "properties" : {
          "faceMatchConfidenceThreshold" : {
            "type" : "number",
            "format" : "float",
            "description" : "Face match confidence threshold value",
            "example" : 0.7,
            "nullable" : true
          }
        }
      },
      "Facerecognition_matchmaker_GetFaceMatchmakerWSRequest" : {
        "type" : "object",
        "description" : "Request object for retrieving a face matchmaker by face ID.",
        "properties" : {
          "faceId" : {
            "type" : "string",
            "description" : "Face ID to retrieve the matchmaker for",
            "example" : "face_12345",
            "nullable" : true
          }
        }
      },
      "Facerecognition_matchmaker_GetFaceMatchmakerWSResponse" : {
        "type" : "object",
        "description" : "Response object containing a face matchmaker.",
        "properties" : {
          "faceMatchmaker" : {
            "$ref" : "#/components/schemas/Facerecognition_matchmaker_ExternalFaceMatchmaker"
          }
        }
      },
      "Facerecognition_matchmaker_UpdateFaceMatchingConfigWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating face matching configuration settings.",
        "properties" : {
          "faceMatchConfidenceThreshold" : {
            "type" : "number",
            "format" : "float",
            "description" : "Minimum confidence level required for the system to automatically assign a match. If null, the system uses the built-in default.",
            "maximum" : 1.0,
            "minimum" : 0.0,
            "nullable" : true
          }
        }
      },
      "Facerecognition_matchmaker_UpdateFaceMatchingConfigWSResponse" : {
        "type" : "object",
        "description" : "Response object for updating face matching configuration settings.",
        "properties" : {
          "faceMatchConfidenceThreshold" : {
            "type" : "number",
            "format" : "float",
            "description" : "Updated face match confidence threshold value",
            "example" : 0.7,
            "nullable" : true
          }
        }
      },
      "Facerecognition_matchmaker_UploadFaceMatchmakerForPersonWSResponse" : {
        "type" : "object",
        "description" : "Response object for uploading a face matchmaker for a specific person.",
        "properties" : {
          "fileUploadResult" : {
            "$ref" : "#/components/schemas/Facerecognition_matchmaker_FileUploadResult"
          },
          "transactionId" : {
            "type" : "string",
            "description" : "Transaction ID to track face matchmaker upload progress",
            "example" : "txn_12345",
            "nullable" : true
          }
        }
      },
      "Facerecognition_matchmaker_UploadFaceMatchmakersWSResponse" : {
        "type" : "object",
        "description" : "Response object for uploading face matchmakers with transaction tracking and upload results.",
        "properties" : {
          "fileUploadResults" : {
            "type" : "array",
            "description" : "List of file upload results for each uploaded face matchmaker",
            "items" : {
              "$ref" : "#/components/schemas/Facerecognition_matchmaker_FileUploadResult"
            },
            "nullable" : true
          },
          "transactionId" : {
            "type" : "string",
            "description" : "Transaction ID to track face matchmakers upload progress",
            "example" : "txn_12345",
            "nullable" : true
          }
        }
      },
      "Facerecognition_matchmaker_ValidateFaceMatchmakerImageWSResponse" : {
        "type" : "object",
        "description" : "Response object for validating face matchmaker images with validation status and error information.",
        "properties" : {
          "errorMessage" : {
            "type" : "string",
            "description" : "Error message if validation failed",
            "example" : "Image quality too low",
            "nullable" : true
          },
          "valid" : {
            "type" : "boolean",
            "description" : "Whether the face matchmaker image is valid",
            "example" : true,
            "nullable" : true
          }
        }
      },
      "Facerecognition_person_AddPersonLabelWSRequest" : {
        "type" : "object",
        "description" : "Request object for adding a label to a person for face recognition purposes.",
        "properties" : {
          "label" : {
            "type" : "string",
            "description" : "Label to add to the person",
            "example" : "VIP",
            "nullable" : true
          },
          "personUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Facerecognition_person_AddPersonLabelWSResponse" : {
        "type" : "object",
        "description" : "Response object for adding a label to a person for face recognition purposes."
      },
      "Facerecognition_person_CreatePersonWSRequest" : {
        "type" : "object",
        "description" : "Request object for creating a person for face recognition purposes.",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Name of the person to create",
            "example" : "John Doe",
            "nullable" : true
          }
        }
      },
      "Facerecognition_person_CreatePersonWSResponse" : {
        "type" : "object",
        "description" : "Response object for creating a person for face recognition purposes.",
        "properties" : {
          "person" : {
            "$ref" : "#/components/schemas/Person"
          }
        }
      },
      "Facerecognition_person_DeletePersonWSRequest" : {
        "type" : "object",
        "description" : "Request object for deleting a person for face recognition purposes.",
        "properties" : {
          "personUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Facerecognition_person_DeletePersonWSResponse" : {
        "type" : "object",
        "description" : "Response object for deleting a person for face recognition purposes."
      },
      "Facerecognition_person_FindPeopleByOrgWSRequest" : {
        "type" : "object",
        "description" : "Request object for finding people by organization for face recognition purposes."
      },
      "Facerecognition_person_FindPeopleByOrgWSResponse" : {
        "type" : "object",
        "description" : "Response object containing people for an organization for face recognition purposes.",
        "properties" : {
          "people" : {
            "type" : "array",
            "description" : "List of people for the organization",
            "items" : {
              "$ref" : "#/components/schemas/Person"
            },
            "nullable" : true
          }
        }
      },
      "Facerecognition_person_FindPersonLabelsByOrgWSRequest" : {
        "type" : "object",
        "description" : "Request object for finding person labels by organization for face recognition purposes."
      },
      "Facerecognition_person_FindPersonLabelsByOrgWSResponse" : {
        "type" : "object",
        "description" : "Response object containing person labels by organization for face recognition purposes.",
        "properties" : {
          "labelsByPerson" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "description" : "Map of person UUIDs to their associated labels",
              "items" : {
                "type" : "string",
                "description" : "Map of person UUIDs to their associated labels",
                "nullable" : true
              },
              "nullable" : true,
              "uniqueItems" : true
            },
            "description" : "Map of person UUIDs to their associated labels",
            "nullable" : true
          }
        }
      },
      "Facerecognition_person_GetPersonWSRequest" : {
        "type" : "object",
        "description" : "Request object for retrieving a person by UUID.",
        "properties" : {
          "personUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Facerecognition_person_GetPersonWSResponse" : {
        "type" : "object",
        "description" : "Response object containing a person.",
        "properties" : {
          "person" : {
            "$ref" : "#/components/schemas/Person"
          }
        }
      },
      "Facerecognition_person_RemovePersonLabelWSRequest" : {
        "type" : "object",
        "description" : "Request object for removing a label from a person for face recognition purposes.",
        "properties" : {
          "label" : {
            "type" : "string",
            "description" : "Label to remove from the person",
            "example" : "VIP",
            "nullable" : true
          },
          "personUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Facerecognition_person_RemovePersonLabelWSResponse" : {
        "type" : "object",
        "description" : "Response object for removing a label from a person for face recognition purposes."
      },
      "Facerecognition_person_UpdatePersonWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating a person for face recognition purposes.",
        "properties" : {
          "personSelectiveUpdate" : {
            "$ref" : "#/components/schemas/PersonSelectiveUpdate"
          }
        }
      },
      "Facerecognition_person_UpdatePersonWSResponse" : {
        "type" : "object",
        "description" : "Response object for updating a person for face recognition purposes.",
        "properties" : {
          "person" : {
            "$ref" : "#/components/schemas/Person"
          }
        }
      },
      "FeatureCompatabilityType" : {
        "type" : "object",
        "description" : "List of feature compatibility information",
        "properties" : {
          "betaRolloutOrgFlag" : {
            "type" : "string",
            "nullable" : true
          },
          "deviceFeatureEnablement" : {
            "$ref" : "#/components/schemas/DeviceFeatureEnum"
          },
          "featureName" : {
            "type" : "string",
            "nullable" : true
          },
          "generatedActivities" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ActivityEnum"
            },
            "nullable" : true
          },
          "hardwareDefaultMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "boolean",
              "nullable" : true
            },
            "nullable" : true
          },
          "requiredLicenses" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/License"
            },
            "nullable" : true
          },
          "supportedHardware" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/HardwareVariationEnum"
            },
            "nullable" : true
          }
        }
      },
      "Feature_DeviceFeaturesType" : {
        "type" : "object",
        "description" : "Device features configuration with feature enablement mapping.",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          },
          "featureMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "boolean",
              "description" : "Map of device features to their enabled/disabled status",
              "nullable" : true
            },
            "description" : "Map of device features to their enabled/disabled status",
            "nullable" : true
          }
        }
      },
      "Feature_GetDeviceEventTypesWSRequest" : {
        "type" : "object",
        "description" : "Request object for retrieving possible event types for a device based on enabled features.",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          }
        }
      },
      "Feature_GetDeviceEventTypesWSResponse" : {
        "type" : "object",
        "description" : "Response object containing possible event types for a device based on enabled features.",
        "properties" : {
          "eventTypes" : {
            "type" : "array",
            "description" : "List of possible event types for the device",
            "items" : {
              "$ref" : "#/components/schemas/ActivityEnum"
            },
            "nullable" : true
          }
        }
      },
      "Feature_GetDeviceFeaturesListWSRequest" : {
        "type" : "object",
        "description" : "Request object for retrieving enabled features for multiple devices in an organization.",
        "properties" : {
          "deviceUuids" : {
            "type" : "array",
            "description" : "List of device UUIDs to retrieve features for",
            "items" : {
              "type" : "string",
              "format" : "DeviceFacetUuid",
              "description" : "RUUID with optional appended facet information",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Feature_GetDeviceFeaturesListWSResponse" : {
        "type" : "object",
        "description" : "Response object containing enabled features for multiple devices in an organization.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "featureList" : {
            "type" : "array",
            "description" : "List of device features for each requested device",
            "items" : {
              "$ref" : "#/components/schemas/Feature_DeviceFeaturesType"
            },
            "nullable" : true
          }
        }
      },
      "Feature_GetDeviceFeaturesWSRequest" : {
        "type" : "object",
        "description" : "Request object for retrieving enabled features for a device.",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          }
        }
      },
      "Feature_GetDeviceFeaturesWSResponse" : {
        "type" : "object",
        "description" : "Response object containing enabled features for a device.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "features" : {
            "$ref" : "#/components/schemas/Feature_DeviceFeaturesType"
          }
        }
      },
      "Feature_GetFeatureCompatabilityMatrixWSRequest" : {
        "type" : "object",
        "description" : "Request object for retrieving the feature compatibility matrix."
      },
      "Feature_GetFeatureCompatabilityMatrixWSResponse" : {
        "type" : "object",
        "description" : "Response object containing the feature compatibility matrix.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "featureCompatabilityMatrix" : {
            "type" : "array",
            "description" : "List of feature compatibility information",
            "items" : {
              "$ref" : "#/components/schemas/FeatureCompatabilityType"
            },
            "nullable" : true
          }
        }
      },
      "Feature_UpdateDeviceFeaturesWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating enabled features for a device.",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          },
          "featureMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "boolean",
              "description" : "Map of device features to their new enabled/disabled status",
              "nullable" : true
            },
            "description" : "Map of device features to their new enabled/disabled status",
            "nullable" : true
          }
        }
      },
      "Feature_UpdateDeviceFeaturesWSResponse" : {
        "type" : "object",
        "description" : "Response object for updating enabled features for a device.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "FirmwareUpdateIntervalType" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "minuteOfWeekStart" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "minuteOfWeekStop" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "FirmwareUpdateSettingsOverrideType" : {
        "type" : "object",
        "description" : "Overrides default firmware update settings.",
        "nullable" : true,
        "properties" : {
          "deviceTypes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DeviceTypeEnum"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "firmwareUpdateSettings" : {
            "$ref" : "#/components/schemas/FirmwareUpdateSettingsType"
          }
        }
      },
      "FirmwareUpdateSettingsType" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "intervalsV2" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FirmwareUpdateIntervalType"
            },
            "nullable" : true
          },
          "mode" : {
            "type" : "string",
            "enum" : [ "MANUAL", "SCHEDULED" ],
            "nullable" : true
          }
        }
      },
      "FirstInFirmwareStatus" : {
        "type" : "string",
        "enum" : [ "DISABLED", "NOT_CONFIGURED", "REQUIRED", "SATISFIED", "UNKNOWN" ]
      },
      "FirstInResetEnum" : {
        "type" : "string",
        "enum" : [ "DAILY" ]
      },
      "FirstInShadow" : {
        "type" : "object",
        "properties" : {
          "originator" : {
            "$ref" : "#/components/schemas/BaseEventOriginator"
          },
          "source" : {
            "$ref" : "#/components/schemas/FirstInSourceEnum"
          },
          "state" : {
            "$ref" : "#/components/schemas/FirstInFirmwareStatus"
          },
          "stateUpdateEventTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "FirstInSourceEnum" : {
        "type" : "string",
        "enum" : [ "CONFIG_MANUAL_OVERRIDE", "CONFIG_REQUIREMENT_CHANGE", "CONFIG_MEMBERSHIP", "SCHEDULED_RESET", "LOCAL_BADGE_EVENT", "LOCKDOWN", "UNKNOWN" ]
      },
      "FirstInState" : {
        "type" : "object",
        "properties" : {
          "originator" : {
            "$ref" : "#/components/schemas/BaseEventOriginator"
          },
          "requestedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "state" : {
            "$ref" : "#/components/schemas/FirstInStatus"
          }
        }
      },
      "FirstInState_Minimal" : {
        "type" : "object",
        "properties" : {
          "originator" : {
            "$ref" : "#/components/schemas/BaseEventOriginator_Minimal"
          },
          "requestedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "state" : {
            "$ref" : "#/components/schemas/FirstInStatus_Minimal"
          }
        }
      },
      "FirstInStatus" : {
        "type" : "string",
        "enum" : [ "REQUIRED", "SATISFIED" ]
      },
      "FirstInStatus_Minimal" : {
        "type" : "string",
        "enum" : [ "REQUIRED", "SATISFIED" ]
      },
      "FisheyeDisplayMode" : {
        "type" : "string",
        "description" : "Fisheye display mode of the shared video wall device",
        "enum" : [ "RAW", "IMMERSIVE", "TILES", "RAW_PANO" ]
      },
      "FlicDevice" : {
        "type" : "object",
        "properties" : {
          "flicAction" : {
            "type" : "string",
            "nullable" : true
          },
          "flicBatteryLevel" : {
            "type" : "string",
            "nullable" : true
          },
          "flicHub" : {
            "$ref" : "#/components/schemas/FlicHub"
          },
          "flicName" : {
            "type" : "string",
            "nullable" : true
          },
          "flicSerialNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "flicTimestamp" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "flicUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "lastClickedTimestamp" : {
            "type" : "string",
            "nullable" : true
          },
          "moduleUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "FlicHub" : {
        "type" : "object",
        "properties" : {
          "flicHubName" : {
            "type" : "string",
            "nullable" : true
          },
          "flicHubSerialNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "flicHubUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "FlicType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "apiKey" : {
              "type" : "string",
              "nullable" : true
            },
            "apiSecret" : {
              "type" : "string",
              "nullable" : true
            },
            "associatedLocations" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "RUUID",
                "description" : "base 64 (url-safe) uuid string",
                "example" : "AAAAAAAAAAAAAAAAAAAAAA",
                "nullable" : true
              },
              "nullable" : true,
              "uniqueItems" : true
            },
            "moduleUploaded" : {
              "type" : "boolean",
              "nullable" : true
            },
            "webhookId" : {
              "type" : "string",
              "nullable" : true
            },
            "webhookToken" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "FloorPlanType" : {
        "type" : "object",
        "properties" : {
          "eastEdge" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "floorLabel" : {
            "type" : "string",
            "nullable" : true
          },
          "floorNumber" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "imageUrl" : {
            "type" : "string",
            "format" : "url",
            "nullable" : true
          },
          "mediaUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "northEdge" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "rotation" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "southEdge" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "westEdge" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          }
        }
      },
      "FollowUpAction" : {
        "type" : "object",
        "discriminator" : {
          "propertyName" : "type"
        },
        "oneOf" : [ {
          "$ref" : "#/components/schemas/NotificationFollowUp"
        } ],
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/Action"
          }
        }
      },
      "FootageBoundingBoxType" : {
        "type" : "object",
        "description" : "List of shared footage bounding boxes",
        "properties" : {
          "a" : {
            "$ref" : "#/components/schemas/ActivityEnum"
          },
          "al" : {
            "type" : "boolean",
            "description" : "alerted on this?",
            "nullable" : true
          },
          "b" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "bounding box - bottom permyriad",
            "nullable" : true
          },
          "c" : {
            "type" : "number",
            "format" : "float",
            "description" : "confidence",
            "nullable" : true
          },
          "cd" : {
            "type" : "string",
            "description" : "Custom activity display description, maximum 100 characters",
            "nullable" : true
          },
          "cdn" : {
            "type" : "string",
            "description" : "custom activity display name",
            "nullable" : true
          },
          "croppedImageLocator" : {
            "type" : "string",
            "nullable" : true
          },
          "customActivityColor" : {
            "type" : "string",
            "enum" : [ "BLUE", "RED", "PURPLE", "TAN", "ORANGE", "TEAL", "GRAY", "BLACK" ],
            "nullable" : true
          },
          "fn" : {
            "type" : "string",
            "description" : "face names",
            "nullable" : true
          },
          "kp" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/PointType"
            },
            "description" : "pose keypoints",
            "nullable" : true
          },
          "l" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "bounding box - left permyriad",
            "nullable" : true
          },
          "loudness" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "lp" : {
            "type" : "string",
            "description" : "license plate",
            "nullable" : true
          },
          "m" : {
            "type" : "boolean",
            "description" : "object in motion?",
            "nullable" : true
          },
          "objectId" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "p" : {
            "type" : "string",
            "description" : "pose",
            "nullable" : true
          },
          "r" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "bounding box - right permyriad",
            "nullable" : true
          },
          "ro" : {
            "type" : "array",
            "description" : "recognized objects",
            "items" : {
              "type" : "string",
              "description" : "recognized objects",
              "nullable" : true
            },
            "nullable" : true
          },
          "sensorValType" : {
            "$ref" : "#/components/schemas/SensorValType"
          },
          "t" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "bounding box - top permyriad",
            "nullable" : true
          },
          "toastOrderIdInfo" : {
            "$ref" : "#/components/schemas/ToastOrderIdType"
          },
          "ts" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "timestamp in milliseconds since epoch",
            "nullable" : true
          },
          "uf" : {
            "type" : "string",
            "description" : "FaceId for an unidentified face",
            "nullable" : true
          },
          "vn" : {
            "type" : "string",
            "description" : "vehicle name",
            "nullable" : true
          }
        },
        "required" : [ "a", "b", "l", "r", "t", "ts" ]
      },
      "FootageSeekPointType" : {
        "type" : "object",
        "description" : "List of shared footage seekpoints",
        "properties" : {
          "a" : {
            "$ref" : "#/components/schemas/ActivityEnum"
          },
          "al" : {
            "type" : "boolean",
            "nullable" : true
          },
          "b" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "fn" : {
            "type" : "string",
            "nullable" : true
          },
          "kp" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/PointType"
            },
            "nullable" : true
          },
          "l" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "lp" : {
            "type" : "string",
            "nullable" : true
          },
          "p" : {
            "type" : "string",
            "nullable" : true
          },
          "r" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "ro" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "t" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "ts" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "uf" : {
            "type" : "string",
            "nullable" : true
          },
          "vn" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "FootageSeekPointV2Type" : {
        "type" : "object",
        "description" : "List of shared footage seekpoints (deprecated)",
        "properties" : {
          "a" : {
            "$ref" : "#/components/schemas/ActivityEnum"
          },
          "al" : {
            "type" : "boolean",
            "description" : "alerted on this?",
            "nullable" : true
          },
          "cc" : {
            "type" : "string",
            "description" : "Custom activity seekpoint color",
            "enum" : [ "BLUE", "RED", "PURPLE", "TAN", "ORANGE", "TEAL", "GRAY", "BLACK" ],
            "nullable" : true
          },
          "cd" : {
            "type" : "string",
            "description" : "Custom activity display description, maximum 100 characters",
            "nullable" : true
          },
          "cdn" : {
            "type" : "string",
            "description" : "Custom activity display name, maximum 32 characters",
            "nullable" : true
          },
          "dcao" : {
            "type" : "boolean",
            "nullable" : true
          },
          "fn" : {
            "type" : "string",
            "description" : "face names",
            "nullable" : true
          },
          "id" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "loudness" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "lp" : {
            "type" : "string",
            "description" : "license plate",
            "nullable" : true
          },
          "m" : {
            "type" : "boolean",
            "description" : "object in motion?",
            "nullable" : true
          },
          "p" : {
            "type" : "string",
            "description" : "pose",
            "nullable" : true
          },
          "ro" : {
            "type" : "array",
            "description" : "recognized objects",
            "items" : {
              "type" : "string",
              "description" : "recognized objects",
              "nullable" : true
            },
            "nullable" : true
          },
          "sensorValType" : {
            "$ref" : "#/components/schemas/SensorValType"
          },
          "toi" : {
            "$ref" : "#/components/schemas/ToastOrderIdType"
          },
          "ts" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "timestamp",
            "nullable" : true
          },
          "tu" : {
            "type" : "string",
            "nullable" : true
          },
          "uf" : {
            "type" : "string",
            "description" : "FaceId for an unidentified face",
            "nullable" : true
          },
          "vn" : {
            "type" : "string",
            "description" : "vehicle name",
            "nullable" : true
          }
        },
        "required" : [ "a", "ts" ]
      },
      "FormDataBodyPart" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "content" : {
            "type" : "object",
            "nullable" : true
          },
          "contentDisposition" : {
            "$ref" : "#/components/schemas/ContentDisposition"
          },
          "entity" : {
            "type" : "object",
            "nullable" : true
          },
          "fileName" : {
            "type" : "string",
            "nullable" : true
          },
          "formDataContentDisposition" : {
            "$ref" : "#/components/schemas/FormDataContentDisposition"
          },
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "nullable" : true
              },
              "nullable" : true
            },
            "nullable" : true,
            "properties" : {
              "empty" : {
                "type" : "boolean",
                "nullable" : true
              }
            }
          },
          "mediaType" : {
            "$ref" : "#/components/schemas/MediaType"
          },
          "messageBodyWorkers" : {
            "$ref" : "#/components/schemas/MessageBodyWorkers"
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "parameterizedHeaders" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/ParameterizedHeader"
              },
              "nullable" : true
            },
            "nullable" : true,
            "properties" : {
              "empty" : {
                "type" : "boolean",
                "nullable" : true
              }
            }
          },
          "parent" : {
            "$ref" : "#/components/schemas/MultiPart"
          },
          "providers" : {
            "$ref" : "#/components/schemas/Providers"
          },
          "simple" : {
            "type" : "boolean",
            "nullable" : true
          },
          "value" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "FormDataContentDisposition" : {
        "type" : "object",
        "properties" : {
          "creationDate" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "fileName" : {
            "type" : "string",
            "nullable" : true
          },
          "modificationDate" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "parameters" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "readDate" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "size" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "FormDataMultiPart" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "bodyParts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BodyPart"
            },
            "nullable" : true
          },
          "contentDisposition" : {
            "$ref" : "#/components/schemas/ContentDisposition"
          },
          "entity" : {
            "type" : "object",
            "nullable" : true
          },
          "fields" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/FormDataBodyPart"
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "nullable" : true
              },
              "nullable" : true
            },
            "nullable" : true,
            "properties" : {
              "empty" : {
                "type" : "boolean",
                "nullable" : true
              }
            }
          },
          "mediaType" : {
            "$ref" : "#/components/schemas/MediaType"
          },
          "messageBodyWorkers" : {
            "$ref" : "#/components/schemas/MessageBodyWorkers"
          },
          "parameterizedHeaders" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/ParameterizedHeader"
              },
              "nullable" : true
            },
            "nullable" : true,
            "properties" : {
              "empty" : {
                "type" : "boolean",
                "nullable" : true
              }
            }
          },
          "parent" : {
            "$ref" : "#/components/schemas/MultiPart"
          },
          "providers" : {
            "$ref" : "#/components/schemas/Providers"
          }
        }
      },
      "FormaSensorType" : {
        "type" : "object",
        "properties" : {
          "ch2oPpb" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "relHumid" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "tempC" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "timestampSec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Freight" : {
        "type" : "object",
        "properties" : {
          "warehouse" : {
            "type" : "string",
            "enum" : [ "AIT", "INVENTORY_RESERVATIONS" ],
            "nullable" : true
          }
        }
      },
      "FrequencyUnit" : {
        "type" : "string",
        "enum" : [ "HOURS", "DAYS", "WEEKS", "MONTHS", "UNKNOWN" ]
      },
      "FrontendEqualizerSettings" : {
        "type" : "object",
        "properties" : {
          "frequency" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "gain" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "q" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "FullDeviceStateType" : {
        "type" : "object",
        "description" : "Detailed state information for the specified NVR",
        "properties" : {
          "afSupport" : {
            "type" : "boolean",
            "nullable" : true
          },
          "audioSupported" : {
            "type" : "boolean",
            "nullable" : true
          },
          "baseVideoOperationUri" : {
            "type" : "string",
            "nullable" : true
          },
          "connectionStatus" : {
            "$ref" : "#/components/schemas/DeviceStatusEnum"
          },
          "connectionTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "defaultInterface" : {
            "type" : "string",
            "nullable" : true
          },
          "defaultInterfaceMac" : {
            "type" : "string",
            "nullable" : true
          },
          "directionRadians" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "externalIPAddress" : {
            "type" : "string",
            "nullable" : true
          },
          "facetNameMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "firmwareUpdateInProgress" : {
            "type" : "boolean",
            "nullable" : true
          },
          "firmwareVersion" : {
            "type" : "string",
            "nullable" : true
          },
          "floorNumber" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "healthStatus" : {
            "$ref" : "#/components/schemas/DeviceStatusEnum"
          },
          "healthStatusDetails" : {
            "$ref" : "#/components/schemas/DeviceHealthStatusDetailsEnum"
          },
          "hwVariation" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "lanAddresses" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "latestFirmwareVersion" : {
            "type" : "string",
            "nullable" : true
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "liveStreamShared" : {
            "type" : "boolean",
            "nullable" : true
          },
          "liveStreamsSharedCount" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "maxZoomPercent" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "mediaRegion" : {
            "type" : "string",
            "nullable" : true
          },
          "mediaStorageDeviceUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          },
          "mummified" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "onCameraState" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "nullable" : true
            },
            "nullable" : true
          },
          "onCloudState" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "nullable" : true
            },
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "region" : {
            "type" : "string",
            "nullable" : true
          },
          "secondaryLanAddresses" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "serialNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "ssid" : {
            "type" : "string",
            "nullable" : true
          },
          "stateUpdatedTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "supportedFacets" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DeviceFacet"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "versionsBehind" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "wifiApMac" : {
            "type" : "string",
            "nullable" : true
          },
          "wifiBars" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "wifiSignalStrength" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Functionality" : {
        "type" : "string",
        "enum" : [ "DEVICE_ADMINISTRATION", "ORG_ADMINISTRATION", "AUTH_ADMINISTRATION", "FIRMWARE_ADMINISTRATION", "DOOR_ACCESS_ADMINISTRATION", "CAMERA_ADMINISTRATION", "REGISTER_DEVICES", "DELETE_DEVICES", "LOCATION_ADMINISTRATION", "POLICY_ADMINISTRATION", "USER_ADMINISTRATION", "REPORT_ADMINISTRATION", "NOTIFICATION_ADMINISTRATION", "LICENSE_ADMINISTRATION", "RECEIVE_EMAILS", "MANAGE_FACES", "MANAGE_LICENSEPLATES", "API_ADMINISTRATION", "INTEGRATION_ADMINISTRATION", "DATA_EXFILTRATION", "ALERT_MONITORING_ADMINISTRATION", "ALERT_MONITORING_VIEWONLY", "GUEST_MANAGEMENT_ADMINISTRATION", "GUEST_MANAGEMENT_VIEWONLY", "CLIP_MANAGEMENT", "VIEW_SAVED_VIDEO", "CLLM_ADMINISTRATION", "UNKNOWN" ]
      },
      "GeneaSettings" : {
        "type" : "object",
        "properties" : {
          "alertUnauthorizedFaces" : {
            "type" : "boolean",
            "nullable" : true
          },
          "apiToken" : {
            "type" : "string",
            "nullable" : true
          },
          "createSeekPoints" : {
            "type" : "boolean",
            "nullable" : true
          },
          "doorInfoMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/BadgeIntegrationDoorInfoType"
            },
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabledTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "enablingUser" : {
            "type" : "string",
            "nullable" : true
          },
          "enablingUserUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "identifyFacesFromBadge" : {
            "type" : "boolean",
            "nullable" : true
          },
          "migrated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "rhombusToken" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "saveClips" : {
            "type" : "boolean",
            "nullable" : true
          },
          "webhookSignatureSecret" : {
            "type" : "string",
            "nullable" : true
          },
          "webhookUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "GeneaType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "alertUnauthorizedFaces" : {
              "type" : "boolean",
              "nullable" : true
            },
            "apiToken" : {
              "type" : "string",
              "nullable" : true
            },
            "badgeAuthDisablesAlarmMonitoring" : {
              "type" : "boolean",
              "nullable" : true
            },
            "createSeekPoints" : {
              "type" : "boolean",
              "nullable" : true
            },
            "doorInfoMap" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/BadgeIntegrationDoorInfoType"
              },
              "nullable" : true
            },
            "doorsValidated" : {
              "type" : "boolean",
              "nullable" : true
            },
            "identifyFacesFromBadge" : {
              "type" : "boolean",
              "nullable" : true
            },
            "indexFaces" : {
              "type" : "boolean",
              "nullable" : true
            },
            "misconfiguredDoors" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "nullable" : true
              },
              "nullable" : true
            },
            "refreshToken" : {
              "type" : "string",
              "nullable" : true
            },
            "rhombusToken" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "saveClips" : {
              "type" : "boolean",
              "nullable" : true
            },
            "tokenValid" : {
              "type" : "boolean",
              "nullable" : true
            },
            "webhookSignatureSecret" : {
              "type" : "string",
              "nullable" : true
            },
            "webhookUuid" : {
              "type" : "string",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "GenericButtonShadowType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "state" : {
              "$ref" : "#/components/schemas/GenericButtonStateEnumType"
            },
            "stateUpdateEventTimestampMs" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "supervisionState" : {
              "$ref" : "#/components/schemas/SupervisionStateEnumType"
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentShadowEnumType"
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "GenericButtonStateEnumType" : {
        "type" : "string",
        "enum" : [ "BUTTON_DOWN", "BUTTON_UP", "UNKNOWN" ]
      },
      "GenericDoorType" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "GenericInputShadowType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "state" : {
              "$ref" : "#/components/schemas/GenericInputStateEnumType"
            },
            "stateUpdateEventTimestampMs" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "supervisionState" : {
              "$ref" : "#/components/schemas/SupervisionStateEnumType"
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentShadowEnumType"
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "GenericInputStateChangeEventType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "componentCompositeUuid" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "newState" : {
              "$ref" : "#/components/schemas/GenericInputStateEnumType"
            },
            "newSupervisionState" : {
              "$ref" : "#/components/schemas/SupervisionStateEnumType"
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "correlationId" : {
            "type" : "string",
            "nullable" : true
          },
          "createdAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEventEnumType"
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "GenericInputStateEnumType" : {
        "type" : "string",
        "enum" : [ "ACTIVE", "INACTIVE", "UNKNOWN" ]
      },
      "GenericObjectEmbedding" : {
        "type" : "object",
        "properties" : {
          "b" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "bounding box - bottom permyriad",
            "nullable" : true
          },
          "deviceUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          },
          "embedding" : {
            "type" : "array",
            "items" : {
              "type" : "number",
              "format" : "float",
              "nullable" : true
            },
            "nullable" : true
          },
          "embeddingId" : {
            "type" : "string",
            "nullable" : true
          },
          "l" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "bounding box - left permyriad",
            "nullable" : true
          },
          "model" : {
            "$ref" : "#/components/schemas/ObjectSearchModelEnum"
          },
          "objectId" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "objectType" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "r" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "bounding box - right permyriad",
            "nullable" : true
          },
          "t" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "bounding box - top permyriad",
            "nullable" : true
          },
          "thumbnailUri" : {
            "type" : "string",
            "nullable" : true
          },
          "timestamp" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "GenericObjectEmbeddingMatch" : {
        "type" : "object",
        "description" : "List of similar object embedding matches",
        "properties" : {
          "distance" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "embedding" : {
            "$ref" : "#/components/schemas/GenericObjectEmbedding"
          },
          "matchedEmbeddingId" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "GenericPosSettings" : {
        "type" : "object",
        "description" : "Collection of service area settings for this restaurant",
        "nullable" : true,
        "properties" : {
          "assignedCameraList" : {
            "type" : "array",
            "description" : "A list of camera uuids from Rhombus that are assigned to the PoS device",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          },
          "posName" : {
            "type" : "string",
            "description" : "The name of the point of sale device",
            "nullable" : true
          }
        }
      },
      "GenericPosType" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "GenericRelayShadowType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "originator" : {
              "$ref" : "#/components/schemas/BaseEventOriginator"
            },
            "state" : {
              "$ref" : "#/components/schemas/GenericRelayStateEnumType"
            },
            "stateUpdateEventTimestampMs" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentShadowEnumType"
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "GenericRelayStateChangeEventType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "originator" : {
              "$ref" : "#/components/schemas/BaseEventOriginator"
            },
            "steadyState" : {
              "$ref" : "#/components/schemas/GenericRelayStateEnumType"
            },
            "steadyStateChangedAtMs" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "transientState" : {
              "$ref" : "#/components/schemas/GenericRelayStateEnumType"
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "correlationId" : {
            "type" : "string",
            "nullable" : true
          },
          "createdAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEventEnumType"
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "GenericRelayStateEnumType" : {
        "type" : "string",
        "enum" : [ "ACTIVE", "INACTIVE", "UNKNOWN" ]
      },
      "GenericVideoEmbedding" : {
        "type" : "object",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          },
          "embedding" : {
            "type" : "array",
            "items" : {
              "type" : "number",
              "format" : "float",
              "nullable" : true
            },
            "nullable" : true
          },
          "embeddingId" : {
            "type" : "string",
            "nullable" : true
          },
          "endTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "model" : {
            "$ref" : "#/components/schemas/VideoSimilarityModelEnum"
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "startTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "GenericVideoEmbeddingMatch" : {
        "type" : "object",
        "description" : "List of similar video embedding matches",
        "properties" : {
          "distance" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "embedding" : {
            "$ref" : "#/components/schemas/GenericVideoEmbedding"
          },
          "matchedEmbeddingId" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "GeoIpLocationType" : {
        "type" : "object",
        "properties" : {
          "city_name" : {
            "type" : "string",
            "nullable" : true
          },
          "country_code" : {
            "type" : "string",
            "nullable" : true
          },
          "country_name" : {
            "type" : "string",
            "nullable" : true
          },
          "region_name" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "GeodeticCoordinates" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "$ref" : "#/components/schemas/GpsError"
          },
          "floor" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "lat" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "lon" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          }
        }
      },
      "GetTemporaryOrgTokenResponse" : {
        "type" : "object",
        "properties" : {
          "tempOrgToken" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "GoogleCaptchaSourceEnum" : {
        "type" : "string",
        "description" : "Source of the Google reCAPTCHA (legacy or V3)",
        "enum" : [ "LEGACY", "RHOMBUS_CONSOLE_WEB", "RHOMBUS_CONSOLE_ANDROID_APP", "RHOMBUS_CONSOLE_IOS_APP", "RHOMBUS_KEY_ANDROID_APP", "RHOMBUS_KEY_IOS_APP" ]
      },
      "GoogleSettings" : {
        "type" : "object",
        "description" : "Google integration settings to update",
        "properties" : {
          "accountUser" : {
            "type" : "string",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabledTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "enablingUser" : {
            "type" : "string",
            "nullable" : true
          },
          "enablingUserUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "folderId" : {
            "type" : "string",
            "nullable" : true
          },
          "teamDriveId" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "GoogleSettingsV2" : {
        "type" : "object",
        "properties" : {
          "defaultAlertFolderId" : {
            "type" : "string",
            "nullable" : true
          },
          "defaultAlertFolderName" : {
            "type" : "string",
            "nullable" : true
          },
          "defaultFolderId" : {
            "type" : "string",
            "nullable" : true
          },
          "defaultFolderName" : {
            "type" : "string",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabledTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "enablingUser" : {
            "type" : "string",
            "nullable" : true
          },
          "enablingUserUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "refreshToken" : {
            "type" : "string",
            "nullable" : true
          },
          "saveAllAlerts" : {
            "type" : "boolean",
            "nullable" : true
          },
          "saveClips" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "GoogleType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "allowUserStorage" : {
              "type" : "boolean",
              "nullable" : true
            },
            "apiToken" : {
              "type" : "string",
              "nullable" : true
            },
            "defaultAlertFolderId" : {
              "type" : "string",
              "nullable" : true
            },
            "defaultAlertFolderName" : {
              "type" : "string",
              "nullable" : true
            },
            "defaultFolderId" : {
              "type" : "string",
              "nullable" : true
            },
            "defaultFolderName" : {
              "type" : "string",
              "nullable" : true
            },
            "refreshToken" : {
              "type" : "string",
              "nullable" : true
            },
            "saveAllAlerts" : {
              "type" : "boolean",
              "nullable" : true
            },
            "saveClips" : {
              "type" : "boolean",
              "nullable" : true
            },
            "tokenValid" : {
              "type" : "boolean",
              "nullable" : true
            },
            "userSettingsMap" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/GoogleUserSettings"
              },
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "GoogleUserSettings" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "defaultAlertFolderId" : {
            "type" : "string",
            "nullable" : true
          },
          "defaultAlertFolderName" : {
            "type" : "string",
            "nullable" : true
          },
          "defaultFolderId" : {
            "type" : "string",
            "nullable" : true
          },
          "defaultFolderName" : {
            "type" : "string",
            "nullable" : true
          },
          "refreshToken" : {
            "type" : "string",
            "nullable" : true
          },
          "saveAllAlerts" : {
            "type" : "boolean",
            "nullable" : true
          },
          "saveClips" : {
            "type" : "boolean",
            "nullable" : true
          },
          "tokenValid" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "GpsError" : {
        "type" : "object",
        "properties" : {
          "majorAxis" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "minorAxis" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "rotation" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          }
        }
      },
      "Group_AddUsersToOrgGroupWSRequest" : {
        "type" : "object",
        "description" : "Request to add users to an organization group.",
        "properties" : {
          "groupUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "userUuids" : {
            "type" : "array",
            "description" : "List of user UUIDs to add to the group",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Group_AddUsersToOrgGroupWSResponse" : {
        "type" : "object",
        "description" : "Response for adding users to an organization group.",
        "properties" : {
          "groupMembers" : {
            "type" : "array",
            "description" : "Users added to the group successfully from the original request",
            "items" : {
              "$ref" : "#/components/schemas/OrgGroupMemberType"
            },
            "nullable" : true
          }
        }
      },
      "Group_CreateOrgGroupWSRequest" : {
        "type" : "object",
        "description" : "Request to create an organization group.",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "Description of the group",
            "example" : "Software engineering team members",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the group",
            "example" : "Engineering Team",
            "nullable" : true
          },
          "userUuids" : {
            "type" : "array",
            "description" : "List of user UUIDs to add to the group",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          }
        },
        "required" : [ "name" ]
      },
      "Group_CreateOrgGroupWSResponse" : {
        "type" : "object",
        "description" : "Response for organization group creation.",
        "properties" : {
          "group" : {
            "$ref" : "#/components/schemas/OrgGroupType"
          },
          "groupMembers" : {
            "type" : "array",
            "description" : "List of group members if optionally added when creating the group",
            "items" : {
              "$ref" : "#/components/schemas/OrgGroupMemberType"
            },
            "nullable" : true
          }
        }
      },
      "Group_DeleteOrgGroupWSRequest" : {
        "type" : "object",
        "description" : "Request to delete an organization group.",
        "properties" : {
          "groupUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Group_DeleteOrgGroupWSResponse" : {
        "type" : "object",
        "description" : "Response indicating successful deletion of an organization group."
      },
      "Group_FindAllUsersForOrgGroupWSRequest" : {
        "type" : "object",
        "description" : "Request to find all users for an organization group.",
        "properties" : {
          "groupUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Group_FindAllUsersForOrgGroupWSResponse" : {
        "type" : "object",
        "description" : "Response containing all users for an organization group.",
        "properties" : {
          "groupMembers" : {
            "type" : "array",
            "description" : "List of group members",
            "items" : {
              "$ref" : "#/components/schemas/OrgGroupMemberType"
            },
            "nullable" : true
          }
        }
      },
      "Group_FindOrgGroupMembershipsByUserWSRequest" : {
        "type" : "object",
        "description" : "Request to find organization group memberships by user.",
        "properties" : {
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Group_FindOrgGroupMembershipsByUserWSResponse" : {
        "type" : "object",
        "description" : "Response containing organization group memberships for a user.",
        "properties" : {
          "userGroupMemberships" : {
            "type" : "array",
            "description" : "List of user group memberships",
            "items" : {
              "$ref" : "#/components/schemas/OrgGroupMemberType"
            },
            "nullable" : true
          }
        }
      },
      "Group_FindOrgGroupMembershipsForCurrentUserWSRequest" : {
        "type" : "object",
        "description" : "Request to find organization group memberships for current user."
      },
      "Group_FindOrgGroupMembershipsForCurrentUserWSResponse" : {
        "type" : "object",
        "description" : "Response containing organization group memberships for current user.",
        "properties" : {
          "userGroupMemberships" : {
            "type" : "array",
            "description" : "List of current user group memberships",
            "items" : {
              "$ref" : "#/components/schemas/OrgGroupMemberType"
            },
            "nullable" : true
          }
        }
      },
      "Group_FindOrgGroupsByExactNameWSRequest" : {
        "type" : "object",
        "description" : "Request to find organization groups by exact name.",
        "properties" : {
          "groupName" : {
            "type" : "string",
            "description" : "Case insensitive name of the group to find, if it exists",
            "example" : "Engineering Team",
            "nullable" : true
          }
        }
      },
      "Group_FindOrgGroupsByExactNameWSResponse" : {
        "type" : "object",
        "description" : "Response containing organization group found by exact name.",
        "properties" : {
          "group" : {
            "$ref" : "#/components/schemas/OrgGroupType"
          }
        }
      },
      "Group_FindOrgGroupsByNamePrefixWSRequest" : {
        "type" : "object",
        "description" : "Request to find organization groups by name prefix.",
        "properties" : {
          "groupNamePrefix" : {
            "type" : "string",
            "description" : "Name prefix to search for groups",
            "example" : "Eng",
            "nullable" : true
          }
        }
      },
      "Group_FindOrgGroupsByNamePrefixWSResponse" : {
        "type" : "object",
        "description" : "Response containing organization groups found by name prefix.",
        "properties" : {
          "groups" : {
            "type" : "array",
            "description" : "List of organization groups found by name prefix",
            "items" : {
              "$ref" : "#/components/schemas/OrgGroupType"
            },
            "nullable" : true
          }
        }
      },
      "Group_FindOrgGroupsByOrgWSRequest" : {
        "type" : "object",
        "description" : "Request to find organization groups by organization."
      },
      "Group_FindOrgGroupsByOrgWSResponse" : {
        "type" : "object",
        "description" : "Response containing organization groups found by organization.",
        "properties" : {
          "groups" : {
            "type" : "array",
            "description" : "List of organization groups found by organization",
            "items" : {
              "$ref" : "#/components/schemas/OrgGroupType"
            },
            "nullable" : true
          }
        }
      },
      "Group_FindOrgGroupsByUserMembershipWSRequest" : {
        "type" : "object",
        "description" : "Request to find organization groups by user membership.",
        "properties" : {
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Group_FindOrgGroupsByUserMembershipWSResponse" : {
        "type" : "object",
        "description" : "Response containing organization groups found by user membership.",
        "properties" : {
          "groups" : {
            "type" : "array",
            "description" : "List of organization groups found by user membership",
            "items" : {
              "$ref" : "#/components/schemas/OrgGroupType"
            },
            "nullable" : true
          }
        }
      },
      "Group_RemoveUsersFromOrgGroupWSRequest" : {
        "type" : "object",
        "description" : "Request to remove users from an organization group.",
        "properties" : {
          "groupUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "userUuids" : {
            "type" : "array",
            "description" : "List of user UUIDs to remove from the group",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Group_RemoveUsersFromOrgGroupWSResponse" : {
        "type" : "object",
        "description" : "Response indicating successful removal of users from an organization group."
      },
      "Group_UpdateOrgGroupWSRequest" : {
        "type" : "object",
        "description" : "Request to update an organization group.",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "New description for the group",
            "example" : "Updated software engineering team members",
            "nullable" : true
          },
          "groupUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "description" : "New name for the group",
            "example" : "Updated Engineering Team",
            "nullable" : true
          }
        }
      },
      "Group_UpdateOrgGroupWSResponse" : {
        "type" : "object",
        "description" : "Response containing the updated organization group.",
        "properties" : {
          "group" : {
            "$ref" : "#/components/schemas/OrgGroupType"
          }
        }
      },
      "Guest" : {
        "type" : "object",
        "description" : "Guest information to update",
        "properties" : {
          "accessEndTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "accessStartTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "address1" : {
            "type" : "string",
            "nullable" : true
          },
          "address2" : {
            "type" : "string",
            "nullable" : true
          },
          "backgroundCheckStatus" : {
            "type" : "string",
            "enum" : [ "CLEARED", "NEEDS_ATTENTION" ],
            "nullable" : true
          },
          "checkedInEnum" : {
            "$ref" : "#/components/schemas/GuestActivityEnum"
          },
          "city" : {
            "type" : "string",
            "nullable" : true
          },
          "companyName" : {
            "type" : "string",
            "nullable" : true
          },
          "countryCode" : {
            "type" : "string",
            "nullable" : true
          },
          "crime" : {
            "type" : "string",
            "nullable" : true
          },
          "email" : {
            "type" : "string",
            "nullable" : true
          },
          "emailCaseSensitive" : {
            "type" : "string",
            "nullable" : true
          },
          "faceImage" : {
            "type" : "string",
            "nullable" : true
          },
          "firstName" : {
            "type" : "string",
            "nullable" : true
          },
          "guestType" : {
            "$ref" : "#/components/schemas/GuestTypeEnum"
          },
          "hostUserUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "lastCheckedInMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "lastCheckedOutMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "lastName" : {
            "type" : "string",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "meetingParticipants" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "phoneNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "postalCode" : {
            "type" : "string",
            "nullable" : true
          },
          "profileImageUrl" : {
            "type" : "string",
            "nullable" : true
          },
          "state" : {
            "type" : "string",
            "nullable" : true
          },
          "status" : {
            "$ref" : "#/components/schemas/GuestStatusEnum"
          }
        }
      },
      "GuestActivityEnum" : {
        "type" : "string",
        "enum" : [ "CHECKED_IN", "CHECKED_OUT", "AUTO_CHECKED_OUT", "UPDATED_INFO", "INVITED" ]
      },
      "GuestActivityLog" : {
        "type" : "object",
        "properties" : {
          "activity" : {
            "$ref" : "#/components/schemas/GuestActivityEnum"
          },
          "agent" : {
            "type" : "string",
            "nullable" : true
          },
          "associatedCameras" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "email" : {
            "type" : "string",
            "nullable" : true
          },
          "guestType" : {
            "$ref" : "#/components/schemas/GuestTypeEnum"
          },
          "hostUserUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "GuestInvite" : {
        "type" : "object",
        "description" : "List of guest invites",
        "properties" : {
          "accessEndTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "accessStartTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "address1" : {
            "type" : "string",
            "nullable" : true
          },
          "address2" : {
            "type" : "string",
            "nullable" : true
          },
          "backgroundCheckStatus" : {
            "type" : "string",
            "enum" : [ "CLEARED", "NEEDS_ATTENTION" ],
            "nullable" : true
          },
          "checkedInEnum" : {
            "$ref" : "#/components/schemas/GuestActivityEnum"
          },
          "city" : {
            "type" : "string",
            "nullable" : true
          },
          "companyName" : {
            "type" : "string",
            "nullable" : true
          },
          "countryCode" : {
            "type" : "string",
            "nullable" : true
          },
          "createdAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "crime" : {
            "type" : "string",
            "nullable" : true
          },
          "email" : {
            "type" : "string",
            "nullable" : true
          },
          "emailCaseSensitive" : {
            "type" : "string",
            "nullable" : true
          },
          "faceImage" : {
            "type" : "string",
            "nullable" : true
          },
          "firstName" : {
            "type" : "string",
            "nullable" : true
          },
          "guestType" : {
            "$ref" : "#/components/schemas/GuestTypeEnum"
          },
          "hostUserUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "lastCheckedInMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "lastCheckedOutMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "lastName" : {
            "type" : "string",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "meetingParticipants" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "phoneNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "postalCode" : {
            "type" : "string",
            "nullable" : true
          },
          "profileImageUrl" : {
            "type" : "string",
            "nullable" : true
          },
          "state" : {
            "type" : "string",
            "nullable" : true
          },
          "status" : {
            "$ref" : "#/components/schemas/GuestStatusEnum"
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "GuestInviteSelectiveUpdateByInvocation" : {
        "type" : "object",
        "description" : "Guest invite to update",
        "properties" : {
          "accessEndTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "accessStartTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "address1" : {
            "type" : "string",
            "nullable" : true
          },
          "address2" : {
            "type" : "string",
            "nullable" : true
          },
          "backgroundCheckStatus" : {
            "type" : "string",
            "enum" : [ "CLEARED", "NEEDS_ATTENTION" ],
            "nullable" : true
          },
          "checkedInEnum" : {
            "$ref" : "#/components/schemas/GuestActivityEnum"
          },
          "city" : {
            "type" : "string",
            "nullable" : true
          },
          "companyName" : {
            "type" : "string",
            "nullable" : true
          },
          "countryCode" : {
            "type" : "string",
            "nullable" : true
          },
          "createdAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "crime" : {
            "type" : "string",
            "nullable" : true
          },
          "email" : {
            "type" : "string",
            "nullable" : true
          },
          "emailCaseSensitive" : {
            "type" : "string",
            "nullable" : true
          },
          "faceImage" : {
            "type" : "string",
            "nullable" : true
          },
          "firstName" : {
            "type" : "string",
            "nullable" : true
          },
          "guestType" : {
            "$ref" : "#/components/schemas/GuestTypeEnum"
          },
          "hostUserUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "lastCheckedInMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "lastCheckedOutMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "lastName" : {
            "type" : "string",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "meetingParticipants" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "phoneNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "postalCode" : {
            "type" : "string",
            "nullable" : true
          },
          "profileImageUrl" : {
            "type" : "string",
            "nullable" : true
          },
          "state" : {
            "type" : "string",
            "nullable" : true
          },
          "status" : {
            "$ref" : "#/components/schemas/GuestStatusEnum"
          },
          "updatedSetMethodMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "boolean",
              "nullable" : true
            },
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "GuestManagementOrgSettings" : {
        "type" : "object",
        "properties" : {
          "hexIdentityColor" : {
            "type" : "string",
            "nullable" : true
          },
          "logoImageString" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "GuestManagementSettingsSelectiveUpdate" : {
        "type" : "object",
        "properties" : {
          "hexIdentityColor" : {
            "type" : "string",
            "nullable" : true
          },
          "logoImageString" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "updatedSetMethodMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "boolean",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "GuestManagementType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "locationSettingsMap" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/LocationSettings"
              },
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "GuestSelectiveUpdateByInvocation" : {
        "type" : "object",
        "description" : "Guest update information",
        "properties" : {
          "accessEndTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "accessStartTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "address1" : {
            "type" : "string",
            "nullable" : true
          },
          "address2" : {
            "type" : "string",
            "nullable" : true
          },
          "backgroundCheckStatus" : {
            "type" : "string",
            "enum" : [ "CLEARED", "NEEDS_ATTENTION" ],
            "nullable" : true
          },
          "checkedInEnum" : {
            "$ref" : "#/components/schemas/GuestActivityEnum"
          },
          "city" : {
            "type" : "string",
            "nullable" : true
          },
          "companyName" : {
            "type" : "string",
            "nullable" : true
          },
          "countryCode" : {
            "type" : "string",
            "nullable" : true
          },
          "crime" : {
            "type" : "string",
            "nullable" : true
          },
          "email" : {
            "type" : "string",
            "nullable" : true
          },
          "emailCaseSensitive" : {
            "type" : "string",
            "nullable" : true
          },
          "faceImage" : {
            "type" : "string",
            "nullable" : true
          },
          "firstName" : {
            "type" : "string",
            "nullable" : true
          },
          "guestType" : {
            "$ref" : "#/components/schemas/GuestTypeEnum"
          },
          "hostUserUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "lastCheckedInMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "lastCheckedOutMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "lastName" : {
            "type" : "string",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "meetingParticipants" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "phoneNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "postalCode" : {
            "type" : "string",
            "nullable" : true
          },
          "profileImageUrl" : {
            "type" : "string",
            "nullable" : true
          },
          "state" : {
            "type" : "string",
            "nullable" : true
          },
          "status" : {
            "$ref" : "#/components/schemas/GuestStatusEnum"
          },
          "updatedSetMethodMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "boolean",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "GuestStatusEnum" : {
        "type" : "string",
        "enum" : [ "INVITED", "PENDING", "APPROVED", "DENIED" ]
      },
      "GuestTypeEnum" : {
        "type" : "string",
        "enum" : [ "CONTRACTOR", "INTERVIEWER", "GENERAL_VISITOR", "UNPLANNED_VISITOR", "PARTNER", "MEETINGS" ]
      },
      "Guestmanagement_ActivateKioskWSRequest" : {
        "type" : "object",
        "properties" : {
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Guestmanagement_ActivateKioskWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "redirectUrl" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Guestmanagement_BaseGuestManagementWSRequest" : {
        "type" : "object",
        "description" : "Base request object for guest management operations."
      },
      "Guestmanagement_CreateGuestInviteWSRequest" : {
        "type" : "object",
        "description" : "Request object for creating a guest invite.",
        "properties" : {
          "guestInvite" : {
            "$ref" : "#/components/schemas/GuestInvite"
          }
        },
        "required" : [ "guestInvite" ]
      },
      "Guestmanagement_CreateGuestManagementSettingsWSRequest" : {
        "type" : "object",
        "properties" : {
          "settings" : {
            "$ref" : "#/components/schemas/GuestManagementOrgSettings"
          }
        }
      },
      "Guestmanagement_CreateGuestManagementSettingsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Guestmanagement_CreateGuestWSRequest" : {
        "type" : "object",
        "description" : "Request object for creating a guest with optional file attachment.",
        "properties" : {
          "fileName" : {
            "type" : "string",
            "description" : "Optional file name for guest attachment",
            "example" : "guest_photo.jpg",
            "nullable" : true
          },
          "guest" : {
            "$ref" : "#/components/schemas/Guest"
          }
        }
      },
      "Guestmanagement_ExportGuestActivitiesWSRequest" : {
        "type" : "object",
        "properties" : {
          "beginTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "email" : {
            "type" : "string",
            "nullable" : true
          },
          "endTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "includeGuestTypes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/GuestTypeEnum"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "includeLocations" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "Guestmanagement_ExportGuestsWSRequest" : {
        "type" : "object",
        "properties" : {
          "beginTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "endTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "includeGuestTypes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/GuestTypeEnum"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "includeLocations" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "Guestmanagement_GetActivityLogsForGuestWSRequest" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Guestmanagement_GetActivityLogsForLocationWSRequest" : {
        "type" : "object",
        "properties" : {
          "createdAfterMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "createdBeforeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "dynamoPageRequest" : {
            "$ref" : "#/components/schemas/DynamoPageRequest"
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Guestmanagement_GetAllGuestInvitesWSResponse" : {
        "type" : "object",
        "description" : "Response object containing all guest invites.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "guestInvites" : {
            "type" : "array",
            "description" : "List of all guest invites",
            "items" : {
              "$ref" : "#/components/schemas/GuestInvite"
            },
            "nullable" : true
          }
        }
      },
      "Guestmanagement_GetAllGuestsWSResponse" : {
        "type" : "object",
        "description" : "Response object containing all guests.",
        "properties" : {
          "allGuests" : {
            "type" : "array",
            "description" : "List of all guests",
            "items" : {
              "$ref" : "#/components/schemas/Guest"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Guestmanagement_GetGuestActivityLogsWSRequest" : {
        "type" : "object",
        "properties" : {
          "createdAfterMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "createdBeforeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "dynamoPageRequest" : {
            "$ref" : "#/components/schemas/DynamoPageRequest"
          }
        }
      },
      "Guestmanagement_GetGuestActivityLogsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "guestActivities" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/GuestActivityLog"
            },
            "nullable" : true
          }
        }
      },
      "Guestmanagement_GetGuestInviteWSResponse" : {
        "type" : "object",
        "description" : "Response object containing guest invite information.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "guestInvite" : {
            "$ref" : "#/components/schemas/GuestInvite"
          }
        }
      },
      "Guestmanagement_GetGuestInvitesWSResponse" : {
        "type" : "object",
        "description" : "Response object containing guest invites.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "guestInvites" : {
            "type" : "array",
            "description" : "List of guest invites",
            "items" : {
              "$ref" : "#/components/schemas/GuestInvite"
            },
            "nullable" : true
          }
        }
      },
      "Guestmanagement_GetGuestManagementSettingsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "settings" : {
            "$ref" : "#/components/schemas/GuestManagementOrgSettings"
          }
        }
      },
      "Guestmanagement_GetGuestWSResponse" : {
        "type" : "object",
        "description" : "Response object containing guest information.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "guest" : {
            "$ref" : "#/components/schemas/Guest"
          }
        }
      },
      "Guestmanagement_GetInvitesForOrgWSRequest" : {
        "type" : "object",
        "properties" : {
          "invitedAfterMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "invitedBeforeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "paginateRequest" : {
            "$ref" : "#/components/schemas/PaginateRequest"
          }
        }
      },
      "Guestmanagement_GetKioskInfoWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "kiosk" : {
            "$ref" : "#/components/schemas/Kiosk"
          }
        }
      },
      "Guestmanagement_GetKiosksForOrgWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "kiosks" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Kiosk"
            },
            "nullable" : true
          }
        }
      },
      "Guestmanagement_GetNametagTemplateForGuestWSRequest" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Guestmanagement_GetNametagTemplateForGuestWSResponse" : {
        "type" : "object",
        "properties" : {
          "badgeTemplate" : {
            "$ref" : "#/components/schemas/BadgeTemplate"
          },
          "companyLogoUrl" : {
            "type" : "string",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Guestmanagement_GuestByEmailWSRequest" : {
        "type" : "object",
        "description" : "Request object for finding a guest by email address.",
        "properties" : {
          "email" : {
            "type" : "string",
            "description" : "Email address of the guest to find",
            "example" : "guest@example.com",
            "nullable" : true
          }
        }
      },
      "Guestmanagement_GuestCheckinWSRequest" : {
        "type" : "object",
        "description" : "Request object for guest check-in operations.",
        "properties" : {
          "email" : {
            "type" : "string",
            "description" : "Email address of the guest checking in",
            "example" : "guest@example.com",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        },
        "required" : [ "email", "locationUuid" ]
      },
      "Guestmanagement_GuestInviteWSRequest" : {
        "type" : "object",
        "description" : "Request object for guest invite operations.",
        "properties" : {
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        },
        "required" : [ "uuid" ]
      },
      "Guestmanagement_GuestInvitesByEmailWSRequest" : {
        "type" : "object",
        "description" : "Request object for finding guest invites by email address.",
        "properties" : {
          "email" : {
            "type" : "string",
            "description" : "Email of the guest to invite",
            "example" : "guest@example.com",
            "nullable" : true
          }
        },
        "required" : [ "email" ]
      },
      "Guestmanagement_GuestWSRequest" : {
        "type" : "object",
        "description" : "Request object containing guest information.",
        "properties" : {
          "guest" : {
            "$ref" : "#/components/schemas/Guest"
          }
        }
      },
      "Guestmanagement_UpdateGuestInviteWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating guest invite information.",
        "properties" : {
          "inviteUpdate" : {
            "$ref" : "#/components/schemas/GuestInviteSelectiveUpdateByInvocation"
          }
        },
        "required" : [ "inviteUpdate" ]
      },
      "Guestmanagement_UpdateGuestManagementSettingsWSRequest" : {
        "type" : "object",
        "properties" : {
          "settingsUpdate" : {
            "$ref" : "#/components/schemas/GuestManagementSettingsSelectiveUpdate"
          }
        }
      },
      "Guestmanagement_UpdateGuestManagementSettingsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Guestmanagement_UpdateGuestWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating guest information.",
        "properties" : {
          "fileName" : {
            "type" : "string",
            "description" : "File name for guest-related data",
            "example" : "guest_data.csv",
            "nullable" : true
          },
          "guest" : {
            "$ref" : "#/components/schemas/Guest"
          },
          "guestUpdate" : {
            "$ref" : "#/components/schemas/GuestSelectiveUpdateByInvocation"
          }
        }
      },
      "HaloSettings" : {
        "type" : "object",
        "properties" : {
          "alertAgression" : {
            "type" : "boolean",
            "nullable" : true
          },
          "alertCO" : {
            "type" : "boolean",
            "nullable" : true
          },
          "alertCO2" : {
            "type" : "boolean",
            "nullable" : true
          },
          "alertGunshot" : {
            "type" : "boolean",
            "nullable" : true
          },
          "alertHelp" : {
            "type" : "boolean",
            "nullable" : true
          },
          "alertMasking" : {
            "type" : "boolean",
            "nullable" : true
          },
          "alertTHC" : {
            "type" : "boolean",
            "nullable" : true
          },
          "alertTamper" : {
            "type" : "boolean",
            "nullable" : true
          },
          "alertTemp" : {
            "type" : "boolean",
            "nullable" : true
          },
          "alertVOC" : {
            "type" : "boolean",
            "nullable" : true
          },
          "alertVape" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabledTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "enablingUser" : {
            "type" : "string",
            "nullable" : true
          },
          "enablingUserUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "saveClips" : {
            "type" : "boolean",
            "nullable" : true
          },
          "savedClipDurationMs" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "sensorName" : {
            "type" : "string",
            "nullable" : true
          },
          "sensorToCamerasMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "RUUID",
                "description" : "base 64 (url-safe) uuid string",
                "example" : "AAAAAAAAAAAAAAAAAAAAAA",
                "nullable" : true
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "triggerNotification" : {
            "type" : "boolean",
            "nullable" : true
          },
          "url" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "HardwareInvoiceSubItem" : {
        "type" : "object",
        "properties" : {
          "count" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "price" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          }
        }
      },
      "HardwareType" : {
        "type" : "object",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "enforcedMinFirmwareVersion" : {
            "type" : "string",
            "nullable" : true
          },
          "firmwareUpdateTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "firmwareVersion" : {
            "type" : "string",
            "nullable" : true
          },
          "hwVariation" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "mac" : {
            "type" : "string",
            "nullable" : true
          },
          "manufacturedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "pendingRegistrationDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "pendingRegistrationOrgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "pendingRegistrationToken" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "sdSize" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "serialNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/DeviceTypeEnum"
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "HardwareVariationEnum" : {
        "type" : "string",
        "description" : "Hardware variation of the Rhombus door controller",
        "enum" : [ "RASPBERRY_PI_3", "CAMERA_R1", "CAMERA_R2", "CAMERA_R2_LONG_RANGE", "CAMERA_R2_180", "CAMERA_R3", "CAMERA_R4", "CAMERA_R100", "CAMERA_R120", "CAMERA_R170", "CAMERA_R200", "CAMERA_R500", "CAMERA_R510", "CAMERA_R520", "CAMERA_R600", "SENSOR_ASSET_TAG_T1", "SENSOR_DOOR_D1", "SENSOR_DOOR_D20", "SENSOR_ENVIRONMENTAL_E1", "SENSOR_ENVIRONMENTAL_E15", "SENSOR_ENVIRONMENTAL_E2", "SENSOR_MOTION_M1", "SENSOR_MOTION_M15", "GATEWAY_A1", "GATEWAY_A100", "GATEWAY_ENVIRONMENTAL_E50", "CAMERA_R220", "CAMERA_R230", "CAMERA_R36S", "CAMERA_R410", "CAMERA_R540", "CAMERA_R545", "BADGE_READER_DR1", "BADGE_READER_DR40", "BADGE_READER_DR20", "DOOR_CONTROLLER_DC1", "DOOR_CONTROLLER_DC20", "DOOR_CONTROLLER_DC10", "ETHERNET_TESTER_ET1", "IO_BOARD_TB1", "BLE_BUTTON_B10", "BLE_BUTTON_B15", "CAMERA_THIRD_PARTY_RELAY", "CAMERA_THIRD_PARTY_NVR", "NVR_N100", "CAMERA_R130", "NVR_N500", "CAMERA_R150", "UNSPECIFIED" ]
      },
      "HeatIndexRangeWarningEnum" : {
        "type" : "string",
        "description" : "Heat index range warning status",
        "enum" : [ "HEAT_INDEX_OK", "HEAT_INDEX_WARNING", "HEAT_INDEX_UNSUPPORTED" ]
      },
      "Help_CreateTicketWSRequest" : {
        "type" : "object",
        "description" : "Request object for creating a support ticket.",
        "properties" : {
          "body" : {
            "type" : "string",
            "description" : "Body content of the support ticket",
            "example" : "My camera is not connecting to the network properly.",
            "nullable" : true
          },
          "collaborators" : {
            "type" : "array",
            "description" : "List of collaborator email addresses",
            "items" : {
              "type" : "string",
              "description" : "List of collaborator email addresses",
              "nullable" : true
            },
            "nullable" : true
          },
          "consoleAccessGranted" : {
            "type" : "boolean",
            "description" : "Whether console access has been granted for troubleshooting",
            "example" : true,
            "nullable" : true
          },
          "productType" : {
            "type" : "string",
            "nullable" : true
          },
          "serialNumbers" : {
            "type" : "array",
            "description" : "List of device serial numbers related to the issue",
            "items" : {
              "type" : "string",
              "description" : "List of device serial numbers related to the issue",
              "nullable" : true
            },
            "nullable" : true
          },
          "serviceType" : {
            "type" : "string",
            "nullable" : true
          },
          "subject" : {
            "type" : "string",
            "description" : "Subject of the support ticket",
            "example" : "Camera connectivity issue",
            "nullable" : true
          }
        }
      },
      "Help_CreateTicketWSResponse" : {
        "type" : "object",
        "description" : "Response object for creating a support ticket.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "failureReason" : {
            "type" : "string",
            "description" : "Reason for failure if ticket creation was unsuccessful",
            "example" : "Invalid email address",
            "nullable" : true
          },
          "success" : {
            "type" : "boolean",
            "description" : "Whether the ticket creation was successful",
            "example" : true,
            "nullable" : true
          },
          "ticketId" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "ID of the created support ticket",
            "example" : 12345,
            "nullable" : true
          }
        }
      },
      "Help_GetOpenTicketsV2WSRequest" : {
        "type" : "object",
        "description" : "Request object for retrieving open support tickets V2 with time range filtering.",
        "properties" : {
          "endTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "End time in milliseconds for filtering tickets",
            "example" : 1642319999999,
            "nullable" : true
          },
          "startTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start time in milliseconds for filtering tickets",
            "example" : 1642233600000,
            "nullable" : true
          }
        }
      },
      "Help_GetOpenTicketsV2WSResponse" : {
        "type" : "object",
        "description" : "Response object containing open support tickets V2 with organization and user tickets.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "tickets" : {
            "type" : "array",
            "description" : "List of organization support tickets",
            "items" : {
              "$ref" : "#/components/schemas/Help_TicketInformation"
            },
            "nullable" : true
          },
          "userTickets" : {
            "type" : "array",
            "description" : "List of user-specific support tickets",
            "items" : {
              "$ref" : "#/components/schemas/Help_TicketInformation"
            },
            "nullable" : true
          }
        }
      },
      "Help_GetOpenTicketsWSRequest" : {
        "type" : "object",
        "description" : "Request object for retrieving open support tickets with pagination.",
        "properties" : {
          "pageNumber" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Page number used for paginated response. If empty, the search will return the first page.",
            "nullable" : true
          }
        }
      },
      "Help_GetOpenTicketsWSResponse" : {
        "type" : "object",
        "description" : "Response object containing open support tickets with pagination information.",
        "properties" : {
          "currentPage" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Current page number in the paginated response",
            "example" : 1,
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "hasNexPage" : {
            "type" : "boolean",
            "description" : "True if there is a next page, false otherwise",
            "nullable" : true
          },
          "tickets" : {
            "type" : "array",
            "description" : "List of open support tickets",
            "items" : {
              "$ref" : "#/components/schemas/Help_TicketInformation"
            },
            "nullable" : true
          },
          "totalTickets" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Total number of tickets, not limited to the current page",
            "nullable" : true
          }
        }
      },
      "Help_ProcessRMAWSRequest" : {
        "type" : "object",
        "description" : "Request object for processing a Return Merchandise Authorization (RMA).",
        "properties" : {
          "contactName" : {
            "type" : "string",
            "description" : "Contact name for the RMA",
            "example" : "John Doe",
            "nullable" : true
          },
          "contactPhoneNumber" : {
            "type" : "string",
            "description" : "Contact phone number for the RMA",
            "example" : "+1-555-123-4567",
            "nullable" : true
          },
          "deviceName" : {
            "type" : "string",
            "description" : "Name of the device for RMA",
            "example" : "Rhombus Camera Pro",
            "nullable" : true
          },
          "problem" : {
            "type" : "string",
            "description" : "Description of the problem with the device",
            "example" : "Camera not recording properly",
            "nullable" : true
          },
          "returnShippingAddress" : {
            "$ref" : "#/components/schemas/Help_ShippingAddress"
          },
          "serialNumber" : {
            "type" : "string",
            "description" : "Serial number of the device",
            "example" : "RHCAM123456789",
            "nullable" : true
          }
        }
      },
      "Help_ProcessRMAWSResponse" : {
        "type" : "object",
        "description" : "Response object for processing a Return Merchandise Authorization (RMA).",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "failureReason" : {
            "type" : "string",
            "description" : "Reason for failure if RMA processing was unsuccessful",
            "example" : "Invalid serial number",
            "nullable" : true
          },
          "success" : {
            "type" : "boolean",
            "description" : "Whether the RMA processing was successful",
            "example" : true,
            "nullable" : true
          },
          "ticketId" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "ID of the RMA ticket created",
            "example" : 12345,
            "nullable" : true
          }
        }
      },
      "Help_SendFeedbackWSRequest" : {
        "type" : "object",
        "description" : "Request object for sending system feedback.",
        "properties" : {
          "feedback" : {
            "type" : "string",
            "description" : "Feedback message about the system",
            "example" : "The new interface is much more user-friendly!",
            "nullable" : true
          }
        }
      },
      "Help_SendFeedbackWSResponse" : {
        "type" : "object",
        "description" : "Response object for sending system feedback.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "failureReason" : {
            "type" : "string",
            "description" : "Reason for failure if feedback sending was unsuccessful",
            "example" : "Invalid feedback content",
            "nullable" : true
          },
          "success" : {
            "type" : "boolean",
            "description" : "Whether the feedback was sent successfully",
            "example" : true,
            "nullable" : true
          }
        }
      },
      "Help_ShippingAddress" : {
        "type" : "object",
        "description" : "Shipping address information for RMA returns.",
        "properties" : {
          "returnAddressCity" : {
            "type" : "string",
            "description" : "City for return shipping",
            "example" : "San Francisco",
            "nullable" : true
          },
          "returnAddressCountry" : {
            "type" : "string",
            "description" : "Country for return shipping",
            "example" : "United States",
            "nullable" : true
          },
          "returnAddressPostalCode" : {
            "type" : "string",
            "description" : "Postal code for return shipping",
            "example" : "94105",
            "nullable" : true
          },
          "returnAddressState" : {
            "type" : "string",
            "description" : "State/province for return shipping",
            "example" : "CA",
            "nullable" : true
          },
          "returnAddressStreet" : {
            "type" : "string",
            "description" : "Street address for return shipping",
            "example" : "123 Main Street",
            "nullable" : true
          }
        }
      },
      "Help_TicketInformation" : {
        "type" : "object",
        "description" : "Information about a support ticket.",
        "properties" : {
          "createdAt" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Date when the ticket was created",
            "example" : "2024-01-15T10:30:00Z",
            "nullable" : true
          },
          "id" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Unique identifier for the support ticket",
            "example" : 12345,
            "nullable" : true
          },
          "status" : {
            "type" : "string",
            "description" : "Current status of the support ticket",
            "example" : "Open",
            "nullable" : true
          },
          "subject" : {
            "type" : "string",
            "description" : "Subject of the support ticket",
            "example" : "Camera connectivity issue",
            "nullable" : true
          }
        }
      },
      "Help_TriageDeviceWSRequest" : {
        "type" : "object",
        "description" : "Request object for triaging device connection/recording issues.",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "startDateSec" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start date in seconds for triage analysis",
            "example" : 1642233600,
            "nullable" : true
          }
        }
      },
      "Help_TriageDeviceWSResponse" : {
        "type" : "object",
        "description" : "Response object containing device triage diagnostic information.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "firmwareUpdates" : {
            "type" : "array",
            "description" : "List of firmware update diagnostic events",
            "items" : {
              "$ref" : "#/components/schemas/DiagnosticEventType"
            },
            "nullable" : true
          },
          "hardwareFailureEvents" : {
            "type" : "array",
            "description" : "List of hardware failure diagnostic events",
            "items" : {
              "$ref" : "#/components/schemas/DiagnosticEventType"
            },
            "nullable" : true
          },
          "message" : {
            "type" : "string",
            "description" : "Triage analysis message",
            "example" : "Device appears to be functioning normally",
            "nullable" : true
          },
          "presenceWindows" : {
            "type" : "array",
            "description" : "List of device presence time windows",
            "items" : {
              "$ref" : "#/components/schemas/TimeWindowSeconds"
            },
            "nullable" : true
          },
          "suggestedArticles" : {
            "type" : "array",
            "description" : "List of suggested help articles for the device issue",
            "items" : {
              "type" : "string",
              "description" : "List of suggested help articles for the device issue",
              "nullable" : true
            },
            "nullable" : true
          },
          "uptimeWindows" : {
            "type" : "array",
            "description" : "List of device uptime time windows",
            "items" : {
              "$ref" : "#/components/schemas/TimeWindowSeconds"
            },
            "nullable" : true
          }
        }
      },
      "HttpHeaders" : {
        "type" : "object",
        "additionalProperties" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "nullable" : true
          },
          "nullable" : true
        },
        "nullable" : true,
        "properties" : {
          "accept" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MediaType"
            },
            "nullable" : true
          },
          "acceptCharset" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "nullable" : true,
              "properties" : {
                "registered" : {
                  "type" : "boolean",
                  "nullable" : true
                }
              }
            },
            "nullable" : true
          },
          "acceptLanguage" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "nullable" : true,
              "properties" : {
                "range" : {
                  "type" : "string",
                  "nullable" : true
                },
                "weight" : {
                  "type" : "number",
                  "format" : "double",
                  "nullable" : true
                }
              }
            },
            "nullable" : true
          },
          "acceptLanguageAsLocales" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "nullable" : true,
              "properties" : {
                "country" : {
                  "type" : "string",
                  "nullable" : true
                },
                "displayCountry" : {
                  "type" : "string",
                  "nullable" : true
                },
                "displayLanguage" : {
                  "type" : "string",
                  "nullable" : true
                },
                "displayName" : {
                  "type" : "string",
                  "nullable" : true
                },
                "displayScript" : {
                  "type" : "string",
                  "nullable" : true
                },
                "displayVariant" : {
                  "type" : "string",
                  "nullable" : true
                },
                "extensionKeys" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string",
                    "nullable" : true
                  },
                  "nullable" : true,
                  "uniqueItems" : true
                },
                "iso3Country" : {
                  "type" : "string",
                  "nullable" : true
                },
                "iso3Language" : {
                  "type" : "string",
                  "nullable" : true
                },
                "language" : {
                  "type" : "string",
                  "nullable" : true
                },
                "script" : {
                  "type" : "string",
                  "nullable" : true
                },
                "unicodeLocaleAttributes" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string",
                    "nullable" : true
                  },
                  "nullable" : true,
                  "uniqueItems" : true
                },
                "unicodeLocaleKeys" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string",
                    "nullable" : true
                  },
                  "nullable" : true,
                  "uniqueItems" : true
                },
                "variant" : {
                  "type" : "string",
                  "nullable" : true
                }
              }
            },
            "nullable" : true
          },
          "acceptPatch" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MediaType"
            },
            "nullable" : true
          },
          "accessControlAllowCredentials" : {
            "type" : "boolean",
            "nullable" : true
          },
          "accessControlAllowHeaders" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "accessControlAllowMethods" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/HttpMethod"
            },
            "nullable" : true
          },
          "accessControlAllowOrigin" : {
            "type" : "string",
            "nullable" : true
          },
          "accessControlExposeHeaders" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "accessControlMaxAge" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "accessControlRequestHeaders" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "accessControlRequestMethod" : {
            "$ref" : "#/components/schemas/HttpMethod"
          },
          "all" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "writeOnly" : true
          },
          "allow" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/HttpMethod"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "basicAuth" : {
            "type" : "string",
            "nullable" : true,
            "writeOnly" : true
          },
          "bearerAuth" : {
            "type" : "string",
            "nullable" : true,
            "writeOnly" : true
          },
          "cacheControl" : {
            "type" : "string",
            "nullable" : true
          },
          "connection" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "contentDisposition" : {
            "$ref" : "#/components/schemas/ContentDisposition"
          },
          "contentLanguage" : {
            "type" : "object",
            "nullable" : true,
            "properties" : {
              "country" : {
                "type" : "string",
                "nullable" : true
              },
              "displayCountry" : {
                "type" : "string",
                "nullable" : true
              },
              "displayLanguage" : {
                "type" : "string",
                "nullable" : true
              },
              "displayName" : {
                "type" : "string",
                "nullable" : true
              },
              "displayScript" : {
                "type" : "string",
                "nullable" : true
              },
              "displayVariant" : {
                "type" : "string",
                "nullable" : true
              },
              "extensionKeys" : {
                "type" : "array",
                "items" : {
                  "type" : "string",
                  "nullable" : true
                },
                "nullable" : true,
                "uniqueItems" : true
              },
              "iso3Country" : {
                "type" : "string",
                "nullable" : true
              },
              "iso3Language" : {
                "type" : "string",
                "nullable" : true
              },
              "language" : {
                "type" : "string",
                "nullable" : true
              },
              "script" : {
                "type" : "string",
                "nullable" : true
              },
              "unicodeLocaleAttributes" : {
                "type" : "array",
                "items" : {
                  "type" : "string",
                  "nullable" : true
                },
                "nullable" : true,
                "uniqueItems" : true
              },
              "unicodeLocaleKeys" : {
                "type" : "array",
                "items" : {
                  "type" : "string",
                  "nullable" : true
                },
                "nullable" : true,
                "uniqueItems" : true
              },
              "variant" : {
                "type" : "string",
                "nullable" : true
              }
            }
          },
          "contentLength" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "contentType" : {
            "$ref" : "#/components/schemas/MediaType"
          },
          "date" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "empty" : {
            "type" : "boolean",
            "nullable" : true
          },
          "etag" : {
            "type" : "string",
            "nullable" : true
          },
          "expires" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "host" : {
            "type" : "object",
            "nullable" : true,
            "properties" : {
              "address" : {
                "type" : "object",
                "nullable" : true,
                "properties" : {
                  "address" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string",
                      "format" : "byte",
                      "nullable" : true
                    },
                    "nullable" : true
                  },
                  "anyLocalAddress" : {
                    "type" : "boolean",
                    "nullable" : true
                  },
                  "canonicalHostName" : {
                    "type" : "string",
                    "nullable" : true
                  },
                  "hostAddress" : {
                    "type" : "string",
                    "nullable" : true
                  },
                  "hostName" : {
                    "type" : "string",
                    "nullable" : true
                  },
                  "linkLocalAddress" : {
                    "type" : "boolean",
                    "nullable" : true
                  },
                  "loopbackAddress" : {
                    "type" : "boolean",
                    "nullable" : true
                  },
                  "mcglobal" : {
                    "type" : "boolean",
                    "nullable" : true
                  },
                  "mclinkLocal" : {
                    "type" : "boolean",
                    "nullable" : true
                  },
                  "mcnodeLocal" : {
                    "type" : "boolean",
                    "nullable" : true
                  },
                  "mcorgLocal" : {
                    "type" : "boolean",
                    "nullable" : true
                  },
                  "mcsiteLocal" : {
                    "type" : "boolean",
                    "nullable" : true
                  },
                  "multicastAddress" : {
                    "type" : "boolean",
                    "nullable" : true
                  },
                  "siteLocalAddress" : {
                    "type" : "boolean",
                    "nullable" : true
                  }
                }
              },
              "hostName" : {
                "type" : "string",
                "nullable" : true
              },
              "hostString" : {
                "type" : "string",
                "nullable" : true
              },
              "port" : {
                "type" : "integer",
                "format" : "int32",
                "nullable" : true
              },
              "unresolved" : {
                "type" : "boolean",
                "nullable" : true
              }
            }
          },
          "ifMatch" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "ifModifiedSince" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "ifNoneMatch" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "ifUnmodifiedSince" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "lastModified" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "location" : {
            "type" : "string",
            "format" : "uri",
            "nullable" : true
          },
          "origin" : {
            "type" : "string",
            "nullable" : true
          },
          "pragma" : {
            "type" : "string",
            "nullable" : true
          },
          "range" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/HttpRange"
            },
            "nullable" : true
          },
          "upgrade" : {
            "type" : "string",
            "nullable" : true
          },
          "vary" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "HttpMethod" : {
        "type" : "object"
      },
      "HttpRange" : {
        "type" : "object"
      },
      "HttpStatusCode" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "is1xxInformational" : {
            "type" : "boolean",
            "nullable" : true
          },
          "is2xxSuccessful" : {
            "type" : "boolean",
            "nullable" : true
          },
          "is3xxRedirection" : {
            "type" : "boolean",
            "nullable" : true
          },
          "is4xxClientError" : {
            "type" : "boolean",
            "nullable" : true
          },
          "is5xxServerError" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "IAperioType" : {
        "type" : "object",
        "description" : "The updated Aperio integration configuration.",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "IAudioUserConfig" : {
        "type" : "object",
        "description" : "Audio gateway configuration settings",
        "properties" : {
          "audio_aec_via_software" : {
            "type" : "boolean",
            "nullable" : true
          },
          "audio_analysis_enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "audio_analysis_params" : {
            "$ref" : "#/components/schemas/AudioParamConfig"
          },
          "audio_external_mic_boost" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "audio_external_mic_volume" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "audio_external_speaker_volume" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "audio_internal_mic_aec_enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "audio_internal_mic_boost" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "audio_internal_mic_volume" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "audio_internal_speaker_volume" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "audio_min_echo_amplitude" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "audio_playback_gain_percent" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "audio_record" : {
            "type" : "boolean",
            "nullable" : true
          },
          "audio_supported" : {
            "type" : "boolean",
            "nullable" : true
          },
          "audio_use_external_mic" : {
            "type" : "boolean",
            "nullable" : true
          },
          "audio_use_external_speaker" : {
            "type" : "boolean",
            "nullable" : true
          },
          "audio_use_internal_speaker" : {
            "type" : "boolean",
            "nullable" : true
          },
          "bandwidth_reports_disabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "cloud_archive_days" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "cloud_archive_target" : {
            "type" : "string",
            "enum" : [ "0", "1", "2" ],
            "nullable" : true
          },
          "cloud_archive_upload_schedule" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/WeeklyMinuteIntervalType"
            },
            "nullable" : true
          },
          "cloud_archive_upload_schedule_inverted" : {
            "type" : "boolean",
            "nullable" : true
          },
          "cloud_archive_upload_schedule_uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "deviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "device_mic_enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "device_near_audio_silenced" : {
            "type" : "boolean",
            "nullable" : true
          },
          "device_speaker_enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "event_clip_upload_target" : {
            "type" : "string",
            "enum" : [ "0", "1", "2" ],
            "nullable" : true
          },
          "firmware_dev_settings" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "frontendEqualizerHighShelf" : {
            "$ref" : "#/components/schemas/FrontendEqualizerSettings"
          },
          "frontendEqualizerLowShelf" : {
            "$ref" : "#/components/schemas/FrontendEqualizerSettings"
          },
          "frontendEqualizerPeaking1" : {
            "$ref" : "#/components/schemas/FrontendEqualizerSettings"
          },
          "frontendEqualizerPeaking2" : {
            "$ref" : "#/components/schemas/FrontendEqualizerSettings"
          },
          "frontendEqualizerPeaking3" : {
            "$ref" : "#/components/schemas/FrontendEqualizerSettings"
          },
          "frontendNoiseSuppression" : {
            "type" : "boolean",
            "nullable" : true
          },
          "lastModified" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "led_mode_blink_period_ms" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "led_mode_when_active" : {
            "type" : "string",
            "enum" : [ "LED_OFF", "LED_RED_SOLID", "LED_GREEN_SOLID", "LED_ORANGE_SOLID", "LED_RED_BLINK", "LED_GREEN_BLINK", "LED_ORANGE_BLINK", "LED_NORMAL" ],
            "nullable" : true
          },
          "led_mode_when_inactive" : {
            "type" : "string",
            "enum" : [ "LED_OFF", "LED_RED_SOLID", "LED_GREEN_SOLID", "LED_ORANGE_SOLID", "LED_RED_BLINK", "LED_GREEN_BLINK", "LED_ORANGE_BLINK", "LED_NORMAL" ],
            "nullable" : true
          },
          "led_stealth_mode" : {
            "type" : "boolean",
            "nullable" : true
          },
          "lightweight_detection_disabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "live_license_invalid" : {
            "type" : "boolean",
            "nullable" : true
          },
          "max_event_duration_ms" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "media_ttl_minutes" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "on_demand_license_invalid" : {
            "type" : "boolean",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "snapshot_upload_target" : {
            "type" : "string",
            "enum" : [ "0", "1", "2" ],
            "nullable" : true
          },
          "splice_clip_upload_target" : {
            "type" : "string",
            "enum" : [ "0", "1", "2" ],
            "nullable" : true
          },
          "storage_target_free_megabytes" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "storage_target_free_space_permyriad" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "thumbstrip_upload_target" : {
            "type" : "string",
            "enum" : [ "0", "1", "2" ],
            "nullable" : true
          }
        }
      },
      "IAvigilonAltaType" : {
        "type" : "object",
        "description" : "Avigilon Alta V2 integration settings to update",
        "properties" : {
          "alertUnauthorizedFaces" : {
            "type" : "boolean",
            "nullable" : true
          },
          "apiToken" : {
            "type" : "string",
            "nullable" : true
          },
          "badgeAuthDisablesAlarmMonitoring" : {
            "type" : "boolean",
            "nullable" : true
          },
          "createSeekPoints" : {
            "type" : "boolean",
            "nullable" : true
          },
          "doorInfoMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/BadgeIntegrationDoorInfoType"
            },
            "nullable" : true
          },
          "doorToCameraMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "RUUID",
                "description" : "base 64 (url-safe) uuid string",
                "example" : "AAAAAAAAAAAAAAAAAAAAAA",
                "nullable" : true
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "doorsValidated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "email" : {
            "type" : "string",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "eventToWebhookIdMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "nullable" : true
          },
          "eventToWebhookMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/WebhookMapEntry"
            },
            "nullable" : true
          },
          "identifyFacesFromBadge" : {
            "type" : "boolean",
            "nullable" : true
          },
          "indexFaces" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "misconfiguredDoors" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "password" : {
            "type" : "string",
            "nullable" : true
          },
          "refreshToken" : {
            "type" : "string",
            "nullable" : true
          },
          "rhombusToken" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "saveClips" : {
            "type" : "boolean",
            "nullable" : true
          },
          "tokenValid" : {
            "type" : "boolean",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "webhookId" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "IBaseIntegrationType" : {
        "type" : "object",
        "discriminator" : {
          "propertyName" : "integration"
        },
        "oneOf" : [ {
          "$ref" : "#/components/schemas/AperioType"
        }, {
          "$ref" : "#/components/schemas/AvigilonAltaType"
        }, {
          "$ref" : "#/components/schemas/BrivoType"
        }, {
          "$ref" : "#/components/schemas/ButterflyMXType"
        }, {
          "$ref" : "#/components/schemas/DeviceIntegrationType"
        }, {
          "$ref" : "#/components/schemas/DiceType"
        }, {
          "$ref" : "#/components/schemas/EnvoyType"
        }, {
          "$ref" : "#/components/schemas/FlicType"
        }, {
          "$ref" : "#/components/schemas/GeneaType"
        }, {
          "$ref" : "#/components/schemas/GoogleType"
        }, {
          "$ref" : "#/components/schemas/GuestManagementType"
        }, {
          "$ref" : "#/components/schemas/InformacastType"
        }, {
          "$ref" : "#/components/schemas/InnerRangeType"
        }, {
          "$ref" : "#/components/schemas/KisiType"
        }, {
          "$ref" : "#/components/schemas/LumeoType"
        }, {
          "$ref" : "#/components/schemas/MicrosoftTeamsType"
        }, {
          "$ref" : "#/components/schemas/NineOneOneCellularType"
        }, {
          "$ref" : "#/components/schemas/OmnialertType"
        }, {
          "$ref" : "#/components/schemas/OpenAIType"
        }, {
          "$ref" : "#/components/schemas/OpentechAllianceType"
        }, {
          "$ref" : "#/components/schemas/PimlocType"
        }, {
          "$ref" : "#/components/schemas/PlaceOsType"
        }, {
          "$ref" : "#/components/schemas/ProDataKeyType"
        }, {
          "$ref" : "#/components/schemas/RaptorType"
        }, {
          "$ref" : "#/components/schemas/ShellyType"
        }, {
          "$ref" : "#/components/schemas/ToastType"
        }, {
          "$ref" : "#/components/schemas/WebhooksType"
        }, {
          "$ref" : "#/components/schemas/ZapierType"
        } ],
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "IBrivoType" : {
        "type" : "object",
        "properties" : {
          "accessToken" : {
            "type" : "string",
            "nullable" : true
          },
          "alertUnauthorizedFaces" : {
            "type" : "boolean",
            "nullable" : true
          },
          "apiKey" : {
            "type" : "string",
            "nullable" : true
          },
          "apiToken" : {
            "type" : "string",
            "nullable" : true
          },
          "badgeAuthDisablesAlarmMonitoring" : {
            "type" : "boolean",
            "nullable" : true
          },
          "clientId" : {
            "type" : "string",
            "nullable" : true
          },
          "clientSecret" : {
            "type" : "string",
            "nullable" : true
          },
          "createSeekPoints" : {
            "type" : "boolean",
            "nullable" : true
          },
          "doorInfoMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/BadgeIntegrationDoorInfoType"
            },
            "nullable" : true
          },
          "doorsValidated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "identifyFacesFromBadge" : {
            "type" : "boolean",
            "nullable" : true
          },
          "indexFaces" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "misconfiguredDoors" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "password" : {
            "type" : "string",
            "nullable" : true
          },
          "refreshToken" : {
            "type" : "string",
            "nullable" : true
          },
          "rhombusToken" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "saveClips" : {
            "type" : "boolean",
            "nullable" : true
          },
          "tokenValid" : {
            "type" : "boolean",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "username" : {
            "type" : "string",
            "nullable" : true
          },
          "version" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "webhookId" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "IButterflyMXType" : {
        "type" : "object",
        "description" : "ButterflyMX V2 integration settings to update",
        "properties" : {
          "alertUnauthorizedFaces" : {
            "type" : "boolean",
            "nullable" : true
          },
          "apiToken" : {
            "type" : "string",
            "nullable" : true
          },
          "badgeAuthDisablesAlarmMonitoring" : {
            "type" : "boolean",
            "nullable" : true
          },
          "buildingWebhookIdMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "createSeekPoints" : {
            "type" : "boolean",
            "nullable" : true
          },
          "doorInfoMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/BadgeIntegrationDoorInfoType"
            },
            "nullable" : true
          },
          "doorsValidated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "identifyFacesFromBadge" : {
            "type" : "boolean",
            "nullable" : true
          },
          "indexFaces" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "misconfiguredDoors" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "panelInfoMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/ButterflymxPanelInfoType"
            },
            "nullable" : true
          },
          "refreshToken" : {
            "type" : "string",
            "nullable" : true
          },
          "rhombusToken" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "saveClips" : {
            "type" : "boolean",
            "nullable" : true
          },
          "tokenValid" : {
            "type" : "boolean",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "IClimateUserConfig" : {
        "type" : "object",
        "description" : "Climate sensor configuration",
        "properties" : {
          "accelerometer_change_tamper_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "accelerometer_disabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "alert_window_minutes" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "deviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "lastModified" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "pressure_switch_tamper_disabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "smoke_ai_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "thc_ai_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "vape_ai_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          }
        }
      },
      "IDeviceIntegrationType" : {
        "type" : "object",
        "description" : "Device integration settings to update",
        "properties" : {
          "deviceSettingsMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/DeviceIntegrationSettings"
            },
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "IDiceType" : {
        "type" : "object",
        "description" : "Dice access control integration settings to update",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "IEnvoyType" : {
        "type" : "object",
        "description" : "Envoy V2 integration settings to update",
        "properties" : {
          "alertUnauthorizedFaces" : {
            "type" : "boolean",
            "nullable" : true
          },
          "apiToken" : {
            "type" : "string",
            "nullable" : true
          },
          "badgeAuthDisablesAlarmMonitoring" : {
            "type" : "boolean",
            "nullable" : true
          },
          "createSeekPoints" : {
            "type" : "boolean",
            "nullable" : true
          },
          "doorInfoMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/BadgeIntegrationDoorInfoType"
            },
            "nullable" : true
          },
          "doorsValidated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "envoyIntegrationInstalled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "envoyUserSettingsMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/EnvoyUserSettings"
            },
            "nullable" : true
          },
          "identifyFacesFromBadge" : {
            "type" : "boolean",
            "nullable" : true
          },
          "indexFaces" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "locationInfoMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/EnvoyLocationInfoType"
            },
            "nullable" : true
          },
          "misconfiguredDoors" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "refreshToken" : {
            "type" : "string",
            "nullable" : true
          },
          "saveClips" : {
            "type" : "boolean",
            "nullable" : true
          },
          "tokenValid" : {
            "type" : "boolean",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "IFlicType" : {
        "type" : "object",
        "description" : "Flic smart button integration settings to update",
        "properties" : {
          "apiKey" : {
            "type" : "string",
            "nullable" : true
          },
          "apiSecret" : {
            "type" : "string",
            "nullable" : true
          },
          "associatedLocations" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "moduleUploaded" : {
            "type" : "boolean",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "webhookId" : {
            "type" : "string",
            "nullable" : true
          },
          "webhookToken" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "IGeneaType" : {
        "type" : "object",
        "description" : "Genea V2 integration settings to update",
        "properties" : {
          "alertUnauthorizedFaces" : {
            "type" : "boolean",
            "nullable" : true
          },
          "apiToken" : {
            "type" : "string",
            "nullable" : true
          },
          "badgeAuthDisablesAlarmMonitoring" : {
            "type" : "boolean",
            "nullable" : true
          },
          "createSeekPoints" : {
            "type" : "boolean",
            "nullable" : true
          },
          "doorInfoMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/BadgeIntegrationDoorInfoType"
            },
            "nullable" : true
          },
          "doorsValidated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "identifyFacesFromBadge" : {
            "type" : "boolean",
            "nullable" : true
          },
          "indexFaces" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "misconfiguredDoors" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "refreshToken" : {
            "type" : "string",
            "nullable" : true
          },
          "rhombusToken" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "saveClips" : {
            "type" : "boolean",
            "nullable" : true
          },
          "tokenValid" : {
            "type" : "boolean",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "webhookSignatureSecret" : {
            "type" : "string",
            "nullable" : true
          },
          "webhookUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "IGoogleType" : {
        "type" : "object",
        "description" : "Google V2 integration settings to update",
        "properties" : {
          "allowUserStorage" : {
            "type" : "boolean",
            "nullable" : true
          },
          "apiToken" : {
            "type" : "string",
            "nullable" : true
          },
          "defaultAlertFolderId" : {
            "type" : "string",
            "nullable" : true
          },
          "defaultAlertFolderName" : {
            "type" : "string",
            "nullable" : true
          },
          "defaultFolderId" : {
            "type" : "string",
            "nullable" : true
          },
          "defaultFolderName" : {
            "type" : "string",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "refreshToken" : {
            "type" : "string",
            "nullable" : true
          },
          "saveAllAlerts" : {
            "type" : "boolean",
            "nullable" : true
          },
          "saveClips" : {
            "type" : "boolean",
            "nullable" : true
          },
          "tokenValid" : {
            "type" : "boolean",
            "nullable" : true
          },
          "userSettingsMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/GoogleUserSettings"
            },
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "IGuestManagementType" : {
        "type" : "object",
        "description" : "Guest management integration settings to update",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "locationSettingsMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/LocationSettings"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "IInformacastType" : {
        "type" : "object",
        "properties" : {
          "apiToken" : {
            "type" : "string",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "refreshToken" : {
            "type" : "string",
            "nullable" : true
          },
          "tokenValid" : {
            "type" : "boolean",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "IInnerRangeType" : {
        "type" : "object",
        "description" : "InnerRange access control integration settings to update",
        "properties" : {
          "apiToken" : {
            "type" : "string",
            "nullable" : true
          },
          "consoleToSettingsMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/InnerRangeConsoleSettings"
            },
            "nullable" : true
          },
          "createSeekPoints" : {
            "type" : "boolean",
            "nullable" : true
          },
          "doorInfoMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/InnerRangeDoorInfoType"
            },
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "refreshToken" : {
            "type" : "string",
            "nullable" : true
          },
          "skyTunnelSN" : {
            "type" : "string",
            "nullable" : true
          },
          "tokenValid" : {
            "type" : "boolean",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "IKisiType" : {
        "type" : "object",
        "description" : "Kisi V2 integration settings to update",
        "properties" : {
          "apiSecretKey" : {
            "type" : "string",
            "nullable" : true
          },
          "defaultOptions" : {
            "$ref" : "#/components/schemas/BadgeIntegrationDefaultOptions"
          },
          "doorsValidated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "placeToSettingsMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/BadgeIntegrationSettings"
            },
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "ILumeoType" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "IMicrosoftTeamsType" : {
        "type" : "object",
        "properties" : {
          "adminConsent" : {
            "type" : "boolean",
            "nullable" : true
          },
          "allowUserNotifications" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "microsoftTeamSettingsMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/MicrosoftTeamsChannelSettings"
            },
            "nullable" : true
          },
          "microsoftTeamsUserSettingsMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/MicrosoftTeamsUserSettings"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "tenantId" : {
            "type" : "string",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "INineOneOneCellularType" : {
        "type" : "object",
        "description" : "911 Cellular emergency notification integration settings to update",
        "properties" : {
          "bearerToken" : {
            "type" : "string",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "saveClips" : {
            "type" : "boolean",
            "nullable" : true
          },
          "securityZoneMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/SecurityZoneInfoType"
            },
            "nullable" : true
          },
          "triggerNotification" : {
            "type" : "boolean",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "webhookToken" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "zonesValidated" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "IOmnialertType" : {
        "type" : "object",
        "description" : "Omnialert emergency notification integration settings to update",
        "properties" : {
          "associatedCameras" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "saveClips" : {
            "type" : "boolean",
            "nullable" : true
          },
          "triggerNotification" : {
            "type" : "boolean",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "webhookToken" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "IOpenAIType" : {
        "type" : "object",
        "properties" : {
          "apiToken" : {
            "type" : "string",
            "nullable" : true
          },
          "baseUrl" : {
            "type" : "string",
            "description" : "The base url for any OpenAI Chat Completions compliant API. For example, to use Gemini models, set this to 'https://generativelanguage.googleapis.com/v1beta/openai/'.  If left blank, we will try to use OpenAI models.",
            "nullable" : true
          },
          "defaultModel" : {
            "type" : "string",
            "description" : "The model identifier to use as a default model.  This is provider specific and typically found on model card pages. For example, set to 'gemini-2.0-flash' to use the Gemini 2.0 Flash model.  Currently we require a model with vision capabilities for this integration.",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "refreshToken" : {
            "type" : "string",
            "nullable" : true
          },
          "tokenValid" : {
            "type" : "boolean",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "IOpentechAllianceType" : {
        "type" : "object",
        "description" : "OpenTech Alliance V2 integration settings to update",
        "properties" : {
          "apiKey" : {
            "type" : "string",
            "nullable" : true
          },
          "apiSecret" : {
            "type" : "string",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "facilityToSettingsMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/OpentechAllianceFacilitySettings"
            },
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "IPimlocType" : {
        "type" : "object",
        "properties" : {
          "baseAPIUrl" : {
            "type" : "string",
            "enum" : [ "US", "EU" ],
            "nullable" : true
          },
          "clientId" : {
            "type" : "string",
            "nullable" : true
          },
          "clientSecret" : {
            "type" : "string",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "rhombusToken" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "validCredentials" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "IPlaceOsType" : {
        "type" : "object",
        "description" : "PlaceOS V2 smart building management integration settings to update",
        "properties" : {
          "alertUnauthorizedFaces" : {
            "type" : "boolean",
            "nullable" : true
          },
          "apiToken" : {
            "type" : "string",
            "nullable" : true
          },
          "apiUrl" : {
            "type" : "string",
            "nullable" : true
          },
          "badgeAuthDisablesAlarmMonitoring" : {
            "type" : "boolean",
            "nullable" : true
          },
          "createSeekPoints" : {
            "type" : "boolean",
            "nullable" : true
          },
          "doorInfoMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/BadgeIntegrationDoorInfoType"
            },
            "nullable" : true
          },
          "doorsValidated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "identifyFacesFromBadge" : {
            "type" : "boolean",
            "nullable" : true
          },
          "indexFaces" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "misconfiguredDoors" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "refreshToken" : {
            "type" : "string",
            "nullable" : true
          },
          "rhombusToken" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "saveClips" : {
            "type" : "boolean",
            "nullable" : true
          },
          "tokenValid" : {
            "type" : "boolean",
            "nullable" : true
          },
          "triggerNotification" : {
            "type" : "boolean",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "webhookSignatureSecret" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "IProDataKeyType" : {
        "type" : "object",
        "description" : "Pro Data Key (PDK) V2 integration settings to update",
        "properties" : {
          "alertUnauthorizedFaces" : {
            "type" : "boolean",
            "nullable" : true
          },
          "apiToken" : {
            "type" : "string",
            "nullable" : true
          },
          "badgeAuthDisablesAlarmMonitoring" : {
            "type" : "boolean",
            "nullable" : true
          },
          "createSeekPoints" : {
            "type" : "boolean",
            "nullable" : true
          },
          "doorInfoMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/BadgeIntegrationDoorInfoType"
            },
            "nullable" : true
          },
          "doorsValidated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "identifyFacesFromBadge" : {
            "type" : "boolean",
            "nullable" : true
          },
          "indexFaces" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "misconfiguredDoors" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "organizationId" : {
            "type" : "string",
            "nullable" : true
          },
          "refreshToken" : {
            "type" : "string",
            "nullable" : true
          },
          "rhombusToken" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "saveClips" : {
            "type" : "boolean",
            "nullable" : true
          },
          "systemId" : {
            "type" : "string",
            "nullable" : true
          },
          "tokenValid" : {
            "type" : "boolean",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "webhookId" : {
            "type" : "string",
            "nullable" : true
          },
          "webhookSignatureSecret" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "IRaptorType" : {
        "type" : "object",
        "properties" : {
          "apiToken" : {
            "type" : "string",
            "nullable" : true
          },
          "clientId" : {
            "type" : "string",
            "nullable" : true
          },
          "clientSecret" : {
            "type" : "string",
            "nullable" : true
          },
          "clientUid" : {
            "type" : "string",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "refreshToken" : {
            "type" : "string",
            "nullable" : true
          },
          "tokenValid" : {
            "type" : "boolean",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "IShellyType" : {
        "type" : "object",
        "description" : "Shelly smart device integration settings to update",
        "properties" : {
          "canSendDiagnosticNotifications" : {
            "type" : "boolean",
            "nullable" : true
          },
          "diagnosticQuietPeriodSecs" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "shellyDeviceMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/ShellyDevice"
            },
            "nullable" : true
          },
          "thirdPartyDeviceToLocationMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "IToastType" : {
        "type" : "object",
        "properties" : {
          "currentToastRestaurantGuid" : {
            "type" : "string",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "restaurantSettingsMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/ToastRestaurantSettings"
            },
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "IWebhooksType" : {
        "type" : "object",
        "description" : "Updated webhook V2 integration settings",
        "properties" : {
          "activityWebhooks" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "activityWebhooksV2" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/WebhookInfo"
            },
            "nullable" : true
          },
          "diagnosticWebhooks" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "diagnosticWebhooksV2" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/WebhookInfo"
            },
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "ImmixSettings" : {
        "type" : "object",
        "properties" : {
          "deviceList" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "serverUrl" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "InformacastScenario" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "scenarioId" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "InformacastType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "apiToken" : {
              "type" : "string",
              "nullable" : true
            },
            "refreshToken" : {
              "type" : "string",
              "nullable" : true
            },
            "tokenValid" : {
              "type" : "boolean",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "InnerRangeConsoleSettings" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "apiKey" : {
            "type" : "string",
            "nullable" : true
          },
          "createSeekPoints" : {
            "type" : "boolean",
            "nullable" : true
          },
          "doorInfoMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/InnerRangeDoorInfoType"
            },
            "nullable" : true
          },
          "skyTunnelSN" : {
            "type" : "string",
            "nullable" : true
          },
          "tokenValid" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "InnerRangeConsoleType" : {
        "type" : "object",
        "properties" : {
          "doorList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/InnerRangeDoorType"
            },
            "nullable" : true
          },
          "skyTunnelSN" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "InnerRangeDoorInfoType" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "assignedCameraList" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          },
          "clipDuration" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "doorName" : {
            "type" : "string",
            "nullable" : true
          },
          "leadingSeconds" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "readerIds" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "remoteUnlock" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "InnerRangeDoorType" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "readerIds" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "InnerRangeType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "apiToken" : {
              "type" : "string",
              "nullable" : true
            },
            "consoleToSettingsMap" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/InnerRangeConsoleSettings"
              },
              "nullable" : true
            },
            "createSeekPoints" : {
              "type" : "boolean",
              "nullable" : true
            },
            "doorInfoMap" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/InnerRangeDoorInfoType"
              },
              "nullable" : true
            },
            "refreshToken" : {
              "type" : "string",
              "nullable" : true
            },
            "skyTunnelSN" : {
              "type" : "string",
              "nullable" : true
            },
            "tokenValid" : {
              "type" : "boolean",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "IntegratedDoorPositionIndicatorType" : {
        "type" : "object",
        "properties" : {
          "baseType" : {
            "$ref" : "#/components/schemas/ComponentBaseEnumType"
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "dpiType" : {
            "$ref" : "#/components/schemas/DoorPositionIndicatorEnumType"
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "normalState" : {
            "$ref" : "#/components/schemas/NormalStateEnumType"
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "ownerHardwareType" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "port" : {
            "$ref" : "#/components/schemas/DoorPositionIndicatorPortType"
          },
          "portImmutable" : {
            "type" : "boolean",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEnumType"
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "IntegratedDoorRelayType" : {
        "type" : "object",
        "properties" : {
          "baseType" : {
            "$ref" : "#/components/schemas/ComponentBaseEnumType"
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "ownerHardwareType" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "port" : {
            "$ref" : "#/components/schemas/DoorRelayPortType"
          },
          "portImmutable" : {
            "type" : "boolean",
            "nullable" : true
          },
          "rateLimitingEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "relayType" : {
            "$ref" : "#/components/schemas/DoorRelayEnumType"
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEnumType"
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "IntegratedGenericButtonType" : {
        "type" : "object",
        "properties" : {
          "baseType" : {
            "$ref" : "#/components/schemas/ComponentBaseEnumType"
          },
          "buttonType" : {
            "$ref" : "#/components/schemas/ButtonEnumType"
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "mode" : {
            "$ref" : "#/components/schemas/ButtonModeEnum"
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "ownerHardwareType" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "port" : {
            "$ref" : "#/components/schemas/ButtonPortType"
          },
          "portImmutable" : {
            "type" : "boolean",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEnumType"
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "IntegratedGenericInputType" : {
        "type" : "object",
        "properties" : {
          "auxType" : {
            "$ref" : "#/components/schemas/AuxiliaryEnumType"
          },
          "baseType" : {
            "$ref" : "#/components/schemas/ComponentBaseEnumType"
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "normalState" : {
            "$ref" : "#/components/schemas/NormalStateEnumType"
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "ownerHardwareType" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "port" : {
            "$ref" : "#/components/schemas/AuxiliaryInputPortType"
          },
          "portImmutable" : {
            "type" : "boolean",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEnumType"
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "IntegratedGenericRelayType" : {
        "type" : "object",
        "properties" : {
          "auxType" : {
            "$ref" : "#/components/schemas/AuxiliaryEnumType"
          },
          "baseType" : {
            "$ref" : "#/components/schemas/ComponentBaseEnumType"
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "originator" : {
            "$ref" : "#/components/schemas/BaseEventOriginator"
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "ownerHardwareType" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "port" : {
            "$ref" : "#/components/schemas/AuxiliaryRelayPortType"
          },
          "portImmutable" : {
            "type" : "boolean",
            "nullable" : true
          },
          "relayDurationSec" : {
            "type" : "integer",
            "format" : "int32",
            "deprecated" : true,
            "description" : "Deprecated, do not use.",
            "nullable" : true
          },
          "stateChangedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "steadyState" : {
            "$ref" : "#/components/schemas/GenericRelayStateEnumType"
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEnumType"
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "IntegratedRequestToExitType" : {
        "type" : "object",
        "properties" : {
          "baseType" : {
            "$ref" : "#/components/schemas/ComponentBaseEnumType"
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "intentOnly" : {
            "type" : "boolean",
            "nullable" : true
          },
          "intentOnlyEvents" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "normalState" : {
            "$ref" : "#/components/schemas/NormalStateEnumType"
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "ownerHardwareType" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "port" : {
            "$ref" : "#/components/schemas/RequestToExitPortType"
          },
          "portImmutable" : {
            "type" : "boolean",
            "nullable" : true
          },
          "rexType" : {
            "$ref" : "#/components/schemas/RequestToExitEnumType"
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEnumType"
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "IntegrationActionStatusEnum" : {
        "type" : "string",
        "enum" : [ "SUCCESS", "ERROR", "BACKOFF", "IGNORED", "UNKNOWN" ]
      },
      "IntegrationAuditEvent" : {
        "type" : "object",
        "properties" : {
          "enabledTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "integrationAuditEvent" : {
            "$ref" : "#/components/schemas/IntegrationAuditEventEnum"
          },
          "user" : {
            "type" : "string",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "IntegrationAuditEventEnum" : {
        "type" : "string",
        "enum" : [ "UPDATE", "DELETE" ]
      },
      "IntegrationCommandActionType" : {
        "type" : "object",
        "properties" : {
          "commandPayload" : {
            "type" : "string",
            "nullable" : true
          },
          "delaySecs" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          }
        }
      },
      "IntegrationDiagnosticEventType" : {
        "type" : "object",
        "properties" : {
          "activity" : {
            "type" : "string",
            "enum" : [ "CAMERA_CONNECTED", "CAMERA_DISCONNECTED", "STARTUP", "GATEWAY_CONNECTED", "GATEWAY_DISCONNECTED", "UPDATE_STARTED", "UPDATE_FIRMWARE_DOWNLOADED", "UPDATE_FIRMWARE_APPLIED", "UPDATE_STARTING_REBOOT", "UPDATE_FAILED_MD5_MISMATCH", "UPDATE_FAILED_ACCESS_DENIED", "UPDATE_FAILED_MITM", "UPDATE_FAILED_CONNNECTION_REFUSED", "UPDATE_FAILED_CONNNECTION_TIMEOUT", "UPDATE_FAILED_CONNECTION_REFUSED", "UPDATE_FAILED_CONNECTION_TIMEOUT", "UPDATE_FAILED_DNS_FAILURE", "UPDATE_RUNNING", "BLE_CONNECTED", "BLE_CONNECTION_FAILED", "BLE_DISCONNECTED", "BLE_OP_SUCCESS", "BLE_OP_FAILURE", "UPLOAD_CLIP_SUCCESS", "UPLOAD_CLIP_FAILURE", "NOTIFICATION_FAILURE", "USB_FAILURE_REBOOT", "PERSISTENT_STORAGE_FAILURE", "PING", "FORCED_REBOOT", "AUTO_REBOOT", "AUDIO_HARDWARE_NOT_DETECTED", "ENCRYPTED_CONTAINER_FAILURE_CREATE", "ENCRYPTED_CONTAINER_FAILURE_OPEN", "ENCRYPTED_CONTAINER_FAILURE_MOUNT", "VIDEO_HARDWARE_FAILURE", "WIFI_NETWORK_CHANGED", "AI_ENGINE_DOWNLOADED", "AI_ENGINE_DOWNLOAD_FAILED_MD5_MISMATCH", "AI_ENGINE_CONFIGURED", "AI_ENGINE_CONFIGURATION_FAILED", "MITM_FAILURE", "SERVER_RECONNECT", "AP_CHANGED", "WATCHDOG_KILLED_AGENT", "WATCHDOG_DID_RESET", "CLIMATE_OFFLINE", "CLIMATE_ONLINE", "CLIMATE_LOW_BATTERY", "CLIMATE_PROBE_CONNECTED", "CLIMATE_PROBE_DISCONNECTED", "DOOR_OFFLINE", "DOOR_ONLINE", "DOOR_LOW_BATTERY", "OCCUPANCY_SENSOR_ONLINE", "OCCUPANCY_SENSOR_OFFLINE", "OCCUPANCY_SENSOR_LOW_BATTERY", "BUTTON_OFFLINE", "BUTTON_ONLINE", "BUTTON_LOW_BATTERY", "PROXIMITY_LOW_BATTERY", "DOOR_CONTROLLER_CONNECTED", "DOOR_CONTROLLER_DISCONNECTED", "APERIO_LOW_BATTERY", "APERIO_FLAT_BATTERY", "APERIO_OK_BATTERY", "APERIO_GW_CONNECTED", "APERIO_GW_DISCONNECTED", "BADGE_READER_CONNECTED", "BADGE_READER_DISCONNECTED", "REBOOT", "NETWORK_INTERRUPTION", "OPENPATH_WEBHOOK_FAILURE", "TOAST_WEBHOOK_FAILURE", "KISI_WEBHOOK_FAILURE", "BRIVO_WEBHOOK_FAILURE", "HALO_WEBHOOK_FAILURE", "SALTO_WEBHOOK_FAILURE", "SQUARE_WEBHOOK_FAILURE", "BUTTERFLYMX_WEBHOOK_FAILURE", "ENVOY_WEBHOOK_FAILURE", "GENEA_WEBHOOK_FAILURE", "PRODATAKEY_WEBHOOK_FAILURE", "AMT_WEBHOOK_FAILURE", "PLACEOS_WEBHOOK_FAILURE", "OMNIALERT_WEBHOOK_FAILURE", "FLIC_WEBHOOK_FAILURE", "PIMLOC_WEBHOOK_FAILURE", "NINEONEONECELLULAR_WEBHOOK_FAILURE", "CV_FAILURE", "NFC_HW_FAILURE", "CONFIG_ERROR", "HW_FAILURE", "KEYPAD_ONLINE", "KEYPAD_OFFLINE", "ALM_OVERAGE_APPROACHING", "ALM_OVERAGE_REACHED", "ALM_OVERAGE_EXCEEDED", "ALM_EXCESSIVE_VERIFICATIONS", "ALM_AUTHORITIES_CONTACTED", "ALM_MONITORING_ENABLED", "ALM_MONITORING_DISABLED", "ALM_MONITORING_SETTINGS_CHANGE", "ALM_THREAT_CASE_CLOSED", "ALM_THREAT_DETECTED", "KIOSK_OFFLINE", "KIOSK_ONLINE", "TUNNELED_DEVICE_CONNECTED", "TUNNELED_DEVICE_DISCONNECTED", "SD_CARD_CHANGED", "SUPERVISION_CUT_DETECTED", "SUPERVISION_SHORT_DETECTED", "SUPERVISION_INVALID_SETUP", "THIRD_PARTY_DEVICE_CONNECTED", "THIRD_PARTY_DEVICE_DISCONNECTED", "UNKNOWN" ],
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "thirdPartyDeviceId" : {
            "type" : "string",
            "nullable" : true
          },
          "thirdPartyDeviceName" : {
            "type" : "string",
            "nullable" : true
          },
          "timestamp" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "IntegrationEnum" : {
        "type" : "string",
        "enum" : [ "AVIGILON_ALTA", "BRIVO", "BUTTERFLY_MX", "DEVICE_INTEGRATION", "DICE", "ENVOY", "FLIC", "GENEA", "GOOGLE", "GUEST_MANAGEMENT", "INFORMACAST", "INNER_RANGE", "KISI", "LUMEO", "MICROSOFT_TEAMS", "OMNIALERT", "OPENAI", "OPENTECH_ALLIANCE", "PIMLOC", "PLACE_OS", "PRODATAKEY", "SHELLY", "TOAST", "WEBHOOKS", "ZAPIER", "RAPTOR", "NINEONEONE_CELLULAR", "SLACK", "APERIO", "UNKNOWN" ]
      },
      "IntegrationNotificationActionType" : {
        "type" : "object",
        "properties" : {
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "notificationEntity" : {
            "type" : "string",
            "nullable" : true
          },
          "notificationTarget" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_BaseIntegrationWSRequest" : {
        "type" : "object",
        "description" : "Base request object for integration operations."
      },
      "Integration_CreateEnvoyInviteWSRequest" : {
        "type" : "object",
        "properties" : {
          "invitation" : {
            "$ref" : "#/components/schemas/EnvoyInvite"
          }
        }
      },
      "Integration_GetAccessControlIntegrationsForAlmWSResponse" : {
        "type" : "object",
        "properties" : {
          "badDoors" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "integrations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/IntegrationEnum"
            },
            "nullable" : true
          }
        }
      },
      "Integration_GetAllGuestsWSResponse" : {
        "type" : "object",
        "properties" : {
          "allGuests" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Guest"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_GetAllOrgIntegrationsV2WSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "orgIntegrationsV2" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IBaseIntegrationType"
            },
            "nullable" : true
          }
        }
      },
      "Integration_GetAmtReadersWSRequest" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string",
            "nullable" : true
          },
          "password" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_GetAperioIntegrationWSRequest" : {
        "type" : "object",
        "description" : "Request object for retrieving Aperio integration configuration."
      },
      "Integration_GetAperioIntegrationWSResponse" : {
        "type" : "object",
        "description" : "Response object containing Aperio integration configuration and door controllers.",
        "properties" : {
          "aperioSettings" : {
            "$ref" : "#/components/schemas/IAperioType"
          },
          "doorControllers" : {
            "type" : "array",
            "description" : "List of Rhombus door controllers with Aperio integration",
            "items" : {
              "$ref" : "#/components/schemas/Integration_aperio_AperioRhombusDoorControllerView"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_GetApiTokenApplicationsWSRequest" : {
        "type" : "object"
      },
      "Integration_GetApiTokenApplicationsWSResponse" : {
        "type" : "object",
        "properties" : {
          "applications" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ApiTokenApplicationType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_GetApiTokensWSRequest" : {
        "type" : "object",
        "description" : "Request object for retrieving API tokens.",
        "properties" : {
          "optionalFilter" : {
            "type" : "array",
            "description" : "Optional filter for API client types",
            "items" : {
              "$ref" : "#/components/schemas/ApiClientTypeEnum"
            },
            "nullable" : true
          }
        }
      },
      "Integration_GetApiTokensWSResponse" : {
        "type" : "object",
        "description" : "Response object containing API tokens.",
        "properties" : {
          "apiTokens" : {
            "type" : "array",
            "description" : "List of API tokens",
            "items" : {
              "$ref" : "#/components/schemas/ApiTokenType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_GetBadgeIntegrationDoorsWSResponse" : {
        "type" : "object",
        "properties" : {
          "authError" : {
            "type" : "boolean",
            "nullable" : true
          },
          "doors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DoorType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_GetBadgeIntegrationGenericDoorsWSResponse" : {
        "type" : "object",
        "properties" : {
          "authError" : {
            "type" : "boolean",
            "nullable" : true
          },
          "doors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/GenericDoorType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_GetBadgeIntegrationPlacesWSResponse" : {
        "type" : "object",
        "properties" : {
          "authError" : {
            "type" : "boolean",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "places" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PlaceType"
            },
            "nullable" : true
          }
        }
      },
      "Integration_GetBrivoDoorsWSRequest" : {
        "type" : "object",
        "properties" : {
          "password" : {
            "type" : "string",
            "nullable" : true
          },
          "username" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_GetBrivoDoorsWSResponse" : {
        "type" : "object",
        "properties" : {
          "authError" : {
            "type" : "boolean",
            "nullable" : true
          },
          "doors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DoorType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_GetButterflymxPanelsWSRequest" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string",
            "nullable" : true
          },
          "password" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_GetButterflymxPanelsWSResponse" : {
        "type" : "object",
        "properties" : {
          "authError" : {
            "type" : "boolean",
            "nullable" : true
          },
          "buildings" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ButterflymxBuilding"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_GetCalendlyEventDetailsWSRequest" : {
        "type" : "object",
        "properties" : {
          "eventUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_GetCalendlyEventDetailsWSResponse" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string",
            "nullable" : true
          },
          "endTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "startTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Integration_GetEnvoyDeliveriesWSRequest" : {
        "type" : "object",
        "properties" : {
          "endTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "locationIds" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "startTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Integration_GetEnvoyDeliveriesWSResponse" : {
        "type" : "object",
        "properties" : {
          "collectedDeliveries" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EnvoyDelivery"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "pendingDeliveries" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EnvoyDelivery"
            },
            "nullable" : true
          }
        }
      },
      "Integration_GetEnvoyEmployeesWSRequest" : {
        "type" : "object",
        "properties" : {
          "locationIds" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Integration_GetEnvoyEmployeesWSResponse" : {
        "type" : "object",
        "properties" : {
          "employees" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EnvoyPersonInfo"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_GetEnvoyLocationsWSRequest" : {
        "type" : "object"
      },
      "Integration_GetEnvoyLocationsWSResponse" : {
        "type" : "object",
        "properties" : {
          "authError" : {
            "type" : "boolean",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "locationList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EnvoyLocation"
            },
            "nullable" : true
          }
        }
      },
      "Integration_GetEnvoyVisitorsWSRequest" : {
        "type" : "object",
        "properties" : {
          "endTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "includeSignedOutVisitors" : {
            "type" : "boolean",
            "nullable" : true
          },
          "locationIds" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "startTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Integration_GetEnvoyVisitorsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "invites" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EnvoyExpectedGuest"
            },
            "nullable" : true
          },
          "visitors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EnvoyGuest"
            },
            "nullable" : true
          }
        }
      },
      "Integration_GetFlicDevicesWSRequest" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_GetFlicDevicesWSResponse" : {
        "type" : "object",
        "properties" : {
          "authError" : {
            "type" : "boolean",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "flicDevices" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FlicDevice"
            },
            "nullable" : true
          },
          "flicModule" : {
            "$ref" : "#/components/schemas/FlicDevice"
          }
        }
      },
      "Integration_GetGeneaDoorsWSRequest" : {
        "type" : "object",
        "properties" : {
          "apiToken" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_GetGeneaDoorsWSResponse" : {
        "type" : "object",
        "properties" : {
          "authError" : {
            "type" : "boolean",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "panelList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PanelType"
            },
            "nullable" : true
          }
        }
      },
      "Integration_GetGuestWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "guest" : {
            "$ref" : "#/components/schemas/Guest"
          }
        }
      },
      "Integration_GetInformacastScenariosWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "scenarios" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/InformacastScenario"
            },
            "nullable" : true
          }
        }
      },
      "Integration_GetInnerRangeConsolesWSRequest" : {
        "type" : "object"
      },
      "Integration_GetInnerRangeConsolesWSResponse" : {
        "type" : "object",
        "properties" : {
          "consoles" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/InnerRangeConsoleType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_GetInnerRangeDoorsWSRequest" : {
        "type" : "object"
      },
      "Integration_GetInnerRangeDoorsWSResponse" : {
        "type" : "object",
        "properties" : {
          "doors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/InnerRangeDoorType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_GetIntegrationDiagnosticEventsWSRequest" : {
        "type" : "object",
        "properties" : {
          "timestampMsAfter" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "timestampMsBefore" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Integration_GetIntegrationDiagnosticEventsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "integrationDiagnosticEvents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/IntegrationDiagnosticEventType"
            },
            "nullable" : true
          }
        }
      },
      "Integration_GetKisiDoorsWSRequest" : {
        "type" : "object",
        "properties" : {
          "apiSecretKey" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_GetKisiDoorsWSResponse" : {
        "type" : "object",
        "properties" : {
          "authError" : {
            "type" : "boolean",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "placeToDoorMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/DoorType"
              },
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Integration_GetKisiIntegrationWSResponse" : {
        "type" : "object",
        "description" : "Response object containing Kisi integration settings.",
        "properties" : {
          "authError" : {
            "type" : "boolean",
            "description" : "Whether an authentication error occurred during update",
            "example" : false,
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "failedGuids" : {
            "type" : "array",
            "description" : "List of GUIDs that failed to update",
            "items" : {
              "type" : "string",
              "description" : "List of GUIDs that failed to update",
              "nullable" : true
            },
            "nullable" : true
          },
          "kisiSettings" : {
            "$ref" : "#/components/schemas/KisiSettings"
          },
          "misconfiguredDoors" : {
            "type" : "array",
            "description" : "List of door names that are assigned to multiple Rhombus locations",
            "items" : {
              "type" : "string",
              "description" : "List of door names that are assigned to multiple Rhombus locations",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Integration_GetKisiPlacesWSRequest" : {
        "type" : "object",
        "properties" : {
          "apiSecretKey" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_GetMicrosoftUsersJoinedTeamsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "teamsMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Integration_GetNineOneOneCSZonesWSRequest" : {
        "type" : "object"
      },
      "Integration_GetNineOneOneCSZonesWSResponse" : {
        "type" : "object",
        "properties" : {
          "authError" : {
            "type" : "boolean",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "zone" : {
            "$ref" : "#/components/schemas/SecurityZoneInfoType"
          },
          "zoneMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/SecurityZoneInfoType"
            },
            "nullable" : true
          }
        }
      },
      "Integration_GetOpenAIModelsWSRequest" : {
        "type" : "object",
        "description" : "Request object for retrieving OpenAI models.",
        "properties" : {
          "openAISettings" : {
            "$ref" : "#/components/schemas/IOpenAIType"
          }
        }
      },
      "Integration_GetOpenAIModelsWSResponse" : {
        "type" : "object",
        "description" : "Response object containing available OpenAI models.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "models" : {
            "type" : "array",
            "description" : "List of available OpenAI models",
            "items" : {
              "$ref" : "#/components/schemas/OpenAIModel"
            },
            "nullable" : true
          }
        }
      },
      "Integration_GetOpenpathDoorsWSRequest" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string",
            "nullable" : true
          },
          "password" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_GetOpenpathLockdownsWSResponse" : {
        "type" : "object",
        "properties" : {
          "authError" : {
            "type" : "boolean",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "lockdownPlans" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LockdownType"
            },
            "nullable" : true
          }
        }
      },
      "Integration_GetOpentechAllianceFacilitiesWSRequest" : {
        "type" : "object"
      },
      "Integration_GetOpentechAllianceFacilitiesWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "facilities" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OpentechAllianceFacilityType"
            },
            "nullable" : true
          }
        }
      },
      "Integration_GetOrgIntegrationsV2WSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "orgIntegrationV2" : {
            "$ref" : "#/components/schemas/IBaseIntegrationType"
          }
        }
      },
      "Integration_GetOrgIntegrationsWSRequest" : {
        "type" : "object",
        "description" : "Request object for retrieving organization integrations."
      },
      "Integration_GetOrgIntegrationsWSResponse" : {
        "type" : "object",
        "description" : "Response object containing organization integrations configuration.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "orgIntegrations" : {
            "$ref" : "#/components/schemas/OrgIntegrationsType"
          }
        }
      },
      "Integration_GetPartnerApiTokensWSRequest" : {
        "type" : "object"
      },
      "Integration_GetPdkDoorsWSRequest" : {
        "type" : "object",
        "properties" : {
          "ouId" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_GetPdkDoorsWSResponse" : {
        "type" : "object",
        "properties" : {
          "authError" : {
            "type" : "boolean",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "panelList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PanelType"
            },
            "nullable" : true
          }
        }
      },
      "Integration_GetPdkSystemIdWSRequest" : {
        "type" : "object",
        "properties" : {
          "configurationToken" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_GetPdkSystemIdWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "systemId" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_GetPlaceOsDoorsWSRequest" : {
        "type" : "object",
        "properties" : {
          "apiUrl" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_GetRaptorBuildingsWSResponse" : {
        "type" : "object",
        "properties" : {
          "buildings" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RaptorBuilding"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_GetRaptorTemplatesWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "templates" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RaptorTemplate"
            },
            "nullable" : true
          }
        }
      },
      "Integration_GetToastEventsTableAllLocationsWSRequest" : {
        "type" : "object",
        "properties" : {
          "businessDate" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_GetToastEventsTableAllLocationsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "eventTable" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Integration_GetToastEventsTableWSResponse_EventTableRow"
            },
            "nullable" : true
          },
          "failedGuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Integration_GetToastEventsTableWSRequest" : {
        "type" : "object",
        "properties" : {
          "businessDate" : {
            "type" : "string",
            "nullable" : true
          },
          "restaurantGuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_GetToastEventsTableWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "eventTable" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Integration_GetToastEventsTableWSResponse_EventTableRow"
            },
            "nullable" : true
          }
        }
      },
      "Integration_GetToastEventsTableWSResponse_EventTableRow" : {
        "type" : "object",
        "properties" : {
          "assignedCameraList" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          },
          "employeeName" : {
            "type" : "string",
            "nullable" : true
          },
          "orderGuid" : {
            "type" : "string",
            "nullable" : true
          },
          "paymentType" : {
            "type" : "string",
            "nullable" : true
          },
          "restaurantName" : {
            "type" : "string",
            "nullable" : true
          },
          "revenueCenterName" : {
            "type" : "string",
            "nullable" : true
          },
          "serviceAreaName" : {
            "type" : "string",
            "nullable" : true
          },
          "timestamp" : {
            "type" : "string",
            "nullable" : true
          },
          "tipAmount" : {
            "type" : "string",
            "nullable" : true
          },
          "totalAmount" : {
            "type" : "string",
            "nullable" : true
          },
          "totalDiscountAmount" : {
            "type" : "string",
            "nullable" : true
          },
          "voided" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_GetToastServiceAreasWSRequest" : {
        "type" : "object",
        "properties" : {
          "restaurantGuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_GetToastServiceAreasWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "serviceAreas" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/GenericPosType"
            },
            "nullable" : true
          }
        }
      },
      "Integration_GuestWSRequest" : {
        "type" : "object",
        "description" : "Request object for guest-related operations.",
        "properties" : {
          "email" : {
            "type" : "string",
            "description" : "Email address of the guest",
            "example" : "guest@example.com",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_InitiateBrivoOAuthWSRequest" : {
        "type" : "object",
        "description" : "Request object for initiating Brivo OAuth authentication flow with API key.",
        "properties" : {
          "apiKey" : {
            "type" : "string",
            "description" : "Brivo Mashery API key obtained from Brivo Developer Portal",
            "example" : "brivo_api_key_12345",
            "nullable" : true
          },
          "param" : {
            "type" : "string",
            "description" : "Additional OAuth parameter",
            "example" : "state_param",
            "nullable" : true
          },
          "requestUrl" : {
            "type" : "string",
            "description" : "OAuth request URL",
            "example" : "https://oauth.provider.com/auth",
            "nullable" : true
          },
          "rhombusOrgUserUuid" : {
            "type" : "string",
            "description" : "Rhombus organization user UUID",
            "nullable" : true
          }
        }
      },
      "Integration_InitiateCallbackAuthRequest" : {
        "type" : "object",
        "properties" : {
          "rhombusOrgUserUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_InitiateCallbackAuthResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "integratorUrl" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_InitiateOAuthWSRequest" : {
        "type" : "object",
        "description" : "Request object for initiating OAuth authentication flow.",
        "properties" : {
          "param" : {
            "type" : "string",
            "description" : "Additional OAuth parameter",
            "example" : "state_param",
            "nullable" : true
          },
          "requestUrl" : {
            "type" : "string",
            "description" : "OAuth request URL",
            "example" : "https://oauth.provider.com/auth",
            "nullable" : true
          },
          "rhombusOrgUserUuid" : {
            "type" : "string",
            "description" : "Rhombus organization user UUID",
            "nullable" : true
          }
        }
      },
      "Integration_InitiateOAuthWSResponse" : {
        "type" : "object",
        "description" : "Response object containing OAuth redirect URL.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "redirectUrl" : {
            "type" : "string",
            "description" : "OAuth redirect URL for authentication",
            "example" : "https://oauth.provider.com/auth?client_id=123&redirect_uri=callback",
            "nullable" : true
          }
        }
      },
      "Integration_RefreshGoogleAccessTokenWSRequest" : {
        "type" : "object",
        "description" : "Request object for refreshing Google access token.",
        "properties" : {
          "refreshUserToken" : {
            "type" : "boolean",
            "description" : "Whether to refresh the user token",
            "example" : true,
            "nullable" : true
          }
        }
      },
      "Integration_RefreshGoogleAccessTokenWSResponse" : {
        "type" : "object",
        "description" : "Response object containing refreshed Google access token.",
        "properties" : {
          "accessToken" : {
            "type" : "string",
            "description" : "Refreshed Google access token",
            "example" : "ya29.a0AfH6SMC...",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_RevokeApiTokenWSRequest" : {
        "type" : "object",
        "description" : "Request object for revoking an API token.",
        "properties" : {
          "tokenUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Integration_RevokeApiTokenWSResponse" : {
        "type" : "object",
        "description" : "Response object for revoking an API token.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_RevokeGoogleDriveAccessWSRequest" : {
        "type" : "object",
        "description" : "Request object for revoking Google Drive access permissions.",
        "properties" : {
          "revokeUserAccount" : {
            "type" : "boolean",
            "description" : "If set to true, revokes Rhombus Systems access to a user's Google Drive account, otherwise revokes Rhombus Systems access to the org's shared Google Drive account",
            "example" : true,
            "nullable" : true
          }
        }
      },
      "Integration_SubmitApiTokenApplicationWSRequest" : {
        "type" : "object",
        "description" : "Request object for submitting an API token application.",
        "properties" : {
          "authType" : {
            "$ref" : "#/components/schemas/ApiTokenAuthTypeEnum"
          },
          "csr" : {
            "type" : "string",
            "description" : "Certificate Signing Request (CSR) for token authentication",
            "example" : "-----BEGIN CERTIFICATE REQUEST-----...",
            "nullable" : true
          },
          "displayName" : {
            "type" : "string",
            "description" : "Display name for the API token",
            "example" : "Production API Token",
            "nullable" : true
          },
          "permissionGroupUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        },
        "required" : [ "permissionGroupUuid" ]
      },
      "Integration_SubmitApiTokenApplicationWSResponse" : {
        "type" : "object",
        "properties" : {
          "apiKey" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "cert" : {
            "type" : "string",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "validCSR" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Integration_SubscribeZapierWebhookWSRequest" : {
        "type" : "object",
        "description" : "Request object for subscribing to Zapier webhook events.",
        "properties" : {
          "backoffSec" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Backoff time in seconds",
            "example" : 30,
            "nullable" : true
          },
          "doorState" : {
            "type" : "string",
            "description" : "Door state for door sensor webhooks",
            "enum" : [ "OPEN", "CLOSED", "AJAR" ],
            "nullable" : true
          },
          "hookUrl" : {
            "type" : "string",
            "description" : "Zapier webhook URL",
            "example" : "https://hooks.zapier.com/hooks/catch/123456/abc123/",
            "nullable" : true
          },
          "humidityLowerThreshold" : {
            "type" : "number",
            "format" : "float",
            "description" : "Lower humidity threshold for environmental sensors",
            "example" : 30.0,
            "nullable" : true
          },
          "humidityUpperThreshold" : {
            "type" : "number",
            "format" : "float",
            "description" : "Upper humidity threshold for environmental sensors",
            "example" : 80.0,
            "nullable" : true
          },
          "tempLowerThreshold" : {
            "type" : "number",
            "format" : "float",
            "description" : "Lower temperature threshold for environmental sensors",
            "example" : 65.0,
            "nullable" : true
          },
          "tempUpperThreshold" : {
            "type" : "number",
            "format" : "float",
            "description" : "Upper temperature threshold for environmental sensors",
            "example" : 85.5,
            "nullable" : true
          },
          "uuids" : {
            "type" : "array",
            "description" : "Set of device UUIDs to monitor",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "zapEnum" : {
            "$ref" : "#/components/schemas/ZapierEnum"
          }
        }
      },
      "Integration_SubscribeZapierWebhookWSResponse" : {
        "type" : "object",
        "description" : "Response object for Zapier webhook subscription.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "webhookId" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Integration_TogglePowerWSRequest" : {
        "type" : "object",
        "description" : "Request object for toggling device power state.",
        "properties" : {
          "deviceId" : {
            "type" : "string",
            "description" : "Device ID to toggle power for",
            "example" : "device_12345",
            "nullable" : true
          },
          "targetState" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Target power state (0=off, 1=on)",
            "example" : 1,
            "nullable" : true
          }
        }
      },
      "Integration_TogglePowerWSResponse" : {
        "type" : "object",
        "description" : "Response object for device power toggle operations.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "newState" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "New power state after toggle (0=off, 1=on)",
            "example" : 1,
            "nullable" : true
          }
        }
      },
      "Integration_UnlockDoorWSResponse" : {
        "type" : "object",
        "description" : "Response object for door unlock operations.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_UnlockGeneaDoorWSRequest" : {
        "type" : "object",
        "description" : "Request object for unlocking a Genea door.",
        "properties" : {
          "cameraUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "doorId" : {
            "type" : "string",
            "description" : "Genea door ID to unlock",
            "example" : "door_12345",
            "nullable" : true
          }
        }
      },
      "Integration_UnlockIntegrationGenericDoorWSRequest" : {
        "type" : "object",
        "properties" : {
          "cameraUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "doorId" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_UnlockKisiDoorWSRequest" : {
        "type" : "object",
        "description" : "Request object for unlocking a Kisi door.",
        "properties" : {
          "cameraUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "doorId" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Kisi door ID to unlock",
            "example" : 12345,
            "nullable" : true
          },
          "placeId" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Kisi place ID representing the physical space",
            "example" : 67890,
            "nullable" : true
          }
        }
      },
      "Integration_UnlockOpenpathDoorWSRequest" : {
        "type" : "object",
        "description" : "Request object for unlocking an Openpath door.",
        "properties" : {
          "cameraUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "doorId" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Openpath door ID to unlock",
            "example" : 12345,
            "nullable" : true
          }
        }
      },
      "Integration_UnsubscribeZapierWebhookWSRequest" : {
        "type" : "object",
        "description" : "Request object for unsubscribing from a Zapier webhook.",
        "properties" : {
          "webhookId" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Integration_UpdateAmtIntegrationWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating AMT access control integration settings.",
        "properties" : {
          "amtSettings" : {
            "$ref" : "#/components/schemas/AmtSettings"
          }
        }
      },
      "Integration_UpdateAperioIntegrationWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating Aperio integration configuration.",
        "properties" : {
          "aperioSettings" : {
            "$ref" : "#/components/schemas/IAperioType"
          }
        },
        "required" : [ "aperioSettings" ]
      },
      "Integration_UpdateApiTokenWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating API token properties.",
        "properties" : {
          "newDisplayName" : {
            "type" : "string",
            "description" : "New display name for the API token",
            "example" : "Updated API Token",
            "nullable" : true
          },
          "newPermissionGroupUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "tokenUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Integration_UpdateApiTokenWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_UpdateAvigilonAltaV2WSRequest" : {
        "type" : "object",
        "description" : "Request object for updating Avigilon Alta V2 integration settings.",
        "properties" : {
          "avigilonAltaSettings" : {
            "$ref" : "#/components/schemas/IAvigilonAltaType"
          }
        }
      },
      "Integration_UpdateAwsIntegrationWSRequest" : {
        "type" : "object",
        "properties" : {
          "awsSettings" : {
            "$ref" : "#/components/schemas/AwsSettings"
          }
        }
      },
      "Integration_UpdateBoxIntegrationWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating Box file storage integration settings.",
        "properties" : {
          "boxSettings" : {
            "$ref" : "#/components/schemas/BoxSettings"
          }
        }
      },
      "Integration_UpdateBrivoIntegrationV2WSRequest" : {
        "type" : "object",
        "properties" : {
          "brivoSettings" : {
            "$ref" : "#/components/schemas/IBrivoType"
          }
        }
      },
      "Integration_UpdateBrivoIntegrationWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating Brivo access control integration settings.",
        "properties" : {
          "brivoSettings" : {
            "$ref" : "#/components/schemas/BrivoSettings"
          }
        }
      },
      "Integration_UpdateButterflymxIntegrationV2WSRequest" : {
        "type" : "object",
        "description" : "Request object for updating ButterflyMX V2 integration settings with enhanced intercom features.",
        "properties" : {
          "butterflymxSettings" : {
            "$ref" : "#/components/schemas/IButterflyMXType"
          }
        }
      },
      "Integration_UpdateButterflymxIntegrationWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating ButterflyMX intercom integration settings.",
        "properties" : {
          "settings" : {
            "$ref" : "#/components/schemas/ButterflyMXSettings"
          }
        }
      },
      "Integration_UpdateDeviceIntegrationWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating device integration settings and device properties.",
        "properties" : {
          "createNewDevice" : {
            "type" : "boolean",
            "description" : "Whether to create a new device",
            "example" : true,
            "nullable" : true
          },
          "deviceIntegrationSettings" : {
            "$ref" : "#/components/schemas/IDeviceIntegrationType"
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "description" : "Latitude coordinate of the device location",
            "example" : 37.7749,
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "description" : "Longitude coordinate of the device location",
            "example" : -122.4194,
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the device",
            "example" : "Main Entrance Camera",
            "nullable" : true
          },
          "updateDevice" : {
            "type" : "boolean",
            "description" : "Whether to update an existing device",
            "example" : false,
            "nullable" : true
          },
          "updateDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Integration_UpdateDiceIntegrationWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating Dice access control integration settings.",
        "properties" : {
          "diceSettings" : {
            "$ref" : "#/components/schemas/IDiceType"
          }
        }
      },
      "Integration_UpdateDropboxIntegrationWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating Dropbox integration settings.",
        "properties" : {
          "dropboxSettings" : {
            "$ref" : "#/components/schemas/DropboxSettingsV2"
          }
        }
      },
      "Integration_UpdateEmailIntegrationWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating email notification integration settings.",
        "properties" : {
          "emailSettings" : {
            "$ref" : "#/components/schemas/EmailSettings"
          }
        }
      },
      "Integration_UpdateEnvoyIntegrationV2WSRequest" : {
        "type" : "object",
        "description" : "Request object for updating Envoy V2 integration settings with enhanced visitor management features.",
        "properties" : {
          "envoySettings" : {
            "$ref" : "#/components/schemas/IEnvoyType"
          }
        }
      },
      "Integration_UpdateEnvoyIntegrationWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating Envoy visitor management integration settings.",
        "properties" : {
          "envoySettings" : {
            "$ref" : "#/components/schemas/EnvoySettings"
          }
        }
      },
      "Integration_UpdateFlicIntegrationWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating Flic smart button integration settings.",
        "properties" : {
          "flicSettings" : {
            "$ref" : "#/components/schemas/IFlicType"
          }
        }
      },
      "Integration_UpdateGeneaIntegrationV2WSRequest" : {
        "type" : "object",
        "description" : "Request object for updating Genea V2 integration settings with enhanced access control features.",
        "properties" : {
          "geneaSettings" : {
            "$ref" : "#/components/schemas/IGeneaType"
          }
        }
      },
      "Integration_UpdateGeneaIntegrationWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating Genea access control integration settings.",
        "properties" : {
          "geneaSettings" : {
            "$ref" : "#/components/schemas/GeneaSettings"
          }
        }
      },
      "Integration_UpdateGoogleIntegrationV2WSRequest" : {
        "type" : "object",
        "description" : "Request object for updating Google V2 integration settings with enhanced features.",
        "properties" : {
          "googleSettings" : {
            "$ref" : "#/components/schemas/IGoogleType"
          }
        }
      },
      "Integration_UpdateGoogleIntegrationWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating Google integration settings.",
        "properties" : {
          "googleSettings" : {
            "$ref" : "#/components/schemas/GoogleSettings"
          }
        }
      },
      "Integration_UpdateGuestByTokenWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating guest information using a token.",
        "properties" : {
          "fileName" : {
            "type" : "string",
            "description" : "File name for guest-related data",
            "example" : "guest_data.csv",
            "nullable" : true
          },
          "guest" : {
            "$ref" : "#/components/schemas/Guest"
          },
          "token" : {
            "type" : "string",
            "description" : "Token for guest identification and authentication",
            "example" : "guest_token_12345",
            "nullable" : true
          }
        }
      },
      "Integration_UpdateGuestManagementIntegrationWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating guest management integration settings.",
        "properties" : {
          "guestManagementSettings" : {
            "$ref" : "#/components/schemas/IGuestManagementType"
          }
        }
      },
      "Integration_UpdateGuestWSRequest" : {
        "type" : "object",
        "properties" : {
          "fileName" : {
            "type" : "string",
            "description" : "File name for guest-related data",
            "example" : "guest_data.csv",
            "nullable" : true
          },
          "guest" : {
            "$ref" : "#/components/schemas/Guest"
          },
          "sendGuestEmail" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Integration_UpdateHaloIntegrationWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating Halo access control integration settings.",
        "properties" : {
          "haloSettings" : {
            "$ref" : "#/components/schemas/HaloSettings"
          }
        }
      },
      "Integration_UpdateInformacastIntegrationRequest" : {
        "type" : "object",
        "properties" : {
          "informacastSettings" : {
            "$ref" : "#/components/schemas/IInformacastType"
          }
        }
      },
      "Integration_UpdateInnerRangeIntegrationWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating InnerRange access control integration settings.",
        "properties" : {
          "innerRangeSettings" : {
            "$ref" : "#/components/schemas/IInnerRangeType"
          }
        }
      },
      "Integration_UpdateIntuifaceIntegrationWSRequest" : {
        "type" : "object",
        "properties" : {
          "settings" : {
            "$ref" : "#/components/schemas/IntuifaceSettings"
          }
        }
      },
      "Integration_UpdateKisiIntegrationV2WSRequest" : {
        "type" : "object",
        "description" : "Request object for updating Kisi V2 integration settings with enhanced features.",
        "properties" : {
          "kisiSettings" : {
            "$ref" : "#/components/schemas/IKisiType"
          }
        }
      },
      "Integration_UpdateKisiIntegrationWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating Kisi access control integration settings.",
        "properties" : {
          "kisiSettings" : {
            "$ref" : "#/components/schemas/KisiSettings"
          }
        }
      },
      "Integration_UpdateLumeoIntegrationWSRequest" : {
        "type" : "object",
        "properties" : {
          "lumeoSettings" : {
            "$ref" : "#/components/schemas/ILumeoType"
          }
        }
      },
      "Integration_UpdateMattermostIntegrationWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating Mattermost team communication integration settings.",
        "properties" : {
          "mattermostSettings" : {
            "$ref" : "#/components/schemas/MattermostSettings"
          }
        }
      },
      "Integration_UpdateMicrosoftTeamsBotForTeamWSRequest" : {
        "type" : "object",
        "properties" : {
          "teamId" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_UpdateMicrosoftTeamsIntegrationV2WSRequest" : {
        "type" : "object",
        "properties" : {
          "microsoftTeamsSettings" : {
            "$ref" : "#/components/schemas/IMicrosoftTeamsType"
          },
          "teamsToUpdate" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Integration_UpdateMicrosoftTeamsIntegrationWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating Microsoft Teams integration settings.",
        "properties" : {
          "microsoftTeamsSettings" : {
            "$ref" : "#/components/schemas/MicrosoftTeamsSettings"
          }
        }
      },
      "Integration_UpdateNineOneOneCellularIntegrationWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating 911 Cellular emergency notification integration settings.",
        "properties" : {
          "nineOneOneCellularSettings" : {
            "$ref" : "#/components/schemas/INineOneOneCellularType"
          }
        }
      },
      "Integration_UpdateNoonlightSettingsWSRequest" : {
        "type" : "object",
        "properties" : {
          "noonlightSettings" : {
            "$ref" : "#/components/schemas/NoonlightSettings"
          }
        }
      },
      "Integration_UpdateOffice365IntegrationWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating Office 365 integration settings.",
        "properties" : {
          "office365Settings" : {
            "$ref" : "#/components/schemas/Office365Settings"
          }
        }
      },
      "Integration_UpdateOmnialertIntegrationWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating Omnialert emergency notification integration settings.",
        "properties" : {
          "omnialertSettings" : {
            "$ref" : "#/components/schemas/IOmnialertType"
          }
        }
      },
      "Integration_UpdateOmnialertIntegrationWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "webhookToken" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Integration_UpdateOpenAIIntegrationRequest" : {
        "type" : "object",
        "properties" : {
          "openAISettings" : {
            "$ref" : "#/components/schemas/IOpenAIType"
          }
        }
      },
      "Integration_UpdateOpenpathIntegrationWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating Openpath access control integration settings.",
        "properties" : {
          "openpathSettings" : {
            "$ref" : "#/components/schemas/OpenpathSettings"
          }
        }
      },
      "Integration_UpdateOpentechAllianceIntegrationV2WSRequest" : {
        "type" : "object",
        "description" : "Request object for updating OpenTech Alliance V2 integration settings with enhanced features.",
        "properties" : {
          "opentechAllianceSettings" : {
            "$ref" : "#/components/schemas/IOpentechAllianceType"
          }
        }
      },
      "Integration_UpdateOpentechAllianceIntegrationWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating OpenTech Alliance integration settings.",
        "properties" : {
          "opentechAllianceSettings" : {
            "$ref" : "#/components/schemas/OpentechAllianceSettings"
          }
        }
      },
      "Integration_UpdateOrgIntegrationsWSResponse" : {
        "type" : "object",
        "description" : "Response object for updating organization integrations.",
        "properties" : {
          "authError" : {
            "type" : "boolean",
            "description" : "Whether an authentication error occurred during update",
            "example" : false,
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "failedGuids" : {
            "type" : "array",
            "description" : "List of GUIDs that failed to update",
            "items" : {
              "type" : "string",
              "description" : "List of GUIDs that failed to update",
              "nullable" : true
            },
            "nullable" : true
          },
          "misconfiguredDoors" : {
            "type" : "array",
            "description" : "List of door names that are assigned to multiple Rhombus locations",
            "items" : {
              "type" : "string",
              "description" : "List of door names that are assigned to multiple Rhombus locations",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Integration_UpdatePagerDutyIntegrationWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating PagerDuty incident management integration settings.",
        "properties" : {
          "pagerDutySettings" : {
            "$ref" : "#/components/schemas/PagerDutySettings"
          }
        }
      },
      "Integration_UpdatePdkIntegrationV2WSRequest" : {
        "type" : "object",
        "description" : "Request object for updating Pro Data Key (PDK) V2 integration settings with enhanced access control features.",
        "properties" : {
          "pdkSettings" : {
            "$ref" : "#/components/schemas/IProDataKeyType"
          }
        }
      },
      "Integration_UpdatePdkIntegrationWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating Pro Data Key (PDK) integration settings.",
        "properties" : {
          "pdkSettings" : {
            "$ref" : "#/components/schemas/ProDataKeySettings"
          }
        }
      },
      "Integration_UpdatePimlocIntegrationRequest" : {
        "type" : "object",
        "properties" : {
          "pimlocSettings" : {
            "$ref" : "#/components/schemas/IPimlocType"
          }
        }
      },
      "Integration_UpdatePlaceOsSettingsV2WSRequest" : {
        "type" : "object",
        "description" : "Request object for updating PlaceOS V2 integration settings for smart building management.",
        "properties" : {
          "placeOsSettings" : {
            "$ref" : "#/components/schemas/IPlaceOsType"
          }
        }
      },
      "Integration_UpdatePlaceOsSettingsWSRequest" : {
        "type" : "object",
        "properties" : {
          "placeOsSettings" : {
            "$ref" : "#/components/schemas/PlaceOsSettings"
          }
        }
      },
      "Integration_UpdateRaptorIntegrationRequest" : {
        "type" : "object",
        "properties" : {
          "raptorSettings" : {
            "$ref" : "#/components/schemas/IRaptorType"
          }
        }
      },
      "Integration_UpdateServiceNowIntegrationWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating ServiceNow IT service management integration settings.",
        "properties" : {
          "serviceNowSettings" : {
            "$ref" : "#/components/schemas/ServiceNowSettings"
          }
        }
      },
      "Integration_UpdateShellyIntegrationWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating Shelly smart device integration settings.",
        "properties" : {
          "shellySettings" : {
            "$ref" : "#/components/schemas/IShellyType"
          }
        }
      },
      "Integration_UpdateSlackIntegrationV2WSRequest" : {
        "type" : "object",
        "description" : "Request object for updating Slack integration V2 settings with enhanced user management.",
        "properties" : {
          "adminRequest" : {
            "type" : "boolean",
            "description" : "Whether this is an admin request",
            "example" : true,
            "nullable" : true
          },
          "requestUrl" : {
            "type" : "string",
            "description" : "Request URL for Slack OAuth",
            "example" : "https://slack.com/oauth/v2/authorize?client_id=123&scope=...",
            "nullable" : true
          },
          "revokeUserAccessToken" : {
            "type" : "boolean",
            "description" : "Whether to revoke user access token",
            "example" : false,
            "nullable" : true
          },
          "rhombusOrgUserUuid" : {
            "type" : "string",
            "description" : "Rhombus organization user UUID",
            "example" : "user-uuid-12345",
            "nullable" : true
          },
          "slackSettingsV2" : {
            "$ref" : "#/components/schemas/SlackSettingsV2"
          },
          "userAssociate" : {
            "type" : "boolean",
            "description" : "Whether to associate user",
            "example" : true,
            "nullable" : true
          },
          "userRequest" : {
            "type" : "boolean",
            "description" : "Whether this is a user request",
            "example" : false,
            "nullable" : true
          }
        },
        "required" : [ "requestUrl" ]
      },
      "Integration_UpdateSlackIntegrationWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating Slack integration settings.",
        "properties" : {
          "slackSettings" : {
            "$ref" : "#/components/schemas/SlackSettings"
          }
        }
      },
      "Integration_UpdateToastIntegrationV2WSRequest" : {
        "type" : "object",
        "properties" : {
          "restaurantGuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "toastSettings" : {
            "$ref" : "#/components/schemas/IToastType"
          }
        }
      },
      "Integration_UpdateToastIntegrationWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating Toast POS integration settings.",
        "properties" : {
          "toastSettings" : {
            "$ref" : "#/components/schemas/ToastSettings"
          }
        }
      },
      "Integration_UpdateWebhookIntegrationV2WSRequest" : {
        "type" : "object",
        "description" : "Request object for updating webhook V2 integration settings with enhanced configuration options.",
        "properties" : {
          "disabled" : {
            "type" : "boolean",
            "description" : "Whether the webhook is disabled",
            "example" : false,
            "nullable" : true
          },
          "isDiagnostic" : {
            "type" : "boolean",
            "description" : "Whether this is a diagnostic webhook",
            "example" : false,
            "nullable" : true
          },
          "updatedWebhookSettings" : {
            "$ref" : "#/components/schemas/IWebhooksType"
          },
          "webhookUrl" : {
            "type" : "string",
            "description" : "Webhook URL for receiving notifications",
            "example" : "https://api.example.com/webhook/rhombus",
            "nullable" : true
          }
        }
      },
      "Integration_UpdateWebhookIntegrationV2WSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "webhookSecret" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_UpdateWebhookIntegrationWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating webhook integration settings.",
        "properties" : {
          "webhookSettings" : {
            "$ref" : "#/components/schemas/WebhookSettings"
          }
        }
      },
      "Integration_ValidateKisiApiKeyWSRequest" : {
        "type" : "object",
        "description" : "Request object for validating Kisi API key.",
        "properties" : {
          "apiKey" : {
            "type" : "string",
            "description" : "Kisi API key to validate",
            "example" : "kisi_api_key_123456789",
            "nullable" : true
          }
        }
      },
      "Integration_aperio_AperioDeviceView" : {
        "type" : "object",
        "description" : "View object containing Aperio device information.",
        "properties" : {
          "aperioId" : {
            "type" : "array",
            "description" : "Aperio device ID",
            "items" : {
              "type" : "string",
              "format" : "byte",
              "description" : "Aperio device ID",
              "nullable" : true
            },
            "nullable" : true
          },
          "gatewayId" : {
            "type" : "array",
            "description" : "Gateway ID associated with the device",
            "items" : {
              "type" : "string",
              "format" : "byte",
              "description" : "Gateway ID associated with the device",
              "nullable" : true
            },
            "nullable" : true
          },
          "lastSeenMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Timestamp when the device was last seen",
            "example" : 1642233600000,
            "nullable" : true
          },
          "rawType" : {
            "type" : "string",
            "format" : "byte",
            "description" : "Raw device type",
            "example" : "MQ==",
            "nullable" : true
          }
        }
      },
      "Integration_aperio_AperioDoorView" : {
        "type" : "object",
        "description" : "View object containing Aperio door information and status.",
        "properties" : {
          "accessControlledDoorUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "aperioDoorDeviceId" : {
            "type" : "string",
            "description" : "Aperio door device ID",
            "nullable" : true
          },
          "aperioGatewayId" : {
            "type" : "string",
            "description" : "Aperio gateway ID that brokers communication with this door",
            "nullable" : true
          },
          "aperioId" : {
            "type" : "string",
            "description" : "Aperio door ID (device group ID) for controlling the locking mechanism",
            "nullable" : true
          },
          "connected" : {
            "type" : "boolean",
            "description" : "Whether the Aperio door is currently connected",
            "example" : true,
            "nullable" : true
          },
          "doorExtensionComponentId" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "dtcs" : {
            "type" : "array",
            "description" : "List of diagnostic trouble codes (DTCs) for the door",
            "items" : {
              "$ref" : "#/components/schemas/Integration_aperio_DtcInfoView"
            },
            "nullable" : true
          },
          "lastSeenMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Timestamp when the door was last seen",
            "example" : 1642233600000,
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the Aperio door",
            "example" : "Main Entrance",
            "nullable" : true
          },
          "rawActivatorState" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "rawDoorMode" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "rawHandleState" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "rawKeyCylinderState" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "rawTamperState" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "removed" : {
            "type" : "boolean",
            "description" : "Whether the door has been removed from the gateway",
            "example" : false,
            "nullable" : true
          },
          "stateUpdateEventTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "status" : {
            "$ref" : "#/components/schemas/Integration_aperio_AperioIntegrationStatus"
          }
        }
      },
      "Integration_aperio_AperioGatewayView" : {
        "type" : "object",
        "description" : "View object containing Aperio gateway information and status.",
        "properties" : {
          "aperioGatewayId" : {
            "type" : "string",
            "description" : "Aperio gateway ID (device interface unit ID)",
            "nullable" : true
          },
          "baseType" : {
            "$ref" : "#/components/schemas/ComponentBaseEnumType"
          },
          "componentUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "connected" : {
            "type" : "boolean",
            "description" : "Whether the Aperio gateway is currently connected",
            "example" : true,
            "nullable" : true
          },
          "devices" : {
            "type" : "array",
            "description" : "List of Aperio devices associated with this gateway",
            "items" : {
              "$ref" : "#/components/schemas/Integration_aperio_AperioDeviceView"
            },
            "nullable" : true
          },
          "doors" : {
            "type" : "array",
            "description" : "List of Aperio doors associated with this gateway",
            "items" : {
              "$ref" : "#/components/schemas/Integration_aperio_AperioDoorView"
            },
            "nullable" : true
          },
          "dtcs" : {
            "type" : "array",
            "description" : "List of diagnostic trouble codes (DTCs) for the gateway",
            "items" : {
              "$ref" : "#/components/schemas/Integration_aperio_DtcInfoView"
            },
            "nullable" : true
          },
          "expectedOemCode" : {
            "type" : "string",
            "description" : "Expected OEM code for the gateway (only available after system configuration)",
            "nullable" : true
          },
          "firmwareVersion" : {
            "type" : "string",
            "description" : "Firmware version of the Aperio gateway",
            "example" : "1.2.3",
            "nullable" : true
          },
          "hardwareModel" : {
            "type" : "string",
            "nullable" : true
          },
          "hwVersion" : {
            "type" : "array",
            "description" : "Hardware version of the Aperio gateway",
            "items" : {
              "type" : "string",
              "format" : "byte",
              "description" : "Hardware version of the Aperio gateway",
              "nullable" : true
            },
            "nullable" : true
          },
          "ipAddress" : {
            "type" : "string",
            "description" : "IP address of the Aperio gateway",
            "example" : "192.168.1.100",
            "nullable" : true
          },
          "lastSeenMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Timestamp when the gateway was last seen",
            "example" : 1642233600000,
            "nullable" : true
          },
          "protocolVersion" : {
            "type" : "string",
            "description" : "Protocol version of the Aperio gateway",
            "example" : "1.0.0",
            "nullable" : true
          },
          "rawTamperState" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Raw tamper state of the Aperio gateway",
            "example" : 0,
            "nullable" : true
          },
          "reportedOemCode" : {
            "type" : "string",
            "description" : "OEM code reported by the gateway for authenticity verification",
            "nullable" : true
          },
          "status" : {
            "$ref" : "#/components/schemas/Integration_aperio_AperioIntegrationStatus"
          }
        }
      },
      "Integration_aperio_AperioIntegrationStatus" : {
        "type" : "string",
        "description" : "Integration status of the Aperio gateway",
        "enum" : [ "UNKNOWN", "DISCOVERED", "PAIRING", "CONFIGURED", "ERROR_OEM", "ERROR_OWNER" ]
      },
      "Integration_aperio_AperioRhombusDoorControllerView" : {
        "type" : "object",
        "description" : "View object containing Rhombus door controller information for Aperio integration.",
        "properties" : {
          "aperioGateways" : {
            "type" : "array",
            "description" : "List of Aperio gateways associated with this door controller",
            "items" : {
              "$ref" : "#/components/schemas/Integration_aperio_AperioGatewayView"
            },
            "nullable" : true
          },
          "deviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "hwId" : {
            "type" : "string",
            "description" : "Hardware ID of the Rhombus door controller",
            "example" : "DC001",
            "nullable" : true
          },
          "hwVariation" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the Rhombus door controller",
            "example" : "Main Door Controller",
            "nullable" : true
          },
          "serialNumber" : {
            "type" : "string",
            "description" : "Serial number of the Rhombus door controller",
            "example" : "RHDC123456789",
            "nullable" : true
          }
        }
      },
      "Integration_aperio_ClearAperioDtcWSRequest" : {
        "type" : "object",
        "description" : "Request object for clearing Aperio DTC (Diagnostic Trouble Code) from a device.",
        "properties" : {
          "aperioDeviceId" : {
            "type" : "string",
            "description" : "The Aperio device id (hex string) of the device to which this command is issued.",
            "nullable" : true
          },
          "aperioGatewayId" : {
            "type" : "string",
            "description" : "The Aperio device id (hex string) of the gateway hosting the device.",
            "nullable" : true
          },
          "controllerUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "registeredComponentUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        },
        "required" : [ "aperioDeviceId", "aperioGatewayId", "controllerUuid" ]
      },
      "Integration_aperio_ClearAperioDtcWSResponse" : {
        "type" : "object",
        "description" : "Response object for clearing Aperio DTC (Diagnostic Trouble Code) from a device.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Integration_aperio_DownloadCertificateWSRequest" : {
        "type" : "object",
        "description" : "Request object for downloading Aperio certificate.",
        "properties" : {
          "ownerDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        },
        "required" : [ "ownerDeviceUuid" ]
      },
      "Integration_aperio_DtcInfoView" : {
        "type" : "object",
        "description" : "View object containing Aperio diagnostic trouble code (DTC) information.",
        "properties" : {
          "code" : {
            "type" : "array",
            "description" : "DTC code as byte array",
            "items" : {
              "type" : "string",
              "format" : "byte",
              "description" : "DTC code as byte array",
              "nullable" : true
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "description" : "Whether the DTC represents an error condition",
            "example" : true,
            "nullable" : true
          },
          "failing" : {
            "type" : "boolean",
            "description" : "Whether the DTC is currently failing",
            "example" : true,
            "nullable" : true
          },
          "hasFailed" : {
            "type" : "boolean",
            "description" : "Whether the DTC has failed in the past",
            "example" : false,
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Display name of the DTC",
            "example" : "Communication Error",
            "nullable" : true
          },
          "testCompleted" : {
            "type" : "boolean",
            "description" : "Whether the DTC test has completed",
            "example" : true,
            "nullable" : true
          },
          "time" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Timestamp when the DTC was reported (seconds since 1970-01-01)",
            "example" : 1642233600,
            "nullable" : true
          }
        }
      },
      "Integration_aperio_RebootAperioGatewayWSRequest" : {
        "type" : "object",
        "description" : "Request object for rebooting an Aperio gateway.",
        "properties" : {
          "aperioGatewayId" : {
            "type" : "string",
            "description" : "The Aperio device id (hex string) of the gateway.",
            "nullable" : true
          },
          "controllerUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        },
        "required" : [ "aperioGatewayId", "controllerUuid" ]
      },
      "Integration_aperio_RebootAperioGatewayWSResponse" : {
        "type" : "object",
        "description" : "Response object for rebooting an Aperio gateway.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Internal_AccessControlDoorOnlyWSRequest" : {
        "type" : "object",
        "description" : "Request object for acd only migration.",
        "properties" : {
          "accountDataMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Internal_AccessControlDoorOnlyWSRequest_AccountData"
            },
            "description" : "Map of account data for alarm only",
            "nullable" : true
          }
        }
      },
      "Internal_AccessControlDoorOnlyWSRequest_AccountData" : {
        "type" : "object",
        "description" : "Account data for alarm only.",
        "properties" : {
          "opportunityIds" : {
            "type" : "array",
            "description" : "Set of opportunity IDs",
            "items" : {
              "type" : "string",
              "description" : "Set of opportunity IDs",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "orgUuid" : {
            "type" : "string",
            "description" : "UUID of the organization",
            "example" : "org-uuid-12345",
            "nullable" : true
          }
        }
      },
      "Internal_AccessControlDoorOnlyWSResponse" : {
        "type" : "object",
        "description" : "Response object for enterprise devices only operations.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "failedAccounts" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "description" : "Map of failed account identifiers to error messages",
              "nullable" : true
            },
            "description" : "Map of failed account identifiers to error messages",
            "nullable" : true
          },
          "successfulAccounts" : {
            "type" : "array",
            "description" : "Set of successful account identifiers",
            "items" : {
              "type" : "string",
              "description" : "Set of successful account identifiers",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "Internal_AddPartnerAsSuperAdminWSRequest" : {
        "type" : "object",
        "description" : "Request object for adding a partner as a super admin to an organization.",
        "properties" : {
          "loginAccessAllowed" : {
            "type" : "boolean",
            "description" : "Whether login access is allowed for the partner",
            "example" : true,
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "partnerEmail" : {
            "type" : "string",
            "description" : "Email address of the partner",
            "example" : "partner@company.com",
            "nullable" : true
          },
          "partnerName" : {
            "type" : "string",
            "description" : "Name of the partner",
            "example" : "Partner Solutions Inc",
            "nullable" : true
          },
          "partnerUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Internal_AddPartnerAsSuperAdminWSResponse" : {
        "type" : "object",
        "description" : "Response object for adding a partner as a super admin to an organization.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "superAdminGroupUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Internal_AlarmMonitoringOnlyWSRequest" : {
        "type" : "object",
        "description" : "Request object for alarm monitoring only migration.",
        "properties" : {
          "accountDataMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Internal_AlarmMonitoringOnlyWSRequest_AccountData"
            },
            "description" : "Map of account data for alarm only",
            "nullable" : true
          }
        }
      },
      "Internal_AlarmMonitoringOnlyWSRequest_AccountData" : {
        "type" : "object",
        "description" : "Account data for alarm only.",
        "properties" : {
          "opportunityIds" : {
            "type" : "array",
            "description" : "Set of opportunity IDs",
            "items" : {
              "type" : "string",
              "description" : "Set of opportunity IDs",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "orgUuid" : {
            "type" : "string",
            "description" : "UUID of the organization",
            "example" : "org-uuid-12345",
            "nullable" : true
          }
        }
      },
      "Internal_AlarmMonitoringOnlyWSResponse" : {
        "type" : "object",
        "description" : "Response object for enterprise devices only operations.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "failedAccounts" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "description" : "Map of failed account identifiers to error messages",
              "nullable" : true
            },
            "description" : "Map of failed account identifiers to error messages",
            "nullable" : true
          },
          "successfulAccounts" : {
            "type" : "array",
            "description" : "Set of successful account identifiers",
            "items" : {
              "type" : "string",
              "description" : "Set of successful account identifiers",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "Internal_CreateCombinedLicensesFromV1WSRequest" : {
        "type" : "object",
        "properties" : {
          "accountDataMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Internal_CreateCombinedLicensesFromV1WSRequest_AccountData"
            },
            "nullable" : true
          }
        }
      },
      "Internal_CreateCombinedLicensesFromV1WSRequest_AccountData" : {
        "type" : "object",
        "properties" : {
          "opportunityIds" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Internal_CreateCombinedLicensesFromV1WSResponse" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "failedAccounts" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "successfulAccounts" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "Internal_CreateOrgWSRequest" : {
        "type" : "object",
        "description" : "Request object for creating a new organization with account owner and company information.",
        "properties" : {
          "accountOwnerEmail" : {
            "type" : "string",
            "description" : "Email address of the account owner",
            "example" : "owner@company.com",
            "nullable" : true
          },
          "accountOwnerName" : {
            "type" : "string",
            "description" : "Full name of the account owner",
            "example" : "John Smith",
            "nullable" : true
          },
          "companyName" : {
            "type" : "string",
            "description" : "Name of the company or organization",
            "example" : "Acme Corporation",
            "nullable" : true
          },
          "developmentPartnerOrg" : {
            "type" : "boolean",
            "description" : "Whether this is a development partner organization",
            "example" : false,
            "nullable" : true
          },
          "licenseEntitlementEnabled" : {
            "type" : "boolean",
            "description" : "Whether license entitlement is enabled for this organization",
            "example" : true,
            "nullable" : true
          },
          "salesforceId" : {
            "type" : "string",
            "description" : "Salesforce ID for the organization (sensitive field)",
            "nullable" : true
          },
          "sendWelcomeEmail" : {
            "type" : "boolean",
            "description" : "Whether to send a welcome email to the account owner",
            "example" : true,
            "nullable" : true
          }
        }
      },
      "Internal_CreateOrgWSResponse" : {
        "type" : "object",
        "description" : "Response object for creating a new organization.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Internal_CreatePartnerOrgWSRequest" : {
        "type" : "object",
        "description" : "Request object for creating a new partner organization.",
        "properties" : {
          "accountOwnerEmail" : {
            "type" : "string",
            "description" : "Email address of the partner account owner",
            "example" : "partner@company.com",
            "nullable" : true
          },
          "accountOwnerName" : {
            "type" : "string",
            "description" : "Full name of the partner account owner",
            "example" : "Sarah Wilson",
            "nullable" : true
          },
          "companyName" : {
            "type" : "string",
            "description" : "Name of the partner company",
            "example" : "Partner Solutions Inc",
            "nullable" : true
          },
          "salesforceId" : {
            "type" : "string",
            "description" : "Salesforce ID for the partner organization (sensitive field)",
            "nullable" : true
          },
          "sendWelcomeEmail" : {
            "type" : "boolean",
            "description" : "Whether to send a welcome email to the partner account owner",
            "example" : true,
            "nullable" : true
          }
        }
      },
      "Internal_CreatePartnerOrgWSResponse" : {
        "type" : "object",
        "description" : "Response object for creating a new partner organization.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Internal_CreateReturnedInventoryAuditReservationWSRequest" : {
        "type" : "object",
        "description" : "Request object for creating a returned inventory audit reservation.",
        "properties" : {
          "clientOrgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "miscNotes" : {
            "type" : "string",
            "description" : "Miscellaneous notes for the inventory audit (deprecated)",
            "example" : "Damaged packaging, missing accessories",
            "nullable" : true
          },
          "partnerOrgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "returnType" : {
            "type" : "string",
            "description" : "Type of return for the inventory audit (deprecated)",
            "enum" : [ "TRIAL", "SALES", "RMA", "OTHER", "UNKNOWN" ],
            "nullable" : true
          },
          "salesforceOppId" : {
            "type" : "string",
            "description" : "Salesforce opportunity ID for the inventory audit",
            "example" : "0061234567890ABC",
            "nullable" : true
          },
          "trackingNumber" : {
            "type" : "string",
            "description" : "Tracking number for the returned inventory (deprecated)",
            "example" : "1Z999AA1234567890",
            "nullable" : true
          }
        }
      },
      "Internal_CreateReturnedInventoryAuditReservationWSResponse" : {
        "type" : "object",
        "description" : "Response object for creating a returned inventory audit reservation.",
        "properties" : {
          "auditReservationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "auditReservationUuids" : {
            "type" : "array",
            "description" : "List of UUIDs for the created audit reservations",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Internal_CreateSupportAuthorityWSRequest" : {
        "type" : "object",
        "description" : "Request object for creating a support authority.",
        "properties" : {
          "supportAuthority" : {
            "$ref" : "#/components/schemas/SupportAuthorityType"
          }
        }
      },
      "Internal_CreateSupportAuthorityWSResponse" : {
        "type" : "object",
        "description" : "Response object for creating a support authority.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "supportAuthorityUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Internal_DeveloperNewsletterEnrollWSRequest" : {
        "type" : "object",
        "description" : "Request object for enrolling in the developer newsletter.",
        "properties" : {
          "developerNewsletter" : {
            "type" : "boolean",
            "description" : "Whether to subscribe to the developer newsletter",
            "example" : true,
            "nullable" : true
          },
          "email" : {
            "type" : "string",
            "description" : "Email address for newsletter subscription",
            "example" : "developer@company.com",
            "nullable" : true
          },
          "firstName" : {
            "type" : "string",
            "description" : "First name of the subscriber",
            "example" : "Alex",
            "nullable" : true
          },
          "isDeveloper" : {
            "type" : "boolean",
            "description" : "Whether the subscriber is a developer",
            "example" : true,
            "nullable" : true
          },
          "lastName" : {
            "type" : "string",
            "description" : "Last name of the subscriber",
            "example" : "Johnson",
            "nullable" : true
          },
          "orgName" : {
            "type" : "string",
            "description" : "Name of the organization",
            "example" : "TechCorp Solutions",
            "nullable" : true
          }
        }
      },
      "Internal_DeveloperNewsletterEnrollWSResponse" : {
        "type" : "object",
        "description" : "Response object for developer newsletter enrollment.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Internal_EntDevicesOnlyWSRequest" : {
        "type" : "object",
        "description" : "Request object for enterprise devices only operations.",
        "properties" : {
          "accountDataMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Internal_EntDevicesOnlyWSRequest_AccountData"
            },
            "description" : "Map of account data for enterprise devices operations",
            "nullable" : true
          }
        }
      },
      "Internal_EntDevicesOnlyWSRequest_AccountData" : {
        "type" : "object",
        "description" : "Account data for enterprise devices operations.",
        "properties" : {
          "opportunityIds" : {
            "type" : "array",
            "description" : "Set of opportunity IDs",
            "items" : {
              "type" : "string",
              "description" : "Set of opportunity IDs",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "orgUuid" : {
            "type" : "string",
            "description" : "UUID of the organization",
            "example" : "org-uuid-12345",
            "nullable" : true
          }
        }
      },
      "Internal_EntDevicesOnlyWSResponse" : {
        "type" : "object",
        "description" : "Response object for enterprise devices only operations.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "failedAccounts" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "description" : "Map of failed account identifiers to error messages",
              "nullable" : true
            },
            "description" : "Map of failed account identifiers to error messages",
            "nullable" : true
          },
          "successfulAccounts" : {
            "type" : "array",
            "description" : "Set of successful account identifiers",
            "items" : {
              "type" : "string",
              "description" : "Set of successful account identifiers",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "Internal_GetSuperAdminGroupUUIDWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting the super admin group UUID for an organization.",
        "properties" : {
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Internal_GetSuperAdminGroupUUIDWSResponse" : {
        "type" : "object",
        "description" : "Response object for getting the super admin group UUID for an organization.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "superAdminGroupUUID" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Internal_GetWarrantyApprovedRMAsWSRequest" : {
        "type" : "object"
      },
      "Internal_GetWarrantyApprovedRMAsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "zendeskTickets" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "Internal_InitiateShipmentWSRequest" : {
        "type" : "object",
        "description" : "Request object for initiating a shipment process.",
        "properties" : {
          "rhombusShipmentInfo" : {
            "$ref" : "#/components/schemas/RhombusShipmentInfoType"
          },
          "salesforceOppId" : {
            "type" : "string",
            "description" : "Salesforce opportunity ID for the shipment",
            "example" : "0061234567890ABC",
            "nullable" : true
          },
          "shipmentCategory" : {
            "type" : "string",
            "description" : "Category of the shipment (deprecated)",
            "enum" : [ "RMA", "PURCHASE_ORDER", "TRIAL", "UNKNOWN" ],
            "nullable" : true
          },
          "shipmentInfo" : {
            "$ref" : "#/components/schemas/OutgoingShipmentInfoType"
          }
        }
      },
      "Internal_ListOrgsWSRequest" : {
        "type" : "object",
        "description" : "Request object for listing organizations."
      },
      "Internal_ListOrgsWSResponse" : {
        "type" : "object",
        "description" : "Response object containing a list of organizations.",
        "properties" : {
          "orgs" : {
            "type" : "array",
            "description" : "List of organizations",
            "items" : {
              "$ref" : "#/components/schemas/OrgV2Type"
            },
            "nullable" : true
          }
        }
      },
      "Internal_ParentLifetimeSpendWSRequest" : {
        "type" : "object",
        "description" : "Request object for retrieving parent lifetime spend information.",
        "properties" : {
          "endAccountIdx" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Ending account index for the range",
            "example" : 100,
            "nullable" : true
          },
          "startAccountIdx" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Starting account index for the range",
            "example" : 0,
            "nullable" : true
          }
        }
      },
      "Internal_ParentLifetimeSpendWSResponse" : {
        "type" : "object",
        "description" : "Response object for parent lifetime spend information.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Internal_ProDevicesOnlyWSRequest" : {
        "type" : "object",
        "description" : "Request object for pro devices only operations.",
        "properties" : {
          "accountDataMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Internal_ProDevicesOnlyWSRequest_AccountData"
            },
            "description" : "Map of account data for pro devices operations",
            "nullable" : true
          }
        }
      },
      "Internal_ProDevicesOnlyWSRequest_AccountData" : {
        "type" : "object",
        "description" : "Account data for pro devices operations.",
        "properties" : {
          "opportunityIds" : {
            "type" : "array",
            "description" : "Set of opportunity IDs",
            "items" : {
              "type" : "string",
              "description" : "Set of opportunity IDs",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "orgUuid" : {
            "type" : "string",
            "description" : "UUID of the organization",
            "example" : "org-uuid-12345",
            "nullable" : true
          }
        }
      },
      "Internal_ProDevicesOnlyWSResponse" : {
        "type" : "object",
        "description" : "Response object for pro devices only operations.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "failedAccounts" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "description" : "Map of failed account identifiers to error messages",
              "nullable" : true
            },
            "description" : "Map of failed account identifiers to error messages",
            "nullable" : true
          },
          "successfulAccounts" : {
            "type" : "array",
            "description" : "Set of successful account identifiers",
            "items" : {
              "type" : "string",
              "description" : "Set of successful account identifiers",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "Internal_RequestHardwareForDevelopmentWSRequest" : {
        "type" : "object",
        "description" : "Request object for requesting hardware for development purposes.",
        "properties" : {
          "address1" : {
            "type" : "string",
            "description" : "Street address line 1",
            "example" : "123 Main Street",
            "nullable" : true
          },
          "city" : {
            "type" : "string",
            "description" : "City name",
            "example" : "San Francisco",
            "nullable" : true
          },
          "companyName" : {
            "type" : "string",
            "description" : "Name of the company or organization",
            "example" : "Tech Startup Inc",
            "nullable" : true
          },
          "country" : {
            "type" : "string",
            "description" : "Country name",
            "example" : "United States",
            "nullable" : true
          },
          "email" : {
            "type" : "string",
            "description" : "Email address of the requester",
            "example" : "developer@company.com",
            "nullable" : true
          },
          "firstName" : {
            "type" : "string",
            "description" : "First name of the requester",
            "example" : "Jane",
            "nullable" : true
          },
          "jobTitle" : {
            "type" : "string",
            "description" : "Job title of the requester",
            "example" : "Senior Developer",
            "nullable" : true
          },
          "lastName" : {
            "type" : "string",
            "description" : "Last name of the requester",
            "example" : "Doe",
            "nullable" : true
          },
          "phoneNumber" : {
            "type" : "string",
            "description" : "Phone number of the requester",
            "example" : "+1-555-123-4567",
            "nullable" : true
          },
          "requestReason" : {
            "type" : "string",
            "description" : "Reason for requesting hardware for development",
            "example" : "Testing new camera integration features",
            "nullable" : true
          },
          "state" : {
            "type" : "string",
            "description" : "State or province",
            "example" : "CA",
            "nullable" : true
          },
          "zip" : {
            "type" : "string",
            "description" : "ZIP or postal code",
            "example" : "94105",
            "nullable" : true
          }
        }
      },
      "Internal_RequestHardwareForDevelopmentWSResponse" : {
        "type" : "object",
        "description" : "Response object for hardware development request.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Internal_SendShipmentShippedEmailWSRequest" : {
        "type" : "object",
        "description" : "Request object for sending shipment shipped email notification.",
        "properties" : {
          "salesforceOppId" : {
            "type" : "string",
            "description" : "Salesforce opportunity ID for the shipment email",
            "example" : "0061234567890ABC",
            "nullable" : true
          }
        }
      },
      "Internal_SetOpportunityForPurchaseOrderWSRequest" : {
        "type" : "object",
        "description" : "Request object for setting opportunity information for a purchase order.",
        "properties" : {
          "cancellationReason" : {
            "type" : "string",
            "description" : "Reason for cancellation if the purchase order is not accepted",
            "example" : "Budget constraints",
            "nullable" : true
          },
          "isAccepted" : {
            "type" : "boolean",
            "description" : "Whether the purchase order is accepted",
            "example" : true,
            "nullable" : true
          },
          "purchaseOrderNumber" : {
            "type" : "string",
            "description" : "Purchase order number",
            "example" : "PO-2024-001",
            "nullable" : true
          },
          "purchaseOrderUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "salesforceOppId" : {
            "type" : "string",
            "description" : "Salesforce opportunity ID (sensitive field)",
            "nullable" : true
          }
        }
      },
      "Internal_SetOpportunityForPurchaseOrderWSResponse" : {
        "type" : "object",
        "description" : "Response object for setting opportunity information for a purchase order.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Internal_ShipmentEmailWSResponse" : {
        "type" : "object",
        "description" : "Response object for shipment email operations.",
        "properties" : {
          "customerShipmentEmailState" : {
            "type" : "string",
            "description" : "State of the customer shipment email",
            "enum" : [ "SHIPPING_CONFIRMATION_SUCCESS", "SHIPPING_CONFIRMATION_FAILURE", "SHIPPING_SHIPPED_SUCCESS", "SHIPPING_SHIPPED_FAILURE", "UNKNOWN" ],
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "legacyMsg" : {
            "type" : "string",
            "description" : "Legacy message for the shipment email",
            "example" : "Shipment has been processed",
            "nullable" : true
          },
          "trackingIdentifier" : {
            "type" : "string",
            "description" : "Tracking identifier for the shipment",
            "example" : "1Z999AA1234567890",
            "nullable" : true
          }
        }
      },
      "Internal_VerifyCanMigrateOrgFromV1WSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "invalidOrgsToErrorMessages" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "IntuifaceSettings" : {
        "type" : "object",
        "properties" : {
          "deviceToTriggerMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/TriggerContent"
            },
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabledTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "enablingUser" : {
            "type" : "string",
            "nullable" : true
          },
          "enablingUserUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "InvalidPhysicalPortConfigType" : {
        "type" : "object",
        "properties" : {
          "boardNum" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "componentUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "portNum" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "reason" : {
            "$ref" : "#/components/schemas/InvalidPhysicalPortReasonEnumType"
          }
        }
      },
      "InvalidPhysicalPortReasonEnumType" : {
        "type" : "string",
        "enum" : [ "NON_EXISTANT_COMPONENT_BOARD_NUM", "NON_EXISTANT_COMPONENT_PORT_NUM", "CONFLICTING_COMPONENT_PORT_TYPES", "COMPONENT_PORT_TYPE_NOT_SUPPORTED_BY_PORT", "MAX_COMPONENTS_PER_PORT_TYPE_EXCEEDED" ]
      },
      "InvoiceType" : {
        "type" : "object",
        "description" : "Invoice details and information",
        "properties" : {
          "addOnLicenseInvoices" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AddOnLicenseInvoiceType"
            },
            "nullable" : true
          },
          "additionalEmails" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "attachCsv" : {
            "type" : "boolean",
            "nullable" : true
          },
          "cameraPurchaseCount" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "cameraPurchasePrice" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "clientOrgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "companyName" : {
            "type" : "string",
            "nullable" : true
          },
          "customerAddress" : {
            "type" : "string",
            "nullable" : true
          },
          "customerEmail" : {
            "type" : "string",
            "nullable" : true
          },
          "customerName" : {
            "type" : "string",
            "nullable" : true
          },
          "date" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "domePurchaseCount" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "domePurchasePrice" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "domeSubItems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/HardwareInvoiceSubItem"
            },
            "nullable" : true
          },
          "dueDate" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "externalId" : {
            "type" : "string",
            "nullable" : true
          },
          "installationPrice" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "license" : {
            "$ref" : "#/components/schemas/License"
          },
          "licenseCount" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "licensePrice" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "licenseSubItems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LicenseInvoiceSubItem"
            },
            "nullable" : true
          },
          "notes" : {
            "type" : "string",
            "nullable" : true
          },
          "partnerOrgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "r1Camera1024" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/HardwareInvoiceSubItem"
            },
            "nullable" : true
          },
          "r1Camera512" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/HardwareInvoiceSubItem"
            },
            "nullable" : true
          },
          "r1CameraPurchaseCount" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "r1CameraPurchasePrice" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "r1CameraSubItems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/HardwareInvoiceSubItem"
            },
            "nullable" : true
          },
          "r1LargeCameraPurchaseCount" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "r1LargeCameraPurchasePrice" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "r1LargeSubItems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/HardwareInvoiceSubItem"
            },
            "nullable" : true
          },
          "r1MediumSubItems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/HardwareInvoiceSubItem"
            },
            "nullable" : true
          },
          "salespersonName" : {
            "type" : "string",
            "nullable" : true
          },
          "shippingPrice" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "status" : {
            "type" : "string",
            "enum" : [ "PAID", "UNPAID_PENDING", "UNPAID_OVERDUE", "CANCELLED" ],
            "nullable" : true
          },
          "tax" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Invoice_InvoiceChargeV2WSRequest" : {
        "type" : "object",
        "description" : "Request object for charging an invoice.",
        "properties" : {
          "invoiceUuid" : {
            "type" : "string",
            "description" : "UUID of the invoice to charge",
            "nullable" : true
          },
          "sourceToken" : {
            "type" : "string",
            "description" : "Payment source token for charging the invoice",
            "example" : "tok_1234567890abcdef",
            "nullable" : true
          }
        }
      },
      "Invoice_InvoiceChargeWSRequest" : {
        "type" : "object",
        "description" : "Request object for charging an invoice.",
        "properties" : {
          "invoiceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "sourceToken" : {
            "type" : "string",
            "description" : "Payment source token for charging the invoice",
            "example" : "tok_1234567890abcdef",
            "nullable" : true
          }
        }
      },
      "Invoice_InvoiceChargeWSResponse" : {
        "type" : "object",
        "description" : "Response object for invoice charging operations.",
        "properties" : {
          "chargeSucceeded" : {
            "type" : "boolean",
            "description" : "Whether the invoice charge was successful",
            "example" : true,
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMessage" : {
            "type" : "string",
            "description" : "Error message if the charge failed",
            "example" : "Insufficient funds",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "previouslyInitialized" : {
            "type" : "boolean",
            "description" : "Whether the invoice was previously initialized for charging",
            "example" : false,
            "nullable" : true
          }
        }
      },
      "Invoice_InvoiceDetailsV1WSResponse" : {
        "type" : "object",
        "description" : "Response object containing invoice details version 1.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "invoice" : {
            "$ref" : "#/components/schemas/Invoice_InvoiceV1Type"
          }
        }
      },
      "Invoice_InvoiceDetailsV2WSRequest" : {
        "type" : "object",
        "properties" : {
          "netsuiteInvoiceUuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Invoice_InvoiceDetailsV2WSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "invoice" : {
            "$ref" : "#/components/schemas/NetsuiteInvoiceDetails"
          }
        }
      },
      "Invoice_InvoiceDetailsWSRequest" : {
        "type" : "object",
        "description" : "Request object for retrieving invoice details.",
        "properties" : {
          "invoiceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Invoice_InvoiceDetailsWSResponse" : {
        "type" : "object",
        "description" : "Response object containing invoice details.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "invoice" : {
            "$ref" : "#/components/schemas/InvoiceType"
          }
        }
      },
      "Invoice_InvoiceV1LineItemType" : {
        "type" : "object",
        "description" : "Line item information for invoice version 1.",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "Description of the product",
            "example" : "4K Ultra HD Security Camera with Night Vision",
            "nullable" : true
          },
          "family" : {
            "type" : "string",
            "description" : "Product family category",
            "example" : "Cameras",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the product",
            "example" : "Security Camera",
            "nullable" : true
          },
          "productCode" : {
            "type" : "string",
            "description" : "Product code for the line item",
            "example" : "CAM-001",
            "nullable" : true
          },
          "quantity" : {
            "type" : "number",
            "format" : "float",
            "description" : "Quantity of the product",
            "example" : 2.0,
            "nullable" : true
          },
          "subtotal" : {
            "type" : "number",
            "format" : "float",
            "description" : "Subtotal for this line item (quantity × unit price)",
            "example" : 199.98,
            "nullable" : true
          },
          "unitPrice" : {
            "type" : "number",
            "format" : "float",
            "description" : "Unit price of the product",
            "example" : 99.99,
            "nullable" : true
          }
        }
      },
      "Invoice_InvoiceV1Type" : {
        "type" : "object",
        "description" : "Invoice version 1 type containing comprehensive billing and line item information.",
        "properties" : {
          "billingContactEmail" : {
            "type" : "string",
            "description" : "Email address of the billing contact",
            "example" : "billing@company.com",
            "nullable" : true
          },
          "billingContactMailingCity" : {
            "type" : "string",
            "description" : "Billing contact mailing city",
            "example" : "Los Angeles",
            "nullable" : true
          },
          "billingContactMailingCountry" : {
            "type" : "string",
            "description" : "Billing contact mailing country",
            "example" : "United States",
            "nullable" : true
          },
          "billingContactMailingPostalCode" : {
            "type" : "string",
            "description" : "Billing contact mailing postal code",
            "example" : "90210",
            "nullable" : true
          },
          "billingContactMailingState" : {
            "type" : "string",
            "description" : "Billing contact mailing state",
            "example" : "CA",
            "nullable" : true
          },
          "billingContactMailingStreet" : {
            "type" : "string",
            "description" : "Billing contact mailing street address",
            "example" : "456 Billing St",
            "nullable" : true
          },
          "billingContactName" : {
            "type" : "string",
            "description" : "Name of the billing contact",
            "example" : "Jane Doe",
            "nullable" : true
          },
          "companyName" : {
            "type" : "string",
            "description" : "Name of the company",
            "example" : "Acme Corporation",
            "nullable" : true
          },
          "dueDate" : {
            "type" : "string",
            "description" : "Due date in YYYY-MM-DD format",
            "example" : "2024-02-14",
            "nullable" : true
          },
          "grandTotal" : {
            "type" : "number",
            "format" : "float",
            "description" : "Grand total amount including tax and shipping",
            "example" : 225.98,
            "nullable" : true
          },
          "invoiceDate" : {
            "type" : "string",
            "description" : "Invoice date in YYYY-MM-DD format",
            "example" : "2024-01-15",
            "nullable" : true
          },
          "invoiceNumber" : {
            "type" : "string",
            "description" : "Invoice number",
            "example" : "INV-2024-001",
            "nullable" : true
          },
          "lineItems" : {
            "type" : "array",
            "description" : "List of line items on the invoice",
            "items" : {
              "$ref" : "#/components/schemas/Invoice_InvoiceV1LineItemType"
            },
            "nullable" : true
          },
          "notes" : {
            "type" : "string",
            "description" : "Additional notes for the invoice",
            "example" : "Payment due within 30 days",
            "nullable" : true
          },
          "partnerBillingCity" : {
            "type" : "string",
            "description" : "Partner billing city",
            "example" : "San Francisco",
            "nullable" : true
          },
          "partnerBillingCountry" : {
            "type" : "string",
            "description" : "Partner billing country",
            "example" : "United States",
            "nullable" : true
          },
          "partnerBillingPostalCode" : {
            "type" : "string",
            "description" : "Partner billing postal code",
            "example" : "94105",
            "nullable" : true
          },
          "partnerBillingState" : {
            "type" : "string",
            "description" : "Partner billing state",
            "example" : "CA",
            "nullable" : true
          },
          "partnerBillingStreet" : {
            "type" : "string",
            "description" : "Partner billing street address",
            "example" : "123 Business Ave",
            "nullable" : true
          },
          "partnerName" : {
            "type" : "string",
            "description" : "Name of the partner",
            "example" : "Partner Solutions Inc",
            "nullable" : true
          },
          "salespersonName" : {
            "type" : "string",
            "description" : "Name of the salesperson",
            "example" : "John Smith",
            "nullable" : true
          },
          "shipping" : {
            "type" : "number",
            "format" : "float",
            "description" : "Shipping cost",
            "example" : 9.99,
            "nullable" : true
          },
          "status" : {
            "type" : "string",
            "description" : "Status of the invoice",
            "example" : "Paid",
            "nullable" : true
          },
          "subtotal" : {
            "type" : "number",
            "format" : "float",
            "description" : "Subtotal amount before tax and shipping",
            "example" : 199.99,
            "nullable" : true
          },
          "tax" : {
            "type" : "number",
            "format" : "float",
            "description" : "Tax amount",
            "example" : 16.0,
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "KeypadCommand" : {
        "type" : "string",
        "description" : "Command being executed with the current keypad.",
        "enum" : [ "ALARM_RAISED", "ARM", "ARMED", "ARMING_COUNTDOWN", "CANCEL", "COUNTDOWN", "DISARM", "DISARMED", "DISARMING", "DISMISSING", "PENDING_ARMED", "THREAT_DETECTED", "VERIFYING", "UNKNOWN" ]
      },
      "KeypadConfigType" : {
        "type" : "object",
        "description" : "List of all registered keypads for the organization",
        "properties" : {
          "armCountdownSecs" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "buildingAdminPhoneNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "connectionState" : {
            "type" : "string",
            "enum" : [ "ONLINE", "OFFLINE" ],
            "nullable" : true
          },
          "floorNumber" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "ipAddress" : {
            "type" : "string",
            "nullable" : true
          },
          "lastModified" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "locationName" : {
            "type" : "string",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "qualifiedAddress" : {
            "$ref" : "#/components/schemas/QualifiedAddressType"
          },
          "showCallBuildingAdmin" : {
            "type" : "boolean",
            "nullable" : true
          },
          "signalStrength" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "tz" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "videoWallUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Keypad_AuthenticatePinRequest" : {
        "type" : "object",
        "description" : "Request object for authenticating a keypad PIN.",
        "properties" : {
          "pin" : {
            "type" : "string",
            "description" : "PIN code to authenticate",
            "example" : "1234",
            "nullable" : true
          }
        }
      },
      "Keypad_AuthenticatePinResponse" : {
        "type" : "object",
        "description" : "Response object for keypad PIN authentication.",
        "properties" : {
          "authenticated" : {
            "type" : "boolean",
            "description" : "Whether the PIN authentication was successful",
            "example" : true,
            "nullable" : true
          }
        }
      },
      "Keypad_ClaimKeypadActivationTokenRequest" : {
        "type" : "object",
        "description" : "Request object for claiming a keypad activation token to connect a keypad to Rhombus services.",
        "properties" : {
          "activationToken" : {
            "type" : "string",
            "description" : "Activation token for claiming the keypad",
            "example" : "act_token_12345",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name for the keypad",
            "example" : "Main Entrance Keypad",
            "nullable" : true
          }
        }
      },
      "Keypad_ClaimKeypadActivationTokenResponse" : {
        "type" : "object",
        "description" : "Response object for claiming a keypad activation token.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Keypad_GetCurrentKeypadWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting the current keypad information."
      },
      "Keypad_GetCurrentKeypadWSResponse" : {
        "type" : "object",
        "description" : "Response object containing current keypad configuration information.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "keypad" : {
            "$ref" : "#/components/schemas/KeypadConfigType"
          }
        }
      },
      "Keypad_GetKeypadsForLocationWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting all registered keypads for a specific location.",
        "properties" : {
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Keypad_GetKeypadsForLocationWSResponse" : {
        "type" : "object",
        "description" : "Response object containing all registered keypads for a specific location.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "keypads" : {
            "type" : "array",
            "description" : "List of all registered keypads for the specified location",
            "items" : {
              "$ref" : "#/components/schemas/KeypadConfigType"
            },
            "nullable" : true
          }
        }
      },
      "Keypad_GetKeypadsForOrgWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting all registered keypads for an organization."
      },
      "Keypad_GetKeypadsForOrgWSResponse" : {
        "type" : "object",
        "description" : "Response object containing all registered keypads for an organization.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "keypads" : {
            "type" : "array",
            "description" : "List of all registered keypads for the organization",
            "items" : {
              "$ref" : "#/components/schemas/KeypadConfigType"
            },
            "nullable" : true
          }
        }
      },
      "Keypad_KeypadCheckinWSRequest" : {
        "type" : "object",
        "description" : "Request object for keypad online/offline checkin processing.",
        "properties" : {
          "ipAddress" : {
            "type" : "string",
            "description" : "Local IP address of the keypad for discoverability",
            "nullable" : true
          },
          "signalStrength" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Signal strength of the keypad connection",
            "example" : -45,
            "nullable" : true
          }
        }
      },
      "Keypad_KeypadCheckinWSResponse" : {
        "type" : "object",
        "description" : "Response object for keypad checkin operations."
      },
      "Keypad_PublishKeypadCommandWSRequest" : {
        "type" : "object",
        "description" : "Request object for sending a STOMP containing a keypad command.",
        "properties" : {
          "command" : {
            "$ref" : "#/components/schemas/KeypadCommand"
          },
          "executeAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Epoch timestamp (ms) when to execute the command if applicable.",
            "nullable" : true
          }
        },
        "required" : [ "command" ]
      },
      "Keypad_UnregisterKeypadRequest" : {
        "type" : "object",
        "description" : "Request object for unregistering a keypad.",
        "properties" : {
          "keypadUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Keypad_UnregisterKeypadResponse" : {
        "type" : "object",
        "description" : "Response object for unregistering a keypad.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Keypad_UpdateKeypadRequest" : {
        "type" : "object",
        "description" : "Request object for updating keypad settings and configuration.",
        "properties" : {
          "armCountdownSecs" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Arm countdown seconds for the keypad",
            "example" : 30,
            "nullable" : true
          },
          "buildingAdminPhoneNumber" : {
            "type" : "string",
            "description" : "Phone number of the building administrator",
            "example" : "+1-555-123-4567",
            "nullable" : true
          },
          "floorNumber" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Floor number where the keypad is located",
            "example" : 1,
            "nullable" : true
          },
          "keypadUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "description" : "Latitude coordinate of the keypad location",
            "example" : 37.7749,
            "nullable" : true
          },
          "locationName" : {
            "type" : "string",
            "description" : "Name of the location where the keypad is installed",
            "example" : "Main Building",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "description" : "Longitude coordinate of the keypad location",
            "example" : -122.4194,
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the keypad",
            "example" : "Main Entrance Keypad",
            "nullable" : true
          },
          "qualifiedAddress" : {
            "$ref" : "#/components/schemas/QualifiedAddressType"
          },
          "showCallBuildingAdmin" : {
            "type" : "boolean",
            "description" : "Whether to show the call building admin option",
            "example" : true,
            "nullable" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "timeZoneId" : {
            "type" : "string",
            "description" : "Time zone ID for the keypad location",
            "example" : "America/Los_Angeles",
            "nullable" : true
          },
          "videoWallUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Keypad_UpdateKeypadResponse" : {
        "type" : "object",
        "description" : "Response object for updating keypad settings.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Kiosk" : {
        "type" : "object",
        "description" : "List of all registered kiosks for the organization",
        "properties" : {
          "batteryLevel" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "connectionStatus" : {
            "type" : "string",
            "enum" : [ "ONLINE", "OFFLINE", "UNKNOWN" ],
            "nullable" : true
          },
          "deleted" : {
            "type" : "boolean",
            "nullable" : true
          },
          "lastUpdateTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "printerIP" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "KioskSelectiveUpdate" : {
        "type" : "object",
        "description" : "Selective update information for the kiosk",
        "properties" : {
          "batteryLevel" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "connectionStatus" : {
            "type" : "string",
            "enum" : [ "ONLINE", "OFFLINE", "UNKNOWN" ],
            "nullable" : true
          },
          "deleted" : {
            "type" : "boolean",
            "nullable" : true
          },
          "lastUpdateTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "printerIP" : {
            "type" : "string",
            "nullable" : true
          },
          "updatedSetMethodMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "boolean",
              "nullable" : true
            },
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Kiosk_ClaimKioskActivationTokenRequest" : {
        "type" : "object",
        "description" : "Request object for claiming a kiosk activation token to connect a kiosk to Rhombus services.",
        "properties" : {
          "activationToken" : {
            "type" : "string",
            "description" : "Activation token for claiming the kiosk",
            "example" : "kiosk_token_12345",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name for the kiosk",
            "example" : "Lobby Guest Kiosk",
            "nullable" : true
          },
          "permissionGroupUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Kiosk_ClaimKioskActivationTokenResponse" : {
        "type" : "object",
        "description" : "Response object for claiming a kiosk activation token.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Kiosk_DeleteKioskWSRequest" : {
        "type" : "object",
        "description" : "Request object for deleting a kiosk.",
        "properties" : {
          "kioskUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Kiosk_DeleteKioskWSResponse" : {
        "type" : "object",
        "description" : "Response object for deleting a kiosk.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Kiosk_GetCurrentKioskWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting the current kiosk information."
      },
      "Kiosk_GetCurrentKioskWSResponse" : {
        "type" : "object",
        "description" : "Response object containing current kiosk information.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "kiosk" : {
            "$ref" : "#/components/schemas/Kiosk_KioskWithInfo"
          }
        }
      },
      "Kiosk_GetKiosksForLocationWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting all registered kiosks for a specific location.",
        "properties" : {
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Kiosk_GetKiosksForLocationWSResponse" : {
        "type" : "object",
        "description" : "Response object containing all registered kiosks for a specific location.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "kiosks" : {
            "type" : "array",
            "description" : "List of all registered kiosks for the specified location",
            "items" : {
              "$ref" : "#/components/schemas/Kiosk"
            },
            "nullable" : true
          }
        }
      },
      "Kiosk_GetKiosksForOrgWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting all registered kiosks for an organization."
      },
      "Kiosk_GetKiosksForOrgWSResponse" : {
        "type" : "object",
        "description" : "Response object containing all registered kiosks for an organization.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "kiosks" : {
            "type" : "array",
            "description" : "List of all registered kiosks for the organization",
            "items" : {
              "$ref" : "#/components/schemas/Kiosk"
            },
            "nullable" : true
          }
        }
      },
      "Kiosk_KioskCheckinWSRequest" : {
        "type" : "object",
        "description" : "Request object for kiosk heartbeat and online/offline processing.",
        "properties" : {
          "batterLevel" : {
            "type" : "number",
            "format" : "float",
            "description" : "Battery level of the kiosk device",
            "example" : 0.85,
            "nullable" : true
          },
          "signalStrength" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Signal strength of the kiosk connection",
            "example" : -45,
            "nullable" : true
          }
        }
      },
      "Kiosk_KioskCheckinWSResponse" : {
        "type" : "object",
        "description" : "Response object for kiosk heartbeat operations."
      },
      "Kiosk_KioskWithInfo" : {
        "type" : "object",
        "description" : "Kiosk information with additional location details.",
        "properties" : {
          "batteryLevel" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "connectionStatus" : {
            "type" : "string",
            "enum" : [ "ONLINE", "OFFLINE", "UNKNOWN" ],
            "nullable" : true
          },
          "deleted" : {
            "type" : "boolean",
            "nullable" : true
          },
          "lastUpdateTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "locationName" : {
            "type" : "string",
            "description" : "Name of the location where the kiosk is installed",
            "example" : "Main Lobby",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "printerIP" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Kiosk_UnregisterKioskRequest" : {
        "type" : "object",
        "description" : "Request object for unregistering a kiosk.",
        "properties" : {
          "kioskUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Kiosk_UnregisterKioskResponse" : {
        "type" : "object",
        "description" : "Response object for unregistering a kiosk.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Kiosk_UpdateKioskResponse" : {
        "type" : "object",
        "description" : "Response object for updating kiosk settings.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Kiosk_UpdateKioskSelectiveRequest" : {
        "type" : "object",
        "description" : "Request object for selectively updating kiosk settings.",
        "properties" : {
          "kioskUpdate" : {
            "$ref" : "#/components/schemas/KioskSelectiveUpdate"
          }
        }
      },
      "KisiSettings" : {
        "type" : "object",
        "properties" : {
          "alertUnauthorizedFaces" : {
            "type" : "boolean",
            "nullable" : true
          },
          "apiSecretKey" : {
            "type" : "string",
            "nullable" : true
          },
          "createSeekPoints" : {
            "type" : "boolean",
            "nullable" : true
          },
          "defaultOptions" : {
            "$ref" : "#/components/schemas/BadgeIntegrationDefaultOptions"
          },
          "doorInfoMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/BadgeIntegrationDoorInfoType"
            },
            "nullable" : true
          },
          "doorToCameraMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "RUUID",
                "description" : "base 64 (url-safe) uuid string",
                "example" : "AAAAAAAAAAAAAAAAAAAAAA",
                "nullable" : true
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "doorsValidated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabledTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "enablingUser" : {
            "type" : "string",
            "nullable" : true
          },
          "enablingUserUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "identifyFacesFromBadge" : {
            "type" : "boolean",
            "nullable" : true
          },
          "migrated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "placeId" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "placeToSettingsMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/BadgeIntegrationSettings"
            },
            "nullable" : true
          },
          "rhombusToken" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "saveClips" : {
            "type" : "boolean",
            "nullable" : true
          },
          "webhookId" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "KisiType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "apiSecretKey" : {
              "type" : "string",
              "nullable" : true
            },
            "defaultOptions" : {
              "$ref" : "#/components/schemas/BadgeIntegrationDefaultOptions"
            },
            "doorsValidated" : {
              "type" : "boolean",
              "nullable" : true
            },
            "placeToSettingsMap" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/BadgeIntegrationSettings"
              },
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "LabelIdentificationActivityEventType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "alertLabelSet" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "nullable" : true
              },
              "nullable" : true,
              "uniqueItems" : true
            },
            "alertUnidentified" : {
              "type" : "boolean",
              "nullable" : true
            },
            "allowedLabelSet" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "nullable" : true
              },
              "nullable" : true,
              "uniqueItems" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "activityEvent" : {
            "$ref" : "#/components/schemas/ActivityEnum"
          }
        }
      },
      "LeakProbeType" : {
        "type" : "object",
        "properties" : {
          "adcMv" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "adcRaw" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "leakDetected" : {
            "type" : "boolean",
            "nullable" : true
          },
          "moistDetected" : {
            "type" : "boolean",
            "nullable" : true
          },
          "present" : {
            "type" : "boolean",
            "nullable" : true
          },
          "timestampSec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "License" : {
        "type" : "string",
        "enum" : [ "STARTER", "STANDARD", "ENTERPRISE", "LEGACY" ]
      },
      "LicenseFeature" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "LicenseGroupStats" : {
        "type" : "object",
        "properties" : {
          "assignedCount" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "lastEndDate" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The closest past date on which licenses belonging to the group expired.",
            "nullable" : true
          },
          "nearExpirationCount" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The number of licenses in the group that are currently close to expiration.",
            "nullable" : true
          },
          "nextEndDate" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The closest future date on which licenses belonging to the group will expire.",
            "nullable" : true
          },
          "stateStats" : {
            "$ref" : "#/components/schemas/LicenseStateStats"
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The number of licenses in the group.",
            "nullable" : true
          }
        }
      },
      "LicenseInvoiceSubItem" : {
        "type" : "object",
        "properties" : {
          "count" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "license" : {
            "$ref" : "#/components/schemas/License"
          },
          "price" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          }
        }
      },
      "LicenseStateStats" : {
        "type" : "object",
        "properties" : {
          "claimedCount" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The number of licenses in the group that are currently in the CLAIMED state.",
            "nullable" : true
          },
          "expiredCount" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The number of licenses in the group that are currently in the EXPIRED state.",
            "nullable" : true
          },
          "notRenewedCount" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The number of licenses in the group that are currently in the NOT_RENEWED state.",
            "nullable" : true
          },
          "pendingReturnCount" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The number of licenses in the group that are currently in the PENDING_RETURN state.",
            "nullable" : true
          },
          "permanentlyExpiredCount" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The number of licenses in the group that are currently in the PERMANENTLY_EXPIRED state.",
            "nullable" : true
          },
          "renewedCount" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The number of licenses in the group that are currently in the RENEWED state.",
            "nullable" : true
          }
        }
      },
      "LicenseUsageCatalogItem" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "addOnLicenseType" : {
              "$ref" : "#/components/schemas/AddOnLicense"
            },
            "cloudArchiveDays" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "deviceType" : {
              "$ref" : "#/components/schemas/DeviceTypeEnum"
            },
            "licenseFamily" : {
              "type" : "string",
              "enum" : [ "CAMERA", "CAMERA_MS", "VIDEO_INTERCOM", "AUDIO_GATEWAY", "ENVIRONMENTAL_SENSOR", "ENVIRONMENTAL_GATEWAY" ],
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "durationMonths" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "productCode" : {
            "type" : "string",
            "nullable" : true
          },
          "productType" : {
            "type" : "string",
            "enum" : [ "DEVICE", "ALERT_MONITORING", "ACCESS_CONTROL", "LICENSE_USAGE", "UNKNOWN" ],
            "nullable" : true
          }
        }
      },
      "LicenseUsageStats" : {
        "type" : "object",
        "properties" : {
          "addOnLicenseStats" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AddOnLicenseStats"
            },
            "nullable" : true
          },
          "assignedCount" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "lastEndDate" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The closest past date on which licenses belonging to the group expired.",
            "nullable" : true
          },
          "nearExpirationCount" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The number of licenses in the group that are currently close to expiration.",
            "nullable" : true
          },
          "nextEndDate" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The closest future date on which licenses belonging to the group will expire.",
            "nullable" : true
          },
          "stateStats" : {
            "$ref" : "#/components/schemas/LicenseStateStats"
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The number of licenses in the group.",
            "nullable" : true
          }
        }
      },
      "LicenseUsageType" : {
        "type" : "object",
        "description" : "List of licenses available for the client organization",
        "properties" : {
          "addOnLicenseType" : {
            "$ref" : "#/components/schemas/AddOnLicense"
          },
          "additionalPerceptionFeatures" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PerceptionType"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "claimKeyUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "cloudArchiveDays" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "createdOn" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "deviceType" : {
            "$ref" : "#/components/schemas/DeviceTypeEnum"
          },
          "deviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "firstAssignedDate" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "license" : {
            "$ref" : "#/components/schemas/AddOnLicense"
          },
          "licenseFamily" : {
            "type" : "string",
            "enum" : [ "CAMERA", "CAMERA_MS", "VIDEO_INTERCOM", "AUDIO_GATEWAY", "ENVIRONMENTAL_SENSOR", "ENVIRONMENTAL_GATEWAY" ],
            "nullable" : true
          },
          "licenseToUnassignEmailState" : {
            "type" : "string",
            "enum" : [ "INITIAL_EMAIL_SUCCEEDED", "INITIAL_EMAIL_FAILED", "FIFTEEN_DAY_WARNING_EMAIL_SUCCEEDED", "FIFTEEN_DAY_WARNING_EMAIL_FAILED", "FOURTY_EIGHT_HOUR_WARNING_EMAIL_SUCCEEDED", "FOURTY_EIGHT_HOUR_WARNING_EMAIL_FAILED", "UNKNOWN" ],
            "nullable" : true
          },
          "maxDeleteDate" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "perceptionTypes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PerceptionType"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "priorClaimKeyUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "productCode" : {
            "type" : "string",
            "nullable" : true
          },
          "productType" : {
            "type" : "string",
            "enum" : [ "DEVICE", "ALERT_MONITORING", "ACCESS_CONTROL", "LICENSE_USAGE", "UNKNOWN" ],
            "nullable" : true
          },
          "state" : {
            "type" : "string",
            "enum" : [ "CLAIMED", "RENEWED", "PENDING_RETURN", "NOT_RENEWED", "EXPIRED", "PERMANENTLY_EXPIRED" ],
            "nullable" : true
          },
          "trial" : {
            "type" : "boolean",
            "nullable" : true
          },
          "updatedOn" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "License_AssignACUDoorLicenseWSRequest" : {
        "type" : "object",
        "description" : "Request object for assigning ACU door license.",
        "properties" : {
          "doorUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "licenseUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "License_AssignACUDoorLicenseWSResponse" : {
        "type" : "object",
        "description" : "Response object for assigning ACU door license.",
        "properties" : {
          "acuDoorLicense" : {
            "$ref" : "#/components/schemas/ACUDoorLicenseType"
          }
        }
      },
      "License_AssignAlertMonitoringLicenseWSRequest" : {
        "type" : "object",
        "description" : "Request object for assigning alert monitoring license.",
        "properties" : {
          "licenseUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "License_AssignAlertMonitoringLicenseWSResponse" : {
        "type" : "object",
        "description" : "Response object for assigning alert monitoring license.",
        "properties" : {
          "alertMonitoringLicense" : {
            "$ref" : "#/components/schemas/AlertMonitoringLicenseType"
          }
        }
      },
      "License_AssignDeviceLicenseWSRequest" : {
        "type" : "object",
        "description" : "Request object for assigning or unassigning a device license.",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "licenseUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "License_AssignDeviceLicenseWSResponse" : {
        "type" : "object",
        "description" : "Response object for assigning or unassigning a device license.",
        "properties" : {
          "deviceLicense" : {
            "$ref" : "#/components/schemas/DeviceLicenseType"
          }
        }
      },
      "License_AssignLicenseWSRequest" : {
        "type" : "object",
        "description" : "Request object for assigning an add-on license to a device.",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "licenseUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "License_AssignLicenseWSResponse" : {
        "type" : "object",
        "description" : "Response object for assigning an add-on license to a device.",
        "properties" : {
          "licenseUsage" : {
            "$ref" : "#/components/schemas/LicenseUsageType"
          }
        }
      },
      "License_CalculateLicensesStatsForClientOrgWSRequest" : {
        "type" : "object",
        "description" : "Request object for calculating license statistics for client organization.",
        "properties" : {
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "License_CalculateLicensesStatsForClientOrgWSResponse" : {
        "type" : "object",
        "description" : "Response object containing license statistics for client organization.",
        "properties" : {
          "orgLicenseStats" : {
            "$ref" : "#/components/schemas/OrgLicenseStats"
          }
        }
      },
      "License_CalculateLicensesStatsForOrgWSRequest" : {
        "type" : "object",
        "description" : "Request object for calculating license statistics for organization.",
        "properties" : {
          "excludeTrialLicensesFromExpiredCount" : {
            "type" : "boolean",
            "description" : "Whether to exclude trial licenses from expired count",
            "example" : false,
            "nullable" : true
          }
        }
      },
      "License_CalculateLicensesStatsForOrgWSResponse" : {
        "type" : "object",
        "description" : "Response object containing license statistics for organization.",
        "properties" : {
          "orgLicenseStats" : {
            "$ref" : "#/components/schemas/OrgLicenseStats"
          }
        }
      },
      "License_CreateACUDoorLicenseWSRequest" : {
        "type" : "object",
        "description" : "Request object for creating ACU door license.",
        "properties" : {
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "License_CreateACUDoorLicenseWSResponse" : {
        "type" : "object",
        "description" : "Response object for creating ACU door license.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "License_CreateAlertMonitoringLicenseWSRequest" : {
        "type" : "object",
        "description" : "Request object for creating alert monitoring license.",
        "properties" : {
          "allowedDeviceCount" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "License_CreateAlertMonitoringLicenseWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "License_CreateDeviceLicenseWSRequest" : {
        "type" : "object",
        "properties" : {
          "deviceType" : {
            "$ref" : "#/components/schemas/DeviceTypeEnum"
          },
          "licenseFamily" : {
            "type" : "string",
            "enum" : [ "CAMERA", "CAMERA_MS", "VIDEO_INTERCOM", "AUDIO_GATEWAY", "ENVIRONMENTAL_SENSOR", "ENVIRONMENTAL_GATEWAY" ],
            "nullable" : true
          },
          "licenseType" : {
            "$ref" : "#/components/schemas/License"
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "License_CreateDeviceLicenseWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "licenseUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "License_CreateLicenseWSRequest" : {
        "type" : "object",
        "properties" : {
          "cloudArchiveDays" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "deviceType" : {
            "$ref" : "#/components/schemas/DeviceTypeEnum"
          },
          "license" : {
            "$ref" : "#/components/schemas/AddOnLicense"
          },
          "licenseFamily" : {
            "type" : "string",
            "enum" : [ "CAMERA", "CAMERA_MS", "VIDEO_INTERCOM", "AUDIO_GATEWAY", "ENVIRONMENTAL_SENSOR", "ENVIRONMENTAL_GATEWAY" ],
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "License_CreateLicenseWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "licenseUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "License_DeleteAlertMonitoringLicenseWSRequest" : {
        "type" : "object",
        "description" : "Request object for deleting alert monitoring license.",
        "properties" : {
          "licenseUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "License_DeleteAlertMonitoringLicenseWSResponse" : {
        "type" : "object",
        "description" : "Response object for deleting alert monitoring license.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "License_DeleteDeviceLicenseWSRequest" : {
        "type" : "object",
        "description" : "Request object for deleting an unassigned device license from an organization.",
        "properties" : {
          "licenseUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "License_DeleteDeviceLicenseWSResponse" : {
        "type" : "object",
        "description" : "Response object for deleting an unassigned device license from an organization.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "License_DeleteLicenseWSRequest" : {
        "type" : "object",
        "description" : "Request object for deleting an unassigned add-on license from an organization.",
        "properties" : {
          "licenseUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "License_DeleteLicenseWSResponse" : {
        "type" : "object",
        "description" : "Response object for deleting an unassigned add-on license from an organization.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "License_FindLicensesByClaimKeyWSRequest" : {
        "type" : "object",
        "description" : "Request object for finding licenses by claim key.",
        "properties" : {
          "claimKeyUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "License_FindLicensesByClaimKeyWSResponse" : {
        "type" : "object",
        "description" : "Response object containing licenses found by claim key.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "licenses" : {
            "type" : "array",
            "description" : "List of licenses found by claim key",
            "items" : {
              "$ref" : "#/components/schemas/BaseLicenseType"
            },
            "nullable" : true
          }
        }
      },
      "License_GetACUDoorLicensesForClientOrgWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting list of access controlled door licenses available for a client organization.",
        "properties" : {
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "License_GetACUDoorLicensesForClientOrgWSResponse" : {
        "type" : "object",
        "description" : "Response object containing list of access controlled door licenses available for a client organization.",
        "properties" : {
          "acuDoorLicenses" : {
            "type" : "array",
            "description" : "List of access controlled door licenses available for the client organization",
            "items" : {
              "$ref" : "#/components/schemas/ACUDoorLicenseType"
            },
            "nullable" : true
          }
        }
      },
      "License_GetACUDoorLicensesWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting list of access controlled door licenses available in organization."
      },
      "License_GetACUDoorLicensesWSResponse" : {
        "type" : "object",
        "description" : "Response object containing list of access controlled door licenses available in organization.",
        "properties" : {
          "acuDoorLicenses" : {
            "type" : "array",
            "description" : "List of access controlled door licenses available in the organization",
            "items" : {
              "$ref" : "#/components/schemas/ACUDoorLicenseType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "License_GetAlertMonitoringLicensesForClientOrgWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting list of alert monitoring licenses available for a client organization.",
        "properties" : {
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "License_GetAlertMonitoringLicensesForClientOrgWSResponse" : {
        "type" : "object",
        "description" : "Response object containing list of alert monitoring licenses available for a client organization.",
        "properties" : {
          "alertMonitoringLicenses" : {
            "type" : "array",
            "description" : "List of alert monitoring licenses available for the client organization",
            "items" : {
              "$ref" : "#/components/schemas/AlertMonitoringLicenseType"
            },
            "nullable" : true
          }
        }
      },
      "License_GetAlertMonitoringLicensesWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting list of alert monitoring licenses available in organization."
      },
      "License_GetAlertMonitoringLicensesWSResponse" : {
        "type" : "object",
        "description" : "Response object containing list of alert monitoring licenses available in organization.",
        "properties" : {
          "alertMonitoringLicenses" : {
            "type" : "array",
            "description" : "List of alert monitoring licenses available in the organization",
            "items" : {
              "$ref" : "#/components/schemas/AlertMonitoringLicenseType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "License_GetDeviceLicensesForClientOrgWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting list of device licenses available for a client organization.",
        "properties" : {
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "License_GetDeviceLicensesForClientOrgWSResponse" : {
        "type" : "object",
        "description" : "Response object containing list of device licenses available for a client organization.",
        "properties" : {
          "deviceLicenses" : {
            "type" : "array",
            "description" : "List of device licenses available for the client organization",
            "items" : {
              "$ref" : "#/components/schemas/DeviceLicenseType"
            },
            "nullable" : true
          }
        }
      },
      "License_GetDeviceLicensesWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting list of device licenses available in organization.",
        "properties" : {
          "optionalDeviceTypeFilter" : {
            "$ref" : "#/components/schemas/DeviceTypeEnum"
          }
        }
      },
      "License_GetDeviceLicensesWSResponse" : {
        "type" : "object",
        "description" : "Response object containing list of device licenses available in organization.",
        "properties" : {
          "deviceLicenses" : {
            "type" : "array",
            "description" : "List of device licenses available in the organization",
            "items" : {
              "$ref" : "#/components/schemas/DeviceLicenseType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "License_GetLicensesForClientOrgWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting list of licenses available for a client organization.",
        "properties" : {
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "License_GetLicensesForClientOrgWSResponse" : {
        "type" : "object",
        "description" : "Response object containing list of licenses available for a client organization.",
        "properties" : {
          "licenses" : {
            "type" : "array",
            "description" : "List of licenses available for the client organization",
            "items" : {
              "$ref" : "#/components/schemas/LicenseUsageType"
            },
            "nullable" : true
          }
        }
      },
      "License_GetLicensesWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting list of add-on licenses available in organization.",
        "properties" : {
          "optionalDeviceTypeFilter" : {
            "$ref" : "#/components/schemas/DeviceTypeEnum"
          }
        }
      },
      "License_GetLicensesWSResponse" : {
        "type" : "object",
        "description" : "Response object containing list of add-on licenses available in organization.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "licenses" : {
            "type" : "array",
            "description" : "List of add-on licenses available in the organization",
            "items" : {
              "$ref" : "#/components/schemas/LicenseUsageType"
            },
            "nullable" : true
          }
        }
      },
      "License_catalog_FindCatalogItemsWSRequest" : {
        "type" : "object",
        "properties" : {
          "productType" : {
            "type" : "string",
            "description" : "The product type used to filter license catalog items. If not specified, no filtering by product type is done.",
            "enum" : [ "DEVICE", "ALERT_MONITORING", "ACCESS_CONTROL", "LICENSE_USAGE", "UNKNOWN" ],
            "nullable" : true
          }
        }
      },
      "License_catalog_FindCatalogItemsWSResponse" : {
        "type" : "object",
        "properties" : {
          "catalogItems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BaseCatalogItem"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "License_catalog_GetCatalogItemByProductCodeWSRequest" : {
        "type" : "object",
        "properties" : {
          "productCode" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "License_catalog_GetCatalogItemByProductCodeWSResponse" : {
        "type" : "object",
        "properties" : {
          "catalogItem" : {
            "$ref" : "#/components/schemas/BaseCatalogItem"
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "License_claimkey_ClaimLicensesForClientOrgWSRequest" : {
        "type" : "object",
        "properties" : {
          "claimCode" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "License_claimkey_ClaimLicensesForClientOrgWSResponse" : {
        "type" : "object",
        "properties" : {
          "claimKeyUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "License_claimkey_ClaimLicensesWSRequest" : {
        "type" : "object",
        "properties" : {
          "claimCode" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "License_claimkey_ClaimLicensesWSResponse" : {
        "type" : "object",
        "properties" : {
          "claimKeyUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "License_claimkey_CreateClaimKeyWSRequest" : {
        "type" : "object",
        "properties" : {
          "endDate" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "entry" : {
            "$ref" : "#/components/schemas/ClaimKeyEntry"
          },
          "requestId" : {
            "type" : "string",
            "nullable" : true
          },
          "startDate" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "trial" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "License_claimkey_CreateClaimKeyWSResponse" : {
        "type" : "object",
        "properties" : {
          "claimCode" : {
            "type" : "string",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "License_claimkey_CreateRenewalClaimKeyWSRequest" : {
        "type" : "object",
        "properties" : {
          "endDate" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "entries" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/ClaimKeyEntry"
            },
            "nullable" : true
          },
          "requestId" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "License_claimkey_CreateRenewalClaimKeyWSResponse" : {
        "type" : "object",
        "properties" : {
          "claimCode" : {
            "type" : "string",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "License_claimkey_FindClaimKeysByOrgWSRequest" : {
        "type" : "object",
        "properties" : {
          "claimKeySearchFilter" : {
            "$ref" : "#/components/schemas/ClaimKeySearchFilter"
          }
        }
      },
      "License_claimkey_FindClaimKeysByOrgWSResponse" : {
        "type" : "object",
        "properties" : {
          "claimKeys" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BaseClaimKey"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "License_claimkey_GetClaimKeyByCodeForClientOrgWSRequest" : {
        "type" : "object",
        "properties" : {
          "claimCode" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "License_claimkey_GetClaimKeyByCodeForClientWSResponse" : {
        "type" : "object",
        "properties" : {
          "claimKey" : {
            "$ref" : "#/components/schemas/BaseClaimKey"
          }
        }
      },
      "License_claimkey_GetClaimKeyByCodeWSRequest" : {
        "type" : "object",
        "properties" : {
          "claimCode" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "License_claimkey_GetClaimKeyByCodeWSResponse" : {
        "type" : "object",
        "properties" : {
          "claimKey" : {
            "$ref" : "#/components/schemas/BaseClaimKey"
          }
        }
      },
      "License_claimkey_GetClaimKeyWSRequest" : {
        "type" : "object",
        "properties" : {
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "License_claimkey_GetClaimKeyWSResponse" : {
        "type" : "object",
        "properties" : {
          "claimKey" : {
            "$ref" : "#/components/schemas/BaseClaimKey"
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "License_claimkey_ReturnClaimKeyProductQuantitiesWSRequest" : {
        "type" : "object",
        "properties" : {
          "productQuantities" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "License_claimkey_ReturnClaimKeyProductQuantitiesWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "LineItems" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "productCode" : {
            "type" : "string",
            "nullable" : true
          },
          "productcode" : {
            "type" : "string",
            "nullable" : true
          },
          "quantity" : {
            "type" : "number",
            "nullable" : true
          },
          "subtotal" : {
            "type" : "number",
            "nullable" : true
          },
          "unitPrice" : {
            "type" : "number",
            "nullable" : true
          },
          "unitprice" : {
            "type" : "number",
            "nullable" : true
          }
        }
      },
      "Link" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "params" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "rel" : {
            "type" : "string",
            "nullable" : true
          },
          "rels" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "title" : {
            "type" : "string",
            "nullable" : true
          },
          "type" : {
            "type" : "string",
            "nullable" : true
          },
          "uri" : {
            "type" : "string",
            "format" : "uri",
            "nullable" : true
          },
          "uriBuilder" : {
            "$ref" : "#/components/schemas/UriBuilder"
          }
        }
      },
      "LiveNotificationActionRecordType" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "$ref" : "#/components/schemas/LiveNotificationActionStatusEnum"
          }
        }
      },
      "LiveNotificationActionStatusEnum" : {
        "type" : "string",
        "enum" : [ "SUCCESS", "ERROR", "IGNORED", "MUTED", "BACKOFF", "UNKNOWN" ]
      },
      "LocalDateTimeIntervalType" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "localEndDateTime" : {
            "type" : "string",
            "description" : "Interval end time in 'yyyy-MM-ddTHH:mm:ss' format. Interval end time is exclusive.",
            "nullable" : true
          },
          "localStartDateTime" : {
            "type" : "string",
            "description" : "Interval start time in 'yyyy-MM-ddTHH:mm:ss' format. Interval start time is inclusive.",
            "nullable" : true
          }
        },
        "required" : [ "localEndDateTime", "localStartDateTime" ]
      },
      "LocalInterval" : {
        "type" : "object",
        "description" : "List of intervals each specifying door state during date range. List must contain at least one element",
        "properties" : {
          "localEndDateTime" : {
            "type" : "string",
            "description" : "Interval end time in 'yyyy-MM-ddTHH:mm:ss' format. Interval end time is exclusive.",
            "nullable" : true
          },
          "localStartDateTime" : {
            "type" : "string",
            "description" : "Interval start time in 'yyyy-MM-ddTHH:mm:ss' format. Interval start time is inclusive.",
            "nullable" : true
          },
          "state" : {
            "$ref" : "#/components/schemas/AccessControlledDoorStateEnumType"
          }
        },
        "required" : [ "localEndDateTime", "localStartDateTime", "state" ]
      },
      "LocationAccessGrantType" : {
        "type" : "object",
        "description" : "The access grant to update",
        "properties" : {
          "accessControlledDoorUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "doorLabelIds" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "groupUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "scheduleUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "sortKey" : {
            "type" : "string",
            "nullable" : true,
            "readOnly" : true
          },
          "storedInS3" : {
            "type" : "boolean",
            "nullable" : true
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "userUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "LocationAccessRevocationType" : {
        "type" : "object",
        "description" : "The access revocation to update",
        "properties" : {
          "accessControlledDoorUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "doorLabelIds" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "groupUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "scheduleUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "sortKey" : {
            "type" : "string",
            "nullable" : true,
            "readOnly" : true
          },
          "storedInS3" : {
            "type" : "boolean",
            "nullable" : true
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "userUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "LocationFirstInSettings" : {
        "type" : "object",
        "description" : "The updated location first-in settings.",
        "properties" : {
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "doorAuthFirstInOutOfSync" : {
            "type" : "boolean",
            "nullable" : true
          },
          "doorAuthFirstInState" : {
            "$ref" : "#/components/schemas/FirstInState"
          },
          "doorAuthRequirementEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "doorScheduleFirstInOutOfSync" : {
            "type" : "boolean",
            "nullable" : true
          },
          "doorScheduleFirstInState" : {
            "$ref" : "#/components/schemas/FirstInState"
          },
          "doorScheduleRequirementEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "doorUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "groupUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "resets" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BaseFirstInReset"
            },
            "nullable" : true
          },
          "settingsUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "userUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "LocationFunctionality" : {
        "type" : "string",
        "description" : "Location functionality enum for exposing to OpenAPI component schemas",
        "enum" : [ "ACCESS_CONDITIONS", "ACCESS_SCHEDULES", "DOOR_SETTINGS", "FIRST_IN_SETTINGS", "HARDWARE_CONFIG", "LOCKDOWN_MANAGEMENT", "UNKNOWN" ]
      },
      "LocationLockdownActivatedRuleTriggerType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "locationUuid" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/RuleTriggerTypeEnum"
          }
        }
      },
      "LocationLockdownDeactivatedRuleTriggerType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "locationUuid" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/RuleTriggerTypeEnum"
          }
        }
      },
      "LocationLockdownPlanType" : {
        "type" : "object",
        "description" : "The updated location lockdown plan.",
        "properties" : {
          "activationPlan" : {
            "$ref" : "#/components/schemas/LockdownActivationPlanType"
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "deactivationPlan" : {
            "$ref" : "#/components/schemas/LockdownDeactivationPlanType"
          },
          "defaultLockdownState" : {
            "$ref" : "#/components/schemas/DoorLockdownStateEnumType"
          },
          "doorLockdownStateMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/DoorLockdownStateEnumType"
            },
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "physicalAccess" : {
            "$ref" : "#/components/schemas/LockdownPhysicalAccessType"
          },
          "scopeUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "testPlan" : {
            "$ref" : "#/components/schemas/LockdownTestPlanType"
          },
          "type" : {
            "$ref" : "#/components/schemas/LockdownPlanScopeEnumType"
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "LocationLockdownStateEnumType" : {
        "type" : "string",
        "enum" : [ "STANDARD_SECURITY", "LOCKED_DOWN" ]
      },
      "LocationLockdownStateType" : {
        "type" : "object",
        "description" : "The lockdown state for the location.",
        "properties" : {
          "activeLockdownPlans" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LockdownPlanReference"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "followingTestPlan" : {
            "type" : "boolean",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "state" : {
            "$ref" : "#/components/schemas/LocationLockdownStateEnumType"
          },
          "stateChangedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "LocationSettings" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "associatedCameras" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "printBadge" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "LocationType" : {
        "type" : "object",
        "description" : "Location information to update",
        "properties" : {
          "address1" : {
            "type" : "string",
            "nullable" : true
          },
          "address2" : {
            "type" : "string",
            "nullable" : true
          },
          "countryCode" : {
            "type" : "string",
            "nullable" : true
          },
          "floorPlans" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FloorPlanType"
            },
            "nullable" : true
          },
          "labels" : {
            "type" : "array",
            "description" : "Labels offer a way to perform operations across multiple locations if they have the same label",
            "items" : {
              "type" : "string",
              "description" : "Labels offer a way to perform operations across multiple locations if they have the same label",
              "nullable" : true
            },
            "nullable" : true
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name of this location",
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "postalCode" : {
            "type" : "string",
            "nullable" : true
          },
          "qualifiedAddress" : {
            "$ref" : "#/components/schemas/QualifiedAddressType"
          },
          "subLocations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LocationType"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "tz" : {
            "type" : "string",
            "description" : "Timezone for this location",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Location_AddLocationLabelWSRequest" : {
        "type" : "object",
        "description" : "Request object for adding a label to a location.",
        "properties" : {
          "label" : {
            "type" : "string",
            "description" : "Label to add to the location",
            "nullable" : true
          },
          "locationIdentifier" : {
            "type" : "string",
            "description" : "Location identifier (name or ID)",
            "nullable" : true
          }
        }
      },
      "Location_AddLocationLabelWSResponse" : {
        "type" : "object",
        "description" : "Response object for adding a label to a location.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Location_CreateLocationWSRequest" : {
        "type" : "object",
        "description" : "Request object for creating a location.",
        "properties" : {
          "location" : {
            "$ref" : "#/components/schemas/LocationType"
          },
          "parentLocationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Location_CreateLocationWSResponse" : {
        "type" : "object",
        "description" : "Response object for creating a location.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Location_DeleteLocationWSRequest" : {
        "type" : "object",
        "description" : "Request object for removing a location.",
        "properties" : {
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Location_DeleteLocationWSResponse" : {
        "type" : "object",
        "description" : "Response object for removing a location.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Location_GeoCodeWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting the latitude and longitude of an address.",
        "properties" : {
          "address" : {
            "type" : "string",
            "description" : "Address to geocode",
            "example" : "1600 Pennsylvania Avenue NW, Washington, DC",
            "nullable" : true
          }
        }
      },
      "Location_GeoCodeWSResponse" : {
        "type" : "object",
        "description" : "Response object containing the latitude and longitude of an address.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "description" : "Latitude coordinate of the address",
            "example" : 38.8977,
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "description" : "Longitude coordinate of the address",
            "example" : -77.0365,
            "nullable" : true
          }
        }
      },
      "Location_GetLocationLabelsForOrgWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting all location labels for an organization."
      },
      "Location_GetLocationLabelsForOrgWSResponse" : {
        "type" : "object",
        "description" : "Response object containing all location labels for an organization.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "locationLabels" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "description" : "Map of location name or location id to label set",
              "items" : {
                "type" : "string",
                "description" : "Map of location name or location id to label set",
                "nullable" : true
              },
              "nullable" : true,
              "uniqueItems" : true
            },
            "description" : "Map of location name or location id to label set",
            "nullable" : true
          }
        }
      },
      "Location_GetLocationWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting location by ID.",
        "properties" : {
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "subLocationsRequired" : {
            "type" : "boolean",
            "description" : "Whether sub-locations are required in the response",
            "example" : false,
            "nullable" : true
          }
        },
        "required" : [ "locationUuid" ]
      },
      "Location_GetLocationWSResponse" : {
        "type" : "object",
        "description" : "Response object containing location information.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "location" : {
            "$ref" : "#/components/schemas/LocationType"
          }
        }
      },
      "Location_GetLocationsByGeoRequest" : {
        "type" : "object",
        "description" : "Request object for getting list of locations given latitude and longitude.",
        "properties" : {
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "description" : "Latitude coordinate",
            "example" : 37.7749,
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "description" : "Longitude coordinate",
            "example" : -122.4194,
            "nullable" : true
          }
        }
      },
      "Location_GetLocationsByGeoResponse" : {
        "type" : "object",
        "description" : "Response object containing list of locations given latitude and longitude.",
        "properties" : {
          "locations" : {
            "type" : "array",
            "description" : "Collection of locations found at the specified coordinates",
            "items" : {
              "$ref" : "#/components/schemas/LocationType"
            },
            "nullable" : true
          }
        }
      },
      "Location_GetLocationsBySubLocationsHierarchyKeyWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting nested locations by subLocationHierarchyKey.",
        "properties" : {
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          }
        }
      },
      "Location_GetLocationsBySubLocationsHierarchyKeyWSResponse" : {
        "type" : "object",
        "description" : "Response object containing nested locations by subLocationHierarchyKey.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "location" : {
            "$ref" : "#/components/schemas/LocationType"
          }
        }
      },
      "Location_GetLocationsV2WSRequest" : {
        "type" : "object",
        "description" : "Request object for getting list of locations in organization with pagination support.",
        "properties" : {
          "lastEvaluatedKey" : {
            "type" : "string",
            "nullable" : true
          },
          "maxPageSize" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "nameBeginsWithFilter" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Location_GetLocationsV2WSResponse" : {
        "type" : "object",
        "description" : "Response object containing list of locations in organization with pagination support.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "lastEvaluatedKey" : {
            "type" : "string",
            "nullable" : true
          },
          "locations" : {
            "type" : "array",
            "description" : "List of locations in the organization",
            "items" : {
              "$ref" : "#/components/schemas/LocationType"
            },
            "nullable" : true
          }
        }
      },
      "Location_GetLocationsWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting list of locations in organization.",
        "properties" : {
          "subLocationsIncluded" : {
            "type" : "boolean",
            "description" : "Whether to include sub-locations in the response",
            "example" : false,
            "nullable" : true
          }
        }
      },
      "Location_GetLocationsWSResponse" : {
        "type" : "object",
        "description" : "Response object containing list of locations in organization.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "locations" : {
            "type" : "array",
            "description" : "List of locations in the organization",
            "items" : {
              "$ref" : "#/components/schemas/LocationType"
            },
            "nullable" : true
          }
        }
      },
      "Location_QualifiedAddressTypeWithValidation" : {
        "type" : "object",
        "description" : "Qualified address with validation information",
        "properties" : {
          "addressComplete" : {
            "type" : "boolean",
            "nullable" : true
          },
          "addressLine2" : {
            "type" : "string",
            "description" : "apt, suite, or unit",
            "nullable" : true
          },
          "addressline1" : {
            "type" : "string",
            "description" : "street address",
            "nullable" : true
          },
          "administrativeArea" : {
            "type" : "string",
            "description" : "state",
            "nullable" : true
          },
          "locality" : {
            "type" : "string",
            "description" : "city",
            "nullable" : true
          },
          "postalCode" : {
            "type" : "string",
            "description" : "zip code",
            "nullable" : true
          },
          "regionCode" : {
            "type" : "string",
            "description" : "country",
            "nullable" : true
          },
          "validatedAddressline1" : {
            "type" : "boolean",
            "nullable" : true
          },
          "validatedAdminestrativeArea" : {
            "type" : "boolean",
            "nullable" : true
          },
          "validatedLocality" : {
            "type" : "boolean",
            "nullable" : true
          },
          "validatedPostalCode" : {
            "type" : "boolean",
            "nullable" : true
          },
          "validatedRegionCode" : {
            "type" : "boolean",
            "nullable" : true
          },
          "validatedSubpremise" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Location_RemoveLocationLabelWSRequest" : {
        "type" : "object",
        "description" : "Request object for removing a label from a location.",
        "properties" : {
          "label" : {
            "type" : "string",
            "description" : "Label to remove from the location",
            "nullable" : true
          },
          "locationIdentifier" : {
            "type" : "string",
            "description" : "Location identifier (name or ID)",
            "nullable" : true
          }
        }
      },
      "Location_RemoveLocationLabelWSResponse" : {
        "type" : "object",
        "description" : "Response object for removing a label from a location.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Location_SelectiveUpdateLocationWSRequest" : {
        "type" : "object",
        "description" : "Request object for selectively updating a location.",
        "properties" : {
          "address1" : {
            "type" : "string",
            "description" : "First line of the address",
            "nullable" : true
          },
          "address2" : {
            "type" : "string",
            "description" : "Second line of the address",
            "nullable" : true
          },
          "countryCode" : {
            "type" : "string",
            "description" : "Country code of the location",
            "nullable" : true
          },
          "floorPlans" : {
            "type" : "array",
            "description" : "Floor plans for the location",
            "items" : {
              "$ref" : "#/components/schemas/FloorPlanType"
            },
            "nullable" : true
          },
          "labels" : {
            "type" : "array",
            "description" : "Labels offer a way to perform operations across multiple locations if they have the same label",
            "items" : {
              "type" : "string",
              "description" : "Labels offer a way to perform operations across multiple locations if they have the same label",
              "nullable" : true
            },
            "nullable" : true
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "description" : "Latitude coordinate of the location",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "description" : "Longitude coordinate of the location",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name of this location",
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "postalCode" : {
            "type" : "string",
            "description" : "Postal code of the location",
            "nullable" : true
          },
          "timezoneId" : {
            "type" : "string",
            "description" : "Timezone identifier, e.g. America/Los_Angeles, EST, GMT+0, etc.",
            "nullable" : true
          },
          "tz" : {
            "type" : "object",
            "description" : "Use timezoneId field instead",
            "nullable" : true,
            "properties" : {
              "displayName" : {
                "type" : "string",
                "nullable" : true
              },
              "dstsavings" : {
                "type" : "integer",
                "format" : "int32",
                "nullable" : true
              },
              "id" : {
                "type" : "string",
                "nullable" : true
              },
              "rawOffset" : {
                "type" : "integer",
                "format" : "int32",
                "nullable" : true
              }
            }
          }
        },
        "required" : [ "locationUuid" ]
      },
      "Location_SelectiveUpdateLocationWSResponse" : {
        "type" : "object",
        "description" : "Response object for selectively updating a location.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Location_UpdateLocationWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating a location. NOTE: This will replace old settings meaning if you leave a field blank it will be overrode to blank. For selective field updates use the endpoint /selectiveUpdateLocation.",
        "properties" : {
          "location" : {
            "$ref" : "#/components/schemas/LocationType"
          }
        }
      },
      "Location_UpdateLocationWSResponse" : {
        "type" : "object",
        "description" : "Response object for updating a location.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Location_ValidateLocationWSRequest" : {
        "type" : "object",
        "description" : "Request object for validating a location address for Alarm Monitoring.",
        "properties" : {
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Location_ValidateLocationWSResponse" : {
        "type" : "object",
        "description" : "Response object for validating a location address for Alarm Monitoring.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "qualifiedAddress" : {
            "$ref" : "#/components/schemas/Location_QualifiedAddressTypeWithValidation"
          }
        }
      },
      "LockdownActivatedStateEventType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "activatedLockdownPlans" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/LockdownPlanReference"
              },
              "nullable" : true
            },
            "activeLockdownPlans" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/LockdownPlanReference"
              },
              "nullable" : true
            },
            "deactivatedLockdownPlans" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/LockdownPlanReference"
              },
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "followingTestPlan" : {
            "type" : "boolean",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "originator" : {
            "$ref" : "#/components/schemas/BaseLocationLockdownEventOriginator"
          },
          "stateChangedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/LockdownStateEventEnumType"
          }
        }
      },
      "LockdownActivationPlanType" : {
        "type" : "object",
        "properties" : {
          "groupUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "rhombusKeyNotificationMessage" : {
            "type" : "string",
            "nullable" : true
          },
          "userUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "LockdownActivationResultEnumType" : {
        "type" : "string",
        "description" : "The result of the lockdown activation operation.",
        "enum" : [ "SUCCESS", "INVALID_LOCKDOWN_PLANS", "OPTIMISTIC_CONCURRENCY" ]
      },
      "LockdownDeactivatedStateEventType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "deactivatedLockdownPlans" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/LockdownPlanReference"
              },
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "followingTestPlan" : {
            "type" : "boolean",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "originator" : {
            "$ref" : "#/components/schemas/BaseLocationLockdownEventOriginator"
          },
          "stateChangedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/LockdownStateEventEnumType"
          }
        }
      },
      "LockdownDeactivationPlanType" : {
        "type" : "object",
        "properties" : {
          "groupUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "rhombusKeyNotificationMessage" : {
            "type" : "string",
            "nullable" : true
          },
          "userUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "LockdownDeactivationResultEnumType" : {
        "type" : "string",
        "description" : "The result of the lockdown deactivation operation.",
        "enum" : [ "SUCCESS", "OPTIMISTIC_CONCURRENCY" ]
      },
      "LockdownEventOriginatorEnumType" : {
        "type" : "string",
        "enum" : [ "USER", "SUPPORT_AUTHORITY", "API_TOKEN", "RULE", "UNKNOWN" ]
      },
      "LockdownPhysicalAccessType" : {
        "type" : "object",
        "properties" : {
          "groupUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "userUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "LockdownPlanReference" : {
        "type" : "object",
        "properties" : {
          "lockdownPlanUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "scope" : {
            "$ref" : "#/components/schemas/LockdownPlanScopeEnumType"
          },
          "scopeUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "LockdownPlanScopeEnumType" : {
        "type" : "string",
        "enum" : [ "ORG_LOCKDOWN", "LOCATION_LOCKDOWN" ]
      },
      "LockdownStateEventEnumType" : {
        "type" : "string",
        "enum" : [ "LOCKDOWN_ACTIVATED", "LOCKDOWN_DEACTIVATED" ]
      },
      "LockdownTestPlanType" : {
        "type" : "object",
        "properties" : {
          "doorStateOverrideEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "userAccessOverrideEnabled" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "LockdownType" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "isActive" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Logistics_GetRMAsWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting RMAs (Return Merchandise Authorizations)."
      },
      "Logistics_GetRMAsWSResponse" : {
        "type" : "object",
        "description" : "Response object containing RMAs (Return Merchandise Authorizations).",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "rmaList" : {
            "type" : "array",
            "description" : "List of RMAs (Return Merchandise Authorizations)",
            "items" : {
              "$ref" : "#/components/schemas/RMAType"
            },
            "nullable" : true
          }
        }
      },
      "Logistics_GetShipmentsWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting shipments within a time range.",
        "properties" : {
          "endTimeSec" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "End time in seconds (Unix timestamp)",
            "example" : 1641081600,
            "nullable" : true
          },
          "startTimeSec" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start time in seconds (Unix timestamp)",
            "example" : 1640995200,
            "nullable" : true
          }
        }
      },
      "Logistics_GetShipmentsWSResponse" : {
        "type" : "object",
        "description" : "Response object containing shipments within the specified time range.",
        "properties" : {
          "customerShipmentList" : {
            "type" : "array",
            "description" : "List of customer shipments within the specified time range",
            "items" : {
              "$ref" : "#/components/schemas/CustomerShipmentType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "LumeoSettings" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabledTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "enablingUser" : {
            "type" : "string",
            "nullable" : true
          },
          "enablingUserUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "LumeoType" : {
        "type" : "object",
        "allOf" : [ ],
        "nullable" : true,
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "ManualDoorStateChangeEnum" : {
        "type" : "string",
        "enum" : [ "DOOR_STATE_OVERRIDE", "CANCELLED_DOOR_STATE_OVERRIDE" ]
      },
      "ManualDoorStateChangeEnum_Minimal" : {
        "type" : "string",
        "enum" : [ "DOOR_STATE_OVERRIDE", "CANCELLED_DOOR_STATE_OVERRIDE" ]
      },
      "Maps_GenerateMapUrlWSRequest" : {
        "type" : "object",
        "description" : "Request object for generating a map URL.",
        "properties" : {
          "baseUrl" : {
            "type" : "string",
            "description" : "Base URL for the map",
            "example" : "https://maps.google.com/maps?q=",
            "nullable" : true
          }
        }
      },
      "Maps_GenerateMapUrlWSResponse" : {
        "type" : "object",
        "description" : "Response object containing the generated map URL.",
        "properties" : {
          "signedUrl" : {
            "type" : "string",
            "description" : "Signed URL for the map",
            "example" : "https://maps.google.com/maps?q=123+Main+St&key=abc123",
            "nullable" : true
          }
        }
      },
      "MattermostSettings" : {
        "type" : "object",
        "properties" : {
          "channel" : {
            "type" : "string",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabledTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "enablingUser" : {
            "type" : "string",
            "nullable" : true
          },
          "enablingUserUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "webhookUrl" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "MediaType" : {
        "type" : "object",
        "properties" : {
          "charset" : {
            "type" : "object",
            "nullable" : true,
            "properties" : {
              "registered" : {
                "type" : "boolean",
                "nullable" : true
              }
            }
          },
          "concrete" : {
            "type" : "boolean",
            "nullable" : true
          },
          "parameters" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "qualityValue" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "subtype" : {
            "type" : "string",
            "nullable" : true
          },
          "subtypeSuffix" : {
            "type" : "string",
            "nullable" : true
          },
          "type" : {
            "type" : "string",
            "nullable" : true
          },
          "wildcardSubtype" : {
            "type" : "boolean",
            "nullable" : true
          },
          "wildcardType" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Mediadevice_GetBulkMediaDeviceDetailsWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting media information of any video-supporting media device.",
        "properties" : {
          "devices" : {
            "type" : "array",
            "description" : "Set of device facet UUIDs to get media details for",
            "items" : {
              "type" : "string",
              "format" : "DeviceFacetUuid",
              "description" : "RUUID with optional appended facet information",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "Mediadevice_GetBulkMediaDeviceDetailsWSResponse" : {
        "type" : "object",
        "description" : "Response object containing media information for video-supporting media devices.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "mediaDeviceDetails" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Mediadevice_MediaDeviceDetailsType"
            },
            "description" : "Map of device facet UUIDs to their media device details",
            "nullable" : true
          }
        }
      },
      "Mediadevice_MediaDeviceDetailsType" : {
        "type" : "object",
        "description" : "Detailed information about a media device including streaming URLs and device characteristics.",
        "properties" : {
          "audioGateways" : {
            "type" : "array",
            "description" : "List of audio gateway UUIDs associated with the device",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          },
          "deviceFacetUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          },
          "deviceType" : {
            "$ref" : "#/components/schemas/DeviceTypeEnum"
          },
          "hwVariation" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "lanCheckUrls" : {
            "type" : "array",
            "description" : "URLs to check if the device is available on LAN",
            "items" : {
              "type" : "string",
              "description" : "URLs to check if the device is available on LAN",
              "nullable" : true
            },
            "nullable" : true
          },
          "lanLiveH264Uris" : {
            "type" : "array",
            "description" : "LAN live H264 streaming URIs",
            "items" : {
              "type" : "string",
              "description" : "LAN live H264 streaming URIs",
              "nullable" : true
            },
            "nullable" : true
          },
          "lanLiveM3u8Uris" : {
            "type" : "array",
            "description" : "LAN live M3U8 streaming URIs",
            "items" : {
              "type" : "string",
              "description" : "LAN live M3U8 streaming URIs",
              "nullable" : true
            },
            "nullable" : true
          },
          "lanLiveMpdUris" : {
            "type" : "array",
            "description" : "LAN live MPD streaming URIs",
            "items" : {
              "type" : "string",
              "description" : "LAN live MPD streaming URIs",
              "nullable" : true
            },
            "nullable" : true
          },
          "lanVodM3u8UrisTemplates" : {
            "type" : "array",
            "description" : "LAN VOD M3U8 URI templates",
            "items" : {
              "type" : "string",
              "description" : "LAN VOD M3U8 URI templates",
              "nullable" : true
            },
            "nullable" : true
          },
          "lanVodMpdUrisTemplates" : {
            "type" : "array",
            "description" : "LAN VOD MPD URI templates",
            "items" : {
              "type" : "string",
              "description" : "LAN VOD MPD URI templates",
              "nullable" : true
            },
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the device",
            "example" : "Front Door Camera",
            "nullable" : true
          },
          "region" : {
            "type" : "string",
            "description" : "Region where the device is located",
            "example" : "us-west-2",
            "nullable" : true
          },
          "timezone" : {
            "type" : "object",
            "description" : "Timezone of the device",
            "nullable" : true,
            "properties" : {
              "displayName" : {
                "type" : "string",
                "nullable" : true
              },
              "dstsavings" : {
                "type" : "integer",
                "format" : "int32",
                "nullable" : true
              },
              "id" : {
                "type" : "string",
                "nullable" : true
              },
              "rawOffset" : {
                "type" : "integer",
                "format" : "int32",
                "nullable" : true
              }
            }
          },
          "uri" : {
            "type" : "string",
            "description" : "URI of the device",
            "example" : "rtsp://device.local/stream",
            "nullable" : true
          },
          "wanLiveH264Uri" : {
            "type" : "string",
            "description" : "WAN live H264 streaming URI",
            "example" : "https://stream.rhombussystems.com/live/device123.h264",
            "nullable" : true
          },
          "wanLiveM3u8Uri" : {
            "type" : "string",
            "description" : "WAN live M3U8 streaming URI",
            "example" : "https://stream.rhombussystems.com/live/device123.m3u8",
            "nullable" : true
          },
          "wanLiveMpdUri" : {
            "type" : "string",
            "description" : "WAN live MPD streaming URI",
            "example" : "https://stream.rhombussystems.com/live/device123.mpd",
            "nullable" : true
          },
          "wanVodH264UriTemplate" : {
            "type" : "string",
            "description" : "WAN VOD H264 URI template",
            "example" : "https://vod.rhombussystems.com/{timestamp}/device123.h264",
            "nullable" : true
          },
          "wanVodM3u8UriTemplate" : {
            "type" : "string",
            "description" : "WAN VOD M3U8 URI template",
            "example" : "https://vod.rhombussystems.com/{timestamp}/device123.m3u8",
            "nullable" : true
          },
          "wanVodMpdUriTemplate" : {
            "type" : "string",
            "description" : "WAN VOD MPD URI template",
            "example" : "https://vod.rhombussystems.com/{timestamp}/device123.mpd",
            "nullable" : true
          }
        }
      },
      "MessageBodyWorkers" : {
        "type" : "object",
        "nullable" : true
      },
      "MetaDataLocationType" : {
        "type" : "object",
        "properties" : {
          "region" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Metric_LogEventWSRequest" : {
        "type" : "object",
        "description" : "Request object for logging events.",
        "properties" : {
          "logMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "description" : "Map containing log event data",
              "nullable" : true
            },
            "description" : "Map containing log event data",
            "nullable" : true
          }
        }
      },
      "Metric_LogEventWSResponse" : {
        "type" : "object",
        "description" : "Response object for logging events.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Metric_ReportErrorWSRequest" : {
        "type" : "object",
        "description" : "Request object for reporting errors.",
        "properties" : {
          "errorMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "description" : "Map containing error information",
              "nullable" : true
            },
            "description" : "Map containing error information",
            "nullable" : true
          }
        }
      },
      "Metric_ReportErrorWSResponse" : {
        "type" : "object",
        "description" : "Response object for reporting errors.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "MicrosoftTeamsChannelSettings" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "botInstallationId" : {
            "type" : "string",
            "nullable" : true
          },
          "channelId" : {
            "type" : "string",
            "nullable" : true
          },
          "installingUserUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "sendChannelNotifications" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "MicrosoftTeamsSettings" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabledTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "enablingUser" : {
            "type" : "string",
            "nullable" : true
          },
          "enablingUserUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "webhookUrl" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "MicrosoftTeamsType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "adminConsent" : {
              "type" : "boolean",
              "nullable" : true
            },
            "allowUserNotifications" : {
              "type" : "boolean",
              "nullable" : true
            },
            "microsoftTeamSettingsMap" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/MicrosoftTeamsChannelSettings"
              },
              "nullable" : true
            },
            "microsoftTeamsUserSettingsMap" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/MicrosoftTeamsUserSettings"
              },
              "nullable" : true
            },
            "tenantId" : {
              "type" : "string",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "MicrosoftTeamsUserSettings" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "botInstallationId" : {
            "type" : "string",
            "nullable" : true
          },
          "chatId" : {
            "type" : "string",
            "nullable" : true
          },
          "refreshToken" : {
            "type" : "string",
            "nullable" : true
          },
          "sendUserNotifications" : {
            "type" : "boolean",
            "nullable" : true
          },
          "teamIds" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "userId" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "MinimalAudioGatewayStateType" : {
        "type" : "object",
        "description" : "List of minimal audio gateway state information",
        "properties" : {
          "associatedCameras" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "DeviceFacetUuid",
              "description" : "RUUID with optional appended facet information",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
              "nullable" : true
            },
            "nullable" : true
          },
          "connectionStatus" : {
            "$ref" : "#/components/schemas/DeviceStatusEnum"
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "defaultInterface" : {
            "type" : "string",
            "nullable" : true
          },
          "defaultInterfaceMac" : {
            "type" : "string",
            "nullable" : true
          },
          "directionRadians" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "externalIPAddress" : {
            "type" : "string",
            "nullable" : true
          },
          "facetNameMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "firmwareUpdateInProgress" : {
            "type" : "boolean",
            "nullable" : true
          },
          "firmwareVersion" : {
            "type" : "string",
            "nullable" : true
          },
          "floorNumber" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "healthStatus" : {
            "$ref" : "#/components/schemas/DeviceStatusEnum"
          },
          "healthStatusDetails" : {
            "$ref" : "#/components/schemas/DeviceHealthStatusDetailsEnum"
          },
          "hwVariation" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "lanAddresses" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "liveStreamShared" : {
            "type" : "boolean",
            "nullable" : true
          },
          "liveStreamsSharedCount" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "mediaRegion" : {
            "type" : "string",
            "nullable" : true
          },
          "mediaStorageDeviceUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          },
          "mummified" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "region" : {
            "type" : "string",
            "nullable" : true
          },
          "secondaryLanAddresses" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "sensorUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "serialNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "ssid" : {
            "type" : "string",
            "nullable" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "supportedFacets" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DeviceFacet"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "wifiApMac" : {
            "type" : "string",
            "nullable" : true
          },
          "wifiBars" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "wifiSignalStrength" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "MinimalDeviceStateType" : {
        "type" : "object",
        "description" : "List of minimal camera state information",
        "properties" : {
          "connectionStatus" : {
            "$ref" : "#/components/schemas/DeviceStatusEnum"
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "defaultInterface" : {
            "type" : "string",
            "nullable" : true
          },
          "defaultInterfaceMac" : {
            "type" : "string",
            "nullable" : true
          },
          "directionRadians" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "externalIPAddress" : {
            "type" : "string",
            "nullable" : true
          },
          "facetNameMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "firmwareUpdateInProgress" : {
            "type" : "boolean",
            "nullable" : true
          },
          "firmwareVersion" : {
            "type" : "string",
            "nullable" : true
          },
          "floorNumber" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "healthStatus" : {
            "$ref" : "#/components/schemas/DeviceStatusEnum"
          },
          "healthStatusDetails" : {
            "$ref" : "#/components/schemas/DeviceHealthStatusDetailsEnum"
          },
          "hwVariation" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "lanAddresses" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "liveStreamShared" : {
            "type" : "boolean",
            "nullable" : true
          },
          "liveStreamsSharedCount" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "mediaRegion" : {
            "type" : "string",
            "nullable" : true
          },
          "mediaStorageDeviceUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          },
          "mummified" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "region" : {
            "type" : "string",
            "nullable" : true
          },
          "secondaryLanAddresses" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "serialNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "ssid" : {
            "type" : "string",
            "nullable" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "supportedFacets" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DeviceFacet"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "wifiApMac" : {
            "type" : "string",
            "nullable" : true
          },
          "wifiBars" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "wifiSignalStrength" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "MinimalNVRStateType" : {
        "type" : "object",
        "description" : "List of minimal NVR state information for all NVRs in the organization",
        "properties" : {
          "connectionStatus" : {
            "$ref" : "#/components/schemas/DeviceStatusEnum"
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "defaultInterface" : {
            "type" : "string",
            "nullable" : true
          },
          "defaultInterfaceMac" : {
            "type" : "string",
            "nullable" : true
          },
          "directionRadians" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "externalIPAddress" : {
            "type" : "string",
            "nullable" : true
          },
          "facetNameMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "firmwareUpdateInProgress" : {
            "type" : "boolean",
            "nullable" : true
          },
          "firmwareVersion" : {
            "type" : "string",
            "nullable" : true
          },
          "floorNumber" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "healthStatus" : {
            "$ref" : "#/components/schemas/DeviceStatusEnum"
          },
          "healthStatusDetails" : {
            "$ref" : "#/components/schemas/DeviceHealthStatusDetailsEnum"
          },
          "hwVariation" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "lanAddresses" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "liveStreamShared" : {
            "type" : "boolean",
            "nullable" : true
          },
          "liveStreamsSharedCount" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "mediaRegion" : {
            "type" : "string",
            "nullable" : true
          },
          "mediaStorageDeviceUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          },
          "mummified" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "numThirdPartyCamerasAssigned" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "numThirdPartyCamerasSupported" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "region" : {
            "type" : "string",
            "nullable" : true
          },
          "secondaryLanAddresses" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "serialNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "ssid" : {
            "type" : "string",
            "nullable" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "supportedFacets" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DeviceFacet"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "wifiApMac" : {
            "type" : "string",
            "nullable" : true
          },
          "wifiBars" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "wifiSignalStrength" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "MinimalObservableDeviceStateType" : {
        "type" : "object",
        "description" : "List of minimal state information for doorbell cameras",
        "properties" : {
          "associatedCameras" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "DeviceFacetUuid",
              "description" : "RUUID with optional appended facet information",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
              "nullable" : true
            },
            "nullable" : true
          },
          "connectionStatus" : {
            "$ref" : "#/components/schemas/DeviceStatusEnum"
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "defaultInterface" : {
            "type" : "string",
            "nullable" : true
          },
          "defaultInterfaceMac" : {
            "type" : "string",
            "nullable" : true
          },
          "directionRadians" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "externalIPAddress" : {
            "type" : "string",
            "nullable" : true
          },
          "facetNameMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "firmwareUpdateInProgress" : {
            "type" : "boolean",
            "nullable" : true
          },
          "firmwareVersion" : {
            "type" : "string",
            "nullable" : true
          },
          "floorNumber" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "healthStatus" : {
            "$ref" : "#/components/schemas/DeviceStatusEnum"
          },
          "healthStatusDetails" : {
            "$ref" : "#/components/schemas/DeviceHealthStatusDetailsEnum"
          },
          "hwVariation" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "lanAddresses" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "liveStreamShared" : {
            "type" : "boolean",
            "nullable" : true
          },
          "liveStreamsSharedCount" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "mediaRegion" : {
            "type" : "string",
            "nullable" : true
          },
          "mediaStorageDeviceUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          },
          "mummified" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "region" : {
            "type" : "string",
            "nullable" : true
          },
          "secondaryLanAddresses" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "serialNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "ssid" : {
            "type" : "string",
            "nullable" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "supportedFacets" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DeviceFacet"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "wifiApMac" : {
            "type" : "string",
            "nullable" : true
          },
          "wifiBars" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "wifiSignalStrength" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "MinimalThresholdEventType" : {
        "type" : "object",
        "description" : "List of threshold crossing events for the device",
        "properties" : {
          "crossingObject" : {
            "type" : "string",
            "enum" : [ "HUMAN", "VEHICLE", "FACE", "LPR", "POSE", "CLIP_EMBED", "UNKNOWN" ],
            "nullable" : true
          },
          "direction" : {
            "type" : "string",
            "enum" : [ "INGRESS", "EGRESS" ],
            "nullable" : true
          },
          "objectId" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "MinuteOfDayIntervalType" : {
        "type" : "object",
        "properties" : {
          "dayOfWeek" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "minuteOfDayStartInclusive" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "minuteOfDayStopExclusive" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "MobileTokenOSEnum" : {
        "type" : "string",
        "enum" : [ "IOS", "ANDROID" ]
      },
      "Mobile_LoginToOrg2FARequiredResponse" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "get2FAIdentifier" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "get2FAType" : {
              "type" : "string",
              "description" : "Type of MFA token required for 2FA",
              "enum" : [ "EMAIL", "SMS", "VIRTUAL_MFA" ],
              "nullable" : true
            },
            "numDaysSkip2FAForTrustedDevices" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "Number of days to skip 2FA for trusted devices",
              "example" : 30,
              "nullable" : true
            }
          }
        } ],
        "description" : "Login to organization response indicating two-factor authentication is required.",
        "nullable" : true,
        "properties" : {
          "type" : {
            "type" : "string"
          }
        }
      },
      "Mobile_LoginToOrgBaseResponse" : {
        "type" : "object",
        "description" : "Base response object for login to organization operations with polymorphic response types.",
        "discriminator" : {
          "propertyName" : "type"
        },
        "oneOf" : [ {
          "$ref" : "#/components/schemas/Mobile_LoginToOrgSuccessResponse"
        }, {
          "$ref" : "#/components/schemas/Mobile_LoginToOrgSsoRequiredResponse"
        }, {
          "$ref" : "#/components/schemas/Mobile_LoginToOrg2FARequiredResponse"
        } ],
        "properties" : {
          "type" : {
            "type" : "string"
          }
        },
        "required" : [ "type" ]
      },
      "Mobile_LoginToOrgRequest" : {
        "type" : "object",
        "description" : "Request object for allowing a multi-org user on mobile to login to a different org they are able to access.",
        "properties" : {
          "csr" : {
            "type" : "array",
            "description" : "Certificate Signing Request (CSR) data",
            "items" : {
              "type" : "string",
              "format" : "byte",
              "description" : "Certificate Signing Request (CSR) data",
              "nullable" : true
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Mobile_LoginToOrgSsoRequiredResponse" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "redirectUri" : {
              "type" : "string",
              "description" : "Redirect URI for SSO authentication",
              "example" : "https://sso.example.com/login",
              "nullable" : true
            }
          }
        } ],
        "description" : "Login to organization response indicating SSO authentication is required.",
        "nullable" : true,
        "properties" : {
          "type" : {
            "type" : "string"
          }
        }
      },
      "Mobile_LoginToOrgSuccessResponse" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "cert" : {
              "type" : "array",
              "description" : "Certificate data for the successful login session",
              "items" : {
                "type" : "string",
                "format" : "byte",
                "description" : "Certificate data for the successful login session",
                "nullable" : true
              },
              "nullable" : true
            },
            "orgUuid" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "userUuid" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            }
          }
        } ],
        "description" : "Successful login to organization response containing session information.",
        "nullable" : true,
        "properties" : {
          "type" : {
            "type" : "string"
          }
        }
      },
      "Mobile_LoginVerifiedSupportAuthorityMobileRequest" : {
        "type" : "object",
        "description" : "Request object for mobile login of partner to client org as verified support authority.",
        "properties" : {
          "authorityUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "clientType" : {
            "type" : "string",
            "description" : "Type of session client",
            "enum" : [ "MOBILE", "IOS", "ANDROID", "BROWSER" ],
            "nullable" : true
          }
        }
      },
      "Mobile_LoginVerifiedSupportAuthorityMobileResponse" : {
        "type" : "object",
        "description" : "Response object for mobile login of partner to client org as verified support authority.",
        "properties" : {
          "supportAuthoritySessionUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "valid" : {
            "type" : "boolean",
            "description" : "Whether the support authority login is valid",
            "example" : true,
            "nullable" : true
          }
        }
      },
      "Mobile_LogoutMobileUserRequest" : {
        "type" : "object",
        "description" : "Request object for logging out a mobile user."
      },
      "Mobile_LogoutMobileUserResponse" : {
        "type" : "object",
        "description" : "Response object for logging out a mobile user."
      },
      "Mobile_RefreshMobileSessionRequest" : {
        "type" : "object",
        "description" : "Request object for refreshing a mobile session.",
        "properties" : {
          "csr" : {
            "type" : "array",
            "description" : "Certificate Signing Request (CSR) data",
            "items" : {
              "type" : "string",
              "format" : "byte",
              "description" : "Certificate Signing Request (CSR) data",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Mobile_RefreshMobileSessionResponse" : {
        "type" : "object",
        "description" : "Response object for refreshing a mobile session.",
        "properties" : {
          "cert" : {
            "type" : "array",
            "description" : "Certificate data for the refreshed session",
            "items" : {
              "type" : "string",
              "format" : "byte",
              "description" : "Certificate data for the refreshed session",
              "nullable" : true
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Mobile_UpdateMobileNotificationTokenRequest" : {
        "type" : "object",
        "description" : "Request object for updating mobile notification token for Console app.",
        "properties" : {
          "token" : {
            "type" : "string",
            "description" : "Mobile notification token",
            "example" : "abc123def456",
            "nullable" : true
          }
        }
      },
      "Mobile_UpdateMobileNotificationTokenResponse" : {
        "type" : "object",
        "description" : "Response object for updating mobile notification token for Console app."
      },
      "Mobile_UpdateRhombusKeyMobileNotificationTokenRequest" : {
        "type" : "object",
        "description" : "Request object for updating mobile notification token for Rhombus Key app.",
        "properties" : {
          "token" : {
            "type" : "string",
            "description" : "Rhombus Key mobile notification token",
            "example" : "xyz789abc123",
            "nullable" : true
          }
        }
      },
      "Mobile_UpdateRhombusKeyMobileNotificationTokenResponse" : {
        "type" : "object",
        "description" : "Response object for updating mobile notification token for Rhombus Key app."
      },
      "ModelStatusEnum" : {
        "type" : "string",
        "enum" : [ "READY", "QUANTIZE_IN_PROGRESS", "QUANTIZE_FAILURE" ]
      },
      "ModularAIConfig" : {
        "type" : "object",
        "description" : "List of available modular AI models",
        "properties" : {
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "distributionUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "modelParams" : {
            "$ref" : "#/components/schemas/ModularAIModelParams"
          },
          "modelQuantizedBinaryContentLocator" : {
            "type" : "string",
            "nullable" : true
          },
          "modelStatus" : {
            "$ref" : "#/components/schemas/ModelStatusEnum"
          },
          "modelUploadZipContentLocator" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "pipeline" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PipelineComponent"
            },
            "nullable" : true
          },
          "restrictedOrgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "ModularAIConfigSelectiveUpdate" : {
        "type" : "object",
        "description" : "Selective update configuration for the modular AI model",
        "properties" : {
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "distributionUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "modelParams" : {
            "$ref" : "#/components/schemas/ModularAIModelParams"
          },
          "modelQuantizedBinaryContentLocator" : {
            "type" : "string",
            "nullable" : true
          },
          "modelStatus" : {
            "$ref" : "#/components/schemas/ModelStatusEnum"
          },
          "modelUploadZipContentLocator" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "pipeline" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PipelineComponent"
            },
            "nullable" : true
          },
          "restrictedOrgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "updatedSetMethodMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "boolean",
              "nullable" : true
            },
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "ModularAIDistribution" : {
        "type" : "object",
        "description" : "List of available modular AI distributions",
        "properties" : {
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "restrictedOrgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "ModularAIModelParams" : {
        "type" : "object",
        "properties" : {
          "classOutputMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "inputHeight" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "inputWidth" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Modularai_AddModelToDeviceWSRequest" : {
        "type" : "object",
        "description" : "Request object for adding a modular AI model to a device.",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          },
          "modelUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Modularai_AddModelToDeviceWSResponse" : {
        "type" : "object",
        "description" : "Response object for adding a modular AI model to a device.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Modularai_CreateModularAIDistributionWSRequest" : {
        "type" : "object",
        "description" : "Request object for creating a modular AI distribution.",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "Description of the created model.",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the created model.",
            "nullable" : true
          }
        }
      },
      "Modularai_CreateModularAIDistributionWSResponse" : {
        "type" : "object",
        "description" : "Response object for creating a modular AI distribution.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Modularai_CreateModularAIPipelineConfigWSRequest" : {
        "type" : "object",
        "description" : "Request object for creating a modular AI pipeline config.",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "Description of the created model.",
            "nullable" : true
          },
          "distributionUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the created model.",
            "nullable" : true
          },
          "pipeline" : {
            "type" : "array",
            "description" : "List of pipeline components describing the behavior of the modular ai config.",
            "items" : {
              "$ref" : "#/components/schemas/PipelineComponent"
            },
            "nullable" : true
          }
        }
      },
      "Modularai_CreateModularAIPipelineConfigWSResponse" : {
        "type" : "object",
        "description" : "Response object for creating a modular AI pipeline config.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Modularai_GetDevicesForModelWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting devices running a modular AI model.",
        "properties" : {
          "modelUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Modularai_GetDevicesForModelWSResponse" : {
        "type" : "object",
        "description" : "Response object containing devices running a modular AI model.",
        "properties" : {
          "devices" : {
            "type" : "array",
            "description" : "List of device facet UUIDs running the modular AI model",
            "items" : {
              "type" : "string",
              "format" : "DeviceFacetUuid",
              "description" : "RUUID with optional appended facet information",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
              "nullable" : true
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Modularai_GetModelsAddedToDeviceWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting modular AI models added to a device.",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          }
        }
      },
      "Modularai_GetModelsAddedToDeviceWSResponse" : {
        "type" : "object",
        "description" : "Response object containing modular AI models added to a device.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "models" : {
            "type" : "array",
            "description" : "List of modular AI models added to the device",
            "items" : {
              "$ref" : "#/components/schemas/ModularAIConfig"
            },
            "nullable" : true
          }
        }
      },
      "Modularai_GetModelsForDistributionWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting modular AI models for a given distribution.",
        "properties" : {
          "distributionUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Modularai_GetModelsForDistributionWSResponse" : {
        "type" : "object",
        "description" : "Response object containing available modular AI models for a given distribution.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "models" : {
            "type" : "array",
            "description" : "List of available modular AI models",
            "items" : {
              "$ref" : "#/components/schemas/ModularAIConfig"
            },
            "nullable" : true
          }
        }
      },
      "Modularai_GetModelsWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting available modular AI models."
      },
      "Modularai_GetModelsWSResponse" : {
        "type" : "object",
        "description" : "Response object containing available modular AI models.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "models" : {
            "type" : "array",
            "description" : "List of available modular AI models",
            "items" : {
              "$ref" : "#/components/schemas/ModularAIConfig"
            },
            "nullable" : true
          }
        }
      },
      "Modularai_ListModularAIDistributionsWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting available modular AI distributions."
      },
      "Modularai_ListModularAIDistributionsWSResponse" : {
        "type" : "object",
        "description" : "Response object containing available modular AI distributions.",
        "properties" : {
          "distributions" : {
            "type" : "array",
            "description" : "List of available modular AI distributions",
            "items" : {
              "$ref" : "#/components/schemas/ModularAIDistribution"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Modularai_RemoveModelFromDeviceWSRequest" : {
        "type" : "object",
        "description" : "Request object for removing a modular AI model from a device.",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          },
          "modelUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Modularai_RemoveModelFromDeviceWSResponse" : {
        "type" : "object",
        "description" : "Response object for removing a modular AI model from a device.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Modularai_UpdateModelWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating modular AI model configuration.",
        "properties" : {
          "update" : {
            "$ref" : "#/components/schemas/ModularAIConfigSelectiveUpdate"
          }
        }
      },
      "Modularai_UpdateModelWSResponse" : {
        "type" : "object",
        "description" : "Response object for updating modular AI model configuration."
      },
      "MonitoringEnableStatus" : {
        "type" : "object",
        "description" : "Map of location UUIDs to their monitoring enable status",
        "properties" : {
          "devicesWithActiveSirens" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "nullable" : true
          },
          "disabledOnMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabledOnMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "noNextTimestampReason" : {
            "type" : "string",
            "nullable" : true
          },
          "notEnabledReason" : {
            "type" : "string",
            "nullable" : true
          },
          "recentlyActivatedSirensTimestampMs" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "MultiPart" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "bodyParts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BodyPart"
            },
            "nullable" : true
          },
          "contentDisposition" : {
            "$ref" : "#/components/schemas/ContentDisposition"
          },
          "entity" : {
            "type" : "object",
            "nullable" : true
          },
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "nullable" : true
              },
              "nullable" : true
            },
            "nullable" : true,
            "properties" : {
              "empty" : {
                "type" : "boolean",
                "nullable" : true
              }
            }
          },
          "mediaType" : {
            "$ref" : "#/components/schemas/MediaType"
          },
          "messageBodyWorkers" : {
            "$ref" : "#/components/schemas/MessageBodyWorkers"
          },
          "parameterizedHeaders" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/ParameterizedHeader"
              },
              "nullable" : true
            },
            "nullable" : true,
            "properties" : {
              "empty" : {
                "type" : "boolean",
                "nullable" : true
              }
            }
          },
          "providers" : {
            "$ref" : "#/components/schemas/Providers"
          }
        }
      },
      "MultivaluedMapStringObject" : {
        "type" : "object",
        "additionalProperties" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "nullable" : true
          },
          "nullable" : true
        },
        "nullable" : true,
        "properties" : {
          "empty" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "MultivaluedMapStringParameterizedHeader" : {
        "type" : "object",
        "additionalProperties" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/components/schemas/ParameterizedHeader"
          },
          "nullable" : true
        },
        "nullable" : true,
        "properties" : {
          "empty" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "MultivaluedMapStringString" : {
        "type" : "object",
        "additionalProperties" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "nullable" : true
          },
          "nullable" : true
        },
        "nullable" : true,
        "properties" : {
          "empty" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "NetsuiteInvoiceDetails" : {
        "type" : "object",
        "properties" : {
          "billingContactEmail" : {
            "type" : "string",
            "nullable" : true
          },
          "billingContactName" : {
            "type" : "string",
            "nullable" : true
          },
          "billingcontactemail" : {
            "type" : "string",
            "nullable" : true
          },
          "billingcontactname" : {
            "type" : "string",
            "nullable" : true
          },
          "clientOrgName" : {
            "type" : "string",
            "nullable" : true
          },
          "clientorgname" : {
            "type" : "string",
            "nullable" : true,
            "writeOnly" : true
          },
          "dueDate" : {
            "type" : "string",
            "nullable" : true
          },
          "duedate" : {
            "type" : "string",
            "nullable" : true
          },
          "invoiceDate" : {
            "type" : "string",
            "nullable" : true
          },
          "invoiceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "invoicedate" : {
            "type" : "string",
            "nullable" : true,
            "writeOnly" : true
          },
          "invoiceinternalid" : {
            "type" : "string",
            "nullable" : true
          },
          "invoiceuuid" : {
            "type" : "string",
            "nullable" : true,
            "writeOnly" : true
          },
          "lineItems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LineItems"
            },
            "nullable" : true
          },
          "lineitems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/LineItems"
            },
            "nullable" : true
          },
          "partnerOrgName" : {
            "type" : "string",
            "nullable" : true
          },
          "partnerorgname" : {
            "type" : "string",
            "nullable" : true,
            "writeOnly" : true
          },
          "paymentid" : {
            "type" : "string",
            "nullable" : true
          },
          "status" : {
            "type" : "string",
            "nullable" : true
          },
          "totalBalance" : {
            "type" : "number",
            "nullable" : true
          },
          "totalbalance" : {
            "type" : "number",
            "nullable" : true
          },
          "transactionId" : {
            "type" : "string",
            "nullable" : true
          },
          "transactionid" : {
            "type" : "string",
            "nullable" : true
          },
          "unpaidBalance" : {
            "type" : "number",
            "nullable" : true
          },
          "unpaidbalance" : {
            "type" : "number",
            "nullable" : true,
            "writeOnly" : true
          }
        }
      },
      "Network_GetDeviceNetworkConfigurationWSRequest" : {
        "type" : "object",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Network_GetDeviceNetworkConfigurationWSResponse" : {
        "type" : "object",
        "properties" : {
          "ipConfigurations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Network_IpConfiguration"
            },
            "nullable" : true
          }
        }
      },
      "Network_IpConfiguration" : {
        "type" : "object",
        "properties" : {
          "dnsServer1" : {
            "type" : "string",
            "description" : "Primary DNS server. Will only be set if mode is STATIC.",
            "nullable" : true
          },
          "dnsServer2" : {
            "type" : "string",
            "description" : "Secondary DNS server. Will only be set if mode is STATIC.",
            "nullable" : true
          },
          "gateway" : {
            "type" : "string",
            "description" : "Gateway address. Will only be set if mode is STATIC.",
            "nullable" : true
          },
          "ipAddress" : {
            "type" : "string",
            "description" : "IP address. Will only be set if mode is STATIC.",
            "nullable" : true
          },
          "isSecondary" : {
            "type" : "boolean",
            "description" : "Indicates whether this IP configuration is secondary. Default is false (primary).",
            "nullable" : true
          },
          "mode" : {
            "$ref" : "#/components/schemas/Network_NetworkConfigurationModeEnum"
          },
          "netmask" : {
            "type" : "string",
            "description" : "Subnet mask. Will only be set if mode is STATIC.",
            "nullable" : true
          }
        }
      },
      "Network_NetworkConfigurationModeEnum" : {
        "type" : "string",
        "description" : "Network configuration mode for devices.",
        "enum" : [ "DHCP", "STATIC" ]
      },
      "Network_UpdateDeviceIpConfigurationWSRequest" : {
        "type" : "object",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "ipConfiguration" : {
            "$ref" : "#/components/schemas/Network_IpConfiguration"
          }
        }
      },
      "Network_UpdateDeviceIpConfigurationWSResponse" : {
        "type" : "object",
        "properties" : {
          "ipConfiguration" : {
            "$ref" : "#/components/schemas/Network_IpConfiguration"
          }
        }
      },
      "NewCookie" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "comment" : {
            "type" : "string",
            "nullable" : true
          },
          "domain" : {
            "type" : "string",
            "nullable" : true
          },
          "expiry" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "httpOnly" : {
            "type" : "boolean",
            "nullable" : true
          },
          "maxAge" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "path" : {
            "type" : "string",
            "nullable" : true
          },
          "sameSite" : {
            "type" : "string",
            "enum" : [ "NONE", "LAX", "STRICT" ],
            "nullable" : true
          },
          "secure" : {
            "type" : "boolean",
            "nullable" : true
          },
          "value" : {
            "type" : "string",
            "nullable" : true
          },
          "version" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "NineOneOneCellularType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "bearerToken" : {
              "type" : "string",
              "nullable" : true
            },
            "saveClips" : {
              "type" : "boolean",
              "nullable" : true
            },
            "securityZoneMap" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/SecurityZoneInfoType"
              },
              "nullable" : true
            },
            "triggerNotification" : {
              "type" : "boolean",
              "nullable" : true
            },
            "webhookToken" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "zonesValidated" : {
              "type" : "boolean",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "NoonlightPromptSelection" : {
        "type" : "object",
        "properties" : {
          "mutable" : {
            "type" : "boolean",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "reasons" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "NO_PERSON", "ROUTINE_EMPLOYEE", "PERSON_OUTSIDE", "PERSON_INSIDE", "OTHER", "SERVICES_ONSITE", "MOVING_VEHICLE", "CAMERA_OBSTRUCTED", "VIDEO_ISSUE", "PERSON_OTHER", "NO_PERSON_OTHER", "LOAD_FAILURE", "ACTIVE_CRIME", "UNKNOWN_PERSON_INSIDE", "UNKNOWN_SUSPECT_OUTSIDE", "UNKNOWN_SUSPECT_INSIDE", "UNKNOWN_PERSON_OUTSIDE", "OTHER_CONCLUSIVE_RESULT", "TIMEOUT" ],
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "title" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "NoonlightPromptTheme" : {
        "type" : "string",
        "enum" : [ "THREAT", "HUMAN" ]
      },
      "NoonlightScheduleType" : {
        "type" : "object",
        "properties" : {
          "audioGateways" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "escalationDelayMinutes" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "monitoredDevices" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "promptTheme" : {
            "$ref" : "#/components/schemas/NoonlightPromptTheme"
          },
          "promptTitle" : {
            "type" : "string",
            "nullable" : true
          },
          "scheduleUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "sirenSettings" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/AMSirenSettingsType"
            },
            "nullable" : true
          },
          "triggerSet" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ActivityEnum"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "tripwire" : {
            "$ref" : "#/components/schemas/TripwireSettingsType"
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "verifiedThreatSiren" : {
            "$ref" : "#/components/schemas/AMSirenSettingsType"
          }
        }
      },
      "NoonlightSettings" : {
        "type" : "object",
        "properties" : {
          "acceptedTermsOfService" : {
            "type" : "boolean",
            "nullable" : true
          },
          "defaultContactsByLocationMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/EmergencyContact"
            },
            "nullable" : true
          },
          "defaultDelayByLocationsMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "nullable" : true
          },
          "defaultPromptByLocationsMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/NoonlightPromptTheme"
            },
            "nullable" : true
          },
          "emergencyContactsByLocationsMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/EmergencyResponseContactsIntervalType"
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "escalationSettingsByLocationsMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/AlertMonitoringSubmissionDelayIntervalType"
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "locationEntryInstructionsMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "pinsByLocationMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/AlertMonitoringPinType"
              },
              "nullable" : true,
              "uniqueItems" : true
            },
            "nullable" : true
          },
          "verificationPrompt" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "NoonlightVersionedSettingsType" : {
        "type" : "object",
        "description" : "Updated alert monitoring settings configuration for the location",
        "properties" : {
          "acceptedTermsOfService" : {
            "type" : "boolean",
            "nullable" : true
          },
          "badgeAuthDisablesMonitoring" : {
            "type" : "boolean",
            "nullable" : true
          },
          "defaultDelay" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "defaultEmergencyContact" : {
            "$ref" : "#/components/schemas/EmergencyContact"
          },
          "defaultPromptTheme" : {
            "$ref" : "#/components/schemas/NoonlightPromptTheme"
          },
          "deleted" : {
            "type" : "boolean",
            "nullable" : true
          },
          "emergencyContacts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EmergencyResponseContactsScheduleType"
            },
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "entryInstructions" : {
            "type" : "string",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "manualEscalationSettings" : {
            "$ref" : "#/components/schemas/NoonlightScheduleType"
          },
          "modifiedByEmail" : {
            "type" : "string",
            "nullable" : true
          },
          "modifiedByIntegration" : {
            "type" : "boolean",
            "nullable" : true
          },
          "modifiedByMetadata" : {
            "type" : "string",
            "nullable" : true
          },
          "modifiedByUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "modifiedTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "monitoringMode" : {
            "type" : "string",
            "enum" : [ "MANUAL", "SCHEDULED", "UNKNOWN" ],
            "nullable" : true
          },
          "oneTimePauses" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NoonlightScheduleType"
            },
            "nullable" : true
          },
          "oneTimeSchedules" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NoonlightScheduleType"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "pins" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AlertMonitoringPinType"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "rules" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "schedules" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NoonlightScheduleType"
            },
            "nullable" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "talkdownEnabled" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "NormalStateEnumType" : {
        "type" : "string",
        "enum" : [ "NO", "NC" ]
      },
      "NotificationEnumType" : {
        "type" : "string",
        "enum" : [ "SMS", "EMAIL", "APP", "SLACK", "MICROSOFT_TEAMS", "BROWSER", "UNKNOWN" ]
      },
      "NotificationFollowUp" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "userUuids" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "RUUID",
                "description" : "base 64 (url-safe) uuid string",
                "example" : "AAAAAAAAAAAAAAAAAAAAAA",
                "nullable" : true
              },
              "nullable" : true,
              "uniqueItems" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/Action"
          }
        }
      },
      "NotificationIntervalV2Type" : {
        "type" : "object",
        "properties" : {
          "activityTriggerMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/NotificationEnumType"
              },
              "nullable" : true,
              "uniqueItems" : true
            },
            "nullable" : true
          },
          "deviceFilterSet" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "diagnosticTriggerMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/NotificationEnumType"
              },
              "nullable" : true,
              "uniqueItems" : true
            },
            "nullable" : true
          },
          "locationActivityTriggerMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/NotificationEnumType"
              },
              "nullable" : true,
              "uniqueItems" : true
            },
            "nullable" : true
          },
          "locationDiagnosticTriggerMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/NotificationEnumType"
              },
              "nullable" : true,
              "uniqueItems" : true
            },
            "nullable" : true
          },
          "locationFilterSet" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "locationOnlyFilterSet" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "minuteOfWeekStart" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "minuteOfWeekStop" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "NotificationSettingsType" : {
        "type" : "object",
        "properties" : {
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "slackChannel" : {
            "type" : "string",
            "nullable" : true
          },
          "slackEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "slackWebhookUrl" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "NotificationTimeFrame" : {
        "type" : "object",
        "properties" : {
          "days" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "MONDAY", "TUESDAY", "WEDNESDAY", "THURSDAY", "FRIDAY", "SATURDAY", "SUNDAY" ],
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "interval" : {
            "$ref" : "#/components/schemas/MinuteOfDayIntervalType"
          },
          "mediums" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NotificationEnumType"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "rows" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NotificationTimeFrameRow"
            },
            "nullable" : true
          }
        }
      },
      "NotificationTimeFrameRow" : {
        "type" : "object",
        "properties" : {
          "activities" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ActivityEnum"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "devices" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "DeviceFacetUuid",
              "description" : "RUUID with optional appended facet information",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "diagnostics" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "CAMERA_CONNECTED", "CAMERA_DISCONNECTED", "STARTUP", "GATEWAY_CONNECTED", "GATEWAY_DISCONNECTED", "UPDATE_STARTED", "UPDATE_FIRMWARE_DOWNLOADED", "UPDATE_FIRMWARE_APPLIED", "UPDATE_STARTING_REBOOT", "UPDATE_FAILED_MD5_MISMATCH", "UPDATE_FAILED_ACCESS_DENIED", "UPDATE_FAILED_MITM", "UPDATE_FAILED_CONNNECTION_REFUSED", "UPDATE_FAILED_CONNNECTION_TIMEOUT", "UPDATE_FAILED_CONNECTION_REFUSED", "UPDATE_FAILED_CONNECTION_TIMEOUT", "UPDATE_FAILED_DNS_FAILURE", "UPDATE_RUNNING", "BLE_CONNECTED", "BLE_CONNECTION_FAILED", "BLE_DISCONNECTED", "BLE_OP_SUCCESS", "BLE_OP_FAILURE", "UPLOAD_CLIP_SUCCESS", "UPLOAD_CLIP_FAILURE", "NOTIFICATION_FAILURE", "USB_FAILURE_REBOOT", "PERSISTENT_STORAGE_FAILURE", "PING", "FORCED_REBOOT", "AUTO_REBOOT", "AUDIO_HARDWARE_NOT_DETECTED", "ENCRYPTED_CONTAINER_FAILURE_CREATE", "ENCRYPTED_CONTAINER_FAILURE_OPEN", "ENCRYPTED_CONTAINER_FAILURE_MOUNT", "VIDEO_HARDWARE_FAILURE", "WIFI_NETWORK_CHANGED", "AI_ENGINE_DOWNLOADED", "AI_ENGINE_DOWNLOAD_FAILED_MD5_MISMATCH", "AI_ENGINE_CONFIGURED", "AI_ENGINE_CONFIGURATION_FAILED", "MITM_FAILURE", "SERVER_RECONNECT", "AP_CHANGED", "WATCHDOG_KILLED_AGENT", "WATCHDOG_DID_RESET", "CLIMATE_OFFLINE", "CLIMATE_ONLINE", "CLIMATE_LOW_BATTERY", "CLIMATE_PROBE_CONNECTED", "CLIMATE_PROBE_DISCONNECTED", "DOOR_OFFLINE", "DOOR_ONLINE", "DOOR_LOW_BATTERY", "OCCUPANCY_SENSOR_ONLINE", "OCCUPANCY_SENSOR_OFFLINE", "OCCUPANCY_SENSOR_LOW_BATTERY", "BUTTON_OFFLINE", "BUTTON_ONLINE", "BUTTON_LOW_BATTERY", "PROXIMITY_LOW_BATTERY", "DOOR_CONTROLLER_CONNECTED", "DOOR_CONTROLLER_DISCONNECTED", "APERIO_LOW_BATTERY", "APERIO_FLAT_BATTERY", "APERIO_OK_BATTERY", "APERIO_GW_CONNECTED", "APERIO_GW_DISCONNECTED", "BADGE_READER_CONNECTED", "BADGE_READER_DISCONNECTED", "REBOOT", "NETWORK_INTERRUPTION", "OPENPATH_WEBHOOK_FAILURE", "TOAST_WEBHOOK_FAILURE", "KISI_WEBHOOK_FAILURE", "BRIVO_WEBHOOK_FAILURE", "HALO_WEBHOOK_FAILURE", "SALTO_WEBHOOK_FAILURE", "SQUARE_WEBHOOK_FAILURE", "BUTTERFLYMX_WEBHOOK_FAILURE", "ENVOY_WEBHOOK_FAILURE", "GENEA_WEBHOOK_FAILURE", "PRODATAKEY_WEBHOOK_FAILURE", "AMT_WEBHOOK_FAILURE", "PLACEOS_WEBHOOK_FAILURE", "OMNIALERT_WEBHOOK_FAILURE", "FLIC_WEBHOOK_FAILURE", "PIMLOC_WEBHOOK_FAILURE", "NINEONEONECELLULAR_WEBHOOK_FAILURE", "CV_FAILURE", "NFC_HW_FAILURE", "CONFIG_ERROR", "HW_FAILURE", "KEYPAD_ONLINE", "KEYPAD_OFFLINE", "ALM_OVERAGE_APPROACHING", "ALM_OVERAGE_REACHED", "ALM_OVERAGE_EXCEEDED", "ALM_EXCESSIVE_VERIFICATIONS", "ALM_AUTHORITIES_CONTACTED", "ALM_MONITORING_ENABLED", "ALM_MONITORING_DISABLED", "ALM_MONITORING_SETTINGS_CHANGE", "ALM_THREAT_CASE_CLOSED", "ALM_THREAT_DETECTED", "KIOSK_OFFLINE", "KIOSK_ONLINE", "TUNNELED_DEVICE_CONNECTED", "TUNNELED_DEVICE_DISCONNECTED", "SD_CARD_CHANGED", "SUPERVISION_CUT_DETECTED", "SUPERVISION_SHORT_DETECTED", "SUPERVISION_INVALID_SETUP", "THIRD_PARTY_DEVICE_CONNECTED", "THIRD_PARTY_DEVICE_DISCONNECTED", "UNKNOWN" ],
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "locationOnly" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "locationOnlyActivities" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ActivityEnum"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "locationOnlyDiagnostics" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "CAMERA_CONNECTED", "CAMERA_DISCONNECTED", "STARTUP", "GATEWAY_CONNECTED", "GATEWAY_DISCONNECTED", "UPDATE_STARTED", "UPDATE_FIRMWARE_DOWNLOADED", "UPDATE_FIRMWARE_APPLIED", "UPDATE_STARTING_REBOOT", "UPDATE_FAILED_MD5_MISMATCH", "UPDATE_FAILED_ACCESS_DENIED", "UPDATE_FAILED_MITM", "UPDATE_FAILED_CONNNECTION_REFUSED", "UPDATE_FAILED_CONNNECTION_TIMEOUT", "UPDATE_FAILED_CONNECTION_REFUSED", "UPDATE_FAILED_CONNECTION_TIMEOUT", "UPDATE_FAILED_DNS_FAILURE", "UPDATE_RUNNING", "BLE_CONNECTED", "BLE_CONNECTION_FAILED", "BLE_DISCONNECTED", "BLE_OP_SUCCESS", "BLE_OP_FAILURE", "UPLOAD_CLIP_SUCCESS", "UPLOAD_CLIP_FAILURE", "NOTIFICATION_FAILURE", "USB_FAILURE_REBOOT", "PERSISTENT_STORAGE_FAILURE", "PING", "FORCED_REBOOT", "AUTO_REBOOT", "AUDIO_HARDWARE_NOT_DETECTED", "ENCRYPTED_CONTAINER_FAILURE_CREATE", "ENCRYPTED_CONTAINER_FAILURE_OPEN", "ENCRYPTED_CONTAINER_FAILURE_MOUNT", "VIDEO_HARDWARE_FAILURE", "WIFI_NETWORK_CHANGED", "AI_ENGINE_DOWNLOADED", "AI_ENGINE_DOWNLOAD_FAILED_MD5_MISMATCH", "AI_ENGINE_CONFIGURED", "AI_ENGINE_CONFIGURATION_FAILED", "MITM_FAILURE", "SERVER_RECONNECT", "AP_CHANGED", "WATCHDOG_KILLED_AGENT", "WATCHDOG_DID_RESET", "CLIMATE_OFFLINE", "CLIMATE_ONLINE", "CLIMATE_LOW_BATTERY", "CLIMATE_PROBE_CONNECTED", "CLIMATE_PROBE_DISCONNECTED", "DOOR_OFFLINE", "DOOR_ONLINE", "DOOR_LOW_BATTERY", "OCCUPANCY_SENSOR_ONLINE", "OCCUPANCY_SENSOR_OFFLINE", "OCCUPANCY_SENSOR_LOW_BATTERY", "BUTTON_OFFLINE", "BUTTON_ONLINE", "BUTTON_LOW_BATTERY", "PROXIMITY_LOW_BATTERY", "DOOR_CONTROLLER_CONNECTED", "DOOR_CONTROLLER_DISCONNECTED", "APERIO_LOW_BATTERY", "APERIO_FLAT_BATTERY", "APERIO_OK_BATTERY", "APERIO_GW_CONNECTED", "APERIO_GW_DISCONNECTED", "BADGE_READER_CONNECTED", "BADGE_READER_DISCONNECTED", "REBOOT", "NETWORK_INTERRUPTION", "OPENPATH_WEBHOOK_FAILURE", "TOAST_WEBHOOK_FAILURE", "KISI_WEBHOOK_FAILURE", "BRIVO_WEBHOOK_FAILURE", "HALO_WEBHOOK_FAILURE", "SALTO_WEBHOOK_FAILURE", "SQUARE_WEBHOOK_FAILURE", "BUTTERFLYMX_WEBHOOK_FAILURE", "ENVOY_WEBHOOK_FAILURE", "GENEA_WEBHOOK_FAILURE", "PRODATAKEY_WEBHOOK_FAILURE", "AMT_WEBHOOK_FAILURE", "PLACEOS_WEBHOOK_FAILURE", "OMNIALERT_WEBHOOK_FAILURE", "FLIC_WEBHOOK_FAILURE", "PIMLOC_WEBHOOK_FAILURE", "NINEONEONECELLULAR_WEBHOOK_FAILURE", "CV_FAILURE", "NFC_HW_FAILURE", "CONFIG_ERROR", "HW_FAILURE", "KEYPAD_ONLINE", "KEYPAD_OFFLINE", "ALM_OVERAGE_APPROACHING", "ALM_OVERAGE_REACHED", "ALM_OVERAGE_EXCEEDED", "ALM_EXCESSIVE_VERIFICATIONS", "ALM_AUTHORITIES_CONTACTED", "ALM_MONITORING_ENABLED", "ALM_MONITORING_DISABLED", "ALM_MONITORING_SETTINGS_CHANGE", "ALM_THREAT_CASE_CLOSED", "ALM_THREAT_DETECTED", "KIOSK_OFFLINE", "KIOSK_ONLINE", "TUNNELED_DEVICE_CONNECTED", "TUNNELED_DEVICE_DISCONNECTED", "SD_CARD_CHANGED", "SUPERVISION_CUT_DETECTED", "SUPERVISION_SHORT_DETECTED", "SUPERVISION_INVALID_SETUP", "THIRD_PARTY_DEVICE_CONNECTED", "THIRD_PARTY_DEVICE_DISCONNECTED", "UNKNOWN" ],
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "locations" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "promptUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "NumericAggregationValue" : {
        "type" : "object",
        "description" : "Map of numeric count reports",
        "nullable" : true,
        "properties" : {
          "average" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "eventCount" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "localDate" : {
            "type" : "string",
            "nullable" : true
          },
          "max" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "maxValueTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "min" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "minValueTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "sum" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "utcDate" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "OAuthApplication" : {
        "type" : "object",
        "description" : "OAuth application details",
        "properties" : {
          "clientId" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "clientSecretHash" : {
            "type" : "string",
            "nullable" : true
          },
          "contactEmail" : {
            "type" : "string",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "redirectUri" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Oauth_GetAllApplicationsForOrgWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting all OAuth applications for an organization."
      },
      "Oauth_GetAllApplicationsForOrgWSResponse" : {
        "type" : "object",
        "description" : "Response object containing all OAuth applications for an organization.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "oauthApplications" : {
            "type" : "array",
            "description" : "List of OAuth applications for the organization",
            "items" : {
              "$ref" : "#/components/schemas/OAuthApplication"
            },
            "nullable" : true
          }
        }
      },
      "Oauth_GetApplicationByClientIdWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting OAuth application by client ID.",
        "properties" : {
          "clientId" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Oauth_GetApplicationByClientIdWSResponse" : {
        "type" : "object",
        "description" : "Response object containing OAuth application details.",
        "properties" : {
          "application" : {
            "$ref" : "#/components/schemas/OAuthApplication"
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Oauth_OAuthApplicationWSRequest" : {
        "type" : "object",
        "description" : "Request object for OAuth application management.",
        "properties" : {
          "clientId" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "contactEmail" : {
            "type" : "string",
            "description" : "Contact email for the OAuth application",
            "example" : "admin@myapp.com",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "description" : "Description of the OAuth application",
            "example" : "Integration app for accessing Rhombus API",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the OAuth application",
            "example" : "My Integration App",
            "nullable" : true
          },
          "redirectUri" : {
            "type" : "string",
            "description" : "OAuth redirect URI",
            "example" : "https://myapp.com/oauth/callback",
            "nullable" : true
          }
        }
      },
      "Oauth_OAuthApplicationWSResponse" : {
        "type" : "object",
        "description" : "Response object containing OAuth application credentials.",
        "properties" : {
          "clientId" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "clientSecret" : {
            "type" : "string",
            "description" : "OAuth client secret",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "ObjectSearchModelEnum" : {
        "type" : "string",
        "description" : "Object search model to use for embeddings",
        "enum" : [ "CLIP_512", "UNKNOWN" ]
      },
      "OccupancyEventType" : {
        "type" : "object",
        "description" : "List of occupancy events for the sensor",
        "properties" : {
          "baseStationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "batteryPercentage" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "bleDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "bleRssi" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "closeBaseStations" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "lux" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "state" : {
            "type" : "string",
            "enum" : [ "VACANT", "MOVEMENT", "OCCUPIED" ],
            "nullable" : true
          },
          "stateChanged" : {
            "type" : "boolean",
            "nullable" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "tampered" : {
            "type" : "boolean",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "OccupancyPolicyType" : {
        "type" : "object",
        "description" : "List of occupancy policies using the schedule",
        "properties" : {
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "scheduledTriggers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OccupancyScheduledTriggerType"
            },
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "OccupancyScheduledTriggerType" : {
        "type" : "object",
        "properties" : {
          "occupancyThresholdSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "schedule" : {
            "$ref" : "#/components/schemas/WeeklyRepeatingScheduleType"
          },
          "triggerSet" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ActivityEnum"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "vacancyThresholdSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Occupancysensor_GetMinimalOccupancySensorStatesWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting minimal occupancy sensor states for all sensors in organization."
      },
      "Occupancysensor_GetMinimalOccupancySensorStatesWSResponse" : {
        "type" : "object",
        "description" : "Response object containing minimal occupancy sensor states for all sensors in organization.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "occupancySensorStates" : {
            "type" : "array",
            "description" : "List of minimal occupancy sensor states",
            "items" : {
              "$ref" : "#/components/schemas/Occupancysensor_MinimalOccupancySensorStateType"
            },
            "nullable" : true
          }
        }
      },
      "Occupancysensor_GetOccupancyEventsForSensorWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting occupancy events for a specific sensor.",
        "properties" : {
          "createdAfterMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Filter events created after this timestamp (milliseconds since epoch)",
            "example" : 1640908800000,
            "nullable" : true
          },
          "createdBeforeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Filter events created before this timestamp (milliseconds since epoch)",
            "example" : 1640995200000,
            "nullable" : true
          },
          "limit" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Maximum number of events to return",
            "example" : 100,
            "nullable" : true
          },
          "sensorUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Occupancysensor_GetOccupancyEventsForSensorWSResponse" : {
        "type" : "object",
        "description" : "Response object containing occupancy events for a specific sensor.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "events" : {
            "type" : "array",
            "description" : "List of occupancy events for the sensor",
            "items" : {
              "$ref" : "#/components/schemas/OccupancyEventType"
            },
            "nullable" : true
          }
        }
      },
      "Occupancysensor_MinimalOccupancySensorStateType" : {
        "type" : "object",
        "description" : "Minimal state information for occupancy sensors including health, location, and sensor data.",
        "properties" : {
          "associatedCameras" : {
            "type" : "array",
            "description" : "List of associated camera device facet UUIDs",
            "items" : {
              "type" : "string",
              "format" : "DeviceFacetUuid",
              "description" : "RUUID with optional appended facet information",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
              "nullable" : true
            },
            "nullable" : true
          },
          "batteryPercent" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Battery percentage of the sensor",
            "example" : 85,
            "nullable" : true
          },
          "closestBaseStation" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "firmwareVersion" : {
            "type" : "string",
            "description" : "Firmware version of the sensor",
            "example" : "1.2.3",
            "nullable" : true
          },
          "floorNumber" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Floor number where the sensor is located",
            "example" : 2,
            "nullable" : true
          },
          "health" : {
            "$ref" : "#/components/schemas/Occupancysensor_MotionSensorHealthEnum"
          },
          "healthDetails" : {
            "$ref" : "#/components/schemas/Occupancysensor_MotionSensorHealthDetailsEnum"
          },
          "hwVariation" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "lastSeenSec" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Timestamp when the sensor was last seen (seconds since epoch)",
            "example" : 1640995200,
            "nullable" : true
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "description" : "Latitude coordinate of the sensor location",
            "example" : 37.7749,
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "description" : "Longitude coordinate of the sensor location",
            "example" : -122.4194,
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the occupancy sensor",
            "example" : "Conference Room Sensor",
            "nullable" : true
          },
          "normalizedLux" : {
            "type" : "number",
            "format" : "float",
            "description" : "Normalized lux value (0-1) matching human perception of lighting transitions",
            "example" : 0.75,
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "rawLux" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Raw lux value from the sensor",
            "example" : 500,
            "nullable" : true
          },
          "sensorUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "serialNumber" : {
            "type" : "string",
            "description" : "Serial number of the occupancy sensor",
            "example" : "RH123456789",
            "nullable" : true
          },
          "signalStrength" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Signal strength of the sensor",
            "example" : -45,
            "nullable" : true
          },
          "status" : {
            "type" : "string",
            "description" : "Current occupancy status of the sensor",
            "enum" : [ "VACANT", "MOVEMENT", "OCCUPIED" ],
            "nullable" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          }
        }
      },
      "Occupancysensor_MotionSensorHealthDetailsEnum" : {
        "type" : "string",
        "description" : "Detailed motion sensor health status.",
        "enum" : [ "NO_HEARTBEAT", "FIRMWARE_BEHIND", "NONE" ]
      },
      "Occupancysensor_MotionSensorHealthEnum" : {
        "type" : "string",
        "description" : "Motion sensor health status.",
        "enum" : [ "RED", "GREEN" ]
      },
      "Occupancysensor_UpdateOccupancySensorDetailsWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating occupancy sensor details with selective update flags.",
        "properties" : {
          "associatedCameras" : {
            "type" : "array",
            "description" : "List of associated camera device facet UUIDs",
            "items" : {
              "type" : "string",
              "format" : "DeviceFacetUuid",
              "description" : "RUUID with optional appended facet information",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
              "nullable" : true
            },
            "nullable" : true
          },
          "associatedCamerasUpdated" : {
            "type" : "boolean",
            "description" : "Whether the associated cameras should be updated",
            "example" : false,
            "nullable" : true
          },
          "deleted" : {
            "type" : "boolean",
            "description" : "Whether the sensor is marked as deleted",
            "example" : false,
            "nullable" : true
          },
          "deletedUpdated" : {
            "type" : "boolean",
            "description" : "Whether the deleted status should be updated",
            "example" : false,
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "description" : "Description of the occupancy sensor",
            "example" : "Motion sensor for conference room A",
            "nullable" : true
          },
          "descriptionUpdated" : {
            "type" : "boolean",
            "description" : "Whether the description should be updated",
            "example" : false,
            "nullable" : true
          },
          "floorNumber" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Floor number where the sensor is located",
            "example" : 2,
            "nullable" : true
          },
          "floorNumberUpdated" : {
            "type" : "boolean",
            "description" : "Whether the floor number should be updated",
            "example" : false,
            "nullable" : true
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "description" : "Latitude coordinate of the sensor location",
            "example" : 37.7749,
            "nullable" : true
          },
          "latitudeUpdated" : {
            "type" : "boolean",
            "description" : "Whether the latitude should be updated",
            "example" : false,
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "locationUuidUpdated" : {
            "type" : "boolean",
            "description" : "Whether the location UUID should be updated",
            "example" : false,
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "description" : "Longitude coordinate of the sensor location",
            "example" : -122.4194,
            "nullable" : true
          },
          "longitudeUpdated" : {
            "type" : "boolean",
            "description" : "Whether the longitude should be updated",
            "example" : false,
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the occupancy sensor",
            "example" : "Conference Room Sensor",
            "nullable" : true
          },
          "nameUpdated" : {
            "type" : "boolean",
            "description" : "Whether the name should be updated",
            "example" : false,
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "policyUuidUpdated" : {
            "type" : "boolean",
            "description" : "Whether the policy UUID should be updated",
            "example" : false,
            "nullable" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "subLocationsHierarchyKeyUpdated" : {
            "type" : "boolean",
            "description" : "Whether the sub-locations hierarchy key should be updated",
            "example" : false,
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Occupancysensor_UpdateOccupancySensorDetailsWSResponse" : {
        "type" : "object",
        "description" : "Response object for updating occupancy sensor details.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "OccupiedActivityEventType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "occupancyThresholdSec" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "activityEvent" : {
            "$ref" : "#/components/schemas/ActivityEnum"
          }
        }
      },
      "Office365Settings" : {
        "type" : "object",
        "description" : "Office 365 integration settings to update",
        "properties" : {
          "driveId" : {
            "type" : "string",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabledTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "enablingUser" : {
            "type" : "string",
            "nullable" : true
          },
          "enablingUserUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "tenantId" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "OmnialertType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "associatedCameras" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "RUUID",
                "description" : "base 64 (url-safe) uuid string",
                "example" : "AAAAAAAAAAAAAAAAAAAAAA",
                "nullable" : true
              },
              "nullable" : true,
              "uniqueItems" : true
            },
            "saveClips" : {
              "type" : "boolean",
              "nullable" : true
            },
            "triggerNotification" : {
              "type" : "boolean",
              "nullable" : true
            },
            "webhookToken" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "OpenAIModel" : {
        "type" : "object",
        "description" : "List of available OpenAI models",
        "properties" : {
          "created" : {
            "type" : "string",
            "nullable" : true
          },
          "id" : {
            "type" : "string",
            "nullable" : true
          },
          "object" : {
            "type" : "string",
            "nullable" : true
          },
          "ownedBy" : {
            "type" : "string",
            "nullable" : true
          },
          "owned_by" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "OpenAIType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "apiToken" : {
              "type" : "string",
              "nullable" : true
            },
            "baseUrl" : {
              "type" : "string",
              "description" : "The base url for any OpenAI Chat Completions compliant API. For example, to use Gemini models, set this to 'https://generativelanguage.googleapis.com/v1beta/openai/'.  If left blank, we will try to use OpenAI models.",
              "nullable" : true
            },
            "defaultModel" : {
              "type" : "string",
              "description" : "The model identifier to use as a default model.  This is provider specific and typically found on model card pages. For example, set to 'gemini-2.0-flash' to use the Gemini 2.0 Flash model.  Currently we require a model with vision capabilities for this integration.",
              "nullable" : true
            },
            "refreshToken" : {
              "type" : "string",
              "nullable" : true
            },
            "tokenValid" : {
              "type" : "boolean",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Openapi_GetOpenApiComponentSchemasWSRequest" : {
        "type" : "object",
        "description" : "Request object for exposing custom objects and enums to OpenAPI component schemas.",
        "properties" : {
          "changeType" : {
            "$ref" : "#/components/schemas/ChangeType"
          },
          "entity" : {
            "$ref" : "#/components/schemas/Entity"
          },
          "locationFunctionality" : {
            "$ref" : "#/components/schemas/LocationFunctionality"
          }
        }
      },
      "OpenpathSettings" : {
        "type" : "object",
        "properties" : {
          "alertUnauthorizedFaces" : {
            "type" : "boolean",
            "nullable" : true
          },
          "createSeekPoints" : {
            "type" : "boolean",
            "nullable" : true
          },
          "doorInfoMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/BadgeIntegrationDoorInfoType"
            },
            "nullable" : true
          },
          "doorToCameraMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "RUUID",
                "description" : "base 64 (url-safe) uuid string",
                "example" : "AAAAAAAAAAAAAAAAAAAAAA",
                "nullable" : true
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "email" : {
            "type" : "string",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabledTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "enablingUser" : {
            "type" : "string",
            "nullable" : true
          },
          "enablingUserUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "eventToWebhookIdMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "nullable" : true
          },
          "eventToWebhookMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/WebhookMapEntry"
            },
            "nullable" : true
          },
          "identifyFacesFromBadge" : {
            "type" : "boolean",
            "nullable" : true
          },
          "migrated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "password" : {
            "type" : "string",
            "nullable" : true
          },
          "rhombusToken" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "saveClips" : {
            "type" : "boolean",
            "nullable" : true
          },
          "webhookId" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "OpentechAllianceActionGroupType" : {
        "type" : "object",
        "properties" : {
          "actionGroupId" : {
            "type" : "string",
            "nullable" : true
          },
          "deviceId" : {
            "type" : "string",
            "nullable" : true
          },
          "locationName" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "OpentechAllianceDoorInfoType" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "actionGroupId" : {
            "type" : "string",
            "nullable" : true
          },
          "assignedCameraList" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          },
          "clipDuration" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "doorName" : {
            "type" : "string",
            "nullable" : true
          },
          "leadingSeconds" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "remoteUnlock" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "OpentechAllianceFacilitySettings" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "alertUnauthorizedFaces" : {
            "type" : "boolean",
            "nullable" : true
          },
          "createSeekPoints" : {
            "type" : "boolean",
            "nullable" : true
          },
          "doorInfoMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/OpentechAllianceDoorInfoType"
            },
            "nullable" : true
          },
          "identifyFacesFromBadge" : {
            "type" : "boolean",
            "nullable" : true
          },
          "saveClips" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "OpentechAllianceFacilityType" : {
        "type" : "object",
        "properties" : {
          "actionGroups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/OpentechAllianceActionGroupType"
            },
            "nullable" : true
          },
          "deviceList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DoorType"
            },
            "nullable" : true
          },
          "id" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "OpentechAllianceSettings" : {
        "type" : "object",
        "properties" : {
          "apiKey" : {
            "type" : "string",
            "nullable" : true
          },
          "apiSecret" : {
            "type" : "string",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabledTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "enablingUser" : {
            "type" : "string",
            "nullable" : true
          },
          "enablingUserUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "facilityToSettingsMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/OpentechAllianceFacilitySettings"
            },
            "nullable" : true
          },
          "migrated" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "OpentechAllianceType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "apiKey" : {
              "type" : "string",
              "nullable" : true
            },
            "apiSecret" : {
              "type" : "string",
              "nullable" : true
            },
            "facilityToSettingsMap" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/OpentechAllianceFacilitySettings"
              },
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "OperationStatus" : {
        "type" : "object",
        "description" : "Map of device serial numbers to their reassignment operation status",
        "properties" : {
          "message" : {
            "type" : "string",
            "nullable" : true
          },
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILURE" ],
            "nullable" : true
          }
        }
      },
      "OrgGroupMemberType" : {
        "type" : "object",
        "description" : "List of user group memberships",
        "properties" : {
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "groupUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "type" : {
            "type" : "string",
            "enum" : [ "RHOMBUS_ACCESS_CONTROL", "GUEST_MANAGEMENT_HOST" ],
            "nullable" : true
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "OrgGroupType" : {
        "type" : "object",
        "description" : "Updated organization group details",
        "properties" : {
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "type" : {
            "type" : "string",
            "enum" : [ "RHOMBUS_ACCESS_CONTROL", "GUEST_MANAGEMENT_HOST" ],
            "nullable" : true
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "OrgIntegrationsType" : {
        "type" : "object",
        "description" : "Organization integrations configuration and settings",
        "properties" : {
          "amtSettings" : {
            "$ref" : "#/components/schemas/AmtSettings"
          },
          "awsSettings" : {
            "$ref" : "#/components/schemas/AwsSettings"
          },
          "backblazeSettings" : {
            "$ref" : "#/components/schemas/BackblazeSettings"
          },
          "boxSettings" : {
            "$ref" : "#/components/schemas/BoxSettings"
          },
          "brivoSettings" : {
            "$ref" : "#/components/schemas/BrivoSettings"
          },
          "butterflymxSettings" : {
            "$ref" : "#/components/schemas/ButterflyMXSettings"
          },
          "diceSettings" : {
            "$ref" : "#/components/schemas/DiceSettings"
          },
          "dropboxSettingsV2" : {
            "$ref" : "#/components/schemas/DropboxSettingsV2"
          },
          "emailSettings" : {
            "$ref" : "#/components/schemas/EmailSettings"
          },
          "envoySettings" : {
            "$ref" : "#/components/schemas/EnvoySettings"
          },
          "geneaSettings" : {
            "$ref" : "#/components/schemas/GeneaSettings"
          },
          "googleSettings" : {
            "$ref" : "#/components/schemas/GoogleSettings"
          },
          "googleSettingsV2" : {
            "$ref" : "#/components/schemas/GoogleSettingsV2"
          },
          "haloSettings" : {
            "$ref" : "#/components/schemas/HaloSettings"
          },
          "immixSettings" : {
            "$ref" : "#/components/schemas/ImmixSettings"
          },
          "intuifaceSettings" : {
            "$ref" : "#/components/schemas/IntuifaceSettings"
          },
          "kisiSettings" : {
            "$ref" : "#/components/schemas/KisiSettings"
          },
          "lumeoSettings" : {
            "$ref" : "#/components/schemas/LumeoSettings"
          },
          "mattermostSettings" : {
            "$ref" : "#/components/schemas/MattermostSettings"
          },
          "microsoftTeamsSettings" : {
            "$ref" : "#/components/schemas/MicrosoftTeamsSettings"
          },
          "noonlightSettings" : {
            "$ref" : "#/components/schemas/NoonlightSettings"
          },
          "office365Settings" : {
            "$ref" : "#/components/schemas/Office365Settings"
          },
          "openpathSettings" : {
            "$ref" : "#/components/schemas/OpenpathSettings"
          },
          "opentechAllianceSettings" : {
            "$ref" : "#/components/schemas/OpentechAllianceSettings"
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "pagerDutySettings" : {
            "$ref" : "#/components/schemas/PagerDutySettings"
          },
          "placeOsSettings" : {
            "$ref" : "#/components/schemas/PlaceOsSettings"
          },
          "proDataKeySettings" : {
            "$ref" : "#/components/schemas/ProDataKeySettings"
          },
          "saltoSettings" : {
            "$ref" : "#/components/schemas/SaltoSettings"
          },
          "serviceNowSettings" : {
            "$ref" : "#/components/schemas/ServiceNowSettings"
          },
          "slackSettings" : {
            "$ref" : "#/components/schemas/SlackSettings"
          },
          "slackSettingsV2" : {
            "$ref" : "#/components/schemas/SlackSettingsV2"
          },
          "squareSettings" : {
            "$ref" : "#/components/schemas/SquareSettings"
          },
          "toastSettings" : {
            "$ref" : "#/components/schemas/ToastSettings"
          },
          "tpLinkSettings" : {
            "$ref" : "#/components/schemas/TPLinkSettings"
          },
          "twilioSettings" : {
            "$ref" : "#/components/schemas/TwilioSettings"
          },
          "webhookSettings" : {
            "$ref" : "#/components/schemas/WebhookSettings"
          }
        }
      },
      "OrgLicenseStats" : {
        "type" : "object",
        "description" : "License statistics for the organization",
        "properties" : {
          "acuDoorLicenseStats" : {
            "$ref" : "#/components/schemas/LicenseGroupStats"
          },
          "alertMonitoringLicenseStats" : {
            "$ref" : "#/components/schemas/LicenseGroupStats"
          },
          "assignedCount" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "deviceLicenseStats" : {
            "$ref" : "#/components/schemas/DeviceAssignableLicenseGroupStats"
          },
          "lastEndDate" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The closest past date on which licenses belonging to the group expired.",
            "nullable" : true
          },
          "licenseUsageStats" : {
            "$ref" : "#/components/schemas/LicenseUsageStats"
          },
          "nearExpirationCount" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The number of licenses in the group that are currently close to expiration.",
            "nullable" : true
          },
          "nextEndDate" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "The closest future date on which licenses belonging to the group will expire.",
            "nullable" : true
          },
          "stateStats" : {
            "$ref" : "#/components/schemas/LicenseStateStats"
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The number of licenses in the group.",
            "nullable" : true
          }
        }
      },
      "OrgLockdownPlanType" : {
        "type" : "object",
        "allOf" : [ ],
        "nullable" : true,
        "properties" : {
          "activationPlan" : {
            "$ref" : "#/components/schemas/LockdownActivationPlanType"
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "deactivationPlan" : {
            "$ref" : "#/components/schemas/LockdownDeactivationPlanType"
          },
          "defaultLockdownState" : {
            "$ref" : "#/components/schemas/DoorLockdownStateEnumType"
          },
          "doorLockdownStateMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/DoorLockdownStateEnumType"
            },
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "physicalAccess" : {
            "$ref" : "#/components/schemas/LockdownPhysicalAccessType"
          },
          "scopeUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "testPlan" : {
            "$ref" : "#/components/schemas/LockdownTestPlanType"
          },
          "type" : {
            "$ref" : "#/components/schemas/LockdownPlanScopeEnumType"
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "OrgSamlSettingsType" : {
        "type" : "object",
        "description" : "List of SAML settings to update",
        "properties" : {
          "addUsersOnRoleMismatch" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabledForRhombusKey" : {
            "type" : "boolean",
            "nullable" : true
          },
          "idpMetaDataXml" : {
            "type" : "string",
            "nullable" : true
          },
          "justInTimeAccountProvisioningEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "registrationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "rhombusKeyAppSettings" : {
            "$ref" : "#/components/schemas/RhombusKeyAppSettingsType"
          },
          "teamName" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "OrgType" : {
        "type" : "object",
        "description" : "Organization information to update",
        "properties" : {
          "accountOwnerEmail" : {
            "type" : "string",
            "nullable" : true
          },
          "address1" : {
            "type" : "string",
            "nullable" : true
          },
          "address2" : {
            "type" : "string",
            "nullable" : true
          },
          "countryCode" : {
            "type" : "string",
            "nullable" : true
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "firmwareUpdateSettings" : {
            "$ref" : "#/components/schemas/FirmwareUpdateSettingsType"
          },
          "itemizedInvoice" : {
            "type" : "boolean",
            "nullable" : true
          },
          "mfaEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "newCameraFramerateMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "nullable" : true
          },
          "newCameraResolutionMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "nullable" : true
          },
          "newCameraSegmentMaxBytesMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "nullable" : true
          },
          "newCameraVideoTargetQualityMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "nullable" : true
          },
          "notificationSettings" : {
            "$ref" : "#/components/schemas/NotificationSettingsType"
          },
          "partnerAccessAllowedUntil" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "planType" : {
            "type" : "string",
            "enum" : [ "TRIAL", "STARTER", "CUSTOM" ],
            "nullable" : true
          },
          "postalCode" : {
            "type" : "string",
            "nullable" : true
          },
          "rbacSettings" : {
            "$ref" : "#/components/schemas/RBACSettingsType"
          },
          "samlSettings" : {
            "$ref" : "#/components/schemas/SAMLSettingsType"
          },
          "subscriptionEndDate" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "subscriptionStatus" : {
            "type" : "string",
            "enum" : [ "TRIAL", "PAID", "RESELLER", "LOST", "UNKNOWN" ],
            "nullable" : true
          },
          "subscriptionType" : {
            "type" : "string",
            "enum" : [ "STARTER", "PROFESSIONAL", "ENTERPRISE", "UNKNOWN" ],
            "nullable" : true
          },
          "supportAccessAllowedUntil" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "teamName" : {
            "type" : "string",
            "nullable" : true
          },
          "type" : {
            "type" : "string",
            "enum" : [ "PARTNER", "CUSTOMER", "UNKNOWN" ],
            "nullable" : true
          },
          "uapSettings" : {
            "$ref" : "#/components/schemas/UAPSettingsType"
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "OrgV2Type" : {
        "type" : "object",
        "description" : "List of Rhombus organizations the user has access to",
        "nullable" : true,
        "properties" : {
          "accountBillingContactEmail" : {
            "type" : "string",
            "nullable" : true
          },
          "accountOwnerEmail" : {
            "type" : "string",
            "nullable" : true
          },
          "accountTechnicalContactEmail" : {
            "type" : "string",
            "nullable" : true
          },
          "accountTechnicalContacts" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "address1" : {
            "type" : "string",
            "nullable" : true
          },
          "address2" : {
            "type" : "string",
            "nullable" : true
          },
          "audioAnalysisEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "audioRecordingEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "bandwidthReportsDisabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "companyLogoUrl" : {
            "type" : "string",
            "nullable" : true
          },
          "companyLogoUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "countryCode" : {
            "type" : "string",
            "nullable" : true
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "criticalStatusEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "defaultPlayerViewLiveType" : {
            "$ref" : "#/components/schemas/PlayerViewLiveTypeEnum"
          },
          "deleted" : {
            "type" : "boolean",
            "nullable" : true
          },
          "deletedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "developmentPartnerOrg" : {
            "type" : "boolean",
            "nullable" : true
          },
          "firmwareUpdateSettings" : {
            "$ref" : "#/components/schemas/FirmwareUpdateSettingsType"
          },
          "firmwareUpdateSettingsOverrides" : {
            "type" : "array",
            "description" : "Overrides default firmware update settings.",
            "items" : {
              "$ref" : "#/components/schemas/FirmwareUpdateSettingsOverrideType"
            },
            "nullable" : true
          },
          "inactivityTimeout" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "itemizedInvoice" : {
            "type" : "boolean",
            "nullable" : true
          },
          "keypadLogoUrl" : {
            "type" : "string",
            "nullable" : true
          },
          "keypadLogoUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "llmUsageEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "maxAllowedSegmentMaxBytesMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "nullable" : true
          },
          "mfaEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "motionGridDisabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "motionLightweightDisabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "newCameraFramerateMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "nullable" : true
          },
          "newCameraResolutionMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "nullable" : true
          },
          "newCameraSegmentMaxBytesMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "nullable" : true
          },
          "newCameraVideoTargetQualityMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "nullable" : true
          },
          "newCameraZeroMotionVideoQualityMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "nullable" : true
          },
          "notifyForHardwareFailureTickets" : {
            "type" : "boolean",
            "nullable" : true
          },
          "partnerAccessAllowedUntil" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "postalCode" : {
            "type" : "string",
            "nullable" : true
          },
          "rhombusKeyLogoUrl" : {
            "type" : "string",
            "nullable" : true
          },
          "rhombusKeyLogoUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "salesforceAccountId" : {
            "type" : "string",
            "nullable" : true
          },
          "shareAiTrainingMediaWithRhombus" : {
            "type" : "boolean",
            "nullable" : true
          },
          "subscriptionEndDate" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "subscriptionStatus" : {
            "type" : "string",
            "enum" : [ "TRIAL", "PAID", "RESELLER", "LOST", "UNKNOWN" ],
            "nullable" : true
          },
          "subscriptionType" : {
            "type" : "string",
            "enum" : [ "STARTER", "PROFESSIONAL", "ENTERPRISE", "UNKNOWN" ],
            "nullable" : true
          },
          "supportAccessAllowedUntil" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "tenantUrl" : {
            "type" : "string",
            "nullable" : true
          },
          "thumbstripDisabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "type" : {
            "type" : "string",
            "enum" : [ "PARTNER", "CUSTOMER", "UNKNOWN" ],
            "nullable" : true
          },
          "uapSettings" : {
            "$ref" : "#/components/schemas/UAPSettingsType"
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "v3AuthNumDaysSkip2FAForTrustedDevices" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Org_ClaimActivationTokenWSRequest" : {
        "type" : "object",
        "properties" : {
          "activationToken" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "permissionGroupUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Org_ClaimActivationTokenWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Org_ClaimShipmentRegistrationTokenWSRequest" : {
        "type" : "object",
        "properties" : {
          "claimList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Org_DeviceRegistrationClaimType"
            },
            "nullable" : true
          },
          "tokenUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Org_ClaimShipmentRegistrationTokenWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Org_CreatePendingRegistrationRequest" : {
        "type" : "object",
        "description" : "Request object for creating pending hardware registration.",
        "properties" : {
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "serialNumber" : {
            "type" : "string",
            "description" : "Serial number of the hardware device",
            "example" : "RH123456789",
            "nullable" : true
          },
          "wifiPsk" : {
            "type" : "array",
            "description" : "WiFi pre-shared key for the device",
            "items" : {
              "type" : "string",
              "format" : "byte",
              "description" : "WiFi pre-shared key for the device",
              "nullable" : true
            },
            "nullable" : true
          },
          "wifiSsid" : {
            "type" : "string",
            "description" : "WiFi SSID for the device",
            "example" : "Office_WiFi",
            "nullable" : true
          }
        }
      },
      "Org_CreatePendingRegistrationResponse" : {
        "type" : "object",
        "description" : "Response object for creating pending hardware registration.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Org_DeleteCloudArchivingConfigWSRequest" : {
        "type" : "object",
        "description" : "Request object for deleting cloud archiving configuration.",
        "properties" : {
          "scope" : {
            "$ref" : "#/components/schemas/DeviceTargetScope"
          },
          "targetUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Org_DeleteCloudArchivingConfigWSResponse" : {
        "type" : "object",
        "description" : "Response object for deleting cloud archiving configuration.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Org_DeleteKeypadLogoWSRequest" : {
        "type" : "object",
        "description" : "Request object for deleting keypad logo."
      },
      "Org_DeleteKeypadLogoWSResponse" : {
        "type" : "object",
        "description" : "Response object for deleting keypad logo.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Org_DeleteRhombusKeyLogoWSRequest" : {
        "type" : "object",
        "description" : "Request object for deleting Rhombus Key logo.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Org_DeleteRhombusKeyLogoWSResponse" : {
        "type" : "object",
        "description" : "Response object for deleting Rhombus Key logo.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Org_DeviceRegistrationClaimType" : {
        "type" : "object",
        "properties" : {
          "deviceName" : {
            "type" : "string",
            "nullable" : true
          },
          "hardwareUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Org_FindAllHardwareWithPendingRegistrationRequest" : {
        "type" : "object"
      },
      "Org_FindAllHardwareWithPendingRegistrationResponse" : {
        "type" : "object",
        "properties" : {
          "hardwareList" : {
            "type" : "array",
            "deprecated" : true,
            "description" : "Use hardwareWithPendingRegistrationInfoList instead",
            "items" : {
              "$ref" : "#/components/schemas/HardwareType"
            },
            "nullable" : true
          },
          "hardwareWithPendingRegistrationInfoList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Org_HardwareWithPendingRegistrationInfoType"
            },
            "nullable" : true
          }
        }
      },
      "Org_FindHardwareAvailableForPendingRegistrationRequest" : {
        "type" : "object"
      },
      "Org_FindHardwareAvailableForPendingRegistrationResponse" : {
        "type" : "object",
        "properties" : {
          "hardwareList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/HardwareType"
            },
            "nullable" : true
          }
        }
      },
      "Org_FindIfTeamNameAvailableRequest" : {
        "type" : "object",
        "description" : "Request object for checking if a team name is available.",
        "properties" : {
          "teamName" : {
            "type" : "string",
            "description" : "Team name to check availability for",
            "example" : "Engineering Team",
            "nullable" : true
          }
        }
      },
      "Org_FindIfTeamNameAvailableResponse" : {
        "type" : "object",
        "description" : "Response object indicating if a team name is available.",
        "properties" : {
          "available" : {
            "type" : "boolean",
            "description" : "Whether the team name is available",
            "example" : true,
            "nullable" : true
          }
        }
      },
      "Org_FindSCIMSettingsForOrgWSRequest" : {
        "type" : "object",
        "description" : "Request object for finding SCIM settings for organization."
      },
      "Org_FindSCIMSettingsForOrgWSResponse" : {
        "type" : "object",
        "description" : "Response object containing SCIM settings for organization.",
        "properties" : {
          "scimSettings" : {
            "$ref" : "#/components/schemas/SCIMSettingsType"
          }
        }
      },
      "Org_GenerateFederatedSessionTokenRequest" : {
        "type" : "object",
        "description" : "Request object for generating a federated session token.",
        "properties" : {
          "domain" : {
            "type" : "string",
            "description" : "The domain that is allowed to use the federated token. The token should begin with a 'dot' and end with a domain suffix. The validation will perform an 'endsWith' operation of the domain supplied by the Referrer header",
            "example" : ".rhombus.com",
            "nullable" : true
          },
          "durationSec" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Duration of the federated session token in seconds",
            "example" : 3600,
            "nullable" : true
          }
        }
      },
      "Org_GenerateFederatedSessionTokenResponse" : {
        "type" : "object",
        "description" : "Response object containing the generated federated session token.",
        "properties" : {
          "federatedSessionToken" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Org_GetAwsIntCloudformationFileRequest" : {
        "type" : "object",
        "description" : "Request object for getting AWS CloudFormation file."
      },
      "Org_GetAwsIntCloudformationFileResponse" : {
        "type" : "object",
        "description" : "Response object containing AWS CloudFormation file.",
        "properties" : {
          "fileBase64" : {
            "type" : "string",
            "description" : "Base64 encoded CloudFormation file content",
            "example" : "UEsDBBQAAAAIAA...",
            "nullable" : true
          }
        }
      },
      "Org_GetClientOrgWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting client organization details.",
        "properties" : {
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Org_GetClientOrgWSResponse" : {
        "type" : "object",
        "description" : "Response object containing client organization details.",
        "properties" : {
          "featureFlags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "description" : "Map of feature flags for the client organization",
              "nullable" : true
            },
            "description" : "Map of feature flags for the client organization",
            "nullable" : true
          },
          "org" : {
            "$ref" : "#/components/schemas/OrgV2Type"
          },
          "partnerOrgPermissionGroup" : {
            "$ref" : "#/components/schemas/UserPermissionGroupType"
          }
        }
      },
      "Org_GetCloudArchivingConfigsWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting cloud archiving configurations."
      },
      "Org_GetCloudArchivingConfigsWSResponse" : {
        "type" : "object",
        "description" : "Response object containing cloud archiving configurations.",
        "properties" : {
          "archivingConfigs" : {
            "type" : "array",
            "description" : "List of cloud archiving configurations",
            "items" : {
              "$ref" : "#/components/schemas/ScopedCloudArchivingConfig"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Org_GetDeviceFlagsWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting device flags.",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Org_GetDeviceFlagsWSResponse" : {
        "type" : "object",
        "description" : "Response object containing device flags.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "flags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "description" : "Map of device flags",
              "nullable" : true
            },
            "description" : "Map of device flags",
            "nullable" : true
          }
        }
      },
      "Org_GetFeaturesWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting organization features."
      },
      "Org_GetFeaturesWSResponse" : {
        "type" : "object",
        "description" : "Response object containing organization feature flags.",
        "properties" : {
          "behaviorDetection" : {
            "type" : "boolean",
            "description" : "Whether behavior detection is enabled",
            "example" : false,
            "nullable" : true
          },
          "cloudArchiving" : {
            "type" : "boolean",
            "description" : "Whether cloud archiving is enabled",
            "example" : false,
            "nullable" : true
          },
          "engagementCounting" : {
            "type" : "boolean",
            "description" : "Whether engagement counting is enabled",
            "example" : false,
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "faceCounting" : {
            "type" : "boolean",
            "description" : "Whether face counting is enabled",
            "example" : false,
            "nullable" : true
          },
          "faceCountingNonUnique" : {
            "type" : "boolean",
            "description" : "Whether non-unique face counting is enabled",
            "example" : false,
            "nullable" : true
          },
          "faceRecognition" : {
            "type" : "boolean",
            "description" : "Whether face recognition is enabled",
            "example" : false,
            "nullable" : true
          },
          "licensePlateRecognition" : {
            "type" : "boolean",
            "description" : "Whether license plate recognition is enabled",
            "example" : false,
            "nullable" : true
          },
          "peopleCounting" : {
            "type" : "boolean",
            "description" : "Whether people counting is enabled",
            "example" : false,
            "nullable" : true
          },
          "ppeDetection" : {
            "type" : "boolean",
            "description" : "Whether PPE detection is enabled",
            "example" : false,
            "nullable" : true
          },
          "rulesEngine" : {
            "type" : "boolean",
            "description" : "Whether rules engine is enabled (deprecated)",
            "example" : false,
            "nullable" : true
          },
          "vehicleCounting" : {
            "type" : "boolean",
            "description" : "Whether vehicle counting is enabled",
            "example" : false,
            "nullable" : true
          }
        }
      },
      "Org_GetLocationFlagsWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting location flags."
      },
      "Org_GetLocationFlagsWSResponse" : {
        "type" : "object",
        "description" : "Response object containing location flags for all locations.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "flagsMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "string",
                "description" : "Map of location UUIDs to their flags",
                "nullable" : true
              },
              "description" : "Map of location UUIDs to their flags",
              "nullable" : true
            },
            "description" : "Map of location UUIDs to their flags",
            "nullable" : true
          }
        }
      },
      "Org_GetOrgIntegrationsWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting organization integrations (deprecated, use integration package)."
      },
      "Org_GetOrgIntegrationsWSResponse" : {
        "type" : "object",
        "description" : "Response object containing organization integrations (deprecated, use integration package).",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "orgIntegrations" : {
            "$ref" : "#/components/schemas/OrgIntegrationsType"
          }
        }
      },
      "Org_GetOrgNotificationTemplateV2WSResponse" : {
        "type" : "object",
        "description" : "Response object containing organization notification template V2.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "notificationSettings" : {
            "$ref" : "#/components/schemas/UserNotificationSettingsV4Type"
          }
        }
      },
      "Org_GetOrgNotificationTemplateWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting organization notification template."
      },
      "Org_GetOrgNotificationTemplateWSResponse" : {
        "type" : "object",
        "description" : "Response object containing organization notification template.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "notificationSettings" : {
            "$ref" : "#/components/schemas/UserNotificationSettingsV3Type"
          }
        }
      },
      "Org_GetOrgV2WSRequest" : {
        "type" : "object",
        "description" : "Request object for getting organization details V2."
      },
      "Org_GetOrgV2WSResponse" : {
        "type" : "object",
        "description" : "Response object containing organization details V2 with camera configuration options.",
        "properties" : {
          "cameraConfigDefaults" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Deviceconfig_settings_VideoConfigurationDefault"
            },
            "description" : "Map of hardware variations to default video configurations",
            "nullable" : true
          },
          "cameraConfigOptions" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "description" : "Map of hardware variations to available video configuration options",
              "items" : {
                "$ref" : "#/components/schemas/Deviceconfig_settings_VideoConfigurationOption"
              },
              "nullable" : true
            },
            "description" : "Map of hardware variations to available video configuration options",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "featureFlags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "description" : "Map of feature flags for the organization",
              "nullable" : true
            },
            "description" : "Map of feature flags for the organization",
            "nullable" : true
          },
          "org" : {
            "$ref" : "#/components/schemas/OrgV2Type"
          }
        }
      },
      "Org_GetOrgWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting organization details (deprecated)."
      },
      "Org_GetOrgWSResponse" : {
        "type" : "object",
        "description" : "Response object containing organization details (deprecated).",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "featureFlags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "description" : "Map of feature flags for the organization",
              "nullable" : true
            },
            "description" : "Map of feature flags for the organization",
            "nullable" : true
          },
          "org" : {
            "$ref" : "#/components/schemas/OrgType"
          }
        }
      },
      "Org_GetSAMLSettingsV2WSRequest" : {
        "type" : "object",
        "description" : "Request object for getting SAML settings V2."
      },
      "Org_GetSAMLSettingsV2WSResponse" : {
        "type" : "object",
        "description" : "Response object containing SAML settings V2.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "samlSettings" : {
            "type" : "array",
            "description" : "List of SAML settings for the organization",
            "items" : {
              "$ref" : "#/components/schemas/OrgSamlSettingsType"
            },
            "nullable" : true
          }
        }
      },
      "Org_GetSAMLSettingsWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting SAML settings (deprecated)."
      },
      "Org_GetSAMLSettingsWSResponse" : {
        "type" : "object",
        "description" : "Response object containing SAML settings (deprecated).",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "samlSettings" : {
            "$ref" : "#/components/schemas/OrgSamlSettingsType"
          }
        }
      },
      "Org_GetScimDisplayInfoResponse" : {
        "type" : "object",
        "description" : "Response object containing SCIM display information.",
        "properties" : {
          "azureScimEndpointUrl" : {
            "type" : "string",
            "description" : "Azure SCIM endpoint URL",
            "example" : "https://api.rhombussystems.com/scim/v2/azure",
            "nullable" : true
          },
          "scimEndpointUrl" : {
            "type" : "string",
            "description" : "SCIM endpoint URL",
            "example" : "https://api.rhombussystems.com/scim/v2",
            "nullable" : true
          }
        }
      },
      "Org_GetTemporaryOrgTokenWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting temporary organization token."
      },
      "Org_HardwareWithPendingRegistrationInfoType" : {
        "type" : "object",
        "properties" : {
          "hardware" : {
            "$ref" : "#/components/schemas/HardwareType"
          },
          "hwUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "pendingRegistrationInfo" : {
            "$ref" : "#/components/schemas/Org_PendingRegistrationInfoType"
          }
        }
      },
      "Org_PeekShipmentRegistrationTokenWSRequest" : {
        "type" : "object",
        "properties" : {
          "tokenUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Org_PeekShipmentRegistrationTokenWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "hardwareUuidList" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Org_PendingRegistrationInfoType" : {
        "type" : "object",
        "properties" : {
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Org_RemovePendingRegistrationRequest" : {
        "type" : "object",
        "properties" : {
          "serialNumber" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Org_RemovePendingRegistrationResponse" : {
        "type" : "object"
      },
      "Org_RevokeSCIMAccessForOrgWSRequest" : {
        "type" : "object",
        "description" : "Request object for revoking SCIM access for organization."
      },
      "Org_RevokeSCIMAccessForOrgWSResponse" : {
        "type" : "object",
        "description" : "Response object for revoking SCIM access for organization."
      },
      "Org_SetFlagWSRequest" : {
        "type" : "object",
        "description" : "Request object for setting organization flags.",
        "properties" : {
          "flagName" : {
            "type" : "string",
            "description" : "Name of the flag to set",
            "example" : "feature_enabled",
            "nullable" : true
          },
          "flagValue" : {
            "type" : "string",
            "description" : "Value of the flag to set",
            "example" : "true",
            "nullable" : true
          }
        }
      },
      "Org_SetFlagWSResponse" : {
        "type" : "object",
        "description" : "Response object for setting organization flags.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Org_SetupSCIMAccessForOrgWSRequest" : {
        "type" : "object",
        "description" : "Request object for setting up SCIM access for organization.",
        "properties" : {
          "addUsersOnRoleMismatch" : {
            "type" : "boolean",
            "description" : "Whether to add users on role mismatch",
            "example" : false,
            "nullable" : true
          },
          "rhombusKeyAppSettings" : {
            "$ref" : "#/components/schemas/RhombusKeyAppSettingsType"
          },
          "sendWelcomeEmailToNewRhombusKeyUsers" : {
            "type" : "boolean",
            "description" : "Whether to send welcome email to new Rhombus Key users",
            "example" : true,
            "nullable" : true
          },
          "sendWelcomeEmailToNewUsers" : {
            "type" : "boolean",
            "description" : "Whether to send welcome email to new users",
            "example" : true,
            "nullable" : true
          }
        }
      },
      "Org_SetupSCIMAccessForOrgWSResponse" : {
        "type" : "object",
        "description" : "Response object for setting up SCIM access for organization.",
        "properties" : {
          "scimAccessAlreadySetupFailure" : {
            "type" : "boolean",
            "nullable" : true
          },
          "token" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Org_UpdateAiTrainingSettingsWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating AI training settings.",
        "properties" : {
          "shareAiTrainingMediaWithRhombus" : {
            "type" : "boolean",
            "description" : "Whether to share AI training media with Rhombus",
            "example" : false,
            "nullable" : true
          }
        }
      },
      "Org_UpdateAiTrainingSettingsWSResponse" : {
        "type" : "object",
        "description" : "Response object for updating AI training settings.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Org_UpdateCloudArchivingConfigWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating cloud archiving configuration.",
        "properties" : {
          "archivingConfig" : {
            "$ref" : "#/components/schemas/ScopedCloudArchivingConfig"
          }
        }
      },
      "Org_UpdateCloudArchivingConfigWSResponse" : {
        "type" : "object",
        "description" : "Response object for updating cloud archiving configuration.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Org_UpdateFirmwareSettingsWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating firmware settings.",
        "properties" : {
          "firmwareSettings" : {
            "$ref" : "#/components/schemas/FirmwareUpdateSettingsType"
          },
          "firmwareUpdateSettings" : {
            "$ref" : "#/components/schemas/FirmwareUpdateSettingsType"
          },
          "firmwareUpdateSettingsOverrides" : {
            "type" : "array",
            "description" : "Overrides default firmware update settings.",
            "items" : {
              "$ref" : "#/components/schemas/FirmwareUpdateSettingsOverrideType"
            },
            "nullable" : true
          }
        }
      },
      "Org_UpdateFirmwareSettingsWSResponse" : {
        "type" : "object",
        "description" : "Response object for updating firmware settings.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Org_UpdateGeneralSettingsWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating general organization settings.",
        "properties" : {
          "accountBillingContactEmail" : {
            "type" : "string",
            "description" : "Email of the account billing contact",
            "example" : "billing@acme.com",
            "nullable" : true
          },
          "accountOwnerEmail" : {
            "type" : "string",
            "description" : "Email of the account owner",
            "example" : "owner@acme.com",
            "nullable" : true
          },
          "accountTechnicalContactEmail" : {
            "type" : "string",
            "description" : "Email of the account technical contact",
            "example" : "tech@acme.com",
            "nullable" : true
          },
          "accountTechnicalContacts" : {
            "type" : "array",
            "description" : "List of account technical contact emails",
            "items" : {
              "type" : "string",
              "description" : "List of account technical contact emails",
              "nullable" : true
            },
            "nullable" : true
          },
          "defaultPlayerViewLiveType" : {
            "$ref" : "#/components/schemas/PlayerViewLiveTypeEnum"
          },
          "inactivityTimeout" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Inactivity timeout in minutes",
            "example" : 30,
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the organization",
            "example" : "Acme Corporation",
            "nullable" : true
          },
          "uapSettings" : {
            "$ref" : "#/components/schemas/UAPSettingsType"
          }
        }
      },
      "Org_UpdateGeneralSettingsWSResponse" : {
        "type" : "object",
        "description" : "Response object for updating general organization settings.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Org_UpdateMFASettingsWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating MFA settings.",
        "properties" : {
          "mfaEnabled" : {
            "type" : "boolean",
            "description" : "Whether MFA is enabled for the organization",
            "example" : true,
            "nullable" : true
          },
          "v3AuthNumDaysSkip2FAForTrustedDevices" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Number of days to skip 2FA for trusted devices (< 0 = forever, 0 = always require 2FA, > 0 = days to skip)",
            "example" : 30,
            "nullable" : true
          }
        }
      },
      "Org_UpdateMFASettingsWSResponse" : {
        "type" : "object",
        "description" : "Response object for updating MFA settings.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "org" : {
            "$ref" : "#/components/schemas/OrgV2Type"
          }
        }
      },
      "Org_UpdateOrgAudioAnalysisPolicyWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating organization audio analysis policy.",
        "properties" : {
          "audioAnalysisEnabled" : {
            "type" : "boolean",
            "description" : "Whether audio analysis is enabled for the organization",
            "example" : true,
            "nullable" : true
          }
        }
      },
      "Org_UpdateOrgAudioAnalysisPolicyWSResponse" : {
        "type" : "object",
        "description" : "Response object for updating organization audio analysis policy.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Org_UpdateOrgAudioRecordingPolicyWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating organization audio recording policy.",
        "properties" : {
          "audioRecordingEnabled" : {
            "type" : "boolean",
            "description" : "Whether audio recording is enabled for the organization",
            "example" : true,
            "nullable" : true
          }
        }
      },
      "Org_UpdateOrgAudioRecordingPolicyWSResponse" : {
        "type" : "object",
        "description" : "Response object for updating organization audio recording policy.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Org_UpdateOrgIntegrationsWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating organization integrations (deprecated, use integration package).",
        "properties" : {
          "orgIntegrations" : {
            "$ref" : "#/components/schemas/OrgIntegrationsType"
          }
        }
      },
      "Org_UpdateOrgIntegrationsWSResponse" : {
        "type" : "object",
        "description" : "Response object for updating organization integrations (deprecated, use integration package).",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Org_UpdateOrgLLMUsagePolicyWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating organization LLM usage opt-in policy.",
        "properties" : {
          "llmUsageEnabled" : {
            "type" : "boolean",
            "description" : "Whether the org is opting in to use LLMs",
            "example" : true,
            "nullable" : true
          }
        }
      },
      "Org_UpdateOrgLLMUsagePolicyWSResponse" : {
        "type" : "object",
        "description" : "Response object for updating organization LLM usage opt-in policy.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Org_UpdateOrgNotificationTemplateV2WSRequest" : {
        "type" : "object",
        "description" : "Request object for updating organization notification template V2.",
        "properties" : {
          "summaryEmailEnabled" : {
            "type" : "boolean",
            "description" : "Whether summary email is enabled",
            "example" : true,
            "nullable" : true
          },
          "templateUpdate" : {
            "$ref" : "#/components/schemas/UserNotificationSelectiveUpdateV2"
          }
        }
      },
      "Org_UpdateOrgNotificationTemplateV2WSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Org_UpdateOrgNotificationTemplateWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating organization notification template.",
        "properties" : {
          "notificationIntervalsV2" : {
            "type" : "array",
            "description" : "List of notification intervals V2",
            "items" : {
              "$ref" : "#/components/schemas/NotificationIntervalV2Type"
            },
            "nullable" : true
          },
          "summaryEmailEnabled" : {
            "type" : "boolean",
            "description" : "Whether summary email is enabled",
            "example" : true,
            "nullable" : true
          }
        }
      },
      "Org_UpdateOrgNotificationTemplateWSResponse" : {
        "type" : "object",
        "description" : "Response object for updating organization notification template.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Org_UpdateOrgWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating organization details (deprecated).",
        "properties" : {
          "org" : {
            "$ref" : "#/components/schemas/OrgType"
          }
        }
      },
      "Org_UpdateOrgWSResponse" : {
        "type" : "object",
        "description" : "Response object for updating organization details (deprecated).",
        "properties" : {
          "samlEntityIdUniquenessConstraintFailure" : {
            "type" : "boolean",
            "nullable" : true
          },
          "teamNameNotAssignedFailure" : {
            "type" : "boolean",
            "nullable" : true
          },
          "teamNameUniquenessConstraintFailure" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Org_UpdatePendingRegistrationRequest" : {
        "type" : "object",
        "properties" : {
          "hardwareUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Org_UpdatePendingRegistrationResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Org_UpdateSAMLSettingsV2WSRequest" : {
        "type" : "object",
        "description" : "Request object for updating SAML settings V2.",
        "properties" : {
          "samlSettings" : {
            "type" : "array",
            "description" : "List of SAML settings to update",
            "items" : {
              "$ref" : "#/components/schemas/OrgSamlSettingsType"
            },
            "nullable" : true
          }
        }
      },
      "Org_UpdateSAMLSettingsV2WSResponse" : {
        "type" : "object",
        "description" : "Response object for updating SAML settings V2.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Org_UpdateSAMLSettingsWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating SAML settings (deprecated).",
        "properties" : {
          "samlSettings" : {
            "$ref" : "#/components/schemas/OrgSamlSettingsType"
          }
        }
      },
      "Org_UpdateSAMLSettingsWSResponse" : {
        "type" : "object",
        "description" : "Response object for updating SAML settings (deprecated).",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Org_UpdateSCIMSettingsForOrgWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating SCIM settings for organization.",
        "properties" : {
          "addUsersOnRoleMismatch" : {
            "type" : "boolean",
            "description" : "Whether to add users on role mismatch",
            "example" : false,
            "nullable" : true
          },
          "rhombusKeyAppSettings" : {
            "$ref" : "#/components/schemas/RhombusKeyAppSettingsType"
          },
          "sendWelcomeEmailToNewRhombusKeyUsers" : {
            "type" : "boolean",
            "description" : "Whether to send welcome email to new Rhombus Key users",
            "example" : true,
            "nullable" : true
          },
          "sendWelcomeEmailToNewUsers" : {
            "type" : "boolean",
            "description" : "Whether to send welcome email to new users",
            "example" : true,
            "nullable" : true
          }
        }
      },
      "Org_UpdateSCIMSettingsForOrgWSResponse" : {
        "type" : "object",
        "description" : "Response object for updating SCIM settings for organization.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "OsdpDoorReaderType" : {
        "type" : "object",
        "properties" : {
          "allowUnencrypted" : {
            "type" : "boolean",
            "nullable" : true
          },
          "baseType" : {
            "$ref" : "#/components/schemas/ComponentBaseEnumType"
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "disableCardReader" : {
            "type" : "boolean",
            "nullable" : true
          },
          "disableKeypad" : {
            "type" : "boolean",
            "nullable" : true
          },
          "disableWaveToUnlock" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "osdpAddress" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "otherReaderUnlockAudioFeedbackEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "ownerHardwareType" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "port" : {
            "$ref" : "#/components/schemas/OsdpReaderPortType"
          },
          "portImmutable" : {
            "type" : "boolean",
            "nullable" : true
          },
          "readerType" : {
            "$ref" : "#/components/schemas/DoorReaderEnumType"
          },
          "remoteUnlockAudioFeedbackEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEnumType"
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "OsdpPhysicalPortEnumType" : {
        "type" : "string",
        "enum" : [ "RS485" ]
      },
      "OsdpReaderPortType" : {
        "type" : "object",
        "properties" : {
          "boardNum" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "portNum" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "portType" : {
            "$ref" : "#/components/schemas/OsdpPhysicalPortEnumType"
          }
        }
      },
      "OutgoingShipmentInfoType" : {
        "type" : "object",
        "description" : "Outgoing shipment information (deprecated)",
        "properties" : {
          "buyer" : {
            "$ref" : "#/components/schemas/Buyer"
          },
          "consignee" : {
            "$ref" : "#/components/schemas/Consignee"
          },
          "depositorOrderNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "freight" : {
            "$ref" : "#/components/schemas/Freight"
          },
          "interchangeControlNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "product" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Product"
            },
            "nullable" : true
          },
          "purchaseOrderNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "shipment" : {
            "$ref" : "#/components/schemas/Shipment"
          },
          "shipper" : {
            "$ref" : "#/components/schemas/Shipper"
          }
        }
      },
      "PagerDutySettings" : {
        "type" : "object",
        "properties" : {
          "allLocationIntegrationKeys" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabledTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "enablingUser" : {
            "type" : "string",
            "nullable" : true
          },
          "enablingUserUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "integrationKey" : {
            "type" : "string",
            "nullable" : true
          },
          "locationToIntegrationKeysMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "nullable" : true
              },
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "PaginateRequest" : {
        "type" : "object",
        "description" : "Request object for retrieving a resource with optional pagination.",
        "properties" : {
          "lastEvaluatedKey" : {
            "type" : "string",
            "nullable" : true
          },
          "maxPageSize" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "PanelType" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "PanicButtonEventType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "componentCompositeUuid" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "newSupervisionState" : {
              "$ref" : "#/components/schemas/SupervisionStateEnumType"
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "correlationId" : {
            "type" : "string",
            "nullable" : true
          },
          "createdAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEventEnumType"
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "ParameterizedHeader" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "parameters" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "value" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "PartnerFunctionality" : {
        "type" : "string",
        "enum" : [ "CREATE_CLIENT", "DELETE_CLIENT", "DEAL_ADMINISTRATION", "REMOTE_REGISTER_DEVICE", "ORG_ADMINISTRATION", "AUTH_ADMINISTRATION", "DOOR_ACCESS_ADMINISTRATION", "USER_ADMINISTRATION", "REPORT_ADMINISTRATION", "NOTIFICATION_ADMINISTRATION", "LICENSE_ADMINISTRATION", "RECEIVE_EMAILS", "API_ADMINISTRATION", "INTEGRATION_ADMINISTRATION", "DATA_EXFILTRATION", "CLIP_MANAGEMENT", "UNKNOWN" ]
      },
      "PartnerNotificationClientSection" : {
        "type" : "object",
        "properties" : {
          "clientUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "rows" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PartnerNotificationClientSectionRow"
            },
            "nullable" : true
          }
        }
      },
      "PartnerNotificationClientSectionRow" : {
        "type" : "object",
        "properties" : {
          "activities" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ActivityEnum"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "days" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "MONDAY", "TUESDAY", "WEDNESDAY", "THURSDAY", "FRIDAY", "SATURDAY", "SUNDAY" ],
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "diagnostics" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "CAMERA_CONNECTED", "CAMERA_DISCONNECTED", "STARTUP", "GATEWAY_CONNECTED", "GATEWAY_DISCONNECTED", "UPDATE_STARTED", "UPDATE_FIRMWARE_DOWNLOADED", "UPDATE_FIRMWARE_APPLIED", "UPDATE_STARTING_REBOOT", "UPDATE_FAILED_MD5_MISMATCH", "UPDATE_FAILED_ACCESS_DENIED", "UPDATE_FAILED_MITM", "UPDATE_FAILED_CONNNECTION_REFUSED", "UPDATE_FAILED_CONNNECTION_TIMEOUT", "UPDATE_FAILED_CONNECTION_REFUSED", "UPDATE_FAILED_CONNECTION_TIMEOUT", "UPDATE_FAILED_DNS_FAILURE", "UPDATE_RUNNING", "BLE_CONNECTED", "BLE_CONNECTION_FAILED", "BLE_DISCONNECTED", "BLE_OP_SUCCESS", "BLE_OP_FAILURE", "UPLOAD_CLIP_SUCCESS", "UPLOAD_CLIP_FAILURE", "NOTIFICATION_FAILURE", "USB_FAILURE_REBOOT", "PERSISTENT_STORAGE_FAILURE", "PING", "FORCED_REBOOT", "AUTO_REBOOT", "AUDIO_HARDWARE_NOT_DETECTED", "ENCRYPTED_CONTAINER_FAILURE_CREATE", "ENCRYPTED_CONTAINER_FAILURE_OPEN", "ENCRYPTED_CONTAINER_FAILURE_MOUNT", "VIDEO_HARDWARE_FAILURE", "WIFI_NETWORK_CHANGED", "AI_ENGINE_DOWNLOADED", "AI_ENGINE_DOWNLOAD_FAILED_MD5_MISMATCH", "AI_ENGINE_CONFIGURED", "AI_ENGINE_CONFIGURATION_FAILED", "MITM_FAILURE", "SERVER_RECONNECT", "AP_CHANGED", "WATCHDOG_KILLED_AGENT", "WATCHDOG_DID_RESET", "CLIMATE_OFFLINE", "CLIMATE_ONLINE", "CLIMATE_LOW_BATTERY", "CLIMATE_PROBE_CONNECTED", "CLIMATE_PROBE_DISCONNECTED", "DOOR_OFFLINE", "DOOR_ONLINE", "DOOR_LOW_BATTERY", "OCCUPANCY_SENSOR_ONLINE", "OCCUPANCY_SENSOR_OFFLINE", "OCCUPANCY_SENSOR_LOW_BATTERY", "BUTTON_OFFLINE", "BUTTON_ONLINE", "BUTTON_LOW_BATTERY", "PROXIMITY_LOW_BATTERY", "DOOR_CONTROLLER_CONNECTED", "DOOR_CONTROLLER_DISCONNECTED", "APERIO_LOW_BATTERY", "APERIO_FLAT_BATTERY", "APERIO_OK_BATTERY", "APERIO_GW_CONNECTED", "APERIO_GW_DISCONNECTED", "BADGE_READER_CONNECTED", "BADGE_READER_DISCONNECTED", "REBOOT", "NETWORK_INTERRUPTION", "OPENPATH_WEBHOOK_FAILURE", "TOAST_WEBHOOK_FAILURE", "KISI_WEBHOOK_FAILURE", "BRIVO_WEBHOOK_FAILURE", "HALO_WEBHOOK_FAILURE", "SALTO_WEBHOOK_FAILURE", "SQUARE_WEBHOOK_FAILURE", "BUTTERFLYMX_WEBHOOK_FAILURE", "ENVOY_WEBHOOK_FAILURE", "GENEA_WEBHOOK_FAILURE", "PRODATAKEY_WEBHOOK_FAILURE", "AMT_WEBHOOK_FAILURE", "PLACEOS_WEBHOOK_FAILURE", "OMNIALERT_WEBHOOK_FAILURE", "FLIC_WEBHOOK_FAILURE", "PIMLOC_WEBHOOK_FAILURE", "NINEONEONECELLULAR_WEBHOOK_FAILURE", "CV_FAILURE", "NFC_HW_FAILURE", "CONFIG_ERROR", "HW_FAILURE", "KEYPAD_ONLINE", "KEYPAD_OFFLINE", "ALM_OVERAGE_APPROACHING", "ALM_OVERAGE_REACHED", "ALM_OVERAGE_EXCEEDED", "ALM_EXCESSIVE_VERIFICATIONS", "ALM_AUTHORITIES_CONTACTED", "ALM_MONITORING_ENABLED", "ALM_MONITORING_DISABLED", "ALM_MONITORING_SETTINGS_CHANGE", "ALM_THREAT_CASE_CLOSED", "ALM_THREAT_DETECTED", "KIOSK_OFFLINE", "KIOSK_ONLINE", "TUNNELED_DEVICE_CONNECTED", "TUNNELED_DEVICE_DISCONNECTED", "SD_CARD_CHANGED", "SUPERVISION_CUT_DETECTED", "SUPERVISION_SHORT_DETECTED", "SUPERVISION_INVALID_SETUP", "THIRD_PARTY_DEVICE_CONNECTED", "THIRD_PARTY_DEVICE_DISCONNECTED", "UNKNOWN" ],
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "interval" : {
            "$ref" : "#/components/schemas/MinuteOfDayIntervalType"
          },
          "mediums" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NotificationEnumType"
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "PartnerNotificationSettingsType" : {
        "type" : "object",
        "properties" : {
          "allClientsSelected" : {
            "type" : "boolean",
            "nullable" : true
          },
          "clientNotificationIntervalsMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/NotificationIntervalV2Type"
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "notificationIntervalsForAllClients" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NotificationIntervalV2Type"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "smsPhoneNumbers" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "summaryEmailEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "PartnerNotificationSettingsV2" : {
        "type" : "object",
        "properties" : {
          "allClientsSelected" : {
            "type" : "boolean",
            "nullable" : true
          },
          "clientNotificationIntervalsMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/PartnerNotificationClientSection"
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "notificationIntervalsForAllClients" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PartnerNotificationClientSection"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "smsPhoneNumbers" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "summaryEmailEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "PartnerPermission" : {
        "type" : "string",
        "enum" : [ "DEFAULT", "CUSTOM" ]
      },
      "PartnerPermissionType" : {
        "type" : "object",
        "description" : "List of partner permissions",
        "properties" : {
          "groupUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "PartnerUserPermissionGroupType" : {
        "type" : "object",
        "description" : "Updated partner permission group configuration",
        "properties" : {
          "assignablePermissionGroups" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "clientAssignablePermissionGroupsMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "RUUID",
                "description" : "base 64 (url-safe) uuid string",
                "example" : "AAAAAAAAAAAAAAAAAAAAAA",
                "nullable" : true
              },
              "nullable" : true,
              "uniqueItems" : true
            },
            "nullable" : true
          },
          "clientFunctionalityList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Functionality"
            },
            "nullable" : true
          },
          "clientPermissionMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/PartnerPermission"
            },
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "functionalityList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PartnerFunctionality"
            },
            "nullable" : true
          },
          "mutable" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "superAdmin" : {
            "type" : "boolean",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Partner_ClientCustomizationsType" : {
        "type" : "object",
        "description" : "Client-specific customization settings for partner management.",
        "properties" : {
          "forceLowBandwidthOnAllCameras" : {
            "type" : "boolean",
            "description" : "Whether to force low bandwidth on all cameras",
            "example" : false,
            "nullable" : true
          },
          "inactivityTimeout" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Inactivity timeout in minutes",
            "example" : 30,
            "nullable" : true
          }
        }
      },
      "Partner_ClientDeviceCustomizationsType" : {
        "type" : "object",
        "description" : "Client device-specific customization settings for partner management.",
        "properties" : {
          "forceLowBandwidthOnAllCameras" : {
            "type" : "boolean",
            "description" : "Whether to force low bandwidth on all cameras",
            "example" : false,
            "nullable" : true
          },
          "inactivityTimeout" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Inactivity timeout in minutes",
            "example" : 30,
            "nullable" : true
          }
        }
      },
      "Partner_ConnectionCountType" : {
        "type" : "object",
        "description" : "Device connection count information for partner clients.",
        "properties" : {
          "connectedCount" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Number of connected devices",
            "example" : 45,
            "nullable" : true
          },
          "operationalCount" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Number of operational devices",
            "example" : 42,
            "nullable" : true
          },
          "totalCount" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Total number of devices",
            "example" : 50,
            "nullable" : true
          }
        }
      },
      "Partner_CreatePartnerClientWSRequest" : {
        "type" : "object",
        "description" : "Request object for creating a new partner client account.",
        "properties" : {
          "clientContactEmail" : {
            "type" : "string",
            "description" : "Email address of the client contact person",
            "example" : "john.smith@acme.com",
            "nullable" : true
          },
          "clientContactName" : {
            "type" : "string",
            "description" : "Name of the client contact person",
            "example" : "John Smith",
            "nullable" : true
          },
          "clientOrgName" : {
            "type" : "string",
            "description" : "Name of the client organization",
            "example" : "Acme Corporation",
            "nullable" : true
          },
          "suppressWelcomeEmail" : {
            "type" : "boolean",
            "description" : "Whether to suppress sending welcome email to the client",
            "example" : false,
            "nullable" : true
          }
        }
      },
      "Partner_CreatePartnerClientWSResponse" : {
        "type" : "object",
        "description" : "Response object containing the result of creating a partner client account.",
        "properties" : {
          "clientOrgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "responseStatus" : {
            "$ref" : "#/components/schemas/Partner_PartnerWebResponseStatusEnum"
          }
        }
      },
      "Partner_CustomizeClientDeviceWSRequest" : {
        "type" : "object",
        "description" : "Request object for customizing client device settings and configurations.",
        "properties" : {
          "clientDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "clientOrgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "configUpdate" : {
            "$ref" : "#/components/schemas/Deviceconfig_userconfig_IExternalUpdateableAudioVideoUserConfig"
          },
          "customizations" : {
            "$ref" : "#/components/schemas/Partner_ClientDeviceCustomizationsType"
          }
        }
      },
      "Partner_CustomizeClientDeviceWSResponse" : {
        "type" : "object",
        "description" : "Response object containing the applied client device customization settings.",
        "properties" : {
          "customizations" : {
            "$ref" : "#/components/schemas/Partner_ClientCustomizationsType"
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Partner_CustomizeClientWSRequest" : {
        "type" : "object",
        "description" : "Request object for customizing client settings and configurations.",
        "properties" : {
          "clientOrgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "customizations" : {
            "$ref" : "#/components/schemas/Partner_ClientCustomizationsType"
          }
        }
      },
      "Partner_CustomizeClientWSResponse" : {
        "type" : "object",
        "description" : "Response object containing the applied client customization settings.",
        "properties" : {
          "customizations" : {
            "$ref" : "#/components/schemas/Partner_ClientCustomizationsType"
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Partner_DeleteClientWebRequest" : {
        "type" : "object",
        "description" : "Request object for deleting a partner client account.",
        "properties" : {
          "clientOrgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Partner_DeleteClientWebResponse" : {
        "type" : "object",
        "description" : "Response object for deleting a partner client account."
      },
      "Partner_DeviceWithPartnerDetailsType" : {
        "type" : "object",
        "description" : "Device information with partner-specific details including control and reassignment status.",
        "properties" : {
          "device" : {
            "$ref" : "#/components/schemas/DeviceTypeV2"
          },
          "partnerControlledHardware" : {
            "type" : "boolean",
            "description" : "Whether the hardware is controlled by the partner",
            "example" : true,
            "nullable" : true
          },
          "reassignable" : {
            "type" : "boolean",
            "description" : "Whether the device can be reassigned to another organization",
            "example" : true,
            "nullable" : true
          }
        }
      },
      "Partner_GetClientDevicesWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting devices for a specific client organization.",
        "properties" : {
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Partner_GetClientDevicesWSResponse" : {
        "type" : "object",
        "description" : "Response object containing devices for a specific client organization.",
        "properties" : {
          "devices" : {
            "type" : "array",
            "description" : "List of devices with partner-specific details",
            "items" : {
              "$ref" : "#/components/schemas/Partner_DeviceWithPartnerDetailsType"
            },
            "nullable" : true
          }
        }
      },
      "Partner_GetClientRhombusOrgUsersForPartnerActivationTokenV2WSBaseResponse" : {
        "type" : "object",
        "description" : "Base response for getting client Rhombus organization users for partner activation token V2",
        "discriminator" : {
          "propertyName" : "type"
        },
        "oneOf" : [ {
          "$ref" : "#/components/schemas/Partner_GetClientRhombusOrgUsersForPartnerActivationTokenV2WSFailureResponse"
        }, {
          "$ref" : "#/components/schemas/Partner_GetClientRhombusOrgUsersForPartnerActivationTokenV2WSSuccessResponse"
        } ],
        "properties" : {
          "type" : {
            "type" : "string"
          }
        },
        "required" : [ "type" ]
      },
      "Partner_GetClientRhombusOrgUsersForPartnerActivationTokenV2WSFailureResponse" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "failureReason" : {
              "type" : "string",
              "description" : "Reason for the failure",
              "example" : "Invalid activation token",
              "nullable" : true
            }
          }
        } ],
        "description" : "Failure response for getting client Rhombus organization users for partner activation token V2.",
        "nullable" : true,
        "properties" : {
          "type" : {
            "type" : "string"
          }
        }
      },
      "Partner_GetClientRhombusOrgUsersForPartnerActivationTokenV2WSRequest" : {
        "type" : "object",
        "description" : "Request object for getting client Rhombus organization users for partner activation token V2.",
        "properties" : {
          "token" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Partner_GetClientRhombusOrgUsersForPartnerActivationTokenV2WSSuccessResponse" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "orgs" : {
              "type" : "array",
              "description" : "List of Rhombus organizations the user has access to",
              "items" : {
                "$ref" : "#/components/schemas/OrgV2Type"
              },
              "nullable" : true
            }
          }
        } ],
        "description" : "Success response for getting client Rhombus organization users for partner activation token V2.",
        "nullable" : true,
        "properties" : {
          "type" : {
            "type" : "string"
          }
        }
      },
      "Partner_GetClientSummaryInfoWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting client summary information.",
        "properties" : {
          "clientOrgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Partner_GetClientSummaryInfoWSResponse" : {
        "type" : "object",
        "description" : "Response object containing client summary information including account owner, device status, and settings.",
        "properties" : {
          "accountOwner" : {
            "$ref" : "#/components/schemas/WrappedRhombusOrgUserType"
          },
          "clientDeviceStatusMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Partner_ConnectionCountType"
            },
            "description" : "Map of device types to their connection status counts",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "licenseV2Enabled" : {
            "type" : "boolean",
            "description" : "Whether license V2 is enabled for the client",
            "example" : true,
            "nullable" : true
          },
          "locationCount" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Number of locations for the client",
            "example" : 3,
            "nullable" : true
          },
          "manuallySendLicenseExpirationEmailEnabled" : {
            "type" : "boolean",
            "description" : "Whether manual license expiration email sending is enabled",
            "example" : false,
            "nullable" : true
          },
          "recentPolicyAlertCount" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Number of recent policy alerts",
            "example" : 5,
            "nullable" : true
          }
        }
      },
      "Partner_GetListOfAllClientDevicesRequest" : {
        "type" : "object",
        "description" : "Request object for getting list of all client devices."
      },
      "Partner_GetListOfAllClientDevicesResponse" : {
        "type" : "object",
        "description" : "Response object containing list of all client devices.",
        "properties" : {
          "listOfAllClientDevices" : {
            "type" : "array",
            "description" : "List of all client devices",
            "items" : {
              "$ref" : "#/components/schemas/DeviceTypeV2"
            },
            "nullable" : true
          }
        }
      },
      "Partner_GetListOfControlledHardwareRequest" : {
        "type" : "object",
        "description" : "Request object for getting list of controlled hardware."
      },
      "Partner_GetListOfControlledHardwareResponse" : {
        "type" : "object",
        "description" : "Response object containing list of controlled hardware.",
        "properties" : {
          "controlledHardwareList" : {
            "type" : "array",
            "description" : "List of controlled hardware",
            "items" : {
              "$ref" : "#/components/schemas/Partner_UnregisteredControlledHardwareType"
            },
            "nullable" : true
          }
        }
      },
      "Partner_GetPartnerClientMobileAccountAccessRequest" : {
        "type" : "object",
        "description" : "Request object for getting partner client mobile account access.",
        "properties" : {
          "authorityUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "clientOrgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Partner_GetPartnerClientMobileAccountAccessResponse" : {
        "type" : "object",
        "description" : "Response object containing partner client mobile account access session.",
        "properties" : {
          "clientAccountAccessSessionId" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Partner_GetPartnerClientsStatusMapWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting partner clients status map."
      },
      "Partner_GetPartnerClientsStatusMapWSResponse" : {
        "type" : "object",
        "description" : "Response object containing partner clients status map with device connection counts.",
        "properties" : {
          "clientDeviceStatusMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/Partner_ConnectionCountType"
              },
              "description" : "Map of client UUIDs to device type connection counts",
              "nullable" : true
            },
            "description" : "Map of client UUIDs to device type connection counts",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Partner_GetPartnerClientsWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting all partner clients."
      },
      "Partner_GetPartnerClientsWSResponse" : {
        "type" : "object",
        "description" : "Response object containing list of partner clients.",
        "properties" : {
          "clients" : {
            "type" : "array",
            "description" : "List of partner clients",
            "items" : {
              "$ref" : "#/components/schemas/Partner_PartnerClientWebType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Partner_GetPartnerUsersInOrgWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting partner users in organization."
      },
      "Partner_GetPartnerUsersInOrgWSResponse" : {
        "type" : "object",
        "description" : "Response object containing partner users in organization with notification settings and permissions.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "notificationSettings" : {
            "type" : "array",
            "description" : "List of partner notification settings",
            "items" : {
              "$ref" : "#/components/schemas/PartnerNotificationSettingsType"
            },
            "nullable" : true
          },
          "notificationSettingsV2" : {
            "type" : "array",
            "description" : "List of partner notification settings V2",
            "items" : {
              "$ref" : "#/components/schemas/PartnerNotificationSettingsV2"
            },
            "nullable" : true
          },
          "partnerPermissions" : {
            "type" : "array",
            "description" : "List of partner permissions",
            "items" : {
              "$ref" : "#/components/schemas/PartnerPermissionType"
            },
            "nullable" : true
          },
          "partnerUsers" : {
            "type" : "array",
            "description" : "List of partner users in the organization",
            "items" : {
              "$ref" : "#/components/schemas/WrappedRhombusOrgUserType"
            },
            "nullable" : true
          }
        }
      },
      "Partner_GetShipmentsWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting client shipments within a time range.",
        "properties" : {
          "clientOrgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "endTimeSec" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "End time for shipment search (seconds since epoch)",
            "example" : 1640995200,
            "nullable" : true
          },
          "startTimeSec" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start time for shipment search (seconds since epoch)",
            "example" : 1640908800,
            "nullable" : true
          }
        }
      },
      "Partner_GetShipmentsWSResponse" : {
        "type" : "object",
        "description" : "Response object containing client shipments within the specified time range.",
        "properties" : {
          "customerShipmentList" : {
            "type" : "array",
            "description" : "List of customer shipments",
            "items" : {
              "$ref" : "#/components/schemas/CustomerShipmentType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Partner_GrantSupportAccessToClientWSRequest" : {
        "type" : "object",
        "description" : "Request object for granting support access to a client account.",
        "properties" : {
          "clientOrgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Partner_GrantSupportAccessToClientWSResponse" : {
        "type" : "object",
        "description" : "Response object for granting support access to a client account.",
        "properties" : {
          "errMessage" : {
            "type" : "string",
            "description" : "Error message if support access grant failed",
            "example" : "Client organization not found",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Partner_PartnerClientWebType" : {
        "type" : "object",
        "description" : "Partner client information including organization details and device counts.",
        "properties" : {
          "authorityUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "clientAccessAllowed" : {
            "type" : "boolean",
            "description" : "Whether client access is allowed (duplicate getter)",
            "example" : true,
            "nullable" : true
          },
          "clientAccountAccessUrl" : {
            "type" : "string",
            "description" : "URL for accessing the client account",
            "example" : "https://console.rhombussystems.com/client/access",
            "nullable" : true
          },
          "clientOrgName" : {
            "type" : "string",
            "description" : "Name of the client organization",
            "example" : "Acme Corporation",
            "nullable" : true
          },
          "clientOrgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Timestamp when the client was created (milliseconds since epoch)",
            "example" : 1640995200000,
            "nullable" : true
          },
          "totalAudioGateways" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Total number of audio gateways",
            "example" : 4,
            "nullable" : true
          },
          "totalBadgeReaders" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Total number of badge readers",
            "example" : 12,
            "nullable" : true
          },
          "totalCameras" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Total number of cameras",
            "example" : 25,
            "nullable" : true
          },
          "totalClimateSensors" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Total number of climate sensors",
            "example" : 10,
            "nullable" : true
          },
          "totalDoorSensors" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Total number of door sensors",
            "example" : 8,
            "nullable" : true
          },
          "totalLocations" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Total number of locations",
            "example" : 3,
            "nullable" : true
          },
          "totalOccupancySensors" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Total number of occupancy sensors",
            "example" : 6,
            "nullable" : true
          },
          "totalProximitySensors" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Total number of proximity sensors",
            "example" : 5,
            "nullable" : true
          }
        }
      },
      "Partner_PartnerWebResponseStatusEnum" : {
        "type" : "string",
        "description" : "Status responses for partner web operations.",
        "enum" : [ "BASIC_AUTH_FAILED", "PASSWORD_MISMATCH", "USER_EXISTS", "CLIENT_EXISTS", "USER_NOT_FOUND", "BAD_INPUT", "SUCCESS", "PASSWORD_TOO_SHORT" ]
      },
      "Partner_ReassignDeviceOrgWSRequest" : {
        "type" : "object",
        "description" : "Request object for reassigning devices from one organization to another.",
        "properties" : {
          "serialNumbers" : {
            "type" : "array",
            "description" : "Serial numbers of the devices that should be reassigned to target organization",
            "items" : {
              "type" : "string",
              "description" : "Serial numbers of the devices that should be reassigned to target organization",
              "nullable" : true
            },
            "nullable" : true
          },
          "sourceOrgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "targetOrgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        },
        "required" : [ "sourceOrgUuid", "targetOrgUuid" ]
      },
      "Partner_ReassignDeviceOrgWSResponse" : {
        "type" : "object",
        "description" : "Response object containing the status of device reassignment operations.",
        "properties" : {
          "statuses" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/OperationStatus"
            },
            "description" : "Map of device serial numbers to their reassignment operation status",
            "nullable" : true
          }
        }
      },
      "Partner_RegisterDealWSRequest" : {
        "type" : "object",
        "description" : "Request object for registering a deal with partner details.",
        "properties" : {
          "details" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "description" : "Map of deal details with key-value pairs",
              "nullable" : true
            },
            "description" : "Map of deal details with key-value pairs",
            "nullable" : true
          }
        }
      },
      "Partner_RegisterDealWSResponse" : {
        "type" : "object",
        "description" : "Response object containing the result of registering a deal.",
        "properties" : {
          "clients" : {
            "type" : "array",
            "description" : "List of partner clients associated with the registered deal",
            "items" : {
              "$ref" : "#/components/schemas/Partner_PartnerClientWebType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Partner_RequestAccessToClientAccountRequest" : {
        "type" : "object",
        "description" : "Request object for requesting access to a client account (deprecated, use V2).",
        "properties" : {
          "clientEmail" : {
            "type" : "string",
            "description" : "Email address of the client to request access for",
            "example" : "client@acme.com",
            "nullable" : true
          }
        }
      },
      "Partner_RequestAccessToClientAccountResponse" : {
        "type" : "object",
        "description" : "Response object for requesting access to a client account (deprecated, use V2).",
        "properties" : {
          "success" : {
            "type" : "boolean",
            "description" : "Whether the access request was successful",
            "example" : true,
            "nullable" : true
          }
        }
      },
      "Partner_RequestAccessToClientAccountV2Request" : {
        "type" : "object",
        "description" : "Request object for requesting access to a client account V2.",
        "properties" : {
          "clientEmail" : {
            "type" : "string",
            "description" : "Email address of the client to request access for",
            "example" : "client@acme.com",
            "nullable" : true
          }
        }
      },
      "Partner_RequestAccessToClientAccountV2Response" : {
        "type" : "object",
        "description" : "Response object for requesting access to a client account V2.",
        "properties" : {
          "success" : {
            "type" : "boolean",
            "description" : "Whether the access request was successful",
            "example" : true,
            "nullable" : true
          }
        }
      },
      "Partner_SubmitSupportAccessDecisionForPartnerActivationTokenV2WSBaseResponse" : {
        "type" : "object",
        "description" : "Base response for submitting support access decision for partner activation token V2",
        "discriminator" : {
          "propertyName" : "type"
        },
        "oneOf" : [ {
          "$ref" : "#/components/schemas/Partner_SubmitSupportAccessDecisionForPartnerActivationTokenV2WSFailureResponse"
        }, {
          "$ref" : "#/components/schemas/Partner_SubmitSupportAccessDecisionForPartnerActivationTokenV2WSSuccessResponse"
        } ],
        "properties" : {
          "type" : {
            "type" : "string"
          }
        },
        "required" : [ "type" ]
      },
      "Partner_SubmitSupportAccessDecisionForPartnerActivationTokenV2WSFailureResponse" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "failureReason" : {
              "type" : "string",
              "description" : "Reason for the failure",
              "example" : "Invalid activation token",
              "nullable" : true
            }
          }
        } ],
        "description" : "Failure response for submitting support access decision for partner activation token V2.",
        "nullable" : true,
        "properties" : {
          "type" : {
            "type" : "string"
          }
        }
      },
      "Partner_SubmitSupportAccessDecisionForPartnerActivationTokenV2WSRequest" : {
        "type" : "object",
        "description" : "Request object for submitting support access decision for partner activation token V2.",
        "properties" : {
          "accessGrantedByClient" : {
            "type" : "boolean",
            "description" : "Whether access was granted by the client",
            "example" : true,
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "token" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Partner_SubmitSupportAccessDecisionForPartnerActivationTokenV2WSSuccessResponse" : {
        "type" : "object",
        "allOf" : [ ],
        "description" : "Success response for submitting support access decision for partner activation token V2.",
        "nullable" : true,
        "properties" : {
          "type" : {
            "type" : "string"
          }
        }
      },
      "Partner_UnregisteredControlledHardwareType" : {
        "type" : "object",
        "description" : "Information about unregistered controlled hardware available for partner registration.",
        "properties" : {
          "deviceModel" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "deviceType" : {
            "$ref" : "#/components/schemas/DeviceTypeEnum"
          },
          "macAddress" : {
            "type" : "string",
            "description" : "MAC address of the hardware device",
            "example" : "00:11:22:33:44:55",
            "nullable" : true
          },
          "serialNumber" : {
            "type" : "string",
            "description" : "Serial number of the hardware device",
            "example" : "RH123456789",
            "nullable" : true
          }
        }
      },
      "Partner_UpdateManuallySendLicenseExpirationEmailWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating manual license expiration email settings for an organization.",
        "properties" : {
          "manuallySendLicenseExpirationEmail" : {
            "type" : "boolean",
            "description" : "Whether to manually send license expiration emails",
            "example" : true,
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Partner_UpdateManuallySendLicenseExpirationEmailWSResponse" : {
        "type" : "object",
        "description" : "Response object for updating manual license expiration email settings.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Password_ForgotPasswordWSRequest" : {
        "type" : "object",
        "description" : "Request object for initiating a forgot password flow with captcha verification.",
        "properties" : {
          "email" : {
            "type" : "string",
            "description" : "Email address of the user requesting password reset",
            "example" : "user@example.com",
            "nullable" : true
          },
          "googleCaptchaSource" : {
            "$ref" : "#/components/schemas/GoogleCaptchaSourceEnum"
          },
          "googlesCaptchaResponse" : {
            "type" : "string",
            "description" : "Google reCAPTCHA response token for verification",
            "example" : "03AGdBq25...",
            "nullable" : true
          }
        }
      },
      "Password_ForgotPasswordWSResponse" : {
        "type" : "object",
        "description" : "Response object for forgot password request containing success status and failure details.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "failureReason" : {
            "type" : "string",
            "description" : "Reason for failure if the request was unsuccessful",
            "example" : "User not found",
            "nullable" : true
          },
          "success" : {
            "type" : "boolean",
            "description" : "Whether the forgot password request was successful",
            "example" : true,
            "nullable" : true
          }
        }
      },
      "Password_ResetPasswordWSRequest" : {
        "type" : "object",
        "description" : "Request object for resetting user password using a reset token.",
        "properties" : {
          "password" : {
            "type" : "string",
            "description" : "New password for the user account",
            "example" : "newSecurePassword123",
            "nullable" : true
          },
          "token" : {
            "type" : "string",
            "description" : "Password reset token received via email",
            "example" : "abc123def456",
            "nullable" : true
          }
        }
      },
      "Password_ResetPasswordWSResponse" : {
        "type" : "object",
        "description" : "Response object for password reset containing success status and detailed failure information.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "failureReason" : {
            "type" : "string",
            "description" : "Human-readable reason for failure if the reset was unsuccessful",
            "example" : "Invalid or expired token",
            "nullable" : true
          },
          "failureReasonType" : {
            "type" : "string",
            "description" : "Structured failure reason type for programmatic handling",
            "enum" : [ "RHOMBUS_USER_NOT_FOUND", "RHOMBUS_ORG_USER_NOT_FOUND", "PASSWORD_RESET_TOKEN_EXPIRED", "INVALID_CURRENT_PASSWORD" ],
            "nullable" : true
          },
          "success" : {
            "type" : "boolean",
            "description" : "Whether the password reset was successful",
            "example" : true,
            "nullable" : true
          }
        }
      },
      "Password_UserSignupWSRequest" : {
        "type" : "object",
        "description" : "Request object for user signup with invitation token, password, and EULA acceptance.",
        "properties" : {
          "eulaAccepted" : {
            "type" : "boolean",
            "description" : "Whether the user has accepted the End User License Agreement",
            "example" : true,
            "nullable" : true
          },
          "password" : {
            "type" : "string",
            "description" : "Password for the new user account",
            "example" : "securePassword123",
            "nullable" : true
          },
          "token" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Password_UserSignupWSResponse" : {
        "type" : "object",
        "description" : "Response object for user signup containing success status and failure details.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "failureReason" : {
            "type" : "string",
            "description" : "Reason for failure if the signup was unsuccessful",
            "example" : "Invalid invitation token",
            "nullable" : true
          },
          "success" : {
            "type" : "boolean",
            "description" : "Whether the user signup was successful",
            "example" : true,
            "nullable" : true
          }
        }
      },
      "PeopleCountEventType" : {
        "type" : "object",
        "description" : "List of people count events",
        "properties" : {
          "boundingBoxes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BoundingBoxType"
            },
            "nullable" : true
          },
          "deviceLabels" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "deviceUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          },
          "eventTimestamp" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "imageS3Key" : {
            "type" : "string",
            "nullable" : true
          },
          "locationLabels" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "peopleCount" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "PerceptionType" : {
        "type" : "string",
        "enum" : [ "PEOPLE_COUNTING", "FACE_COUNTING_UNIQUE", "FACE_COUNTING_NONUNIQUE", "ENGAGMENT_COUNTING", "FACE_RECOGNITION", "LICENSEPLATE_RECOGNITION", "VEHICLE_COUNTING", "OCCUPANCY_COUNTING", "UNKNOWN" ]
      },
      "Permission" : {
        "type" : "string",
        "enum" : [ "READONLY", "ADMIN", "LIVEONLY" ]
      },
      "Permission_AssignUserPermissionWSRequest" : {
        "type" : "object",
        "description" : "Request object for assigning user permissions (deprecated, use Permission Group endpoints instead).",
        "properties" : {
          "userPermission" : {
            "$ref" : "#/components/schemas/UserPermissionType"
          }
        }
      },
      "Permission_AssignUserPermissionWSResponse" : {
        "type" : "object",
        "description" : "Response object for assigning user permissions (deprecated, use Permission Group endpoints instead).",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Permission_CreatePartnerPermissionGroupWSRequest" : {
        "type" : "object",
        "description" : "Request object for creating a new partner permission group.",
        "properties" : {
          "partnerPermissionGroup" : {
            "$ref" : "#/components/schemas/PartnerUserPermissionGroupType"
          }
        }
      },
      "Permission_CreatePartnerPermissionGroupWSResponse" : {
        "type" : "object",
        "description" : "Response object containing the UUID of the created partner permission group.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Permission_CreatePermissionGroupWSRequest" : {
        "type" : "object",
        "description" : "Request object for creating a new permission group.",
        "properties" : {
          "userPermissionGroup" : {
            "$ref" : "#/components/schemas/UserPermissionGroupType"
          }
        }
      },
      "Permission_CreatePermissionGroupWSResponse" : {
        "type" : "object",
        "description" : "Response object containing the UUID of the created permission group.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Permission_DeletePartnerPermissionGroupWSRequest" : {
        "type" : "object",
        "description" : "Request object for deleting a partner permission group.",
        "properties" : {
          "groupUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Permission_DeletePartnerPermissionGroupWSResponse" : {
        "type" : "object",
        "description" : "Response object for deleting a partner permission group.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Permission_DeletePermissionGroupWSRequest" : {
        "type" : "object",
        "description" : "Request object for deleting a permission group.",
        "properties" : {
          "groupUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Permission_DeletePermissionGroupWSResponse" : {
        "type" : "object",
        "description" : "Response object for deleting a permission group.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Permission_GetPartnerPermissionGroupWSResponse" : {
        "type" : "object",
        "description" : "Response object containing partner permission groups and client permission group mappings.",
        "properties" : {
          "clientPermissionGroupMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/UserPermissionGroupType"
            },
            "description" : "Map of client UUIDs to their permission group types",
            "nullable" : true
          },
          "clientPermissionsGroupMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/UserPermissionGroupType"
            },
            "nullable" : true,
            "writeOnly" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "groupMembership" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "description" : "Map of permission group UUIDs to list of user UUIDs in each group",
              "items" : {
                "type" : "string",
                "format" : "RUUID",
                "description" : "base 64 (url-safe) uuid string",
                "example" : "AAAAAAAAAAAAAAAAAAAAAA",
                "nullable" : true
              },
              "nullable" : true
            },
            "description" : "Map of permission group UUIDs to list of user UUIDs in each group",
            "nullable" : true
          },
          "permissionGroups" : {
            "type" : "array",
            "description" : "List of partner permission groups",
            "items" : {
              "$ref" : "#/components/schemas/PartnerUserPermissionGroupType"
            },
            "nullable" : true
          }
        }
      },
      "Permission_GetPartnerPermissionGroupsWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting partner permission groups for the organization."
      },
      "Permission_GetPermissionGroupsForOrgWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting permission groups for a specific organization.",
        "properties" : {
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Permission_GetPermissionGroupsForOrgWSResponse" : {
        "type" : "object",
        "description" : "Response object containing permission groups for a specific organization.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "permissionGroups" : {
            "type" : "array",
            "description" : "List of permission groups in the organization",
            "items" : {
              "$ref" : "#/components/schemas/UserPermissionGroupType"
            },
            "nullable" : true
          }
        }
      },
      "Permission_GetPermissionGroupsWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting all permission groups in the organization."
      },
      "Permission_GetPermissionGroupsWSResponse" : {
        "type" : "object",
        "description" : "Response object containing permission groups and membership information for the organization.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "groupMembership" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "description" : "Map of permission group UUIDs to list of user UUIDs in each group",
              "items" : {
                "type" : "string",
                "format" : "RUUID",
                "description" : "base 64 (url-safe) uuid string",
                "example" : "AAAAAAAAAAAAAAAAAAAAAA",
                "nullable" : true
              },
              "nullable" : true
            },
            "description" : "Map of permission group UUIDs to list of user UUIDs in each group",
            "nullable" : true
          },
          "partnerMembership" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "description" : "Map of partner UUIDs to list of user UUIDs in each partner organization",
              "items" : {
                "type" : "string",
                "format" : "RUUID",
                "description" : "base 64 (url-safe) uuid string",
                "example" : "AAAAAAAAAAAAAAAAAAAAAA",
                "nullable" : true
              },
              "nullable" : true
            },
            "description" : "Map of partner UUIDs to list of user UUIDs in each partner organization",
            "nullable" : true
          },
          "permissionGroups" : {
            "type" : "array",
            "description" : "List of permission groups in the organization",
            "items" : {
              "$ref" : "#/components/schemas/UserPermissionGroupType"
            },
            "nullable" : true
          }
        }
      },
      "Permission_GetPermissionsForCurrentPartnerWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting permissions for the current partner user."
      },
      "Permission_GetPermissionsForCurrentPartnerWSResponse" : {
        "type" : "object",
        "description" : "Response object containing partner permission information including functionality lists, client permissions, and group details.",
        "properties" : {
          "assignablePermissionGroups" : {
            "type" : "array",
            "description" : "Set of partner permission group UUIDs the user can assign to other users",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "clientFunctionalityList" : {
            "type" : "array",
            "description" : "List of client functionalities the user has access to",
            "items" : {
              "$ref" : "#/components/schemas/Functionality"
            },
            "nullable" : true
          },
          "clientPermissionMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/PartnerPermission"
            },
            "description" : "Map of client UUIDs to partner permission levels",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "functionalityList" : {
            "type" : "array",
            "description" : "List of partner functionalities the user has access to",
            "items" : {
              "$ref" : "#/components/schemas/PartnerFunctionality"
            },
            "nullable" : true
          },
          "permissionGroupName" : {
            "type" : "string",
            "description" : "Name of the partner user's permission group",
            "example" : "Partner Administrator",
            "nullable" : true
          },
          "superAdmin" : {
            "type" : "boolean",
            "description" : "Whether the partner user has super admin privileges",
            "example" : false,
            "nullable" : true
          }
        }
      },
      "Permission_GetPermissionsForCurrentUserWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting permissions for the current user."
      },
      "Permission_GetPermissionsForCurrentUserWSResponse" : {
        "type" : "object",
        "description" : "Response object containing comprehensive permission information for the current user including functionality, device, location, and granular access maps.",
        "properties" : {
          "accessControlLocationAccessMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Permission"
            },
            "description" : "Map of access control location UUIDs to permission levels",
            "nullable" : true
          },
          "accessMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Permission"
            },
            "description" : "Deprecated: Map of device UUIDs to permission levels (use deviceAccessMap instead)",
            "nullable" : true
          },
          "assignablePermissionGroups" : {
            "type" : "array",
            "description" : "Set of permission group UUIDs the user can assign to other users",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "deviceAccessMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Permission"
            },
            "description" : "Map of device UUIDs to permission levels",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "functionalityList" : {
            "type" : "array",
            "description" : "List of functionalities the user has access to",
            "items" : {
              "$ref" : "#/components/schemas/Functionality"
            },
            "nullable" : true
          },
          "installer" : {
            "type" : "boolean",
            "description" : "Whether the user has installer privileges",
            "example" : false,
            "nullable" : true
          },
          "locationAccessMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Permission"
            },
            "description" : "Map of location UUIDs to permission levels",
            "nullable" : true
          },
          "locationGranularAccessMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/Permission"
              },
              "description" : "Map of location UUIDs to granular functionality permission maps",
              "nullable" : true
            },
            "description" : "Map of location UUIDs to granular functionality permission maps",
            "nullable" : true
          },
          "permissionGroupName" : {
            "type" : "string",
            "description" : "Name of the user's permission group",
            "example" : "Administrator",
            "nullable" : true
          },
          "superAdmin" : {
            "type" : "boolean",
            "description" : "Whether the user has super admin privileges",
            "example" : false,
            "nullable" : true
          }
        }
      },
      "Permission_UpdatePartnerPermissionGroupWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating an existing partner permission group.",
        "properties" : {
          "partnerPermissionGroup" : {
            "$ref" : "#/components/schemas/PartnerUserPermissionGroupType"
          }
        }
      },
      "Permission_UpdatePartnerPermissionGroupWSResponse" : {
        "type" : "object",
        "description" : "Response object for updating a partner permission group.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Permission_UpdatePermissionGroupWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating an existing permission group.",
        "properties" : {
          "userPermissionGroup" : {
            "$ref" : "#/components/schemas/UserPermissionGroupType"
          }
        }
      },
      "Permission_UpdatePermissionGroupWSResponse" : {
        "type" : "object",
        "description" : "Response object for updating a permission group.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "PermyriadRect" : {
        "type" : "object",
        "properties" : {
          "h" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "size" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "w" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "x" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "y" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Person" : {
        "type" : "object",
        "description" : "The updated person",
        "properties" : {
          "createdOn" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "updatedOn" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "PersonSelectiveUpdate" : {
        "type" : "object",
        "description" : "Selective update information for the person",
        "properties" : {
          "createdOn" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "updatedOn" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "updatedSetMethodMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "boolean",
              "nullable" : true
            },
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "PhysicalPortEnumType" : {
        "type" : "string",
        "enum" : [ "GPIO_OUTPUT", "GPIO_INPUT", "GPIO_INPUT_SUPERVISED", "RS485", "WIEGAND_INPUT", "WIEGAND_OUTPUT", "BUTTON_INPUT" ]
      },
      "PhysicalPortType" : {
        "type" : "object",
        "properties" : {
          "boardNum" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "componentPortTypeUsageMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "RUUID",
                "description" : "base 64 (url-safe) uuid string",
                "example" : "AAAAAAAAAAAAAAAAAAAAAA",
                "nullable" : true
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "label" : {
            "type" : "string",
            "nullable" : true
          },
          "portNum" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "supportedPortTypes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PhysicalPortEnumType"
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "PimlocType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "baseAPIUrl" : {
              "type" : "string",
              "enum" : [ "US", "EU" ],
              "nullable" : true
            },
            "clientId" : {
              "type" : "string",
              "nullable" : true
            },
            "clientSecret" : {
              "type" : "string",
              "nullable" : true
            },
            "rhombusToken" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "validCredentials" : {
              "type" : "boolean",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "PinCredential" : {
        "type" : "object",
        "allOf" : [ ],
        "nullable" : true,
        "properties" : {
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "endDateEpochSecExclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "lastUsedAccessControlledDoorUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "lastUsedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "lastUsedLocationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "lowercaseHexValue" : {
            "type" : "string",
            "nullable" : true,
            "readOnly" : true
          },
          "managedCredUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "note" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "startDateEpochSecInclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/AccessControlCredentialEnumType"
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "value" : {
            "type" : "string",
            "nullable" : true
          },
          "workflowStatus" : {
            "$ref" : "#/components/schemas/AccessControlCredentialWorkflowStatusEnumType"
          }
        }
      },
      "PinQueryFilter" : {
        "type" : "object",
        "description" : "Applies a filter on PINs retrieved. If a filter is not provided or if filter fields are left empty, no filtering will be applied. If used with pageRequest, the paginated result will be retrieved first then the filter will be applied.",
        "properties" : {
          "statusFilter" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PinStatus"
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "PinStatus" : {
        "type" : "string",
        "enum" : [ "ACTIVE", "SCHEDULED", "EXPIRED" ]
      },
      "PipelineComponent" : {
        "type" : "object",
        "properties" : {
          "arg_json" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "nullable" : true
            },
            "nullable" : true
          },
          "name" : {
            "$ref" : "#/components/schemas/PipelineComponentType"
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "PipelineComponentType" : {
        "type" : "string",
        "enum" : [ "logger", "cropper_jpg", "color_class", "crop_mem", "motion_filter", "motion_detector", "visual_tamper", "syntiant_va", "syntiant_tracker", "syntiant_lpr", "syntiant_bounding_box" ]
      },
      "PlaceOsSettings" : {
        "type" : "object",
        "properties" : {
          "alertUnauthorizedFaces" : {
            "type" : "boolean",
            "nullable" : true
          },
          "apiUrl" : {
            "type" : "string",
            "nullable" : true
          },
          "createSeekPoints" : {
            "type" : "boolean",
            "nullable" : true
          },
          "doorInfoMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/BadgeIntegrationDoorInfoType"
            },
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabledTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "enablingUser" : {
            "type" : "string",
            "nullable" : true
          },
          "enablingUserUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "identifyFacesFromBadge" : {
            "type" : "boolean",
            "nullable" : true
          },
          "migrated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "rhombusToken" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "saveClips" : {
            "type" : "boolean",
            "nullable" : true
          },
          "webhookSignatureSecret" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "PlaceOsType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "alertUnauthorizedFaces" : {
              "type" : "boolean",
              "nullable" : true
            },
            "apiToken" : {
              "type" : "string",
              "nullable" : true
            },
            "apiUrl" : {
              "type" : "string",
              "nullable" : true
            },
            "badgeAuthDisablesAlarmMonitoring" : {
              "type" : "boolean",
              "nullable" : true
            },
            "createSeekPoints" : {
              "type" : "boolean",
              "nullable" : true
            },
            "doorInfoMap" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/BadgeIntegrationDoorInfoType"
              },
              "nullable" : true
            },
            "doorsValidated" : {
              "type" : "boolean",
              "nullable" : true
            },
            "identifyFacesFromBadge" : {
              "type" : "boolean",
              "nullable" : true
            },
            "indexFaces" : {
              "type" : "boolean",
              "nullable" : true
            },
            "misconfiguredDoors" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "nullable" : true
              },
              "nullable" : true
            },
            "refreshToken" : {
              "type" : "string",
              "nullable" : true
            },
            "rhombusToken" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "saveClips" : {
              "type" : "boolean",
              "nullable" : true
            },
            "tokenValid" : {
              "type" : "boolean",
              "nullable" : true
            },
            "triggerNotification" : {
              "type" : "boolean",
              "nullable" : true
            },
            "webhookSignatureSecret" : {
              "type" : "string",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "PlaceType" : {
        "type" : "object",
        "properties" : {
          "alertUnauthorizedFaces" : {
            "type" : "boolean",
            "nullable" : true
          },
          "createSeekPoints" : {
            "type" : "boolean",
            "nullable" : true
          },
          "id" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "identifyFacesFromBadge" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "saveClips" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "PlayerViewLiveTypeEnum" : {
        "type" : "string",
        "enum" : [ "REALTIME", "BUFFERED" ]
      },
      "PmSensorType" : {
        "type" : "object",
        "properties" : {
          "nc0p5" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "nc10p0" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "nc1p0" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "nc2p5" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "nc4p0" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "noxIdx" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "pm10p0" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "pm1p0" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "pm2p5" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "pm4p0" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "relHumid" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "tempC" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "timestampSec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "typPartSize" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "vocIdx" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          }
        }
      },
      "PointType" : {
        "type" : "object",
        "properties" : {
          "x" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "y" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "PolicyAlertV2Type" : {
        "type" : "object",
        "description" : "Policy alert V2 to report as bad",
        "properties" : {
          "airQualityIndex" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "airQualityIndexThreshold" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "alertMonitoringThreatCaseUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "alertMonitoringVerified" : {
            "type" : "boolean",
            "nullable" : true
          },
          "alertingEventFaces" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PolicyEventFaceType"
            },
            "nullable" : true
          },
          "alertingEventVehicles" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PolicyEventVehicleType"
            },
            "nullable" : true
          },
          "cd" : {
            "type" : "string",
            "description" : "Custom activity display description, maximum 100 characters",
            "nullable" : true
          },
          "cdn" : {
            "type" : "string",
            "description" : "Custom activity display name, maximum 32 characters",
            "nullable" : true
          },
          "ch2oPpb" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "ch2oPpbThreshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "clipLocation" : {
            "$ref" : "#/components/schemas/MetaDataLocationType"
          },
          "clipLocationMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/MetaDataLocationType"
            },
            "nullable" : true
          },
          "clipLocationMapV2" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "cllmBooleanValue" : {
            "type" : "boolean",
            "nullable" : true
          },
          "cllmCheckCondition" : {
            "$ref" : "#/components/schemas/CheckCondition"
          },
          "cllmIntegerValue" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "cllmPromptTypeEnum" : {
            "type" : "string",
            "enum" : [ "COUNT", "PERCENT", "BOOLEAN" ],
            "nullable" : true
          },
          "cllmPromptUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "co2" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "co2Ppm" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "co2PpmThreshold" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "co2Threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "coConcentration" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "coConcentrationThreshold" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "componentUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "delayedProcessing" : {
            "type" : "boolean",
            "nullable" : true
          },
          "deleted" : {
            "type" : "boolean",
            "nullable" : true
          },
          "deviceType" : {
            "$ref" : "#/components/schemas/DeviceTypeEnum"
          },
          "deviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "durationSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "egressBoundaryDevices" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          },
          "ethanol" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "ethanolThreshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "finalized" : {
            "type" : "boolean",
            "nullable" : true
          },
          "heatIndexDegF" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "heatIndexDegFThreshold" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "humidityPercent1616" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "humidityPercentThreshold1616" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "humidityPermyriad" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "humidityThresholdPermyriad" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "iaq" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "iaqThreshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "ingressBoundaryDevices" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          },
          "leakDetected" : {
            "type" : "boolean",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "maxLuf" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "notificationSent" : {
            "type" : "boolean",
            "nullable" : true
          },
          "noxIdx" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "noxIdxThreshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "numHumans" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "peopleCountHighThreshold" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "peopleCountLowThreshold" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "pm10p0" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "pm10p0Threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "pm1p0" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "pm1p0Threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "pm25" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "pm25Threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "pm4p0" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "pm4p0Threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "policyAlertTriggers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ActivityEnum"
            },
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "pressure" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "pressureThreshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "probeTempC" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "probeTempCThreshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "probeTempThreshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "relHumid" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "relHumidThreshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "saved" : {
            "type" : "boolean",
            "nullable" : true
          },
          "shared" : {
            "type" : "boolean",
            "nullable" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "tamperByMovementChange" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "tampered" : {
            "type" : "boolean",
            "nullable" : true
          },
          "tempC" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "tempCThreshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "tempProbePresent" : {
            "type" : "boolean",
            "nullable" : true
          },
          "temperatureCelsius1616" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "temperatureCelsiusThreshold1616" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "temperaturePermyriad" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "temperatureThresholdPermyriad" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "textDescription" : {
            "type" : "string",
            "description" : "Natural language description of the alert",
            "nullable" : true
          },
          "thcPercent" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "thcPercentThreshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "thumbnailLocation" : {
            "$ref" : "#/components/schemas/MetaDataLocationType"
          },
          "thumbnailLocationV2" : {
            "type" : "string",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "tvoc" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "tvocThreshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "type" : {
            "type" : "string",
            "enum" : [ "POLICY_ALERT_V2", "ACCESS_CONTROLLED_DOOR_POLICY_ALERT" ],
            "nullable" : true,
            "readOnly" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "vapeDetected" : {
            "type" : "boolean",
            "nullable" : true
          },
          "vapeSmokePercent" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "vapeSmokePercentThreshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "vocIdx" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "vocIdxThreshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          }
        }
      },
      "PolicyAlertWithDetailsType" : {
        "type" : "object",
        "description" : "Detailed information about the policy alert",
        "oneOf" : [ {
          "$ref" : "#/components/schemas/PolicyAlertV2Type"
        }, {
          "$ref" : "#/components/schemas/AccessControlledDoorPolicyAlertType"
        } ],
        "properties" : {
          "alertMonitoringThreatCaseUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "alertMonitoringVerified" : {
            "type" : "boolean",
            "nullable" : true
          },
          "boundingBoxes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ClipBoundingBoxType"
            },
            "nullable" : true
          },
          "boundingBoxesMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/ClipBoundingBoxType"
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "clientType" : {
            "$ref" : "#/components/schemas/ApiClientTypeEnum"
          },
          "clipLocationMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/MetaDataLocationType"
            },
            "nullable" : true
          },
          "clipLocationMapV2" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "componentCompositeSeekPointsMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/ClipSeekPointV2Type"
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "delayedProcessing" : {
            "type" : "boolean",
            "nullable" : true
          },
          "deleted" : {
            "type" : "boolean",
            "nullable" : true
          },
          "durationSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "finalized" : {
            "type" : "boolean",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "notificationSent" : {
            "type" : "boolean",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "policyAlertTriggers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ActivityEnum"
            },
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "recognizedEventFaces" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PolicyEventFaceType"
            },
            "nullable" : true
          },
          "recognizedEventVehicles" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PolicyEventVehicleType"
            },
            "nullable" : true
          },
          "saved" : {
            "type" : "boolean",
            "nullable" : true
          },
          "seekPoints" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ClipSeekPointV2Type"
            },
            "nullable" : true
          },
          "seekPointsMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/ClipSeekPointV2Type"
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "shared" : {
            "type" : "boolean",
            "nullable" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "textDescription" : {
            "type" : "string",
            "description" : "Natural language description of the alert",
            "nullable" : true
          },
          "thirdPartyDeviceName" : {
            "type" : "string",
            "nullable" : true
          },
          "thumbnailLocation" : {
            "$ref" : "#/components/schemas/MetaDataLocationType"
          },
          "thumbnailLocationV2" : {
            "type" : "string",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "type" : "string",
            "enum" : [ "POLICY_ALERT_V2", "ACCESS_CONTROLLED_DOOR_POLICY_ALERT" ],
            "nullable" : true,
            "readOnly" : true
          },
          "unrecognizedEventFaces" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PolicyEventFaceType"
            },
            "nullable" : true
          },
          "unrecognizedEventVehicles" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PolicyEventVehicleType"
            },
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "PolicyEventFaceType" : {
        "type" : "object",
        "properties" : {
          "faceId" : {
            "type" : "string",
            "nullable" : true
          },
          "faceName" : {
            "type" : "string",
            "nullable" : true
          },
          "imageS3Bucket" : {
            "type" : "string",
            "nullable" : true
          },
          "imageS3Key" : {
            "type" : "string",
            "nullable" : true
          },
          "imageS3Region" : {
            "type" : "string",
            "nullable" : true
          },
          "labels" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "personUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "PolicyEventVehicleType" : {
        "type" : "object",
        "properties" : {
          "imageS3Bucket" : {
            "type" : "string",
            "nullable" : true
          },
          "imageS3Key" : {
            "type" : "string",
            "nullable" : true
          },
          "imageS3Region" : {
            "type" : "string",
            "nullable" : true
          },
          "labels" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "licensePlateNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "vehicleName" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Policy_CreateAccessControlledDoorPolicyWSRequest" : {
        "type" : "object",
        "properties" : {
          "policy" : {
            "$ref" : "#/components/schemas/Policy_MinimalAccessControlledDoorPolicyType"
          }
        }
      },
      "Policy_CreateAccessControlledDoorPolicyWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Policy_CreateAudioPolicyWSRequest" : {
        "type" : "object",
        "description" : "Request object for creating an audio policy.",
        "properties" : {
          "policy" : {
            "$ref" : "#/components/schemas/Policy_MinimalAudioPolicyType"
          }
        }
      },
      "Policy_CreateAudioPolicyWSResponse" : {
        "type" : "object",
        "description" : "Response object containing the UUID of the created audio policy.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Policy_CreateCameraPolicyWSRequest" : {
        "type" : "object",
        "description" : "Request object for creating a camera policy.",
        "properties" : {
          "policy" : {
            "$ref" : "#/components/schemas/Policy_MinimalCameraPolicyV2Type"
          }
        }
      },
      "Policy_CreateCameraPolicyWSResponse" : {
        "type" : "object",
        "description" : "Response object containing the UUID of the created camera policy.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Policy_CreateClimatePolicyWSRequest" : {
        "type" : "object",
        "description" : "Request object for creating a climate policy.",
        "properties" : {
          "policy" : {
            "$ref" : "#/components/schemas/Policy_MinimalClimatePolicyType"
          }
        }
      },
      "Policy_CreateClimatePolicyWSResponse" : {
        "type" : "object",
        "description" : "Response object containing the UUID of the created climate policy.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Policy_CreateDoorPolicyWSRequest" : {
        "type" : "object",
        "description" : "Request object for creating a door sensor policy.",
        "properties" : {
          "policy" : {
            "$ref" : "#/components/schemas/Policy_MinimalDoorPolicyType"
          }
        }
      },
      "Policy_CreateDoorPolicyWSResponse" : {
        "type" : "object",
        "description" : "Response object containing the UUID of the created door sensor policy.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Policy_CreateOccupancyPolicyWSRequest" : {
        "type" : "object",
        "properties" : {
          "policy" : {
            "$ref" : "#/components/schemas/Policy_MinimalOccupancyPolicyType"
          }
        }
      },
      "Policy_CreateOccupancyPolicyWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Policy_CreatePolicyAddendumForLocationRequest" : {
        "type" : "object",
        "description" : "Request object for creating a policy addendum for a location.",
        "properties" : {
          "activities" : {
            "type" : "array",
            "description" : "Set of activities to include in the policy addendum",
            "items" : {
              "$ref" : "#/components/schemas/ActivityEnum"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "durationSec" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Duration in seconds for the policy addendum",
            "example" : 3600,
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "scheduledTimestampSec" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Scheduled timestamp in seconds for the policy addendum",
            "example" : 1640995200,
            "nullable" : true
          }
        }
      },
      "Policy_CreatePolicyAddendumForLocationResponse" : {
        "type" : "object",
        "description" : "Response object for creating a policy addendum for a location.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Policy_CreatePolicyAddendumsForDevicesRequest" : {
        "type" : "object",
        "description" : "Request object for creating policy addendums for multiple devices.",
        "properties" : {
          "activities" : {
            "type" : "array",
            "description" : "Set of activities to include in the policy addendums",
            "items" : {
              "$ref" : "#/components/schemas/ActivityEnum"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "deviceUuids" : {
            "type" : "array",
            "description" : "List of device UUIDs to create policy addendums for",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          },
          "durationSec" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Duration in seconds for the policy addendums",
            "example" : 3600,
            "nullable" : true
          },
          "scheduledTimestampSec" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Scheduled timestamp in seconds for the policy addendums",
            "example" : 1640995200,
            "nullable" : true
          }
        }
      },
      "Policy_CreatePolicyAddendumsForDevicesResponse" : {
        "type" : "object",
        "description" : "Response object for creating policy addendums for multiple devices.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Policy_CreateProximityPolicyWSRequest" : {
        "type" : "object",
        "properties" : {
          "policy" : {
            "$ref" : "#/components/schemas/Policy_MinimalProximityPolicyType"
          }
        }
      },
      "Policy_CreateProximityPolicyWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Policy_CreateScheduleWSRequest" : {
        "type" : "object",
        "description" : "Request object for creating a schedule to be used for policy creation.",
        "properties" : {
          "schedule" : {
            "$ref" : "#/components/schemas/WeeklyRepeatingScheduleType"
          }
        }
      },
      "Policy_CreateScheduleWSResponse" : {
        "type" : "object",
        "description" : "Response object containing the UUID of the created schedule.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "scheduleUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Policy_CreateVideoIntercomPolicyWSRequest" : {
        "type" : "object",
        "properties" : {
          "policy" : {
            "$ref" : "#/components/schemas/Policy_MinimalVideoIntercomPolicyType"
          }
        }
      },
      "Policy_CreateVideoIntercomPolicyWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Policy_DeleteAccessControlledDoorPolicyWSRequest" : {
        "type" : "object",
        "description" : "Request object for deleting an access controlled door policy.",
        "properties" : {
          "policyUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Policy_DeleteAccessControlledDoorPolicyWSResponse" : {
        "type" : "object",
        "description" : "Response object for deleting an access controlled door policy.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Policy_DeleteAudioPolicyWSRequest" : {
        "type" : "object",
        "description" : "Request object for deleting an audio policy.",
        "properties" : {
          "policyUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Policy_DeleteAudioPolicyWSResponse" : {
        "type" : "object",
        "description" : "Response object for deleting an audio policy.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Policy_DeleteCameraPolicyWSRequest" : {
        "type" : "object",
        "description" : "Request object for deleting a camera policy.",
        "properties" : {
          "policyUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Policy_DeleteCameraPolicyWSResponse" : {
        "type" : "object",
        "description" : "Response object for deleting a camera policy.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Policy_DeleteClimatePolicyWSRequest" : {
        "type" : "object",
        "description" : "Request object for deleting a climate policy.",
        "properties" : {
          "policyUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Policy_DeleteClimatePolicyWSResponse" : {
        "type" : "object",
        "description" : "Response object for deleting a climate policy.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Policy_DeleteDevicePolicyAddendumsWSRequest" : {
        "type" : "object",
        "description" : "Request object for deleting device policy addendums.",
        "properties" : {
          "uuids" : {
            "type" : "array",
            "description" : "List of device policy addendum UUIDs to delete",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Policy_DeleteDevicePolicyAddendumsWSResponse" : {
        "type" : "object",
        "description" : "Response object for deleting device policy addendums.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Policy_DeleteDoorPolicyWSRequest" : {
        "type" : "object",
        "description" : "Request object for deleting a door sensor policy.",
        "properties" : {
          "policyUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Policy_DeleteDoorPolicyWSResponse" : {
        "type" : "object",
        "description" : "Response object for deleting a door sensor policy.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Policy_DeleteLocationPolicyAddendumWSRequest" : {
        "type" : "object",
        "description" : "Request object for deleting a location policy addendum.",
        "properties" : {
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Policy_DeleteLocationPolicyAddendumWSResponse" : {
        "type" : "object",
        "description" : "Response object for deleting a location policy addendum.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Policy_DeleteOccupancyPolicyWSRequest" : {
        "type" : "object",
        "description" : "Request object for deleting an occupancy policy.",
        "properties" : {
          "policyUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Policy_DeleteOccupancyPolicyWSResponse" : {
        "type" : "object",
        "description" : "Response object for deleting an occupancy policy.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Policy_DeletePolicyPauseSettingWSRequest" : {
        "type" : "object",
        "description" : "Request object for deleting a policy pause setting.",
        "properties" : {
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Policy_DeletePolicyPauseSettingWSResponse" : {
        "type" : "object",
        "description" : "Response object for deleting a policy pause setting.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Policy_DeleteProximityPolicyWSRequest" : {
        "type" : "object",
        "description" : "Request object for deleting a proximity policy.",
        "properties" : {
          "policyUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Policy_DeleteProximityPolicyWSResponse" : {
        "type" : "object",
        "description" : "Response object for deleting a proximity policy.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Policy_DeleteScheduleWSRequest" : {
        "type" : "object",
        "description" : "Request object for deleting a schedule used for policy creation.",
        "properties" : {
          "scheduleUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Policy_DeleteScheduleWSResponse" : {
        "type" : "object",
        "description" : "Response object for deleting a schedule.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Policy_DeleteVideoIntercomPolicyWSRequest" : {
        "type" : "object",
        "description" : "Request object for deleting a video intercom policy.",
        "properties" : {
          "policyUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Policy_DeleteVideoIntercomPolicyWSResponse" : {
        "type" : "object",
        "description" : "Response object for deleting a video intercom policy.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Policy_ExternalAudioPolicyType" : {
        "type" : "object",
        "description" : "List of audio policies in the organization",
        "properties" : {
          "defaultTriggers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Policy_ExternalAudioTriggerType"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "scheduledTriggers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Policy_ExternalAudioScheduledTriggerType"
            },
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Policy_ExternalAudioScheduledTriggerType" : {
        "type" : "object",
        "properties" : {
          "schedule" : {
            "$ref" : "#/components/schemas/WeeklyRepeatingScheduleType"
          },
          "triggerSet" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Policy_ExternalAudioTriggerType"
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "Policy_ExternalAudioTriggerType" : {
        "type" : "object",
        "properties" : {
          "activity" : {
            "$ref" : "#/components/schemas/ActivityEnum"
          },
          "threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          }
        }
      },
      "Policy_ExternalVideoIntercomPolicyType" : {
        "type" : "object",
        "description" : "List of video intercom policies in the organization",
        "properties" : {
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "scheduledTriggers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Policy_ExternalVideoIntercomScheduledTriggerType"
            },
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Policy_ExternalVideoIntercomScheduledTriggerType" : {
        "type" : "object",
        "properties" : {
          "schedule" : {
            "$ref" : "#/components/schemas/WeeklyRepeatingScheduleType"
          },
          "triggerSet" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Policy_ExternalVideoIntercomTriggerType"
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "Policy_ExternalVideoIntercomTriggerType" : {
        "type" : "object",
        "properties" : {
          "activity" : {
            "$ref" : "#/components/schemas/ActivityEnum"
          },
          "faceAlertLabelSet" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "faceAlertUnidentified" : {
            "type" : "boolean",
            "nullable" : true
          },
          "faceAllowedLabelSet" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "lufsThreshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "peopleCountThreshold" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "vehicleAlertLabelSet" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "vehicleAlertUnidentified" : {
            "type" : "boolean",
            "nullable" : true
          },
          "vehicleAllowedLabelSet" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "Policy_FindSchedulesWSRequest" : {
        "type" : "object",
        "description" : "Request object for finding all schedules in the organization."
      },
      "Policy_FindSchedulesWSResponse" : {
        "type" : "object",
        "description" : "Response object containing all schedules in the organization.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "schedules" : {
            "type" : "array",
            "description" : "List of schedules in the organization",
            "items" : {
              "$ref" : "#/components/schemas/WeeklyRepeatingScheduleType"
            },
            "nullable" : true
          }
        }
      },
      "Policy_GetAccessControlledDoorPoliciesWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting all access controlled door policies in the organization."
      },
      "Policy_GetAccessControlledDoorPoliciesWSResponse" : {
        "type" : "object",
        "description" : "Response object containing all access controlled door policies in the organization.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "policies" : {
            "type" : "array",
            "description" : "List of access controlled door policies in the organization",
            "items" : {
              "$ref" : "#/components/schemas/AccessControlledDoorPolicyType"
            },
            "nullable" : true
          }
        }
      },
      "Policy_GetAudioPoliciesWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting all audio policies in the organization."
      },
      "Policy_GetAudioPoliciesWSResponse" : {
        "type" : "object",
        "description" : "Response object containing all audio policies in the organization.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "policies" : {
            "type" : "array",
            "description" : "List of audio policies in the organization",
            "items" : {
              "$ref" : "#/components/schemas/Policy_ExternalAudioPolicyType"
            },
            "nullable" : true
          }
        }
      },
      "Policy_GetCameraPoliciesWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting all camera policies in the organization."
      },
      "Policy_GetCameraPoliciesWSResponse" : {
        "type" : "object",
        "description" : "Response object containing all camera policies in the organization.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "policies" : {
            "type" : "array",
            "description" : "List of camera policies in the organization",
            "items" : {
              "$ref" : "#/components/schemas/CameraPolicyV2Type"
            },
            "nullable" : true
          }
        }
      },
      "Policy_GetClimatePoliciesWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting all climate policies in the organization."
      },
      "Policy_GetClimatePoliciesWSResponse" : {
        "type" : "object",
        "description" : "Response object containing all climate policies in the organization.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "policies" : {
            "type" : "array",
            "description" : "List of climate policies in the organization",
            "items" : {
              "$ref" : "#/components/schemas/ClimatePolicyType"
            },
            "nullable" : true
          }
        }
      },
      "Policy_GetDoorPoliciesWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting all door sensor policies in the organization."
      },
      "Policy_GetDoorPoliciesWSResponse" : {
        "type" : "object",
        "description" : "Response object containing all door sensor policies in the organization.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "policies" : {
            "type" : "array",
            "description" : "List of door sensor policies in the organization",
            "items" : {
              "$ref" : "#/components/schemas/DoorPolicyType"
            },
            "nullable" : true
          }
        }
      },
      "Policy_GetOccupancyPoliciesWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting all occupancy policies in the organization."
      },
      "Policy_GetOccupancyPoliciesWSResponse" : {
        "type" : "object",
        "description" : "Response object containing all occupancy policies in the organization.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "policies" : {
            "type" : "array",
            "description" : "List of occupancy policies in the organization",
            "items" : {
              "$ref" : "#/components/schemas/OccupancyPolicyType"
            },
            "nullable" : true
          }
        }
      },
      "Policy_GetPoliciesUsingScheduleWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting all policies that use a specific schedule.",
        "properties" : {
          "scheduleUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Policy_GetPoliciesUsingScheduleWSResponse" : {
        "type" : "object",
        "description" : "Response object containing all policies that use a specific schedule, organized by policy type.",
        "properties" : {
          "accessControlledDoorPolicyList" : {
            "type" : "array",
            "description" : "List of access controlled door policies using the schedule",
            "items" : {
              "$ref" : "#/components/schemas/AccessControlledDoorPolicyType"
            },
            "nullable" : true
          },
          "audioPolicyList" : {
            "type" : "array",
            "description" : "List of audio policies using the schedule",
            "items" : {
              "$ref" : "#/components/schemas/AudioPolicyType"
            },
            "nullable" : true
          },
          "cameraPolicyList" : {
            "type" : "array",
            "description" : "List of camera policies using the schedule",
            "items" : {
              "$ref" : "#/components/schemas/CameraPolicyV2Type"
            },
            "nullable" : true
          },
          "climatePolicyList" : {
            "type" : "array",
            "description" : "List of climate policies using the schedule",
            "items" : {
              "$ref" : "#/components/schemas/ClimatePolicyType"
            },
            "nullable" : true
          },
          "doorPolicyList" : {
            "type" : "array",
            "description" : "List of door sensor policies using the schedule",
            "items" : {
              "$ref" : "#/components/schemas/DoorPolicyType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "occupancyPolicyList" : {
            "type" : "array",
            "description" : "List of occupancy policies using the schedule",
            "items" : {
              "$ref" : "#/components/schemas/OccupancyPolicyType"
            },
            "nullable" : true
          },
          "proximityPolicyList" : {
            "type" : "array",
            "description" : "List of proximity policies using the schedule",
            "items" : {
              "$ref" : "#/components/schemas/ProximityPolicyType"
            },
            "nullable" : true
          },
          "videoIntercomPolicyList" : {
            "type" : "array",
            "description" : "List of video intercom policies using the schedule",
            "items" : {
              "$ref" : "#/components/schemas/VideoIntercomPolicyType"
            },
            "nullable" : true
          }
        }
      },
      "Policy_GetPolicyAddendumsWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting policy addendums."
      },
      "Policy_GetPolicyAddendumsWSResponse" : {
        "type" : "object",
        "description" : "Response object containing policy addendums for devices and locations.",
        "properties" : {
          "deviceAddendumsMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "description" : "Map of device UUIDs to their policy addendum scheduled intervals",
              "items" : {
                "$ref" : "#/components/schemas/ScheduledIntervalType"
              },
              "nullable" : true
            },
            "description" : "Map of device UUIDs to their policy addendum scheduled intervals",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "locationAddendumsMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "description" : "Map of location UUIDs to their policy addendum scheduled intervals",
              "items" : {
                "$ref" : "#/components/schemas/ScheduledIntervalType"
              },
              "nullable" : true
            },
            "description" : "Map of location UUIDs to their policy addendum scheduled intervals",
            "nullable" : true
          }
        }
      },
      "Policy_GetPolicyPauseSettingsWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting policy pause settings."
      },
      "Policy_GetPolicyPauseSettingsWSResponse" : {
        "type" : "object",
        "description" : "Response object containing policy pause settings for locations, devices, and component composites.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "policiesPausedForComponentCompositesMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "description" : "Map of component composite UUIDs to their paused policy scheduled intervals",
              "items" : {
                "$ref" : "#/components/schemas/ScheduledIntervalType"
              },
              "nullable" : true
            },
            "description" : "Map of component composite UUIDs to their paused policy scheduled intervals",
            "nullable" : true
          },
          "policiesPausedForDevicesMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "description" : "Map of device UUIDs to their paused policy scheduled intervals",
              "items" : {
                "$ref" : "#/components/schemas/ScheduledIntervalType"
              },
              "nullable" : true
            },
            "description" : "Map of device UUIDs to their paused policy scheduled intervals",
            "nullable" : true
          },
          "policiesPausedForLocationsMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "description" : "Map of location UUIDs to their paused policy scheduled intervals",
              "items" : {
                "$ref" : "#/components/schemas/ScheduledIntervalType"
              },
              "nullable" : true
            },
            "description" : "Map of location UUIDs to their paused policy scheduled intervals",
            "nullable" : true
          }
        }
      },
      "Policy_GetProximityPoliciesWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting all proximity policies in the organization."
      },
      "Policy_GetProximityPoliciesWSResponse" : {
        "type" : "object",
        "description" : "Response object containing all proximity policies in the organization.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "policies" : {
            "type" : "array",
            "description" : "List of proximity policies in the organization",
            "items" : {
              "$ref" : "#/components/schemas/ProximityPolicyType"
            },
            "nullable" : true
          }
        }
      },
      "Policy_GetVideoIntercomPoliciesWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting all video intercom policies in the organization."
      },
      "Policy_GetVideoIntercomPoliciesWSResponse" : {
        "type" : "object",
        "description" : "Response object containing all video intercom policies in the organization.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "policies" : {
            "type" : "array",
            "description" : "List of video intercom policies in the organization",
            "items" : {
              "$ref" : "#/components/schemas/Policy_ExternalVideoIntercomPolicyType"
            },
            "nullable" : true
          }
        }
      },
      "Policy_MinimalAccessControlledDoorPolicyType" : {
        "type" : "object",
        "description" : "Updated access controlled door policy configuration",
        "properties" : {
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "scheduledTriggers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Policy_MinimalAccessControlledDoorScheduledTriggerType"
            },
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Policy_MinimalAccessControlledDoorScheduledTriggerType" : {
        "type" : "object",
        "properties" : {
          "scheduleUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "triggerSet" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ActivityEnum"
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "Policy_MinimalAudioPolicyType" : {
        "type" : "object",
        "description" : "Updated audio policy configuration",
        "properties" : {
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "scheduledTriggers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Policy_MinimalAudioScheduledTriggerType"
            },
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Policy_MinimalAudioScheduledTriggerType" : {
        "type" : "object",
        "properties" : {
          "scheduleUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "triggerSet" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Policy_ExternalAudioTriggerType"
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "Policy_MinimalCameraPolicyV2Type" : {
        "type" : "object",
        "description" : "Updated camera policy configuration",
        "properties" : {
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "scheduledTriggers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Policy_MinimalCameraScheduledTriggerType"
            },
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Policy_MinimalCameraScheduledTriggerType" : {
        "type" : "object",
        "properties" : {
          "scheduleUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "triggerSet" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CameraTriggerType"
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "Policy_MinimalClimatePolicyType" : {
        "type" : "object",
        "description" : "Updated climate policy configuration",
        "properties" : {
          "backoffAlertSecs" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "scheduledTriggers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Policy_MinimalClimateScheduledTriggerType"
            },
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Policy_MinimalClimateScheduledTriggerType" : {
        "type" : "object",
        "properties" : {
          "scheduleUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "triggerSet" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ClimateTriggerType"
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "Policy_MinimalDoorPolicyType" : {
        "type" : "object",
        "description" : "Updated door sensor policy configuration",
        "properties" : {
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "scheduledTriggers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Policy_MinimalDoorScheduledTriggerType"
            },
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Policy_MinimalDoorScheduledTriggerType" : {
        "type" : "object",
        "properties" : {
          "ajarThresholdSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "scheduleUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "triggerSet" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ActivityEnum"
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "Policy_MinimalOccupancyPolicyType" : {
        "type" : "object",
        "description" : "Updated occupancy policy configuration",
        "properties" : {
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "scheduledTriggers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Policy_MinimalOccupancyScheduledTriggerType"
            },
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Policy_MinimalOccupancyScheduledTriggerType" : {
        "type" : "object",
        "properties" : {
          "occupancyThresholdSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "scheduleUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "triggerSet" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ActivityEnum"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "vacancyThresholdSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Policy_MinimalProximityPolicyType" : {
        "type" : "object",
        "description" : "Updated proximity policy configuration",
        "properties" : {
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "scheduledTriggers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Policy_MinimalProximityScheduledTriggerType"
            },
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Policy_MinimalProximityScheduledTriggerType" : {
        "type" : "object",
        "properties" : {
          "departureThresholdSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "scheduleUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "triggerSet" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProximityTriggerType"
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "Policy_MinimalVideoIntercomPolicyType" : {
        "type" : "object",
        "description" : "Updated video intercom policy configuration",
        "properties" : {
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "scheduledTriggers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Policy_MinimalVideoIntercomScheduledTriggerType"
            },
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Policy_MinimalVideoIntercomScheduledTriggerType" : {
        "type" : "object",
        "properties" : {
          "scheduleUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "triggerSet" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Policy_ExternalVideoIntercomTriggerType"
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "Policy_PauseAlertPolicyWSRequest" : {
        "type" : "object",
        "description" : "Request object for pausing alert policies for specified locations, devices, and components.",
        "properties" : {
          "componentCompositeUuids" : {
            "type" : "array",
            "description" : "List of component composite UUIDs to pause alert policies for",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          },
          "deviceUuids" : {
            "type" : "array",
            "description" : "List of device UUIDs to pause alert policies for",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          },
          "durationSec" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Duration in seconds to pause alert policies",
            "example" : 3600,
            "nullable" : true
          },
          "locationUuids" : {
            "type" : "array",
            "description" : "List of location UUIDs to pause alert policies for",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          },
          "scheduledTimestampSec" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Scheduled timestamp in seconds for when to pause alert policies",
            "example" : 1640995200,
            "nullable" : true
          }
        }
      },
      "Policy_PauseAlertPolicyWSResponse" : {
        "type" : "object",
        "description" : "Response object for pausing alert policies.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Policy_UpdateAccessControlledDoorPolicyWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating an access controlled door policy.",
        "properties" : {
          "policy" : {
            "$ref" : "#/components/schemas/Policy_MinimalAccessControlledDoorPolicyType"
          }
        }
      },
      "Policy_UpdateAccessControlledDoorPolicyWSResponse" : {
        "type" : "object",
        "description" : "Response object for updating an access controlled door policy.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Policy_UpdateAudioPolicyWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating an audio policy.",
        "properties" : {
          "policy" : {
            "$ref" : "#/components/schemas/Policy_MinimalAudioPolicyType"
          }
        }
      },
      "Policy_UpdateAudioPolicyWSResponse" : {
        "type" : "object",
        "description" : "Response object for updating an audio policy.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Policy_UpdateCameraPolicyWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating a camera policy.",
        "properties" : {
          "policy" : {
            "$ref" : "#/components/schemas/Policy_MinimalCameraPolicyV2Type"
          }
        }
      },
      "Policy_UpdateCameraPolicyWSResponse" : {
        "type" : "object",
        "description" : "Response object for updating a camera policy.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Policy_UpdateClimatePolicyWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating a climate policy.",
        "properties" : {
          "policy" : {
            "$ref" : "#/components/schemas/Policy_MinimalClimatePolicyType"
          }
        }
      },
      "Policy_UpdateClimatePolicyWSResponse" : {
        "type" : "object",
        "description" : "Response object for updating a climate policy.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Policy_UpdateDoorPolicyWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating a door sensor policy.",
        "properties" : {
          "policy" : {
            "$ref" : "#/components/schemas/Policy_MinimalDoorPolicyType"
          }
        }
      },
      "Policy_UpdateDoorPolicyWSResponse" : {
        "type" : "object",
        "description" : "Response object for updating a door sensor policy.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Policy_UpdateOccupancyPolicyWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating an occupancy policy.",
        "properties" : {
          "policy" : {
            "$ref" : "#/components/schemas/Policy_MinimalOccupancyPolicyType"
          }
        }
      },
      "Policy_UpdateOccupancyPolicyWSResponse" : {
        "type" : "object",
        "description" : "Response object for updating an occupancy policy.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Policy_UpdateProximityPolicyWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating a proximity policy.",
        "properties" : {
          "policy" : {
            "$ref" : "#/components/schemas/Policy_MinimalProximityPolicyType"
          }
        }
      },
      "Policy_UpdateProximityPolicyWSResponse" : {
        "type" : "object",
        "description" : "Response object for updating a proximity policy.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Policy_UpdateScheduleWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating a schedule used for policy creation.",
        "properties" : {
          "schedule" : {
            "$ref" : "#/components/schemas/WeeklyRepeatingScheduleType"
          }
        }
      },
      "Policy_UpdateScheduleWSResponse" : {
        "type" : "object",
        "description" : "Response object for updating a schedule.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Policy_UpdateVideoIntercomPolicyWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating a video intercom policy.",
        "properties" : {
          "policy" : {
            "$ref" : "#/components/schemas/Policy_MinimalVideoIntercomPolicyType"
          }
        }
      },
      "Policy_UpdateVideoIntercomPolicyWSResponse" : {
        "type" : "object",
        "description" : "Response object for updating a video intercom policy.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "PortSupervisionConfigurationType" : {
        "type" : "object",
        "properties" : {
          "mode" : {
            "$ref" : "#/components/schemas/SupervisionModeEnumType"
          }
        }
      },
      "PosIntegrationInfoType" : {
        "type" : "object",
        "description" : "A HashMap of <Service Area Guid, PosIntegrationInfoType>. This stores the Pos Information and assigned cameras.",
        "properties" : {
          "assignedCameraList" : {
            "type" : "array",
            "description" : "A list of camera guids from Rhombus that are assigned to the Pos device.",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          },
          "posName" : {
            "type" : "string",
            "description" : "The name of the Pos device.",
            "nullable" : true
          }
        }
      },
      "PressureSensorType" : {
        "type" : "object",
        "properties" : {
          "pressure" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "tempC" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "timestampSec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "ProDataKeySettings" : {
        "type" : "object",
        "properties" : {
          "alertUnauthorizedFaces" : {
            "type" : "boolean",
            "nullable" : true
          },
          "badgeAuthDisablesAlarmMonitoring" : {
            "type" : "boolean",
            "nullable" : true
          },
          "createSeekPoints" : {
            "type" : "boolean",
            "nullable" : true
          },
          "doorInfoMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/BadgeIntegrationDoorInfoType"
            },
            "nullable" : true
          },
          "doorsValidated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabledTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "enablingUser" : {
            "type" : "string",
            "nullable" : true
          },
          "enablingUserUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "identifyFacesFromBadge" : {
            "type" : "boolean",
            "nullable" : true
          },
          "misconfiguredDoors" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "ouId" : {
            "type" : "string",
            "nullable" : true
          },
          "rhombusToken" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "saveClips" : {
            "type" : "boolean",
            "nullable" : true
          },
          "webhookId" : {
            "type" : "string",
            "nullable" : true
          },
          "webhookSignatureSecret" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "ProDataKeyType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "alertUnauthorizedFaces" : {
              "type" : "boolean",
              "nullable" : true
            },
            "apiToken" : {
              "type" : "string",
              "nullable" : true
            },
            "badgeAuthDisablesAlarmMonitoring" : {
              "type" : "boolean",
              "nullable" : true
            },
            "createSeekPoints" : {
              "type" : "boolean",
              "nullable" : true
            },
            "doorInfoMap" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/BadgeIntegrationDoorInfoType"
              },
              "nullable" : true
            },
            "doorsValidated" : {
              "type" : "boolean",
              "nullable" : true
            },
            "identifyFacesFromBadge" : {
              "type" : "boolean",
              "nullable" : true
            },
            "indexFaces" : {
              "type" : "boolean",
              "nullable" : true
            },
            "misconfiguredDoors" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "nullable" : true
              },
              "nullable" : true
            },
            "organizationId" : {
              "type" : "string",
              "nullable" : true
            },
            "refreshToken" : {
              "type" : "string",
              "nullable" : true
            },
            "rhombusToken" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "saveClips" : {
              "type" : "boolean",
              "nullable" : true
            },
            "systemId" : {
              "type" : "string",
              "nullable" : true
            },
            "tokenValid" : {
              "type" : "boolean",
              "nullable" : true
            },
            "webhookId" : {
              "type" : "string",
              "nullable" : true
            },
            "webhookSignatureSecret" : {
              "type" : "string",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Product" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "productId" : {
            "type" : "string",
            "nullable" : true
          },
          "productIdQualifier" : {
            "type" : "string",
            "nullable" : true
          },
          "quantity" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "PromptConfigurationType" : {
        "type" : "object",
        "description" : "Updated prompt configuration",
        "properties" : {
          "active" : {
            "type" : "boolean",
            "nullable" : true
          },
          "cameraConfigurations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CameraConfiguration"
            },
            "nullable" : true
          },
          "checkCondition" : {
            "$ref" : "#/components/schemas/CheckCondition"
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "generateAlertForActionNewlyAddedCameras" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "prompt" : {
            "type" : "string",
            "nullable" : true
          },
          "promptType" : {
            "type" : "string",
            "enum" : [ "COUNT", "PERCENT", "BOOLEAN" ],
            "nullable" : true
          },
          "reportsEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "scheduleUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "shortName" : {
            "type" : "string",
            "nullable" : true
          },
          "trigger" : {
            "$ref" : "#/components/schemas/Trigger"
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "PromptFrequency" : {
        "type" : "object",
        "properties" : {
          "frequency" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "unit" : {
            "$ref" : "#/components/schemas/FrequencyUnit"
          }
        }
      },
      "Providers" : {
        "type" : "object",
        "nullable" : true
      },
      "ProximityArrivedActivityEventType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "proximityTagLocationUuids" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "RUUID",
                "description" : "base 64 (url-safe) uuid string",
                "example" : "AAAAAAAAAAAAAAAAAAAAAA",
                "nullable" : true
              },
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "activityEvent" : {
            "$ref" : "#/components/schemas/ActivityEnum"
          }
        }
      },
      "ProximityDepartedActivityEventType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "departureThresholdSecs" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "proximityTagLocationUuids" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "RUUID",
                "description" : "base 64 (url-safe) uuid string",
                "example" : "AAAAAAAAAAAAAAAAAAAAAA",
                "nullable" : true
              },
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "activityEvent" : {
            "$ref" : "#/components/schemas/ActivityEnum"
          }
        }
      },
      "ProximityEventType" : {
        "type" : "object",
        "description" : "List of proximity events for the specified tag",
        "properties" : {
          "baseStationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "batteryPercentage" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "bleDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "bleRssi" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "closeBaseStations" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          },
          "endTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "gpsLocation" : {
            "$ref" : "#/components/schemas/GeodeticCoordinates"
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "startTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "status" : {
            "type" : "string",
            "enum" : [ "ACTIVE", "STATIONARY", "OFFLINE" ],
            "nullable" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          }
        }
      },
      "ProximityPolicyType" : {
        "type" : "object",
        "description" : "List of proximity policies in the organization",
        "properties" : {
          "defaultDepartureThresholdSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "defaultTriggers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProximityTriggerType"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "egressThresholdMetersMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "number",
              "format" : "double",
              "nullable" : true
            },
            "nullable" : true
          },
          "ingressThresholdMetersMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "number",
              "format" : "double",
              "nullable" : true
            },
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "scheduledTriggers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProximityScheduledTriggerType"
            },
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "ProximityScheduledTriggerType" : {
        "type" : "object",
        "properties" : {
          "departureThresholdSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "egressThresholdMetersMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "number",
              "format" : "double",
              "nullable" : true
            },
            "nullable" : true
          },
          "ingressThresholdMetersMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "number",
              "format" : "double",
              "nullable" : true
            },
            "nullable" : true
          },
          "schedule" : {
            "$ref" : "#/components/schemas/WeeklyRepeatingScheduleType"
          },
          "triggerSet" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProximityTriggerType"
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "ProximityTagLocomotionEventType" : {
        "type" : "object",
        "description" : "List of locomotion events for the specified tag",
        "properties" : {
          "baseStationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "gpsLocation" : {
            "$ref" : "#/components/schemas/GeodeticCoordinates"
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "movement" : {
            "type" : "string",
            "enum" : [ "ARRIVAL", "DEPARTURE", "MOVED_SIGNIFICANTLY", "UNKNOWN" ],
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "tagUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "ProximityTagTimeSeriesDataPointType" : {
        "type" : "object",
        "description" : "List of proximity tag time series data points",
        "properties" : {
          "dateLocal" : {
            "type" : "string",
            "nullable" : true
          },
          "tagUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "ProximityTriggerType" : {
        "type" : "object",
        "properties" : {
          "activity" : {
            "$ref" : "#/components/schemas/ActivityEnum"
          },
          "locationUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "ProximityUnlockSettingsType" : {
        "type" : "object",
        "properties" : {
          "credCooldownSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "exitResetsCooldown" : {
            "type" : "boolean",
            "nullable" : true
          },
          "holdUnlocked" : {
            "type" : "boolean",
            "nullable" : true
          },
          "holdUnlockedEventIntervalSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "maxHoldUnlockedTimeSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "minHoldUnlockedTimeSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "minRSSIThreshold" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "ProximityUnlockSettingsType_Minimal" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "minRSSIThreshold" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Proximity_GetLocomotionEventsForTagWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting locomotion events for a specified proximity tag with filtering options.",
        "properties" : {
          "createdAfterMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Filter events created after this timestamp in milliseconds",
            "example" : 1640995200000,
            "nullable" : true
          },
          "createdBeforeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Filter events created before this timestamp in milliseconds",
            "example" : 1640995200000,
            "nullable" : true
          },
          "limit" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Maximum number of events to return",
            "example" : 100,
            "nullable" : true
          },
          "movementFilter" : {
            "type" : "string",
            "description" : "Filter events by locomotion movement type",
            "enum" : [ "ARRIVAL", "DEPARTURE", "MOVED_SIGNIFICANTLY", "UNKNOWN" ],
            "nullable" : true
          },
          "tagUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Proximity_GetLocomotionEventsForTagWSResponse" : {
        "type" : "object",
        "description" : "Response object containing locomotion events for a specified proximity tag.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "locomotionEvents" : {
            "type" : "array",
            "description" : "List of locomotion events for the specified tag",
            "items" : {
              "$ref" : "#/components/schemas/ProximityTagLocomotionEventType"
            },
            "nullable" : true
          }
        }
      },
      "Proximity_GetMinimalProximityStatesWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting basic state information about all proximity tags in the organization."
      },
      "Proximity_GetMinimalProximityStatesWSResponse" : {
        "type" : "object",
        "description" : "Response object containing basic state information about all proximity tags in the organization.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "proximityStates" : {
            "type" : "array",
            "description" : "List of minimal proximity state information for all tags in the organization",
            "items" : {
              "$ref" : "#/components/schemas/Proximity_MinimalProximityStateType"
            },
            "nullable" : true
          }
        }
      },
      "Proximity_GetProximityEventsForTagWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting recent events for a specified proximity tag with filtering options.",
        "properties" : {
          "createdAfterMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Filter events created after this timestamp in milliseconds",
            "example" : 1640995200000,
            "nullable" : true
          },
          "createdBeforeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Filter events created before this timestamp in milliseconds",
            "example" : 1640995200000,
            "nullable" : true
          },
          "limit" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Maximum number of events to return",
            "example" : 100,
            "nullable" : true
          },
          "statusFilter" : {
            "type" : "string",
            "description" : "Filter events by proximity status",
            "enum" : [ "ACTIVE", "STATIONARY", "OFFLINE" ],
            "nullable" : true
          },
          "tagUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Proximity_GetProximityEventsForTagWSResponse" : {
        "type" : "object",
        "description" : "Response object containing recent events for a specified proximity tag.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "proximityEvents" : {
            "type" : "array",
            "description" : "List of proximity events for the specified tag",
            "items" : {
              "$ref" : "#/components/schemas/ProximityEventType"
            },
            "nullable" : true
          }
        }
      },
      "Proximity_MinimalProximityStateType" : {
        "type" : "object",
        "description" : "Minimal proximity state information for a proximity tag.",
        "properties" : {
          "batteryPercent" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Battery percentage of the proximity tag",
            "example" : 75,
            "nullable" : true
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Timestamp when the proximity tag was created in milliseconds",
            "example" : 1640995200000,
            "nullable" : true
          },
          "firmwareVersion" : {
            "type" : "string",
            "description" : "Firmware version of the proximity tag",
            "example" : "1.2.3",
            "nullable" : true
          },
          "gpsLocation" : {
            "$ref" : "#/components/schemas/GeodeticCoordinates"
          },
          "health" : {
            "$ref" : "#/components/schemas/Proximity_ProximityHealthEnum"
          },
          "healthDetails" : {
            "$ref" : "#/components/schemas/Proximity_ProximityHealthDetailsEnum"
          },
          "hwVariation" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "imageUrl" : {
            "type" : "string",
            "description" : "URL of the image for the proximity tag",
            "example" : "https://example.com/badge-image.jpg",
            "nullable" : true
          },
          "lastSeenSec" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Timestamp when the proximity tag was last seen in seconds",
            "example" : 1640995200,
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the proximity tag",
            "example" : "Employee Badge 001",
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "serialNumber" : {
            "type" : "string",
            "description" : "Serial number of the proximity tag",
            "example" : "PROX-001-ABC123",
            "nullable" : true
          },
          "signalStrength" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Signal strength of the proximity tag",
            "example" : 85,
            "nullable" : true
          },
          "status" : {
            "type" : "string",
            "description" : "Current status of the proximity tag",
            "enum" : [ "ACTIVE", "STATIONARY", "OFFLINE" ],
            "nullable" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "tagUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Proximity_ProximityHealthDetailsEnum" : {
        "type" : "string",
        "description" : "Detailed health information for the proximity tag",
        "enum" : [ "FIRMWARE_BEHIND", "NONE" ]
      },
      "Proximity_ProximityHealthEnum" : {
        "type" : "string",
        "description" : "Health status of the proximity tag",
        "enum" : [ "GREEN" ]
      },
      "Proximity_UpdateProximitySensorDetailsWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating details for a proximity tag.",
        "properties" : {
          "deletedUpdated" : {
            "type" : "boolean",
            "description" : "Whether the deleted status has been updated",
            "example" : false,
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "description" : "Description of the proximity tag",
            "example" : "John Doe's employee badge",
            "nullable" : true
          },
          "descriptionUpdated" : {
            "type" : "boolean",
            "description" : "Whether the description has been updated",
            "example" : true,
            "nullable" : true
          },
          "imageUrl" : {
            "type" : "string",
            "description" : "URL of the image for the proximity tag",
            "example" : "https://example.com/badge-image.jpg",
            "nullable" : true
          },
          "imageUrlUpdated" : {
            "type" : "boolean",
            "description" : "Whether the image URL has been updated",
            "example" : false,
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the proximity tag",
            "example" : "Employee Badge 001",
            "nullable" : true
          },
          "nameUpdated" : {
            "type" : "boolean",
            "description" : "Whether the name has been updated",
            "example" : true,
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "policyUuidUpdated" : {
            "type" : "boolean",
            "description" : "Whether the policy UUID has been updated",
            "example" : true,
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Proximity_UpdateProximitySensorDetailsWSResponse" : {
        "type" : "object",
        "description" : "Response object for updating details for a proximity tag.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "QualifiedAddressType" : {
        "type" : "object",
        "description" : "Optionally present qualified address after some validation.  Used for Alarm Monitoring if available.",
        "properties" : {
          "addressLine2" : {
            "type" : "string",
            "description" : "apt, suite, or unit",
            "nullable" : true
          },
          "addressline1" : {
            "type" : "string",
            "description" : "street address",
            "nullable" : true
          },
          "administrativeArea" : {
            "type" : "string",
            "description" : "state",
            "nullable" : true
          },
          "locality" : {
            "type" : "string",
            "description" : "city",
            "nullable" : true
          },
          "postalCode" : {
            "type" : "string",
            "description" : "zip code",
            "nullable" : true
          },
          "regionCode" : {
            "type" : "string",
            "description" : "country",
            "nullable" : true
          }
        }
      },
      "QueryStatus" : {
        "type" : "string",
        "enum" : [ "ANSWERED", "PARTIALLY_ANSWERED", "CLARIFICATION_REQUESTED", "REDIRECTED", "INITIATED", "QUEUED", "IN_PROGRESS", "CALLING_TOOLS", "GENERATING_RESPONSE", "GENERATING_REPORT_OUTLINE", "GENERATING_REPORT_SECTIONS", "NOT_UNDERSTOOD", "INVALID_REQUEST", "UNAUTHORIZED", "UNSUPPORTED", "DENIED", "INTERRUPTED", "NO_RESPONSE", "INVALID_AUTH_DATA", "INVALID_API_TOKEN", "UNKNOWN" ]
      },
      "QueryTimelineEvent" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "$ref" : "#/components/schemas/QueryStatus"
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "QueryTool" : {
        "type" : "object",
        "properties" : {
          "content" : {
            "type" : "string",
            "nullable" : true
          },
          "contentType" : {
            "type" : "string",
            "nullable" : true
          },
          "extra" : {
            "type" : "string",
            "nullable" : true
          },
          "role" : {
            "type" : "string",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "tool" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "RBACSettingsType" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "RMARequest" : {
        "type" : "object",
        "properties" : {
          "formSubmitted" : {
            "type" : "boolean",
            "nullable" : true
          },
          "requestUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "rmaOpportunityId" : {
            "type" : "string",
            "nullable" : true
          },
          "salesforceAccountId" : {
            "type" : "string",
            "nullable" : true
          },
          "salesforcePartnerContactId" : {
            "type" : "string",
            "nullable" : true
          },
          "salesforcePartnerId" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "RMAType" : {
        "type" : "object",
        "description" : "List of RMAs (Return Merchandise Authorizations)",
        "properties" : {
          "address" : {
            "type" : "string",
            "nullable" : true
          },
          "advancedRMAs" : {
            "$ref" : "#/components/schemas/AdvancedRMAType"
          },
          "briefDescription" : {
            "type" : "string",
            "nullable" : true
          },
          "city" : {
            "type" : "string",
            "nullable" : true
          },
          "costInDollars" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "country" : {
            "type" : "string",
            "nullable" : true
          },
          "customerUnresponsive" : {
            "type" : "boolean",
            "nullable" : true
          },
          "deleted" : {
            "type" : "boolean",
            "nullable" : true
          },
          "deviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "errorCode" : {
            "type" : "string",
            "enum" : [ "BADGE_READER_UNKNOWN", "DEAD_OR_MISSING_BATTERY", "DOORBELL_BUTTON_ISSUE", "ERROR_2", "ERROR_4", "ERROR_5", "ERROR_24", "ERROR_28", "ERROR_30", "ERROR_39", "ERROR_74", "ERROR_84", "FOREIGN_HARDWARE", "BAD_SD_BLOCKS", "NEVER_LEFT_BUSY_STATE", "HARDWARE_DAMAGE", "HEAVY_HARDWARE_DAMAGE", "WATER_DAMAGE", "VIDEO_HARDWARE_FAILURE", "ENCRYPTED_CONTAINER_FAILURE_CREATE", "ENCRYPTED_CONTAINER_FAILURE_OPEN", "ENCRYPTED_CONTAINER_FAILURE_MOUNT", "LIGHT_SENSOR", "SD_CARD_UNKOWN", "SD_CARD_READER_BROKEN", "POWER_ISSUES", "RS485_ISSUE", "CUT_FILTER", "QUALITY_OR_PERFORMANCE", "NETWORK_ISSUES", "UNKNOWN", "ILLEGIBLE_SERIAL_COMM", "NO_SERIAL_COMM", "COSMETIC_DAMAGE", "FIRMWARE_REFLASH_REQUIRED", "IR_RING_OVERHEATED", "REGISTERED_SENSOR", "UNDISCOVERED_ISSUE", "FOCUS_ISSUES", "POTENTIAL_MANUFACTURING_DEFECT" ],
            "nullable" : true
          },
          "failureDiagnostics" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "fedExReturnLabelSent" : {
            "type" : "boolean",
            "nullable" : true
          },
          "finalNotes" : {
            "type" : "string",
            "nullable" : true
          },
          "hardwareUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "initialFirmwareVersion" : {
            "type" : "string",
            "nullable" : true
          },
          "initiatedBy" : {
            "type" : "string",
            "nullable" : true
          },
          "inventoryNeeded" : {
            "type" : "string",
            "nullable" : true
          },
          "inventoryNeededMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "isRefurbished" : {
            "type" : "boolean",
            "nullable" : true
          },
          "knownIssue" : {
            "type" : "boolean",
            "nullable" : true
          },
          "lastRecordedFirmwareVersion" : {
            "type" : "string",
            "nullable" : true
          },
          "lastUpdatedAtSec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "lastUpdatedBy" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "postalCode" : {
            "type" : "string",
            "nullable" : true
          },
          "prevShippingInfoUsedBy" : {
            "type" : "string",
            "nullable" : true
          },
          "prevShippingInfoUsedByAtSec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "proactiveReplacement" : {
            "type" : "boolean",
            "nullable" : true
          },
          "recipientName" : {
            "type" : "string",
            "nullable" : true
          },
          "recipientPhoneNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "replacementCourier" : {
            "type" : "string",
            "nullable" : true
          },
          "replacementHardwareUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "replacementTrackingNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "requesterEmailAddress" : {
            "type" : "string",
            "nullable" : true
          },
          "returnLabelRequestedUpdatedAtSec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "returnLabelSent" : {
            "type" : "boolean",
            "nullable" : true
          },
          "returnLabelSentUpdatedAtSec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "returnTrackingNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "rmaRequest" : {
            "$ref" : "#/components/schemas/RMARequest"
          },
          "rmaRequestUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "sdCardReplaced" : {
            "type" : "boolean",
            "nullable" : true
          },
          "shipmentMethod" : {
            "type" : "string",
            "enum" : [ "GROUND", "EXPEDITED", "OVERNIGHT" ],
            "nullable" : true
          },
          "shipmentRequested" : {
            "type" : "boolean",
            "nullable" : true
          },
          "shipmentRequestedBy" : {
            "type" : "string",
            "nullable" : true
          },
          "shipmentRequestedUpdatedAtSec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "shipmentSent" : {
            "type" : "boolean",
            "nullable" : true
          },
          "shipmentSentUpdatedAtSec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "skipAutoRegistration" : {
            "type" : "boolean",
            "nullable" : true
          },
          "state" : {
            "type" : "string",
            "nullable" : true
          },
          "status" : {
            "type" : "string",
            "enum" : [ "INITIATED", "PENDING", "APPROVED", "INPROGRESS", "COMPLETE", "RETURN", "STOLEN", "OPERATIONAL", "FULFILLMENT_ERROR" ],
            "nullable" : true
          },
          "storageCid" : {
            "type" : "string",
            "nullable" : true
          },
          "street" : {
            "type" : "string",
            "nullable" : true
          },
          "timestampSec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "warehouseInventoryNeeded" : {
            "type" : "boolean",
            "nullable" : true
          },
          "zenDeskTicketAssigneeEmail" : {
            "type" : "string",
            "nullable" : true
          },
          "zenDeskTicketSubject" : {
            "type" : "string",
            "nullable" : true
          },
          "zendeskTicket" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Rapidsos_GetNearbyFeedsRequest" : {
        "type" : "object",
        "description" : "Request object for getting the closest 10 feeds by latitude and longitude.",
        "properties" : {
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "description" : "Latitude coordinate for finding nearby feeds",
            "example" : 40.7128,
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "description" : "Longitude coordinate for finding nearby feeds",
            "example" : -74.006,
            "nullable" : true
          },
          "width" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Width parameter for the search area",
            "example" : 1000,
            "nullable" : true
          }
        }
      },
      "Rapidsos_GetNearbyFeedsResponse" : {
        "type" : "object",
        "description" : "Response object containing the closest 10 feed stream URLs by latitude and longitude.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "streamUrls" : {
            "type" : "array",
            "description" : "List of stream URLs for the closest 10 feeds",
            "items" : {
              "type" : "string",
              "description" : "List of stream URLs for the closest 10 feeds",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "RaptorBuilding" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "uid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "RaptorTemplate" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "uId" : {
            "type" : "string",
            "nullable" : true
          },
          "uid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "RaptorType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "apiToken" : {
              "type" : "string",
              "nullable" : true
            },
            "clientId" : {
              "type" : "string",
              "nullable" : true
            },
            "clientSecret" : {
              "type" : "string",
              "nullable" : true
            },
            "clientUid" : {
              "type" : "string",
              "nullable" : true
            },
            "refreshToken" : {
              "type" : "string",
              "nullable" : true
            },
            "tokenValid" : {
              "type" : "boolean",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "RealtimeRelativeSecondsScheduleType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "pastSeconds" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "mutable" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "oneTimeUse" : {
            "type" : "boolean",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "strategy" : {
            "type" : "string",
            "enum" : [ "WEEKLY_REPEATING_MINUTES", "ABSOLUTE_SECONDS", "REALTIME_RELATIVE_SECONDS", "RELATIVE_DATETIME_INTERVALS" ],
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "RecurringRuleTriggerType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "locationUuids" : {
              "type" : "array",
              "description" : "Optional list of locations to specify timezones for evaluation. Note that if not specified, then we rely on the Actions to derive timezones.",
              "items" : {
                "type" : "string",
                "format" : "RUUID",
                "description" : "base 64 (url-safe) uuid string",
                "example" : "AAAAAAAAAAAAAAAAAAAAAA",
                "nullable" : true
              },
              "nullable" : true
            },
            "repeatInterval" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "Interval of timeUnit to re-occur at. i.e. trigger every 5 minutes, repeatInerval would be 5",
              "nullable" : true
            },
            "timeUnit" : {
              "$ref" : "#/components/schemas/RecurringTimeUnit"
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/RuleTriggerTypeEnum"
          }
        }
      },
      "RecurringTimeUnit" : {
        "type" : "string",
        "description" : "Time unit of recurrence. i.e. trigger every 5 minutes, timeUnit would be MINUTES",
        "enum" : [ "SECONDS", "MINUTES", "HOURS" ]
      },
      "RegionConfigType" : {
        "type" : "object",
        "properties" : {
          "inverted" : {
            "type" : "boolean",
            "nullable" : true
          },
          "polygons" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RegionPolygonType"
            },
            "nullable" : true
          }
        }
      },
      "RegionCoordinateType" : {
        "type" : "object",
        "properties" : {
          "x" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "y" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          }
        }
      },
      "RegionCrossingActivityEventType" : {
        "type" : "object",
        "allOf" : [ ],
        "nullable" : true,
        "properties" : {
          "activityEvent" : {
            "$ref" : "#/components/schemas/ActivityEnum"
          }
        }
      },
      "RegionOfInterest" : {
        "type" : "object",
        "description" : "Regions of interest that belong to the group. Group must have at least one region specified.",
        "properties" : {
          "activities" : {
            "type" : "array",
            "description" : "Region of allowed or disallowed activities. Activities are allowed if region group is inclusive. Activities are disallowed if region group is exclusive. Region must have at least one activity specified.",
            "items" : {
              "$ref" : "#/components/schemas/ActivityEnum"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "polygon" : {
            "$ref" : "#/components/schemas/RegionPolygonType"
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "RegionOfInterestGroup" : {
        "type" : "object",
        "properties" : {
          "inclusive" : {
            "type" : "boolean",
            "description" : "If true, regions in this group include specified activities. If false, regions in this group exclude specified activities.",
            "nullable" : true
          },
          "regionsOfInterest" : {
            "type" : "array",
            "description" : "Regions of interest that belong to the group. Group must have at least one region specified.",
            "items" : {
              "$ref" : "#/components/schemas/RegionOfInterest"
            },
            "nullable" : true
          },
          "type" : {
            "type" : "string",
            "description" : "Represents type of activity regions in the group. Defaults to 'Activity'.",
            "enum" : [ "ACTIVITY", "REPORTING", "CROSSING" ],
            "nullable" : true
          }
        }
      },
      "RegionPolygonType" : {
        "type" : "object",
        "properties" : {
          "coordinates" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RegionCoordinateType"
            },
            "nullable" : true
          }
        }
      },
      "RelativeDateTimeIntervalsScheduleType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "intervals" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/LocalDateTimeIntervalType"
              },
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "mutable" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "oneTimeUse" : {
            "type" : "boolean",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "strategy" : {
            "type" : "string",
            "enum" : [ "WEEKLY_REPEATING_MINUTES", "ABSOLUTE_SECONDS", "REALTIME_RELATIVE_SECONDS", "RELATIVE_DATETIME_INTERVALS" ],
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Relay_AssignThirdPartyCameraToNVRWSRequest" : {
        "type" : "object",
        "description" : "Request object for assigning a third-party camera to an NVR.",
        "properties" : {
          "discoveredCameraMacAddress" : {
            "type" : "string",
            "description" : "MAC address of the discovered camera to assign",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name for the third-party camera",
            "example" : "Front Door Camera",
            "nullable" : true
          },
          "nvruuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "rtspUrl" : {
            "type" : "string",
            "description" : "RTSP URL for the camera stream",
            "example" : "rtsp://192.168.1.100:554/stream1",
            "nullable" : true
          }
        }
      },
      "Relay_AssignThirdPartyCameraToNVRWSResponse" : {
        "type" : "object",
        "description" : "Response object for assigning a third-party camera to an NVR.",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Relay_AssignThirdPartyCameraToRelayCameraWSRequest" : {
        "type" : "object",
        "description" : "Request object for assigning a third-party camera to a relay camera.",
        "properties" : {
          "discoveredCameraMacAddress" : {
            "type" : "string",
            "description" : "MAC address of the discovered camera to assign",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name for the third-party camera",
            "example" : "Front Door Camera",
            "nullable" : true
          },
          "rtspUrl" : {
            "type" : "string",
            "description" : "RTSP URL for the camera stream",
            "example" : "rtsp://192.168.1.100:554/stream1",
            "nullable" : true
          }
        }
      },
      "Relay_AssignThirdPartyCameraToRelayCameraWSResponse" : {
        "type" : "object",
        "description" : "Response object for assigning a third-party camera to a relay camera.",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Relay_AuthenticateThirdPartyCameraWSRequest" : {
        "type" : "object",
        "description" : "Request object for authenticating a third-party camera with RTSP URL.",
        "properties" : {
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "password" : {
            "type" : "string",
            "description" : "Password to access the RTSP URL. This field MUST be non-empty if trySavedCredentials is false",
            "example" : "password123",
            "nullable" : true
          },
          "rtspUrl" : {
            "type" : "string",
            "description" : "The RTSP URL of the third-party camera. This RTSP URL should reference a stream that provides H.264 encoded video",
            "example" : "rtsp://192.168.1.100:554/stream1",
            "nullable" : true
          },
          "thirdPartyCameraMacAddress" : {
            "type" : "string",
            "description" : "The MAC address of the third-party camera this request is operating on",
            "nullable" : true
          },
          "trySavedCredentials" : {
            "type" : "boolean",
            "description" : "Whether the third-party credentials saved in the account should be used when trying to validate whether the provided RTSP URL is valid",
            "example" : false,
            "nullable" : true
          },
          "username" : {
            "type" : "string",
            "description" : "Username to access the RTSP URL. This field MUST be non-empty if trySavedCredentials is false",
            "example" : "admin",
            "nullable" : true
          }
        }
      },
      "Relay_AuthenticateThirdPartyCameraWSResponse" : {
        "type" : "object",
        "description" : "Response object for authenticating a third-party camera with RTSP URL.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "result" : {
            "$ref" : "#/components/schemas/DiscoveredThirdPartyCameraType"
          },
          "rtspUrlStatus" : {
            "type" : "string",
            "description" : "Status of the RTSP URL validation",
            "enum" : [ "UNKNOWN", "NOT_REACHABLE", "NOT_AUTHENTICATED", "NOT_SUPPORTED", "GOOD" ],
            "nullable" : true
          }
        }
      },
      "Relay_CreateThirdPartyCameraPasswordWSRequest" : {
        "type" : "object",
        "description" : "Request object for creating a third-party camera password.",
        "properties" : {
          "notes" : {
            "type" : "string",
            "description" : "Notes for the password entry",
            "example" : "Default admin password",
            "nullable" : true
          },
          "password" : {
            "type" : "string",
            "description" : "Password for the third-party camera",
            "example" : "password123",
            "nullable" : true
          },
          "username" : {
            "type" : "string",
            "description" : "Username for the third-party camera",
            "example" : "admin",
            "nullable" : true
          }
        }
      },
      "Relay_CreateThirdPartyCameraPasswordWSResponse" : {
        "type" : "object",
        "description" : "Response object for creating a third-party camera password.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "passwordUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Relay_DeleteThirdPartyCameraPasswordWSRequest" : {
        "type" : "object",
        "description" : "Request object for deleting a third-party camera password.",
        "properties" : {
          "passwordUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Relay_DeleteThirdPartyCameraPasswordWSResponse" : {
        "type" : "object",
        "description" : "Response object for deleting a third-party camera password.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Relay_DiscoveryWithUnassignedRtspEndpoints" : {
        "type" : "object",
        "description" : "Discovery information with unassigned RTSP endpoints available for assignment.",
        "properties" : {
          "codec" : {
            "type" : "string",
            "description" : "Codec of the discovered device",
            "example" : "H.264",
            "nullable" : true
          },
          "ipAddress" : {
            "type" : "string",
            "description" : "IP address of the discovered device",
            "example" : "192.168.1.100",
            "nullable" : true
          },
          "macAddress" : {
            "type" : "string",
            "description" : "MAC address of the discovered device",
            "nullable" : true
          },
          "manufacturer" : {
            "type" : "string",
            "description" : "Manufacturer of the discovered device",
            "example" : "Hikvision",
            "nullable" : true
          },
          "model" : {
            "type" : "string",
            "description" : "Model of the discovered device",
            "example" : "DS-2CD2142FWD-I",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "unassignedRtspEndpoints" : {
            "type" : "array",
            "description" : "List of unassigned RTSP endpoints that are available for assignment. Contains only endpoints with status GOOD and that are not currently assigned.",
            "items" : {
              "$ref" : "#/components/schemas/Relay_ExternalRtspEndpoint"
            },
            "nullable" : true
          }
        }
      },
      "Relay_ExecuteThirdPartyCameraDiscoveryWSRequest" : {
        "type" : "object",
        "description" : "Request object for executing third-party camera discovery.",
        "properties" : {
          "deviceFilter" : {
            "type" : "array",
            "description" : "Set of device UUIDs to filter discovery by",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "locationFilter" : {
            "type" : "array",
            "description" : "Set of location UUIDs to filter discovery by",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "Relay_ExecuteThirdPartyCameraDiscoveryWSResponse" : {
        "type" : "object",
        "description" : "Response object for executing third-party camera discovery.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Relay_ExternalRtspEndpoint" : {
        "type" : "object",
        "description" : "External RTSP endpoint configuration for camera streams.",
        "properties" : {
          "lastRtspUrlStatus" : {
            "type" : "string",
            "description" : "Last known status of the RTSP URL",
            "enum" : [ "UNKNOWN", "NOT_REACHABLE", "NOT_AUTHENTICATED", "NOT_SUPPORTED", "GOOD" ],
            "nullable" : true
          },
          "password" : {
            "type" : "string",
            "description" : "Password for RTSP authentication",
            "example" : "password123",
            "nullable" : true
          },
          "rtspUrl" : {
            "type" : "string",
            "description" : "RTSP URL for the camera stream",
            "example" : "rtsp://192.168.1.100:554/stream1",
            "nullable" : true
          },
          "source" : {
            "$ref" : "#/components/schemas/RtspEndpointSource"
          },
          "username" : {
            "type" : "string",
            "description" : "Username for RTSP authentication",
            "example" : "admin",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Relay_FindDefaultRtspUrlsByManufacturerWSRequest" : {
        "type" : "object",
        "description" : "Request object for finding default RTSP URLs by camera manufacturer and model.",
        "properties" : {
          "manufacturer" : {
            "type" : "string",
            "description" : "Required manufacturer filter for finding default RTSP URLs",
            "example" : "Hikvision",
            "nullable" : true
          },
          "model" : {
            "type" : "string",
            "description" : "Optional model filter for finding default RTSP URLs",
            "example" : "DS-2CD2142FWD-I",
            "nullable" : true
          }
        }
      },
      "Relay_FindDefaultRtspUrlsByManufacturerWSResponse" : {
        "type" : "object",
        "description" : "Response object containing default RTSP URLs and paths for a camera manufacturer and model.",
        "properties" : {
          "defaultPaths" : {
            "type" : "array",
            "description" : "List of path components extracted from the default RTSP URLs",
            "items" : {
              "type" : "string",
              "description" : "List of path components extracted from the default RTSP URLs",
              "nullable" : true
            },
            "nullable" : true
          },
          "defaultUrls" : {
            "type" : "array",
            "description" : "List of default RTSP URLs for the manufacturer and model",
            "items" : {
              "type" : "string",
              "description" : "List of default RTSP URLs for the manufacturer and model",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Relay_FindDiscoveriesWithUnassignedRtspEndpointsWSRequest" : {
        "type" : "object",
        "description" : "Request object for finding discoveries with unassigned RTSP endpoints."
      },
      "Relay_FindDiscoveriesWithUnassignedRtspEndpointsWSResponse" : {
        "type" : "object",
        "description" : "Response object containing discoveries with unassigned RTSP endpoints.",
        "properties" : {
          "discoveries" : {
            "type" : "array",
            "description" : "List of discoveries with unassigned RTSP endpoints",
            "items" : {
              "$ref" : "#/components/schemas/Relay_DiscoveryWithUnassignedRtspEndpoints"
            },
            "nullable" : true
          }
        }
      },
      "Relay_GetAssignedThirdPartyCamerasWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting third-party cameras assigned to a specific NVR.",
        "properties" : {
          "nvruuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Relay_GetAssignedThirdPartyCamerasWSResponse" : {
        "type" : "object",
        "description" : "Response object containing third-party cameras assigned to a specific NVR.",
        "properties" : {
          "assignedCameras" : {
            "type" : "array",
            "description" : "List of third-party cameras assigned to the specified NVR",
            "items" : {
              "$ref" : "#/components/schemas/CameraType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Relay_GetFullNVRStateWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting detailed information about the state of a specified NVR.",
        "properties" : {
          "force" : {
            "type" : "boolean",
            "description" : "Whether to force refresh the NVR state",
            "example" : false,
            "nullable" : true
          },
          "nvruuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          }
        }
      },
      "Relay_GetFullNVRStateWSResponse" : {
        "type" : "object",
        "description" : "Response object containing detailed information about the state of a specified NVR.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "fullNVRState" : {
            "$ref" : "#/components/schemas/FullDeviceStateType"
          }
        }
      },
      "Relay_GetImportThirdPartyCamerasFormatWSResponse" : {
        "type" : "object",
        "description" : "Response object for getting the import format for third-party cameras.",
        "properties" : {
          "example" : {
            "type" : "string",
            "description" : "Example of the import format",
            "example" : "CSV format example",
            "nullable" : true
          },
          "explanation" : {
            "type" : "string",
            "description" : "Explanation of the import format",
            "example" : "Format explanation",
            "nullable" : true
          }
        }
      },
      "Relay_GetMinimalNVRStateListWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting basic state information about all NVRs in the organization."
      },
      "Relay_GetMinimalNVRStateListWSResponse" : {
        "type" : "object",
        "description" : "Response object containing basic state information about all NVRs in the organization.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "nvrstates" : {
            "type" : "array",
            "description" : "List of minimal NVR state information for all NVRs in the organization",
            "items" : {
              "$ref" : "#/components/schemas/MinimalNVRStateType"
            },
            "nullable" : true
          }
        }
      },
      "Relay_GetMinimalThirdPartyCameraStateListWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting basic state information about all third-party cameras in the organization."
      },
      "Relay_GetMinimalThirdPartyCameraStateListWSResponse" : {
        "type" : "object",
        "description" : "Response object containing basic state information about all third-party cameras in the organization.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "thirdPartyCameraStateList" : {
            "type" : "array",
            "description" : "List of minimal third-party camera state information for all cameras in the organization",
            "items" : {
              "$ref" : "#/components/schemas/Relay_MinimalThirdPartyCameraStateType"
            },
            "nullable" : true
          }
        }
      },
      "Relay_GetNVRDetailsWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting details for specified NVRs.",
        "properties" : {
          "nvruuids" : {
            "type" : "array",
            "description" : "List of NVR UUIDs to get details for",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Relay_GetNVRDetailsWSResponse" : {
        "type" : "object",
        "description" : "Response object containing details for specified NVRs.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "nvrs" : {
            "type" : "array",
            "description" : "List of NVR details for the specified NVRs",
            "items" : {
              "$ref" : "#/components/schemas/Relay_NVRExternalType"
            },
            "nullable" : true
          }
        }
      },
      "Relay_GetRtspEndpointsWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting RTSP endpoints for a device with the specified MAC address.",
        "properties" : {
          "discoveredCameraMacAddress" : {
            "type" : "string",
            "description" : "MAC address of the discovered camera to get RTSP endpoints for",
            "nullable" : true
          }
        }
      },
      "Relay_GetRtspEndpointsWSResponse" : {
        "type" : "object",
        "description" : "Response object containing RTSP endpoints for a device with the specified MAC address.",
        "properties" : {
          "rtspEndpoints" : {
            "type" : "array",
            "description" : "List of RTSP endpoints for the discovered camera",
            "items" : {
              "$ref" : "#/components/schemas/Relay_ExternalRtspEndpoint"
            },
            "nullable" : true
          }
        }
      },
      "Relay_GetThirdPartyCameraPasswordsWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting third-party camera passwords."
      },
      "Relay_GetThirdPartyCameraPasswordsWSResponse" : {
        "type" : "object",
        "description" : "Response object containing third-party camera passwords.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "passwords" : {
            "type" : "array",
            "description" : "List of third-party camera passwords",
            "items" : {
              "$ref" : "#/components/schemas/ThirdPartyCameraPasswordType"
            },
            "nullable" : true
          }
        }
      },
      "Relay_ImportThirdPartyCamerasWSResponse" : {
        "type" : "object",
        "description" : "Response object for importing third-party cameras.",
        "properties" : {
          "importResults" : {
            "type" : "array",
            "description" : "List of import results for third-party cameras",
            "items" : {
              "$ref" : "#/components/schemas/Relay_ThirdPartyCameraImportResult"
            },
            "nullable" : true
          },
          "messages" : {
            "type" : "array",
            "description" : "List of messages from the import operation",
            "items" : {
              "type" : "string",
              "description" : "List of messages from the import operation",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Relay_ManualDiscoverThirdPartyCameraWSRequest" : {
        "type" : "object",
        "description" : "Request object for manually discovering a third-party camera with RTSP URL.",
        "properties" : {
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "password" : {
            "type" : "string",
            "description" : "Password to access the RTSP URL. This field MUST be non-empty if trySavedCredentials is false",
            "example" : "password123",
            "nullable" : true
          },
          "rtspUrl" : {
            "type" : "string",
            "description" : "The RTSP URL of the third-party camera being manually added. This RTSP URL should reference a stream that provides H.264 encoded video",
            "example" : "rtsp://192.168.1.100:554/stream1",
            "nullable" : true
          },
          "trySavedCredentials" : {
            "type" : "boolean",
            "description" : "Whether the third-party credentials saved in the account should be used when trying to validate whether the provided RTSP URL is valid",
            "example" : false,
            "nullable" : true
          },
          "username" : {
            "type" : "string",
            "description" : "Username to access the RTSP URL. This field MUST be non-empty if trySavedCredentials is false",
            "example" : "admin",
            "nullable" : true
          }
        }
      },
      "Relay_ManualDiscoverThirdPartyCameraWSResponse" : {
        "type" : "object",
        "description" : "Response object for manually discovering a third-party camera with RTSP URL.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "result" : {
            "$ref" : "#/components/schemas/DiscoveredThirdPartyCameraType"
          },
          "rtspUrlStatus" : {
            "type" : "string",
            "description" : "Status of the RTSP URL validation",
            "enum" : [ "UNKNOWN", "NOT_REACHABLE", "NOT_AUTHENTICATED", "NOT_SUPPORTED", "GOOD" ],
            "nullable" : true
          }
        }
      },
      "Relay_MinimalThirdPartyCameraStateType" : {
        "type" : "object",
        "description" : "Minimal third-party camera state information.",
        "properties" : {
          "assignedNVRUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          },
          "assignedRelayCameraUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "codec" : {
            "type" : "string",
            "description" : "Codec used by the third-party camera",
            "example" : "H.264",
            "nullable" : true
          },
          "connectionStatus" : {
            "$ref" : "#/components/schemas/DeviceStatusEnum"
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "defaultInterface" : {
            "type" : "string",
            "nullable" : true
          },
          "defaultInterfaceMac" : {
            "type" : "string",
            "nullable" : true
          },
          "directionRadians" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "discoveredByDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "externalIPAddress" : {
            "type" : "string",
            "nullable" : true
          },
          "facetNameMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "firmwareUpdateInProgress" : {
            "type" : "boolean",
            "nullable" : true
          },
          "firmwareVersion" : {
            "type" : "string",
            "nullable" : true
          },
          "floorNumber" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "healthStatus" : {
            "$ref" : "#/components/schemas/DeviceStatusEnum"
          },
          "healthStatusDetails" : {
            "$ref" : "#/components/schemas/DeviceHealthStatusDetailsEnum"
          },
          "hwVariation" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "lanAddresses" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "lastRtspUrlStatus" : {
            "type" : "string",
            "description" : "Last known status of the RTSP URL",
            "enum" : [ "UNKNOWN", "NOT_REACHABLE", "NOT_AUTHENTICATED", "NOT_SUPPORTED", "GOOD" ],
            "nullable" : true
          },
          "lastVisibleLocationMs" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int64",
              "description" : "Map of location UUID to last time this third-party device was known to be visible",
              "nullable" : true
            },
            "description" : "Map of location UUID to last time this third-party device was known to be visible",
            "nullable" : true
          },
          "lastVisibleMs" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int64",
              "description" : "Map of device UUID to last time this third-party device was known to be visible",
              "nullable" : true
            },
            "description" : "Map of device UUID to last time this third-party device was known to be visible",
            "nullable" : true
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "liveStreamShared" : {
            "type" : "boolean",
            "nullable" : true
          },
          "liveStreamsSharedCount" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "manufacturer" : {
            "type" : "string",
            "description" : "Manufacturer of the third-party camera",
            "example" : "Hikvision",
            "nullable" : true
          },
          "mediaRegion" : {
            "type" : "string",
            "nullable" : true
          },
          "mediaStorageDeviceUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          },
          "model" : {
            "type" : "string",
            "description" : "Model of the third-party camera",
            "example" : "DS-2CD2142FWD-I",
            "nullable" : true
          },
          "mummified" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "region" : {
            "type" : "string",
            "nullable" : true
          },
          "rtspUrl" : {
            "type" : "string",
            "description" : "RTSP URL for the third-party camera stream",
            "example" : "rtsp://192.168.1.100:554/stream1",
            "nullable" : true
          },
          "secondaryLanAddresses" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "serialNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "ssid" : {
            "type" : "string",
            "nullable" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "supportedFacets" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DeviceFacet"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "wifiApMac" : {
            "type" : "string",
            "nullable" : true
          },
          "wifiBars" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "wifiSignalStrength" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Relay_NVRExternalType" : {
        "type" : "object",
        "description" : "External NVR type with secondary static IP address support.",
        "properties" : {
          "archiveRegion" : {
            "type" : "string",
            "nullable" : true
          },
          "cameraFramerate" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "customData" : {
            "type" : "string",
            "nullable" : true
          },
          "deleted" : {
            "type" : "boolean",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "deviceFacetRadians" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "number",
              "format" : "float",
              "nullable" : true
            },
            "nullable" : true
          },
          "directionRadians" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "facetNameMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "floorNumber" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "hwVariation" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "mediaStorageDeviceUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          },
          "mummified" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "pending" : {
            "type" : "boolean",
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "serialNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "type" : {
            "$ref" : "#/components/schemas/DeviceTypeEnum"
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Relay_PTZMoveWSRequest" : {
        "type" : "object",
        "description" : "Request object for moving a PTZ camera.",
        "properties" : {
          "thirdPartyCameraUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "xmovementPermyriad" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "X-axis movement in permyriad units",
            "example" : 1000,
            "nullable" : true
          },
          "ymovementPermyriad" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Y-axis movement in permyriad units",
            "example" : 1000,
            "nullable" : true
          },
          "zmovementPermyriad" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Z-axis movement in permyriad units",
            "example" : 1000,
            "nullable" : true
          }
        }
      },
      "Relay_PTZMoveWSResponse" : {
        "type" : "object",
        "description" : "Response object for moving a PTZ camera.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Relay_PTZStatusWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting PTZ status of a camera.",
        "properties" : {
          "thirdPartyCameraUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Relay_PTZStatusWSResponse" : {
        "type" : "object",
        "description" : "Response object containing PTZ status of a camera.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "xpositionPermyriad" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Current X-axis position in permyriad units",
            "example" : 5000,
            "nullable" : true
          },
          "ypositionPermyriad" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Current Y-axis position in permyriad units",
            "example" : 5000,
            "nullable" : true
          },
          "zpositionPermyriad" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Current Z-axis position in permyriad units",
            "example" : 5000,
            "nullable" : true
          }
        }
      },
      "Relay_RebootNVRVWSRequest" : {
        "type" : "object",
        "description" : "Request object for rebooting an NVR.",
        "properties" : {
          "nvrUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Relay_RebootNVRVWSResponse" : {
        "type" : "object",
        "description" : "Response object for rebooting an NVR.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "result" : {
            "type" : "string",
            "description" : "Result of the reboot operation",
            "enum" : [ "REBOOT_SENT", "DEVICE_OFFLINE" ],
            "nullable" : true
          }
        }
      },
      "Relay_ThirdPartyCameraImportResult" : {
        "type" : "object",
        "description" : "Result of importing a third-party camera.",
        "properties" : {
          "discoveredThirdPartyCamera" : {
            "$ref" : "#/components/schemas/DiscoveredThirdPartyCameraType"
          },
          "message" : {
            "type" : "string",
            "description" : "Message describing the import result",
            "example" : "Successfully imported camera",
            "nullable" : true
          },
          "rtspUrl" : {
            "type" : "string",
            "description" : "RTSP URL that was imported",
            "example" : "rtsp://192.168.1.100:554/stream1",
            "nullable" : true
          },
          "urlStatus" : {
            "type" : "string",
            "description" : "Status of the RTSP URL validation",
            "enum" : [ "UNKNOWN", "NOT_REACHABLE", "NOT_AUTHENTICATED", "NOT_SUPPORTED", "GOOD" ],
            "nullable" : true
          }
        }
      },
      "Relay_UnassignThirdPartyCameraWSRequest" : {
        "type" : "object",
        "description" : "Request object for unassigning a third-party camera from an NVR.",
        "properties" : {
          "nvruuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          },
          "rtspUrl" : {
            "type" : "string",
            "description" : "RTSP URL of the camera to unassign",
            "example" : "rtsp://192.168.1.100:554/stream1",
            "nullable" : true
          },
          "thirdPartyCameraMacAddress" : {
            "type" : "string",
            "description" : "MAC address of the third-party camera to unassign",
            "nullable" : true
          }
        }
      },
      "Relay_UnassignThirdPartyCameraWSResponse" : {
        "type" : "object",
        "description" : "Response object for unassigning a third-party camera from an NVR.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Relay_UnregisterNVRWSRequest" : {
        "type" : "object",
        "description" : "Request object for unregistering an NVR from the system.",
        "properties" : {
          "nvruuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Relay_UnregisterNVRWSResponse" : {
        "type" : "object",
        "description" : "Response object for unregistering an NVR from the system.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "responseStatus" : {
            "type" : "string",
            "description" : "Status of the unregister operation",
            "enum" : [ "BASIC_AUTH_FAILED", "PASSWORD_MISMATCH", "SAME_PASSWORD", "USER_EXISTS", "USER_NOT_FOUND", "DEVICE_NOT_FOUND", "POLICY_NOT_FOUND", "LOCATION_NOT_FOUND", "ORG_NOT_FOUND", "BAD_INPUT", "SUCCESS", "PASSWORD_TOO_SHORT" ],
            "nullable" : true
          }
        }
      },
      "Relay_UpdateFirmwareWSStatus" : {
        "type" : "string",
        "description" : "Status enumeration for firmware update web service responses.",
        "enum" : [ "ALREADY_ON_THE_LATEST_FIRMWARE", "DEVICE_ON_A_SPECIAL_FIRMWARE_AND_CANNOT_BE_UPDATED", "UPDATE_STARTED", "UNABLE_TO_REACH_DEVICE", "FIRMWARE_UPDATE_ALREADY_IN_PROGESS", "DEVICE_NOT_AUTHROIZED" ]
      },
      "Relay_UpdateNVRFirmwareWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating NVR firmware.",
        "properties" : {
          "nvruuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Relay_UpdateNVRFirmwareWSResponse" : {
        "type" : "object",
        "description" : "Response object for updating NVR firmware.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "status" : {
            "$ref" : "#/components/schemas/Relay_UpdateFirmwareWSStatus"
          }
        }
      },
      "Relay_UpdateNVRVWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating NVR details.",
        "properties" : {
          "customData" : {
            "type" : "string",
            "nullable" : true
          },
          "customDataUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "deleted" : {
            "type" : "boolean",
            "nullable" : true
          },
          "deletedUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "description" : "Description of the NVR",
            "example" : "Primary NVR for main building",
            "nullable" : true
          },
          "descriptionUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "directionRadians" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "directionRadiansUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "facetNameMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "description" : "Map of device facets to their names",
              "nullable" : true
            },
            "description" : "Map of device facets to their names",
            "nullable" : true
          },
          "facetNameMapUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "floorNumber" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "floorNumberUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "latitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "latitudeUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "locationUuidUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "longitude" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "longitudeUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "mummified" : {
            "type" : "boolean",
            "nullable" : true
          },
          "mummifiedUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the NVR",
            "example" : "Main NVR",
            "nullable" : true
          },
          "nameUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "policyUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "policyUuidUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "subLocationsHierarchyKeyUpdated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Relay_UpdateNVRVWSResponse" : {
        "type" : "object",
        "description" : "Response object for updating NVR details.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "RemoteDoorUnlockActionType" : {
        "type" : "object",
        "properties" : {
          "doorId" : {
            "type" : "string",
            "nullable" : true
          },
          "placeId" : {
            "type" : "string",
            "nullable" : true
          },
          "system" : {
            "$ref" : "#/components/schemas/RemoteDoorUnlockSystemEnum"
          }
        }
      },
      "RemoteDoorUnlockSystemEnum" : {
        "type" : "string",
        "enum" : [ "BRIVO", "OPENPATH", "KISI", "PLACEOS", "GENEA", "PDK", "INNER_RANGE", "RHOMBUS", "UNKNOWN" ]
      },
      "RenewalClaimKey" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "entries" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/ClaimKeyEntry"
              },
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "claimEndDate" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Date/time when claiming of licenses represented by this claim key ended successfully.",
            "nullable" : true
          },
          "claimStartDate" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Date/time when claiming of licenses represented by this claim key started.",
            "nullable" : true
          },
          "createdOn" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "expirationEmailState" : {
            "type" : "string",
            "enum" : [ "NINETY_DAY_EMAIL_SUCCEEDED", "NINETY_DAY_EMAIL_FAILED", "SIXTY_DAY_EMAIL_SUCCEEDED", "SIXTY_DAY_EMAIL_FAILED", "FOURTY_FIVE_DAY_EMAIL_SUCCEEDED", "FOURTY_FIVE_DAY_EMAIL_FAILED", "THIRTY_DAY_EMAIL_SUCCEEDED", "THIRTY_DAY_EMAIL_FAILED", "TWENTY_ONE_DAY_EMAIL_SUCCEEDED", "TWENTY_ONE_DAY_EMAIL_FAILED", "FOURTEEN_DAY_EMAIL_SUCCEEDED", "FOURTEEN_DAY_EMAIL_FAILED", "TEN_DAY_EMAIL_SUCCEEDED", "TEN_DAY_EMAIL_FAILED", "FIVE_DAY_EMAIL_SUCCEEDED", "FIVE_DAY_EMAIL_FAILED", "FOUR_DAY_EMAIL_SUCCEEDED", "FOUR_DAY_EMAIL_FAILED", "THREE_DAY_EMAIL_SUCCEEDED", "THREE_DAY_EMAIL_FAILED", "TWO_DAY_EMAIL_SUCCEEDED", "TWO_DAY_EMAIL_FAILED", "ONE_DAY_EMAIL_SUCCEEDED", "ONE_DAY_EMAIL_FAILED", "ZERO_DAY_EMAIL_SUCCEEDED", "ZERO_DAY_EMAIL_FAILED", "GRACE_PERIOD_EMAILS_IN_PROGRESS", "GRACE_PERIOD_EMAILS_COMPLETED", "UNKNOWN" ],
            "nullable" : true
          },
          "gracePeriodEndDate" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "maskedClaimCode" : {
            "type" : "string",
            "description" : "Masked claim code for redeemed claim keys. This field can be used for reference purposes.",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "renewedByClaimKeyUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "requestId" : {
            "type" : "string",
            "description" : "Externally supplied request id to prevent creation of unnecessary claim keys due to reprocessing or bugs. Unnecessary claim keys are claim keys that are not tied to anything in the external system.  This property is unique for all claim keys.",
            "nullable" : true
          },
          "returnHistory" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ClaimKeyReturnEvent"
            },
            "nullable" : true
          },
          "state" : {
            "type" : "string",
            "enum" : [ "CREATED", "CLAIMING_PENDING", "CLAIMING_IN_PROGRESS", "CLAIMING_FAILED", "CLAIMED", "EXPIRED_UNCLAIMED", "EXPIRED", "RETURNED", "RENEWED" ],
            "nullable" : true
          },
          "trial" : {
            "type" : "boolean",
            "nullable" : true
          },
          "type" : {
            "type" : "string",
            "enum" : [ "NEW", "RENEWAL" ],
            "nullable" : true
          },
          "updatedOn" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Report_AuditEventWeb" : {
        "type" : "object",
        "description" : "Web representation of an audit event.",
        "properties" : {
          "FOOBAR" : {
            "type" : "string",
            "nullable" : true
          },
          "action" : {
            "type" : "string",
            "enum" : [ "THREAT_CASE_ESCALATED", "THREAT_CASE_CANCELLED", "THREAT_CASE_DISMISSED", "THREAT_CASE_DELETED", "THREAT_CASE_DELETE_BY_STATUS", "PIN_CREATED", "PIN_DELETED", "ALM_PIN_CREATE", "ALM_PIN_BULK_CREATE", "ALM_PIN_UPDATE", "ALM_PIN_ROTATE", "ALM_PIN_BULK_ROTATE", "ALM_PIN_DELETE", "BASIC_AUTH_SUCCESS", "BASIC_AUTH_FAILURE", "SAML_LOGIN_WEB", "LOGIN_WEB", "PASSWORDLESS_LOGIN_WEB", "PARTNER_LOGIN_WEB", "PARTNER_PASSWORDLESS_LOGIN_WEB", "SAML_LOGIN_FAILURE_WEB", "LOGIN_FAILURE_WEB", "RHOMBUS_KEY_LOGIN", "RHOMBUS_KEY_PASSWORDLESS_LOGIN", "RHOMBUS_KEY_SAML_LOGIN", "LOGOUT_WEB", "PARTNER_LOGOUT_WEB", "WEB_CONSOLE_ACCESS", "MOBILE_CONSOLE_ACCESS", "SAML_LOGIN_MOBILE", "PARTNER_LOGIN_MOBILE", "PARTNER_PASSWORDLESS_LOGIN_MOBILE", "LOGIN_MOBILE", "PASSWORDLESS_LOGIN_MOBILE", "SAML_LOGIN_FAILURE_MOBILE", "LOGIN_FAILURE_MOBILE", "LOGOUT_MOBILE", "PARTNER_LOGOUT_MOBILE", "MOBILE_ACCESS", "PARTNER_LOGIN_MOBIlE_REFRESH", "LOGIN_MOBIlE_REFRESH", "RHOMBUS_KEY_LOGIN_REFRESH", "CAMERA_WIFI_NETWORK_CHANGED", "CAMERA_FORCED_REBOOT", "AUDIO_GATEWAY_FORCED_REBOOT", "ENVIRONMENTAL_GATEWAY_FORCED_REBOOT", "DOORBELL_CAMERA_FORCED_REBOOT", "BADGE_READER_FORCED_REBOOT", "FIRMWARE_UPDATE_CAMERA", "DELETE_CAMERA", "DELETE_USER", "DELETE_LOCATION", "LOCATION_UPDATED", "DELETE_ROLE", "ERASE_CAMERA", "POLICY_UPDATE", "POLICY_DELETE", "POLICY_PAUSED_LOCATION", "POLICY_PAUSED_DEVICE", "POLICY_PAUSED_COMPONENT_COMPOSITE", "CREATE_POLICY_ADDENDUM", "DEVICE_REGISTERED", "DEVICE_UPDATE", "DEVICE_SETTINGS_UPDATE", "REVERT_TO_DEFAULTS", "DEVICE_FEATURE_UPDATE", "DEVICE_ORG_REASSIGN", "CLAIMKEY_RENEWAL_CREATED", "LICENSES_CLAIMED", "LICENSES_RETURNED", "LICENSE_ASSIGNED", "LICENSE_CREATED", "LICENSE_UPDATED", "USER_UPDATE", "USER_CREATE", "USER_IMPORT", "BULK_PROVISION_CREDENTIALS", "ROLE_CREATE", "POLICY_CREATE", "PARTNER_CLIENT_CREATE", "PARTNER_CUSTOMIZE_CLIENT", "PARTNER_CUSTOMIZE_CLIENT_DEVICE", "ORG_UPDATE", "DELETE_ORG", "DISABLE_ORG", "CREATE_ORG", "ROLE_UPDATE", "USER_ROLE_UPDATE", "USER_EMAIL_UPDATE", "TIMELAPSE_CREATE", "TIMELAPSE_DELETE", "ALERT_DISMISS", "ALL_ALERT_DISMISS", "SAVED_CLIP_CREATE", "SAVED_CLIP_DELETE", "CLIP_GROUP_CREATED", "CLIP_GROUP_DELETE", "SHARED_CLIP_DELETE", "SHARED_CLIP_CREATE", "SHARED_LINK_SENT", "SHARED_LIVE_VIDEO_STREAM_WITH_PASSWORD_CREATE", "SHARED_LIVE_VIDEO_STREAM_WITHOUT_PASSWORD_CREATE", "SHARED_LIVE_VIDEO_STREAM_DELETE", "SHARED_VIDEOWALL_WITH_PASSWORD_CREATE", "SHARED_VIDEOWALL_WITHOUT_PASSWORD_CREATE", "SHARED_VIDEOWALL_DELETE", "RAW_HTTP_STREAM_CREATED", "RAW_HTTP_STREAM_DELETED", "SETUP_VIRTUAL_MFA_DEVICE", "DELETE_VIRTUAL_MFA_DEVICE", "SETUP_SCIM_API_ACCESS", "REVOKE_SCIM_API_ACCESS", "AUDIT_EXPORT", "COUNT_EXPORT", "DIAGNOSTIC_EXPORT", "INVENTORY_EXPORT", "USERS_EXPORT", "UPTIME_EXPORT", "SUPPORT_TICKET_OPEN", "RMA_OPEN", "FEEDBACK_CREATE", "SUPPORT_ACCESS_GRANT", "SUPPORT_ACCESS_REVOKE", "SUPPORT_PARTNER_ADD", "SUPPORT_PARTNER_REMOVE", "SUPPORT_PARTNER_LOGIN_ACCESS_EXPIRED", "SUPPORT_SEARCH_TICKETS", "ACCEPT_UAP", "ACCEPT_RHOMBUS_UAP", "ACCEPT_ALERTMONITORING_UAP", "CREATE_SEEKPOINT", "DELETE_CUSTOM_SEEKPOINT", "UPDATE_INTEGRATION_SAML", "UPDATE_INTEGRATION_SLACK", "UPDATE_INTEGRATION_SLACK_V2", "DELETE_INTEGRATION_SLACK_V2", "UPDATE_INTEGRATION_BOX", "DELETE_INTEGRATION_BOX", "UPDATE_INTEGRATION_GOOGLE", "DELETE_INTEGRATION_GOOGLE", "UPDATE_INTEGRATION_GOOGLE_V2", "DELETE_INTEGRATION_GOOGLE_V2", "UPDATE_INTEGRATION_PAGERDUTY", "DELETE_INTEGRATION_PAGERDUTY", "UPDATE_INTEGRATION_SERVICENOW", "DELETE_INTEGRATION_SERVICENOW", "UPDATE_INTEGRATION_OFFICE365", "DELETE_INTEGRATION_OFFICE365", "UPDATE_INTEGRATION_DROPBOX", "DELETE_INTEGRATION_DROPBOX", "UPDATE_INTEGRATION_SQUARE", "DELETE_INTEGRATION_SQUARE", "UPDATE_INTEGRATION_AWS", "DELETE_INTEGRATION_AWS", "UPDATE_INTEGRATION_HALO", "DELETE_INTEGRATION_HALO", "UPDATE_INTEGRATION_WEBHOOK", "DELETE_INTEGRATION_WEBHOOK", "UPDATE_INTEGRATION_EMAIL", "DELETE_INTEGRATION_EMAIL", "UPDATE_INTEGRATION_MATTERMOST", "DELETE_INTEGRATION_MATTERMOST", "UPDATE_INTEGRATION_OPENPATH", "DELETE_INTEGRATION_OPENPATH", "UPDATE_INTEGRATION_AVIGILON_ALTA", "DELETE_INTEGRATION_AVIGILON_ALTA", "UPDATE_INTEGRATION_DICE", "DELETE_INTEGRATION_DICE", "UPDATE_INTEGRATION_LUMEO", "DELETE_INTEGRATION_LUMEO", "UPDATE_INTEGRATION_DEVICE", "DELETE_INTEGRATION_DEVICE", "UPDATE_INTEGRATION_GUESTMANAGEMENT", "DELETE_INTEGRATION_GUESTMANAGEMENT", "UPDATE_GUESTMANAGEMENT_SETTINGS", "DELETE_GUESTMANAGEMENT_SETTINGS", "INVITE_GUEST", "CREATE_GUEST", "CHECKIN_GUEST", "CHECKOUT_GUEST", "UPDATE_GUEST", "DELETE_GUEST", "ACTIVATE_KIOSK", "UPDATE_INTEGRATION_OMNIALERT", "DELETE_INTEGRATION_OMNIALERT", "UPDATE_INTEGRATION_OPENTECHALLIANCE", "DELETE_INTEGRATION_OPENTECHALLIANCE", "UPDATE_INTEGRATION_TOAST", "DELETE_INTEGRATION_TOAST", "UPDATE_INTEGRATION_KISI", "DELETE_INTEGRATION_KISI", "UPDATE_INTEGRATION_BRIVO", "DELETE_INTEGRATION_BRIVO", "UPDATE_INTEGRATION_BUTTERFLYMX", "DELETE_INTEGRATION_BUTTERFLYMX", "UPDATE_INTEGRATION_ENVOY", "DELETE_INTEGRATION_ENVOY", "CREATE_ENVOY_INVITE", "UPDATE_INTEGRATION_SALTO", "UPDATE_INTEGRATION_PDK", "DELETE_INTEGRATION_PDK", "UPDATE_INTEGRATION_GENEA", "DELETE_INTEGRATION_GENEA", "UPDATE_INTEGRATION_MICROSOFTTEAMS", "DELETE_INTEGRATION_MICROSOFTTEAMS", "UPDATE_INTEGRATION_AMT", "DELETE_INTEGRATION_AMT", "UPDATE_INTEGRATION_PLACEOS", "DELETE_INTEGRATION_PLACEOS", "UPDATE_INTEGRATION_INTUIFACE", "DELETE_INTEGRATION_INTUIFACE", "UPDATE_INTEGRATION_INFORMACAST", "DELETE_INTEGRATION_INFORMACAST", "UPDATE_INTEGRATION_INNERRANGE", "DELETE_INTEGRATION_INNERRANGE", "UPDATE_INTEGRATION_SHELLY", "DELETE_INTEGRATION_SHELLY", "UPDATE_INTEGRATION_FLIC", "DELETE_INTEGRATION_FLIC", "UPDATE_INTEGRATION_NINEONEONECELLULAR", "DELETE_INTEGRATION_NINEONEONECELLULAR", "UPDATE_INTEGRATION_PIMLOC", "DELETE_INTEGRATION_PIMLOC", "UPDATE_INTEGRATION_RAPTOR", "DELETE_INTEGRATION_RAPTOR", "UPDATE_INTEGRATION_LLM", "DELETE_INTEGRATION_LLM", "UPDATE_INTEGRATION_NOONLIGHT", "UPDATE_INTEGRATION_ALARM_MONITORING", "ENABLE_LIVE_ALARM_MONITORING", "ENABLE_LIVE_ALARM_MONITORING_LOCATION", "CREATE_ALARM_MONITORING_SETTINGS", "UPDATE_ALARM_MONITORING_SETTINGS", "DELETE_ALARM_MONITORING_SETTINGS", "ENABLE_ALARM_MONITORING_SETTINGS", "DISABLE_ALARM_MONITORING_SETTINGS", "REPORT_VEHICLE_EVENT", "API_TOKEN_REQUEST", "API_TOKEN_REVOKE", "API_INVOCATION", "API_OAUTH_TOKEN_REQUEST", "API_OAUTH_TOKEN_REFRESH", "API_OAUTH_TOKEN_REVOKE", "API_OAUTH_INVOCATION", "API_OAUTH_SUBMIT_APPLICATION", "API_OAUTH_UPDATE_APPLICATION", "API_OAUTH_DELETE_APPLICATION", "API_OAUTH_AUTHORIZE", "VIDEO_WALL_CREATE", "VIDEO_WALL_UPDATE", "VIDEO_WALL_DELETE", "VIEW_SHARE_TIMELAPSE", "VIEW_SHARE_CLIP", "VIEW_SHARE_STREAM", "VIEW_SHARE_VIDEOWALL", "VIEW_CAMERA_VOD", "CAMERA_POLICY_UPDATE", "CAMERA_POLICY_CREATE", "CAMERA_POLICY_DELETE", "TAG_POLICY_UPDATE", "TAG_POLICY_CREATE", "TAG_POLICY_DELETE", "CLIMATE_POLICY_UPDATE", "CLIMATE_POLICY_CREATE", "CLIMATE_POLICY_DELETE", "DOOR_POLICY_UPDATE", "DOOR_POLICY_CREATE", "DOOR_POLICY_DELETE", "DOOR_SCHEDULE_EXCEPTION_UPDATE", "DOOR_SCHEDULE_EXCEPTION_CREATE", "DOOR_SCHEDULE_EXCEPTION_DELETE", "ACCESS_CONTROLLED_DOOR_POLICY_UPDATE", "ACCESS_CONTROLLED_DOOR_POLICY_CREATE", "ACCESS_CONTROLLED_DOOR_POLICY_DELETE", "VIDEO_INTERCOM_POLICY_UPDATE", "VIDEO_INTERCOM_POLICY_CREATE", "VIDEO_INTERCOM_POLICY_DELETE", "OCCUPANCY_POLICY_UPDATE", "OCCUPANCY_POLICY_CREATE", "OCCUPANCY_POLICY_DELETE", "AUDIO_POLICY_UPDATE", "AUDIO_POLICY_CREATE", "AUDIO_POLICY_DELETE", "SCHEDULE_CREATE", "SCHEDULE_DELETE", "SCHEDULE_UPDATE", "CUSTOM_EVENT_CREATE", "CUSTOM_EVENT_DELETE", "CUSTOM_EVENT_UPDATE", "UPLOAD_FLOORPLAN", "ORG_AUDIO_RECORD_UPDATE", "ORG_AUDIO_ANALYSIS_UPDATE", "ORG_LLM_USAGE_UPDATE", "DOOR_ACCESS_UNLOCK", "RHOMBUS_KEY_DOOR_UNLOCK", "UPLOAD_ACCESS_CONTROLLED_DOOR", "UPLOAD_USER_PROFILE_PICTURE", "ACCESS_GRANT_CREATE", "ACCESS_GRANT_UPDATE", "ACCESS_GRANT_DELETE", "ACCESS_REVOCATION_CREATE", "ACCESS_REVOCATION_UPDATE", "ACCESS_REVOCATION_DELETE", "ACCESS_CONTROLLED_DOOR_CREATE", "ACCESS_CONTROLLED_DOOR_UPDATE", "ACCESS_CONTROLLED_DOOR_DELETE", "AC_CRED_RHOMBUS_SECURE_CSN_CREATE", "AC_CRED_RHOMBUS_SECURE_CSN_UPDATE", "AC_CRED_RHOMBUS_SECURE_CSN_DELETE", "AC_CRED_RHOMBUS_SECURE_CSN_REVOKED", "AC_CRED_STANDARD_CSN_CREATE", "AC_CRED_STANDARD_CSN_UPDATE", "AC_CRED_STANDARD_CSN_DELETE", "AC_CRED_STANDARD_CSN_REVOKED", "AC_CRED_RHOMBUS_SECURE_MOBILE_CREATE", "AC_CRED_RHOMBUS_SECURE_MOBILE_UPDATE", "AC_CRED_RHOMBUS_SECURE_MOBILE_DELETE", "AC_CRED_RHOMBUS_SECURE_MOBILE_REVOKED", "AC_CRED_PIN_CREATE", "AC_CRED_PIN_BULK_CREATE", "AC_CRED_PIN_UPDATE", "AC_CRED_PIN_ROTATE", "AC_CRED_PIN_BULK_ROTATE", "AC_CRED_PIN_DELETE", "AC_CRED_PIN_REVOKED", "AC_CRED_WIEGAND_CREATE", "AC_CRED_WIEGAND_UPDATE", "AC_CRED_WIEGAND_DELETE", "AC_CRED_WIEGAND_REVOKED", "AC_CRED_NOTE_UPDATE", "AC_LOCKDOWN_PLAN_CREATED", "AC_LOCKDOWN_PLAN_UPDATED", "AC_LOCKDOWN_PLAN_DELETED", "AC_LOCKDOWN_ACTIVATED", "AC_LOCKDOWN_DEACTIVATED", "AC_COMPONENT_POWER_CYCLE", "AC_DOOR_STATE_OVERRIDE_APPLIED", "AC_DOOR_STATE_OVERRIDE_CANCELLED", "SCIM_GET_ALL_USERS", "SCIM_POST_CREATE_USER", "SCIM_PUT_UPDATE_USER", "SCIM_PATCH_UPDATE_USER", "SCIM_GET_USER_BY_ID", "SCIM_DELETE_USER_BY_ID", "SCIM_GET_ALL_GROUPS", "SCIM_POST_CREATE_GROUP", "SCIM_PUT_UPDATE_GROUP", "SCIM_PATCH_UPDATE_GROUP", "SCIM_GET_GROUP_BY_ID", "SCIM_DELETE_GROUP_BY_ID", "CREATE_ACCESS_CONTROL_GROUP", "UPDATE_ACCESS_CONTROL_GROUP", "DELETE_ACCESS_CONTROL_GROUP", "RULE_CREATE", "RULE_DELETE", "RULE_UPDATE", "RULE_PAUSE", "UPLOAD_FACES", "UPDATE_FACE", "REPORT_FACE_EVENT", "FACE_EVENT_UPDATED", "FACE_EVENT_DELETED", "FACE_PERSON_CREATED", "FACE_PERSON_UPDATED", "FACE_PERSON_DELETED", "FACE_MATCHMAKER_CREATED", "FACE_MATCHMAKER_DELETED", "FACE_MATCHMAKER_UPLOADED", "FACE_MATCHING_CONFIG_UPDATED", "EXPUNGE_FACES_ORG", "EXPUNGE_VEHICLES_ORG", "DEVICE_NETWORK_CONFIGURATION_CHANGE", "KIOSK_UPDATED", "KIOSK_DELETED", "KIOSK_CREATED", "UPDATE_APERIO_FIRMWARE", "UPDATE_INTEGRATION_APERIO", "DELETE_INTEGRATION_APERIO", "THIRD_PARTY_CAMERA_CREATE", "THIRD_PARTY_CAMERA_DELETE", "THIRD_PARTY_CAMERA_UPDATED", "THIRD_PARTY_CAMERA_ASSIGNED_TO_CORE", "THIRD_PARTY_CAMERA_ASSIGNED_TO_LITE", "THIRD_PARTY_CAMERA_UNASSIGNED", "THIRD_PARTY_CAMERA_PASSWORD_CREATE", "THIRD_PARTY_CAMERA_PASSWORD_DELTE", "CREATE_CHATBOT_CONFIG", "UPDATE_CHATBOT_CONFIG", "DELETE_CHATBOT_CONFIG", "UNKNOWN" ],
            "nullable" : true
          },
          "asi" : {
            "type" : "string",
            "nullable" : true
          },
          "clientType" : {
            "$ref" : "#/components/schemas/Client"
          },
          "displayText" : {
            "type" : "string",
            "description" : "Display text for the audit event",
            "example" : "User login successful",
            "nullable" : true
          },
          "failure" : {
            "type" : "boolean",
            "description" : "Whether the audit event represents a failure",
            "example" : false,
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "principalName" : {
            "type" : "string",
            "nullable" : true
          },
          "principalType" : {
            "type" : "string",
            "enum" : [ "USER", "DEVICE", "PARTNER", "RHOMBUS_SUPPORT", "API_TOKEN", "API_OAUTH_TOKEN", "SHARED_CLIP", "SHARED_STREAM", "SHARED_TIMELAPSE", "SHARED_VIDEOWALL", "KIOSK_CONSOLE", "UNKNOWN" ],
            "nullable" : true
          },
          "principalUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "selectiveUpdateStr" : {
            "type" : "string",
            "nullable" : true
          },
          "sourceCity" : {
            "type" : "string",
            "nullable" : true
          },
          "sourceCountry" : {
            "type" : "string",
            "nullable" : true
          },
          "sourceIp" : {
            "type" : "string",
            "nullable" : true
          },
          "sourceState" : {
            "type" : "string",
            "nullable" : true
          },
          "targetName" : {
            "type" : "string",
            "nullable" : true
          },
          "targetUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "timestamp" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "userAgent" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Report_GetAuditFeedForTargetWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting audit feed for a specific target.",
        "properties" : {
          "maxResults" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Max number of audit records to retrieve",
            "nullable" : true
          },
          "targetUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        },
        "required" : [ "targetUuid" ]
      },
      "Report_GetAuditFeedForTargetWSResponse" : {
        "type" : "object",
        "description" : "Response object for getting audit feed for a specific target.",
        "properties" : {
          "auditEvents" : {
            "type" : "array",
            "description" : "List of audit events for the target",
            "items" : {
              "$ref" : "#/components/schemas/Report_AuditEventWeb"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Report_GetAuditFeedWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting audit feed.",
        "properties" : {
          "excludeActions" : {
            "type" : "array",
            "description" : "If not empty, events with actions specified in the list are filtered out. If both include and exclude actions are specified, exclude actions are ignored.",
            "items" : {
              "type" : "string",
              "enum" : [ "THREAT_CASE_ESCALATED", "THREAT_CASE_CANCELLED", "THREAT_CASE_DISMISSED", "THREAT_CASE_DELETED", "THREAT_CASE_DELETE_BY_STATUS", "PIN_CREATED", "PIN_DELETED", "ALM_PIN_CREATE", "ALM_PIN_BULK_CREATE", "ALM_PIN_UPDATE", "ALM_PIN_ROTATE", "ALM_PIN_BULK_ROTATE", "ALM_PIN_DELETE", "BASIC_AUTH_SUCCESS", "BASIC_AUTH_FAILURE", "SAML_LOGIN_WEB", "LOGIN_WEB", "PASSWORDLESS_LOGIN_WEB", "PARTNER_LOGIN_WEB", "PARTNER_PASSWORDLESS_LOGIN_WEB", "SAML_LOGIN_FAILURE_WEB", "LOGIN_FAILURE_WEB", "RHOMBUS_KEY_LOGIN", "RHOMBUS_KEY_PASSWORDLESS_LOGIN", "RHOMBUS_KEY_SAML_LOGIN", "LOGOUT_WEB", "PARTNER_LOGOUT_WEB", "WEB_CONSOLE_ACCESS", "MOBILE_CONSOLE_ACCESS", "SAML_LOGIN_MOBILE", "PARTNER_LOGIN_MOBILE", "PARTNER_PASSWORDLESS_LOGIN_MOBILE", "LOGIN_MOBILE", "PASSWORDLESS_LOGIN_MOBILE", "SAML_LOGIN_FAILURE_MOBILE", "LOGIN_FAILURE_MOBILE", "LOGOUT_MOBILE", "PARTNER_LOGOUT_MOBILE", "MOBILE_ACCESS", "PARTNER_LOGIN_MOBIlE_REFRESH", "LOGIN_MOBIlE_REFRESH", "RHOMBUS_KEY_LOGIN_REFRESH", "CAMERA_WIFI_NETWORK_CHANGED", "CAMERA_FORCED_REBOOT", "AUDIO_GATEWAY_FORCED_REBOOT", "ENVIRONMENTAL_GATEWAY_FORCED_REBOOT", "DOORBELL_CAMERA_FORCED_REBOOT", "BADGE_READER_FORCED_REBOOT", "FIRMWARE_UPDATE_CAMERA", "DELETE_CAMERA", "DELETE_USER", "DELETE_LOCATION", "LOCATION_UPDATED", "DELETE_ROLE", "ERASE_CAMERA", "POLICY_UPDATE", "POLICY_DELETE", "POLICY_PAUSED_LOCATION", "POLICY_PAUSED_DEVICE", "POLICY_PAUSED_COMPONENT_COMPOSITE", "CREATE_POLICY_ADDENDUM", "DEVICE_REGISTERED", "DEVICE_UPDATE", "DEVICE_SETTINGS_UPDATE", "REVERT_TO_DEFAULTS", "DEVICE_FEATURE_UPDATE", "DEVICE_ORG_REASSIGN", "CLAIMKEY_RENEWAL_CREATED", "LICENSES_CLAIMED", "LICENSES_RETURNED", "LICENSE_ASSIGNED", "LICENSE_CREATED", "LICENSE_UPDATED", "USER_UPDATE", "USER_CREATE", "USER_IMPORT", "BULK_PROVISION_CREDENTIALS", "ROLE_CREATE", "POLICY_CREATE", "PARTNER_CLIENT_CREATE", "PARTNER_CUSTOMIZE_CLIENT", "PARTNER_CUSTOMIZE_CLIENT_DEVICE", "ORG_UPDATE", "DELETE_ORG", "DISABLE_ORG", "CREATE_ORG", "ROLE_UPDATE", "USER_ROLE_UPDATE", "USER_EMAIL_UPDATE", "TIMELAPSE_CREATE", "TIMELAPSE_DELETE", "ALERT_DISMISS", "ALL_ALERT_DISMISS", "SAVED_CLIP_CREATE", "SAVED_CLIP_DELETE", "CLIP_GROUP_CREATED", "CLIP_GROUP_DELETE", "SHARED_CLIP_DELETE", "SHARED_CLIP_CREATE", "SHARED_LINK_SENT", "SHARED_LIVE_VIDEO_STREAM_WITH_PASSWORD_CREATE", "SHARED_LIVE_VIDEO_STREAM_WITHOUT_PASSWORD_CREATE", "SHARED_LIVE_VIDEO_STREAM_DELETE", "SHARED_VIDEOWALL_WITH_PASSWORD_CREATE", "SHARED_VIDEOWALL_WITHOUT_PASSWORD_CREATE", "SHARED_VIDEOWALL_DELETE", "RAW_HTTP_STREAM_CREATED", "RAW_HTTP_STREAM_DELETED", "SETUP_VIRTUAL_MFA_DEVICE", "DELETE_VIRTUAL_MFA_DEVICE", "SETUP_SCIM_API_ACCESS", "REVOKE_SCIM_API_ACCESS", "AUDIT_EXPORT", "COUNT_EXPORT", "DIAGNOSTIC_EXPORT", "INVENTORY_EXPORT", "USERS_EXPORT", "UPTIME_EXPORT", "SUPPORT_TICKET_OPEN", "RMA_OPEN", "FEEDBACK_CREATE", "SUPPORT_ACCESS_GRANT", "SUPPORT_ACCESS_REVOKE", "SUPPORT_PARTNER_ADD", "SUPPORT_PARTNER_REMOVE", "SUPPORT_PARTNER_LOGIN_ACCESS_EXPIRED", "SUPPORT_SEARCH_TICKETS", "ACCEPT_UAP", "ACCEPT_RHOMBUS_UAP", "ACCEPT_ALERTMONITORING_UAP", "CREATE_SEEKPOINT", "DELETE_CUSTOM_SEEKPOINT", "UPDATE_INTEGRATION_SAML", "UPDATE_INTEGRATION_SLACK", "UPDATE_INTEGRATION_SLACK_V2", "DELETE_INTEGRATION_SLACK_V2", "UPDATE_INTEGRATION_BOX", "DELETE_INTEGRATION_BOX", "UPDATE_INTEGRATION_GOOGLE", "DELETE_INTEGRATION_GOOGLE", "UPDATE_INTEGRATION_GOOGLE_V2", "DELETE_INTEGRATION_GOOGLE_V2", "UPDATE_INTEGRATION_PAGERDUTY", "DELETE_INTEGRATION_PAGERDUTY", "UPDATE_INTEGRATION_SERVICENOW", "DELETE_INTEGRATION_SERVICENOW", "UPDATE_INTEGRATION_OFFICE365", "DELETE_INTEGRATION_OFFICE365", "UPDATE_INTEGRATION_DROPBOX", "DELETE_INTEGRATION_DROPBOX", "UPDATE_INTEGRATION_SQUARE", "DELETE_INTEGRATION_SQUARE", "UPDATE_INTEGRATION_AWS", "DELETE_INTEGRATION_AWS", "UPDATE_INTEGRATION_HALO", "DELETE_INTEGRATION_HALO", "UPDATE_INTEGRATION_WEBHOOK", "DELETE_INTEGRATION_WEBHOOK", "UPDATE_INTEGRATION_EMAIL", "DELETE_INTEGRATION_EMAIL", "UPDATE_INTEGRATION_MATTERMOST", "DELETE_INTEGRATION_MATTERMOST", "UPDATE_INTEGRATION_OPENPATH", "DELETE_INTEGRATION_OPENPATH", "UPDATE_INTEGRATION_AVIGILON_ALTA", "DELETE_INTEGRATION_AVIGILON_ALTA", "UPDATE_INTEGRATION_DICE", "DELETE_INTEGRATION_DICE", "UPDATE_INTEGRATION_LUMEO", "DELETE_INTEGRATION_LUMEO", "UPDATE_INTEGRATION_DEVICE", "DELETE_INTEGRATION_DEVICE", "UPDATE_INTEGRATION_GUESTMANAGEMENT", "DELETE_INTEGRATION_GUESTMANAGEMENT", "UPDATE_GUESTMANAGEMENT_SETTINGS", "DELETE_GUESTMANAGEMENT_SETTINGS", "INVITE_GUEST", "CREATE_GUEST", "CHECKIN_GUEST", "CHECKOUT_GUEST", "UPDATE_GUEST", "DELETE_GUEST", "ACTIVATE_KIOSK", "UPDATE_INTEGRATION_OMNIALERT", "DELETE_INTEGRATION_OMNIALERT", "UPDATE_INTEGRATION_OPENTECHALLIANCE", "DELETE_INTEGRATION_OPENTECHALLIANCE", "UPDATE_INTEGRATION_TOAST", "DELETE_INTEGRATION_TOAST", "UPDATE_INTEGRATION_KISI", "DELETE_INTEGRATION_KISI", "UPDATE_INTEGRATION_BRIVO", "DELETE_INTEGRATION_BRIVO", "UPDATE_INTEGRATION_BUTTERFLYMX", "DELETE_INTEGRATION_BUTTERFLYMX", "UPDATE_INTEGRATION_ENVOY", "DELETE_INTEGRATION_ENVOY", "CREATE_ENVOY_INVITE", "UPDATE_INTEGRATION_SALTO", "UPDATE_INTEGRATION_PDK", "DELETE_INTEGRATION_PDK", "UPDATE_INTEGRATION_GENEA", "DELETE_INTEGRATION_GENEA", "UPDATE_INTEGRATION_MICROSOFTTEAMS", "DELETE_INTEGRATION_MICROSOFTTEAMS", "UPDATE_INTEGRATION_AMT", "DELETE_INTEGRATION_AMT", "UPDATE_INTEGRATION_PLACEOS", "DELETE_INTEGRATION_PLACEOS", "UPDATE_INTEGRATION_INTUIFACE", "DELETE_INTEGRATION_INTUIFACE", "UPDATE_INTEGRATION_INFORMACAST", "DELETE_INTEGRATION_INFORMACAST", "UPDATE_INTEGRATION_INNERRANGE", "DELETE_INTEGRATION_INNERRANGE", "UPDATE_INTEGRATION_SHELLY", "DELETE_INTEGRATION_SHELLY", "UPDATE_INTEGRATION_FLIC", "DELETE_INTEGRATION_FLIC", "UPDATE_INTEGRATION_NINEONEONECELLULAR", "DELETE_INTEGRATION_NINEONEONECELLULAR", "UPDATE_INTEGRATION_PIMLOC", "DELETE_INTEGRATION_PIMLOC", "UPDATE_INTEGRATION_RAPTOR", "DELETE_INTEGRATION_RAPTOR", "UPDATE_INTEGRATION_LLM", "DELETE_INTEGRATION_LLM", "UPDATE_INTEGRATION_NOONLIGHT", "UPDATE_INTEGRATION_ALARM_MONITORING", "ENABLE_LIVE_ALARM_MONITORING", "ENABLE_LIVE_ALARM_MONITORING_LOCATION", "CREATE_ALARM_MONITORING_SETTINGS", "UPDATE_ALARM_MONITORING_SETTINGS", "DELETE_ALARM_MONITORING_SETTINGS", "ENABLE_ALARM_MONITORING_SETTINGS", "DISABLE_ALARM_MONITORING_SETTINGS", "REPORT_VEHICLE_EVENT", "API_TOKEN_REQUEST", "API_TOKEN_REVOKE", "API_INVOCATION", "API_OAUTH_TOKEN_REQUEST", "API_OAUTH_TOKEN_REFRESH", "API_OAUTH_TOKEN_REVOKE", "API_OAUTH_INVOCATION", "API_OAUTH_SUBMIT_APPLICATION", "API_OAUTH_UPDATE_APPLICATION", "API_OAUTH_DELETE_APPLICATION", "API_OAUTH_AUTHORIZE", "VIDEO_WALL_CREATE", "VIDEO_WALL_UPDATE", "VIDEO_WALL_DELETE", "VIEW_SHARE_TIMELAPSE", "VIEW_SHARE_CLIP", "VIEW_SHARE_STREAM", "VIEW_SHARE_VIDEOWALL", "VIEW_CAMERA_VOD", "CAMERA_POLICY_UPDATE", "CAMERA_POLICY_CREATE", "CAMERA_POLICY_DELETE", "TAG_POLICY_UPDATE", "TAG_POLICY_CREATE", "TAG_POLICY_DELETE", "CLIMATE_POLICY_UPDATE", "CLIMATE_POLICY_CREATE", "CLIMATE_POLICY_DELETE", "DOOR_POLICY_UPDATE", "DOOR_POLICY_CREATE", "DOOR_POLICY_DELETE", "DOOR_SCHEDULE_EXCEPTION_UPDATE", "DOOR_SCHEDULE_EXCEPTION_CREATE", "DOOR_SCHEDULE_EXCEPTION_DELETE", "ACCESS_CONTROLLED_DOOR_POLICY_UPDATE", "ACCESS_CONTROLLED_DOOR_POLICY_CREATE", "ACCESS_CONTROLLED_DOOR_POLICY_DELETE", "VIDEO_INTERCOM_POLICY_UPDATE", "VIDEO_INTERCOM_POLICY_CREATE", "VIDEO_INTERCOM_POLICY_DELETE", "OCCUPANCY_POLICY_UPDATE", "OCCUPANCY_POLICY_CREATE", "OCCUPANCY_POLICY_DELETE", "AUDIO_POLICY_UPDATE", "AUDIO_POLICY_CREATE", "AUDIO_POLICY_DELETE", "SCHEDULE_CREATE", "SCHEDULE_DELETE", "SCHEDULE_UPDATE", "CUSTOM_EVENT_CREATE", "CUSTOM_EVENT_DELETE", "CUSTOM_EVENT_UPDATE", "UPLOAD_FLOORPLAN", "ORG_AUDIO_RECORD_UPDATE", "ORG_AUDIO_ANALYSIS_UPDATE", "ORG_LLM_USAGE_UPDATE", "DOOR_ACCESS_UNLOCK", "RHOMBUS_KEY_DOOR_UNLOCK", "UPLOAD_ACCESS_CONTROLLED_DOOR", "UPLOAD_USER_PROFILE_PICTURE", "ACCESS_GRANT_CREATE", "ACCESS_GRANT_UPDATE", "ACCESS_GRANT_DELETE", "ACCESS_REVOCATION_CREATE", "ACCESS_REVOCATION_UPDATE", "ACCESS_REVOCATION_DELETE", "ACCESS_CONTROLLED_DOOR_CREATE", "ACCESS_CONTROLLED_DOOR_UPDATE", "ACCESS_CONTROLLED_DOOR_DELETE", "AC_CRED_RHOMBUS_SECURE_CSN_CREATE", "AC_CRED_RHOMBUS_SECURE_CSN_UPDATE", "AC_CRED_RHOMBUS_SECURE_CSN_DELETE", "AC_CRED_RHOMBUS_SECURE_CSN_REVOKED", "AC_CRED_STANDARD_CSN_CREATE", "AC_CRED_STANDARD_CSN_UPDATE", "AC_CRED_STANDARD_CSN_DELETE", "AC_CRED_STANDARD_CSN_REVOKED", "AC_CRED_RHOMBUS_SECURE_MOBILE_CREATE", "AC_CRED_RHOMBUS_SECURE_MOBILE_UPDATE", "AC_CRED_RHOMBUS_SECURE_MOBILE_DELETE", "AC_CRED_RHOMBUS_SECURE_MOBILE_REVOKED", "AC_CRED_PIN_CREATE", "AC_CRED_PIN_BULK_CREATE", "AC_CRED_PIN_UPDATE", "AC_CRED_PIN_ROTATE", "AC_CRED_PIN_BULK_ROTATE", "AC_CRED_PIN_DELETE", "AC_CRED_PIN_REVOKED", "AC_CRED_WIEGAND_CREATE", "AC_CRED_WIEGAND_UPDATE", "AC_CRED_WIEGAND_DELETE", "AC_CRED_WIEGAND_REVOKED", "AC_CRED_NOTE_UPDATE", "AC_LOCKDOWN_PLAN_CREATED", "AC_LOCKDOWN_PLAN_UPDATED", "AC_LOCKDOWN_PLAN_DELETED", "AC_LOCKDOWN_ACTIVATED", "AC_LOCKDOWN_DEACTIVATED", "AC_COMPONENT_POWER_CYCLE", "AC_DOOR_STATE_OVERRIDE_APPLIED", "AC_DOOR_STATE_OVERRIDE_CANCELLED", "SCIM_GET_ALL_USERS", "SCIM_POST_CREATE_USER", "SCIM_PUT_UPDATE_USER", "SCIM_PATCH_UPDATE_USER", "SCIM_GET_USER_BY_ID", "SCIM_DELETE_USER_BY_ID", "SCIM_GET_ALL_GROUPS", "SCIM_POST_CREATE_GROUP", "SCIM_PUT_UPDATE_GROUP", "SCIM_PATCH_UPDATE_GROUP", "SCIM_GET_GROUP_BY_ID", "SCIM_DELETE_GROUP_BY_ID", "CREATE_ACCESS_CONTROL_GROUP", "UPDATE_ACCESS_CONTROL_GROUP", "DELETE_ACCESS_CONTROL_GROUP", "RULE_CREATE", "RULE_DELETE", "RULE_UPDATE", "RULE_PAUSE", "UPLOAD_FACES", "UPDATE_FACE", "REPORT_FACE_EVENT", "FACE_EVENT_UPDATED", "FACE_EVENT_DELETED", "FACE_PERSON_CREATED", "FACE_PERSON_UPDATED", "FACE_PERSON_DELETED", "FACE_MATCHMAKER_CREATED", "FACE_MATCHMAKER_DELETED", "FACE_MATCHMAKER_UPLOADED", "FACE_MATCHING_CONFIG_UPDATED", "EXPUNGE_FACES_ORG", "EXPUNGE_VEHICLES_ORG", "DEVICE_NETWORK_CONFIGURATION_CHANGE", "KIOSK_UPDATED", "KIOSK_DELETED", "KIOSK_CREATED", "UPDATE_APERIO_FIRMWARE", "UPDATE_INTEGRATION_APERIO", "DELETE_INTEGRATION_APERIO", "THIRD_PARTY_CAMERA_CREATE", "THIRD_PARTY_CAMERA_DELETE", "THIRD_PARTY_CAMERA_UPDATED", "THIRD_PARTY_CAMERA_ASSIGNED_TO_CORE", "THIRD_PARTY_CAMERA_ASSIGNED_TO_LITE", "THIRD_PARTY_CAMERA_UNASSIGNED", "THIRD_PARTY_CAMERA_PASSWORD_CREATE", "THIRD_PARTY_CAMERA_PASSWORD_DELTE", "CREATE_CHATBOT_CONFIG", "UPDATE_CHATBOT_CONFIG", "DELETE_CHATBOT_CONFIG", "UNKNOWN" ],
              "nullable" : true
            },
            "maxItems" : 50,
            "nullable" : true
          },
          "includeActions" : {
            "type" : "array",
            "description" : "If not empty, only events with actions specified in the list are returned. If both include and exclude actions are specified, exclude actions are ignored. ",
            "items" : {
              "type" : "string",
              "enum" : [ "THREAT_CASE_ESCALATED", "THREAT_CASE_CANCELLED", "THREAT_CASE_DISMISSED", "THREAT_CASE_DELETED", "THREAT_CASE_DELETE_BY_STATUS", "PIN_CREATED", "PIN_DELETED", "ALM_PIN_CREATE", "ALM_PIN_BULK_CREATE", "ALM_PIN_UPDATE", "ALM_PIN_ROTATE", "ALM_PIN_BULK_ROTATE", "ALM_PIN_DELETE", "BASIC_AUTH_SUCCESS", "BASIC_AUTH_FAILURE", "SAML_LOGIN_WEB", "LOGIN_WEB", "PASSWORDLESS_LOGIN_WEB", "PARTNER_LOGIN_WEB", "PARTNER_PASSWORDLESS_LOGIN_WEB", "SAML_LOGIN_FAILURE_WEB", "LOGIN_FAILURE_WEB", "RHOMBUS_KEY_LOGIN", "RHOMBUS_KEY_PASSWORDLESS_LOGIN", "RHOMBUS_KEY_SAML_LOGIN", "LOGOUT_WEB", "PARTNER_LOGOUT_WEB", "WEB_CONSOLE_ACCESS", "MOBILE_CONSOLE_ACCESS", "SAML_LOGIN_MOBILE", "PARTNER_LOGIN_MOBILE", "PARTNER_PASSWORDLESS_LOGIN_MOBILE", "LOGIN_MOBILE", "PASSWORDLESS_LOGIN_MOBILE", "SAML_LOGIN_FAILURE_MOBILE", "LOGIN_FAILURE_MOBILE", "LOGOUT_MOBILE", "PARTNER_LOGOUT_MOBILE", "MOBILE_ACCESS", "PARTNER_LOGIN_MOBIlE_REFRESH", "LOGIN_MOBIlE_REFRESH", "RHOMBUS_KEY_LOGIN_REFRESH", "CAMERA_WIFI_NETWORK_CHANGED", "CAMERA_FORCED_REBOOT", "AUDIO_GATEWAY_FORCED_REBOOT", "ENVIRONMENTAL_GATEWAY_FORCED_REBOOT", "DOORBELL_CAMERA_FORCED_REBOOT", "BADGE_READER_FORCED_REBOOT", "FIRMWARE_UPDATE_CAMERA", "DELETE_CAMERA", "DELETE_USER", "DELETE_LOCATION", "LOCATION_UPDATED", "DELETE_ROLE", "ERASE_CAMERA", "POLICY_UPDATE", "POLICY_DELETE", "POLICY_PAUSED_LOCATION", "POLICY_PAUSED_DEVICE", "POLICY_PAUSED_COMPONENT_COMPOSITE", "CREATE_POLICY_ADDENDUM", "DEVICE_REGISTERED", "DEVICE_UPDATE", "DEVICE_SETTINGS_UPDATE", "REVERT_TO_DEFAULTS", "DEVICE_FEATURE_UPDATE", "DEVICE_ORG_REASSIGN", "CLAIMKEY_RENEWAL_CREATED", "LICENSES_CLAIMED", "LICENSES_RETURNED", "LICENSE_ASSIGNED", "LICENSE_CREATED", "LICENSE_UPDATED", "USER_UPDATE", "USER_CREATE", "USER_IMPORT", "BULK_PROVISION_CREDENTIALS", "ROLE_CREATE", "POLICY_CREATE", "PARTNER_CLIENT_CREATE", "PARTNER_CUSTOMIZE_CLIENT", "PARTNER_CUSTOMIZE_CLIENT_DEVICE", "ORG_UPDATE", "DELETE_ORG", "DISABLE_ORG", "CREATE_ORG", "ROLE_UPDATE", "USER_ROLE_UPDATE", "USER_EMAIL_UPDATE", "TIMELAPSE_CREATE", "TIMELAPSE_DELETE", "ALERT_DISMISS", "ALL_ALERT_DISMISS", "SAVED_CLIP_CREATE", "SAVED_CLIP_DELETE", "CLIP_GROUP_CREATED", "CLIP_GROUP_DELETE", "SHARED_CLIP_DELETE", "SHARED_CLIP_CREATE", "SHARED_LINK_SENT", "SHARED_LIVE_VIDEO_STREAM_WITH_PASSWORD_CREATE", "SHARED_LIVE_VIDEO_STREAM_WITHOUT_PASSWORD_CREATE", "SHARED_LIVE_VIDEO_STREAM_DELETE", "SHARED_VIDEOWALL_WITH_PASSWORD_CREATE", "SHARED_VIDEOWALL_WITHOUT_PASSWORD_CREATE", "SHARED_VIDEOWALL_DELETE", "RAW_HTTP_STREAM_CREATED", "RAW_HTTP_STREAM_DELETED", "SETUP_VIRTUAL_MFA_DEVICE", "DELETE_VIRTUAL_MFA_DEVICE", "SETUP_SCIM_API_ACCESS", "REVOKE_SCIM_API_ACCESS", "AUDIT_EXPORT", "COUNT_EXPORT", "DIAGNOSTIC_EXPORT", "INVENTORY_EXPORT", "USERS_EXPORT", "UPTIME_EXPORT", "SUPPORT_TICKET_OPEN", "RMA_OPEN", "FEEDBACK_CREATE", "SUPPORT_ACCESS_GRANT", "SUPPORT_ACCESS_REVOKE", "SUPPORT_PARTNER_ADD", "SUPPORT_PARTNER_REMOVE", "SUPPORT_PARTNER_LOGIN_ACCESS_EXPIRED", "SUPPORT_SEARCH_TICKETS", "ACCEPT_UAP", "ACCEPT_RHOMBUS_UAP", "ACCEPT_ALERTMONITORING_UAP", "CREATE_SEEKPOINT", "DELETE_CUSTOM_SEEKPOINT", "UPDATE_INTEGRATION_SAML", "UPDATE_INTEGRATION_SLACK", "UPDATE_INTEGRATION_SLACK_V2", "DELETE_INTEGRATION_SLACK_V2", "UPDATE_INTEGRATION_BOX", "DELETE_INTEGRATION_BOX", "UPDATE_INTEGRATION_GOOGLE", "DELETE_INTEGRATION_GOOGLE", "UPDATE_INTEGRATION_GOOGLE_V2", "DELETE_INTEGRATION_GOOGLE_V2", "UPDATE_INTEGRATION_PAGERDUTY", "DELETE_INTEGRATION_PAGERDUTY", "UPDATE_INTEGRATION_SERVICENOW", "DELETE_INTEGRATION_SERVICENOW", "UPDATE_INTEGRATION_OFFICE365", "DELETE_INTEGRATION_OFFICE365", "UPDATE_INTEGRATION_DROPBOX", "DELETE_INTEGRATION_DROPBOX", "UPDATE_INTEGRATION_SQUARE", "DELETE_INTEGRATION_SQUARE", "UPDATE_INTEGRATION_AWS", "DELETE_INTEGRATION_AWS", "UPDATE_INTEGRATION_HALO", "DELETE_INTEGRATION_HALO", "UPDATE_INTEGRATION_WEBHOOK", "DELETE_INTEGRATION_WEBHOOK", "UPDATE_INTEGRATION_EMAIL", "DELETE_INTEGRATION_EMAIL", "UPDATE_INTEGRATION_MATTERMOST", "DELETE_INTEGRATION_MATTERMOST", "UPDATE_INTEGRATION_OPENPATH", "DELETE_INTEGRATION_OPENPATH", "UPDATE_INTEGRATION_AVIGILON_ALTA", "DELETE_INTEGRATION_AVIGILON_ALTA", "UPDATE_INTEGRATION_DICE", "DELETE_INTEGRATION_DICE", "UPDATE_INTEGRATION_LUMEO", "DELETE_INTEGRATION_LUMEO", "UPDATE_INTEGRATION_DEVICE", "DELETE_INTEGRATION_DEVICE", "UPDATE_INTEGRATION_GUESTMANAGEMENT", "DELETE_INTEGRATION_GUESTMANAGEMENT", "UPDATE_GUESTMANAGEMENT_SETTINGS", "DELETE_GUESTMANAGEMENT_SETTINGS", "INVITE_GUEST", "CREATE_GUEST", "CHECKIN_GUEST", "CHECKOUT_GUEST", "UPDATE_GUEST", "DELETE_GUEST", "ACTIVATE_KIOSK", "UPDATE_INTEGRATION_OMNIALERT", "DELETE_INTEGRATION_OMNIALERT", "UPDATE_INTEGRATION_OPENTECHALLIANCE", "DELETE_INTEGRATION_OPENTECHALLIANCE", "UPDATE_INTEGRATION_TOAST", "DELETE_INTEGRATION_TOAST", "UPDATE_INTEGRATION_KISI", "DELETE_INTEGRATION_KISI", "UPDATE_INTEGRATION_BRIVO", "DELETE_INTEGRATION_BRIVO", "UPDATE_INTEGRATION_BUTTERFLYMX", "DELETE_INTEGRATION_BUTTERFLYMX", "UPDATE_INTEGRATION_ENVOY", "DELETE_INTEGRATION_ENVOY", "CREATE_ENVOY_INVITE", "UPDATE_INTEGRATION_SALTO", "UPDATE_INTEGRATION_PDK", "DELETE_INTEGRATION_PDK", "UPDATE_INTEGRATION_GENEA", "DELETE_INTEGRATION_GENEA", "UPDATE_INTEGRATION_MICROSOFTTEAMS", "DELETE_INTEGRATION_MICROSOFTTEAMS", "UPDATE_INTEGRATION_AMT", "DELETE_INTEGRATION_AMT", "UPDATE_INTEGRATION_PLACEOS", "DELETE_INTEGRATION_PLACEOS", "UPDATE_INTEGRATION_INTUIFACE", "DELETE_INTEGRATION_INTUIFACE", "UPDATE_INTEGRATION_INFORMACAST", "DELETE_INTEGRATION_INFORMACAST", "UPDATE_INTEGRATION_INNERRANGE", "DELETE_INTEGRATION_INNERRANGE", "UPDATE_INTEGRATION_SHELLY", "DELETE_INTEGRATION_SHELLY", "UPDATE_INTEGRATION_FLIC", "DELETE_INTEGRATION_FLIC", "UPDATE_INTEGRATION_NINEONEONECELLULAR", "DELETE_INTEGRATION_NINEONEONECELLULAR", "UPDATE_INTEGRATION_PIMLOC", "DELETE_INTEGRATION_PIMLOC", "UPDATE_INTEGRATION_RAPTOR", "DELETE_INTEGRATION_RAPTOR", "UPDATE_INTEGRATION_LLM", "DELETE_INTEGRATION_LLM", "UPDATE_INTEGRATION_NOONLIGHT", "UPDATE_INTEGRATION_ALARM_MONITORING", "ENABLE_LIVE_ALARM_MONITORING", "ENABLE_LIVE_ALARM_MONITORING_LOCATION", "CREATE_ALARM_MONITORING_SETTINGS", "UPDATE_ALARM_MONITORING_SETTINGS", "DELETE_ALARM_MONITORING_SETTINGS", "ENABLE_ALARM_MONITORING_SETTINGS", "DISABLE_ALARM_MONITORING_SETTINGS", "REPORT_VEHICLE_EVENT", "API_TOKEN_REQUEST", "API_TOKEN_REVOKE", "API_INVOCATION", "API_OAUTH_TOKEN_REQUEST", "API_OAUTH_TOKEN_REFRESH", "API_OAUTH_TOKEN_REVOKE", "API_OAUTH_INVOCATION", "API_OAUTH_SUBMIT_APPLICATION", "API_OAUTH_UPDATE_APPLICATION", "API_OAUTH_DELETE_APPLICATION", "API_OAUTH_AUTHORIZE", "VIDEO_WALL_CREATE", "VIDEO_WALL_UPDATE", "VIDEO_WALL_DELETE", "VIEW_SHARE_TIMELAPSE", "VIEW_SHARE_CLIP", "VIEW_SHARE_STREAM", "VIEW_SHARE_VIDEOWALL", "VIEW_CAMERA_VOD", "CAMERA_POLICY_UPDATE", "CAMERA_POLICY_CREATE", "CAMERA_POLICY_DELETE", "TAG_POLICY_UPDATE", "TAG_POLICY_CREATE", "TAG_POLICY_DELETE", "CLIMATE_POLICY_UPDATE", "CLIMATE_POLICY_CREATE", "CLIMATE_POLICY_DELETE", "DOOR_POLICY_UPDATE", "DOOR_POLICY_CREATE", "DOOR_POLICY_DELETE", "DOOR_SCHEDULE_EXCEPTION_UPDATE", "DOOR_SCHEDULE_EXCEPTION_CREATE", "DOOR_SCHEDULE_EXCEPTION_DELETE", "ACCESS_CONTROLLED_DOOR_POLICY_UPDATE", "ACCESS_CONTROLLED_DOOR_POLICY_CREATE", "ACCESS_CONTROLLED_DOOR_POLICY_DELETE", "VIDEO_INTERCOM_POLICY_UPDATE", "VIDEO_INTERCOM_POLICY_CREATE", "VIDEO_INTERCOM_POLICY_DELETE", "OCCUPANCY_POLICY_UPDATE", "OCCUPANCY_POLICY_CREATE", "OCCUPANCY_POLICY_DELETE", "AUDIO_POLICY_UPDATE", "AUDIO_POLICY_CREATE", "AUDIO_POLICY_DELETE", "SCHEDULE_CREATE", "SCHEDULE_DELETE", "SCHEDULE_UPDATE", "CUSTOM_EVENT_CREATE", "CUSTOM_EVENT_DELETE", "CUSTOM_EVENT_UPDATE", "UPLOAD_FLOORPLAN", "ORG_AUDIO_RECORD_UPDATE", "ORG_AUDIO_ANALYSIS_UPDATE", "ORG_LLM_USAGE_UPDATE", "DOOR_ACCESS_UNLOCK", "RHOMBUS_KEY_DOOR_UNLOCK", "UPLOAD_ACCESS_CONTROLLED_DOOR", "UPLOAD_USER_PROFILE_PICTURE", "ACCESS_GRANT_CREATE", "ACCESS_GRANT_UPDATE", "ACCESS_GRANT_DELETE", "ACCESS_REVOCATION_CREATE", "ACCESS_REVOCATION_UPDATE", "ACCESS_REVOCATION_DELETE", "ACCESS_CONTROLLED_DOOR_CREATE", "ACCESS_CONTROLLED_DOOR_UPDATE", "ACCESS_CONTROLLED_DOOR_DELETE", "AC_CRED_RHOMBUS_SECURE_CSN_CREATE", "AC_CRED_RHOMBUS_SECURE_CSN_UPDATE", "AC_CRED_RHOMBUS_SECURE_CSN_DELETE", "AC_CRED_RHOMBUS_SECURE_CSN_REVOKED", "AC_CRED_STANDARD_CSN_CREATE", "AC_CRED_STANDARD_CSN_UPDATE", "AC_CRED_STANDARD_CSN_DELETE", "AC_CRED_STANDARD_CSN_REVOKED", "AC_CRED_RHOMBUS_SECURE_MOBILE_CREATE", "AC_CRED_RHOMBUS_SECURE_MOBILE_UPDATE", "AC_CRED_RHOMBUS_SECURE_MOBILE_DELETE", "AC_CRED_RHOMBUS_SECURE_MOBILE_REVOKED", "AC_CRED_PIN_CREATE", "AC_CRED_PIN_BULK_CREATE", "AC_CRED_PIN_UPDATE", "AC_CRED_PIN_ROTATE", "AC_CRED_PIN_BULK_ROTATE", "AC_CRED_PIN_DELETE", "AC_CRED_PIN_REVOKED", "AC_CRED_WIEGAND_CREATE", "AC_CRED_WIEGAND_UPDATE", "AC_CRED_WIEGAND_DELETE", "AC_CRED_WIEGAND_REVOKED", "AC_CRED_NOTE_UPDATE", "AC_LOCKDOWN_PLAN_CREATED", "AC_LOCKDOWN_PLAN_UPDATED", "AC_LOCKDOWN_PLAN_DELETED", "AC_LOCKDOWN_ACTIVATED", "AC_LOCKDOWN_DEACTIVATED", "AC_COMPONENT_POWER_CYCLE", "AC_DOOR_STATE_OVERRIDE_APPLIED", "AC_DOOR_STATE_OVERRIDE_CANCELLED", "SCIM_GET_ALL_USERS", "SCIM_POST_CREATE_USER", "SCIM_PUT_UPDATE_USER", "SCIM_PATCH_UPDATE_USER", "SCIM_GET_USER_BY_ID", "SCIM_DELETE_USER_BY_ID", "SCIM_GET_ALL_GROUPS", "SCIM_POST_CREATE_GROUP", "SCIM_PUT_UPDATE_GROUP", "SCIM_PATCH_UPDATE_GROUP", "SCIM_GET_GROUP_BY_ID", "SCIM_DELETE_GROUP_BY_ID", "CREATE_ACCESS_CONTROL_GROUP", "UPDATE_ACCESS_CONTROL_GROUP", "DELETE_ACCESS_CONTROL_GROUP", "RULE_CREATE", "RULE_DELETE", "RULE_UPDATE", "RULE_PAUSE", "UPLOAD_FACES", "UPDATE_FACE", "REPORT_FACE_EVENT", "FACE_EVENT_UPDATED", "FACE_EVENT_DELETED", "FACE_PERSON_CREATED", "FACE_PERSON_UPDATED", "FACE_PERSON_DELETED", "FACE_MATCHMAKER_CREATED", "FACE_MATCHMAKER_DELETED", "FACE_MATCHMAKER_UPLOADED", "FACE_MATCHING_CONFIG_UPDATED", "EXPUNGE_FACES_ORG", "EXPUNGE_VEHICLES_ORG", "DEVICE_NETWORK_CONFIGURATION_CHANGE", "KIOSK_UPDATED", "KIOSK_DELETED", "KIOSK_CREATED", "UPDATE_APERIO_FIRMWARE", "UPDATE_INTEGRATION_APERIO", "DELETE_INTEGRATION_APERIO", "THIRD_PARTY_CAMERA_CREATE", "THIRD_PARTY_CAMERA_DELETE", "THIRD_PARTY_CAMERA_UPDATED", "THIRD_PARTY_CAMERA_ASSIGNED_TO_CORE", "THIRD_PARTY_CAMERA_ASSIGNED_TO_LITE", "THIRD_PARTY_CAMERA_UNASSIGNED", "THIRD_PARTY_CAMERA_PASSWORD_CREATE", "THIRD_PARTY_CAMERA_PASSWORD_DELTE", "CREATE_CHATBOT_CONFIG", "UPDATE_CHATBOT_CONFIG", "DELETE_CHATBOT_CONFIG", "UNKNOWN" ],
              "nullable" : true
            },
            "maxItems" : 50,
            "nullable" : true
          },
          "timestampMsAfter" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Timestamp in milliseconds after which to get audit events",
            "example" : 1640995200000,
            "nullable" : true
          },
          "timestampMsBefore" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Timestamp in milliseconds before which to get audit events",
            "example" : 1640998800000,
            "nullable" : true
          }
        }
      },
      "Report_GetAuditFeedWSResponse" : {
        "type" : "object",
        "description" : "Response object for getting audit feed.",
        "properties" : {
          "auditEvents" : {
            "type" : "array",
            "description" : "List of audit events",
            "items" : {
              "$ref" : "#/components/schemas/Report_AuditEventWeb"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Report_GetAverageReportWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting average reports.",
        "properties" : {
          "endDate" : {
            "type" : "string",
            "description" : "End date for the report",
            "example" : "2024-01-31",
            "nullable" : true
          },
          "interval" : {
            "type" : "string",
            "description" : "Time interval for the report",
            "enum" : [ "MINUTELY", "QUARTERHOURLY", "HOURLY", "DAILY", "WEEKLY", "MONTHLY" ],
            "nullable" : true
          },
          "scope" : {
            "type" : "string",
            "description" : "Scope of the report",
            "enum" : [ "REGION", "DEVICE", "LOCATION", "ORG" ],
            "nullable" : true
          },
          "startDate" : {
            "type" : "string",
            "description" : "Start date for the report",
            "example" : "2024-01-01",
            "nullable" : true
          },
          "type" : {
            "type" : "string",
            "description" : "Type of report to get",
            "enum" : [ "CROWD", "PEOPLE", "FACES", "MOTION", "BANDWIDTH", "VEHICLES", "LICENSEPLATES", "ALERTS", "AM_VERIFICATION", "DWELL" ],
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Report_GetAverageReportWSResponse" : {
        "type" : "object",
        "description" : "Response object for getting average reports.",
        "properties" : {
          "average" : {
            "type" : "number",
            "format" : "double",
            "description" : "Overall average value",
            "example" : 15.5,
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "groupAverageMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "number",
              "format" : "double",
              "description" : "Map of group IDs to their average values",
              "nullable" : true
            },
            "description" : "Map of group IDs to their average values",
            "nullable" : true
          }
        }
      },
      "Report_GetAverageReportsWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting average reports.",
        "properties" : {
          "endDate" : {
            "type" : "string",
            "description" : "End date for the report",
            "example" : "2024-01-31",
            "nullable" : true
          },
          "interval" : {
            "type" : "string",
            "description" : "Time interval for the report",
            "enum" : [ "MINUTELY", "QUARTERHOURLY", "HOURLY", "DAILY", "WEEKLY", "MONTHLY" ],
            "nullable" : true
          },
          "scope" : {
            "type" : "string",
            "description" : "Scope of the report",
            "enum" : [ "REGION", "DEVICE", "LOCATION", "ORG" ],
            "nullable" : true
          },
          "startDate" : {
            "type" : "string",
            "description" : "Start date for the report",
            "example" : "2024-01-01",
            "nullable" : true
          },
          "type" : {
            "type" : "string",
            "description" : "Type of report to get",
            "enum" : [ "CROWD", "PEOPLE", "FACES", "MOTION", "BANDWIDTH", "VEHICLES", "LICENSEPLATES", "ALERTS", "AM_VERIFICATION", "DWELL" ],
            "nullable" : true
          }
        }
      },
      "Report_GetAverageReportsWSResponse" : {
        "type" : "object",
        "description" : "Response object for getting average reports.",
        "properties" : {
          "averageMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "number",
              "format" : "double",
              "description" : "Map of UUIDs to their average values",
              "nullable" : true
            },
            "description" : "Map of UUIDs to their average values",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "groupAverageMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "number",
                "format" : "double",
                "description" : "Map of UUIDs to their group average maps",
                "nullable" : true
              },
              "description" : "Map of UUIDs to their group average maps",
              "nullable" : true
            },
            "description" : "Map of UUIDs to their group average maps",
            "nullable" : true
          }
        }
      },
      "Report_GetCountReportV2WSRequest" : {
        "type" : "object",
        "description" : "Request object for getting count reports V2.",
        "properties" : {
          "endDate" : {
            "type" : "string",
            "deprecated" : true,
            "description" : "Deprecated input, use endTimeMs instead",
            "nullable" : true
          },
          "endTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "End datetime provided as a UNIX timestamp in milliseconds",
            "minimum" : 0,
            "nullable" : true
          },
          "interval" : {
            "type" : "string",
            "description" : "Time intervals to get reports for",
            "enum" : [ "MINUTELY", "QUARTERHOURLY", "HOURLY", "DAILY", "WEEKLY", "MONTHLY" ],
            "nullable" : true
          },
          "scope" : {
            "type" : "string",
            "description" : "Level of granularity to get reports for",
            "enum" : [ "REGION", "DEVICE", "LOCATION", "ORG" ],
            "nullable" : true
          },
          "startDate" : {
            "type" : "string",
            "deprecated" : true,
            "description" : "Deprecated input, use startTimeMs instead",
            "nullable" : true
          },
          "startTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start datetime provided as a UNIX timestamp in milliseconds",
            "minimum" : 0,
            "nullable" : true
          },
          "types" : {
            "type" : "array",
            "description" : "Types of reports to receive",
            "items" : {
              "type" : "string",
              "description" : "Types of reports to receive",
              "enum" : [ "CROWD", "PEOPLE", "FACES", "MOTION", "BANDWIDTH", "VEHICLES", "LICENSEPLATES", "ALERTS", "AM_VERIFICATION", "DWELL" ],
              "nullable" : true
            },
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        },
        "required" : [ "interval", "scope", "types" ]
      },
      "Report_GetCountReportWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting count reports.",
        "properties" : {
          "endDate" : {
            "type" : "string",
            "description" : "End date for the report",
            "example" : "2024-01-31",
            "nullable" : true
          },
          "interval" : {
            "type" : "string",
            "description" : "Time interval for the report",
            "enum" : [ "MINUTELY", "QUARTERHOURLY", "HOURLY", "DAILY", "WEEKLY", "MONTHLY" ],
            "nullable" : true
          },
          "scope" : {
            "type" : "string",
            "description" : "Scope of the report",
            "enum" : [ "REGION", "DEVICE", "LOCATION", "ORG" ],
            "nullable" : true
          },
          "startDate" : {
            "type" : "string",
            "description" : "Start date for the report",
            "example" : "2024-01-01",
            "nullable" : true
          },
          "type" : {
            "type" : "string",
            "description" : "Type of report to get",
            "enum" : [ "CROWD", "PEOPLE", "FACES", "MOTION", "BANDWIDTH", "VEHICLES", "LICENSEPLATES", "ALERTS", "AM_VERIFICATION", "DWELL" ],
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Report_GetCountReportWSResponse" : {
        "type" : "object",
        "description" : "Response object for getting count reports.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "timeSeriesDataPoints" : {
            "type" : "array",
            "description" : "List of time series data points for count report",
            "items" : {
              "$ref" : "#/components/schemas/TimeSeriesDataPointV2Type"
            },
            "nullable" : true
          }
        }
      },
      "Report_GetCountReportsForDevicesAtLocationWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting count reports for devices at a specific location.",
        "properties" : {
          "endTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "End timestamp in epoch milliseconds.",
            "minimum" : 0,
            "nullable" : true
          },
          "interval" : {
            "type" : "string",
            "description" : "Level of granularity with which event counts are grouped.",
            "enum" : [ "MINUTELY", "QUARTERHOURLY", "HOURLY", "DAILY", "WEEKLY", "MONTHLY" ],
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "startTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start timestamp in epoch milliseconds.",
            "minimum" : 0,
            "nullable" : true
          },
          "type" : {
            "type" : "string",
            "description" : "Type of event to get counts for.",
            "enum" : [ "CROWD", "PEOPLE", "FACES", "MOTION", "BANDWIDTH", "VEHICLES", "LICENSEPLATES", "ALERTS", "AM_VERIFICATION", "DWELL" ],
            "nullable" : true
          }
        },
        "required" : [ "endTimeMs", "interval", "locationUuid", "startTimeMs", "type" ]
      },
      "Report_GetCountReportsWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting count reports.",
        "properties" : {
          "endDate" : {
            "type" : "string",
            "deprecated" : true,
            "description" : "Deprecated input, use endTimeMs instead",
            "nullable" : true
          },
          "endTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "End datetime provided as a UNIX timestamp in milliseconds",
            "minimum" : 0,
            "nullable" : true
          },
          "interval" : {
            "type" : "string",
            "description" : "Time intervals to get reports for",
            "enum" : [ "MINUTELY", "QUARTERHOURLY", "HOURLY", "DAILY", "WEEKLY", "MONTHLY" ],
            "nullable" : true
          },
          "scope" : {
            "type" : "string",
            "description" : "Level of granularity to get reports for, supports DEVICE and LOCATION",
            "enum" : [ "REGION", "DEVICE", "LOCATION", "ORG" ],
            "nullable" : true
          },
          "startDate" : {
            "type" : "string",
            "deprecated" : true,
            "description" : "Deprecated input, use startTimeMs instead",
            "nullable" : true
          },
          "startTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start datetime provided as a UNIX timestamp in milliseconds",
            "minimum" : 0,
            "nullable" : true
          },
          "type" : {
            "type" : "string",
            "description" : "Type of reports to receive",
            "enum" : [ "CROWD", "PEOPLE", "FACES", "MOTION", "BANDWIDTH", "VEHICLES", "LICENSEPLATES", "ALERTS", "AM_VERIFICATION", "DWELL" ],
            "nullable" : true
          }
        },
        "required" : [ "interval", "scope", "type" ]
      },
      "Report_GetCountReportsWSResponse" : {
        "type" : "object",
        "description" : "Response object for getting count reports.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "timeSeriesDataPointsMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "description" : "Map of UUIDs to their time series data points",
              "items" : {
                "$ref" : "#/components/schemas/TimeSeriesDataPointV2Type"
              },
              "nullable" : true
            },
            "description" : "Map of UUIDs to their time series data points",
            "nullable" : true
          }
        }
      },
      "Report_GetCustomLLMNumericWSResponse" : {
        "type" : "object",
        "description" : "Response object for custom LLM numeric reports.",
        "nullable" : true,
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "reports" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "description" : "Map of numeric count reports",
              "items" : {
                "$ref" : "#/components/schemas/NumericAggregationValue"
              },
              "nullable" : true
            },
            "description" : "Map of numeric count reports",
            "nullable" : true
          }
        }
      },
      "Report_GetCustomLLMReportWSRequest" : {
        "type" : "object",
        "description" : "Request object for custom LLM reports.",
        "properties" : {
          "deviceFacetUuids" : {
            "type" : "array",
            "description" : "Uuids of the selected devices",
            "items" : {
              "type" : "string",
              "format" : "DeviceFacetUuid",
              "description" : "RUUID with optional appended facet information",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "endTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The end timestamp (in Unix epoch milliseconds) of the selected interval",
            "example" : 1640998800000,
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "promptUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "startTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The start timestamp (in Unix epoch milliseconds) of the selected interval",
            "example" : 1640995200000,
            "nullable" : true
          }
        }
      },
      "Report_GetCustomLLMReportWSResponse" : {
        "type" : "object",
        "description" : "Response object for custom LLM reports.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "timeSeriesDataPoints" : {
            "type" : "array",
            "description" : "List of time series data points",
            "items" : {
              "$ref" : "#/components/schemas/SceneQueryReport"
            },
            "nullable" : true
          }
        }
      },
      "Report_GetCustomLLMWBinaryWSResponse" : {
        "type" : "object",
        "description" : "Response object for custom LLM binary reports.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "reports" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "description" : "Map of binary count reports",
              "items" : {
                "$ref" : "#/components/schemas/BinaryAggregationValue"
              },
              "nullable" : true
            },
            "description" : "Map of binary count reports",
            "nullable" : true
          }
        }
      },
      "Report_GetCustomLLMWSRequest" : {
        "type" : "object",
        "description" : "Request object for custom LLM reports.",
        "properties" : {
          "endTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The end timestamp (in Unix epoch milliseconds) of the selected interval",
            "example" : 1640998800000,
            "nullable" : true
          },
          "interval" : {
            "type" : "string",
            "description" : "The interval defines the granularity at which the results will be reported",
            "enum" : [ "MINUTELY", "QUARTERHOURLY", "HOURLY", "DAILY", "WEEKLY", "MONTHLY" ],
            "nullable" : true
          },
          "promptUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "startTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The start timestamp (in Unix epoch milliseconds) of the selected interval",
            "example" : 1640995200000,
            "nullable" : true
          }
        }
      },
      "Report_GetDiagnosticFeedWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting diagnostic feed.",
        "properties" : {
          "timestampMsAfter" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Timestamp in milliseconds after which to get diagnostic events",
            "example" : 1640995200000,
            "nullable" : true
          },
          "timestampMsBefore" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Timestamp in milliseconds before which to get diagnostic events",
            "example" : 1640998800000,
            "nullable" : true
          }
        }
      },
      "Report_GetDiagnosticFeedWSResponse" : {
        "type" : "object",
        "description" : "Response object for getting diagnostic feed.",
        "properties" : {
          "diagnosticEvents" : {
            "type" : "array",
            "description" : "List of diagnostic events",
            "items" : {
              "$ref" : "#/components/schemas/DiagnosticEventType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Report_GetLicensePlatesByDeviceWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting license plates by device.",
        "properties" : {
          "dateLocal" : {
            "type" : "string",
            "deprecated" : true,
            "description" : "Deprecated input, use timestampMs instead",
            "nullable" : true
          },
          "deviceUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          },
          "interval" : {
            "type" : "string",
            "description" : "Supports HOURLY, DAILY, WEEKLY, and MONTHLY",
            "enum" : [ "MINUTELY", "QUARTERHOURLY", "HOURLY", "DAILY", "WEEKLY", "MONTHLY" ],
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Datetime provided as a UNIX timestamp in milliseconds",
            "minimum" : 0,
            "nullable" : true
          }
        },
        "required" : [ "deviceUuid", "interval" ]
      },
      "Report_GetLicensePlatesByDeviceWSResponse" : {
        "type" : "object",
        "description" : "Response object for getting license plates by device.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "licensePlateEvents" : {
            "type" : "array",
            "description" : "List of license plate events",
            "items" : {
              "$ref" : "#/components/schemas/VehicleEventIndexType"
            },
            "nullable" : true
          }
        }
      },
      "Report_GetMostRecentPeopleCountWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting most recent people count.",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          },
          "numMostRecent" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Number of most recent people counts to retrieve",
            "example" : 10,
            "nullable" : true
          }
        }
      },
      "Report_GetMostRecentPeopleCountWSResponse" : {
        "type" : "object",
        "description" : "Response object for getting most recent people count.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "events" : {
            "type" : "array",
            "description" : "List of people count events",
            "items" : {
              "$ref" : "#/components/schemas/PeopleCountEventType"
            },
            "nullable" : true
          }
        }
      },
      "Report_GetOccupancyCountWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting occupancy count from a device.",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          },
          "endMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "End time in milliseconds",
            "example" : 1640998800000,
            "nullable" : true
          },
          "startMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start time in milliseconds",
            "example" : 1640995200000,
            "nullable" : true
          }
        }
      },
      "Report_GetOccupancyCountWSResponse" : {
        "type" : "object",
        "description" : "Response object for getting occupancy count from a device.",
        "properties" : {
          "approximateTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Approximate timestamp in milliseconds when the count was estimated",
            "example" : 1640995200000,
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "estimatedCount" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Estimated occupancy count",
            "example" : 15,
            "nullable" : true
          }
        }
      },
      "Report_GetOccupancyCountsWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting occupancy counts from a device.",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          },
          "endTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The end timestamp (in Unix epoch milliseconds) of the selected interval",
            "example" : 1640998800000,
            "nullable" : true
          },
          "interval" : {
            "type" : "string",
            "description" : "The interval defines the granularity at which the results will be reported",
            "enum" : [ "MINUTELY", "QUARTERHOURLY", "HOURLY", "DAILY", "WEEKLY", "MONTHLY" ],
            "nullable" : true
          },
          "startTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The start timestamp (in Unix epoch milliseconds) of the selected interval",
            "example" : 1640995200000,
            "nullable" : true
          }
        }
      },
      "Report_GetOccupancyCountsWSResponse" : {
        "type" : "object",
        "description" : "Response object for getting occupancy counts from a device.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "timeSeriesDataPoints" : {
            "type" : "array",
            "description" : "List of time series data points with occupancy counts",
            "items" : {
              "$ref" : "#/components/schemas/Report_TimeSeriesDataPointV2ExtendedType"
            },
            "nullable" : true
          }
        }
      },
      "Report_GetProximityTagLocationsByDateWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting proximity tag locations by date.",
        "properties" : {
          "endDateStr" : {
            "type" : "string",
            "deprecated" : true,
            "description" : "Deprecated input, use endTimeMs instead",
            "nullable" : true
          },
          "endTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "End datetime provided as a UNIX timestamp in milliseconds",
            "minimum" : 0,
            "nullable" : true
          },
          "startDateStr" : {
            "type" : "string",
            "deprecated" : true,
            "description" : "Deprecated input, use startTimeMs instead",
            "nullable" : true
          },
          "startTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start datetime provided as a UNIX timestamp in milliseconds",
            "minimum" : 0,
            "nullable" : true
          },
          "tagUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        },
        "required" : [ "tagUuid" ]
      },
      "Report_GetProximityTagLocationsByDateWSResponse" : {
        "type" : "object",
        "description" : "Response object for getting proximity tag locations by date.",
        "properties" : {
          "dataPoints" : {
            "type" : "array",
            "description" : "List of proximity tag time series data points",
            "items" : {
              "$ref" : "#/components/schemas/ProximityTagTimeSeriesDataPointType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Report_GetRunningAverageWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting running average statistics.",
        "properties" : {
          "endDate" : {
            "type" : "string",
            "deprecated" : true,
            "description" : "Deprecated input, use endTimeMs instead",
            "nullable" : true
          },
          "endTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "End datetime provided as a UNIX timestamp in milliseconds",
            "minimum" : 0,
            "nullable" : true
          },
          "interval" : {
            "type" : "string",
            "description" : "Supports HOURLY, DAILY, WEEKLY, and MONTHLY, returns averages for hours of the interval selected",
            "enum" : [ "MINUTELY", "QUARTERHOURLY", "HOURLY", "DAILY", "WEEKLY", "MONTHLY" ],
            "nullable" : true
          },
          "scope" : {
            "type" : "string",
            "description" : "Level of granularity to get statistics for",
            "enum" : [ "REGION", "DEVICE", "LOCATION", "ORG" ],
            "nullable" : true
          },
          "startDate" : {
            "type" : "string",
            "deprecated" : true,
            "description" : "Deprecated input, use startTimeMs instead",
            "nullable" : true
          },
          "startTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start datetime provided as a UNIX timestamp in milliseconds",
            "minimum" : 0,
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        },
        "required" : [ "interval", "scope" ]
      },
      "Report_GetRunningAverageWSResponse" : {
        "type" : "object",
        "description" : "Response object for getting running average statistics.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "statsDataPoints" : {
            "type" : "array",
            "description" : "List of weekly statistics data points",
            "items" : {
              "$ref" : "#/components/schemas/WeeklyStatisticsDataPoint"
            },
            "nullable" : true
          }
        }
      },
      "Report_GetSummaryCountReportWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting summary count reports.",
        "properties" : {
          "endDate" : {
            "type" : "string",
            "deprecated" : true,
            "description" : "Deprecated input, use endTimeMs instead",
            "nullable" : true
          },
          "endTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "End datetime provided as a UNIX timestamp in milliseconds",
            "minimum" : 0,
            "nullable" : true
          },
          "interval" : {
            "type" : "string",
            "description" : "Time interval to get data for",
            "enum" : [ "MINUTELY", "QUARTERHOURLY", "HOURLY", "DAILY", "WEEKLY", "MONTHLY" ],
            "nullable" : true
          },
          "scope" : {
            "type" : "string",
            "description" : "Level of granularity to get reports for",
            "enum" : [ "REGION", "DEVICE", "LOCATION", "ORG" ],
            "nullable" : true
          },
          "startDate" : {
            "type" : "string",
            "deprecated" : true,
            "description" : "Deprecated input, use startTimeMs instead",
            "nullable" : true
          },
          "startTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start datetime provided as a UNIX timestamp in milliseconds",
            "minimum" : 0,
            "nullable" : true
          },
          "type" : {
            "type" : "string",
            "description" : "Type of report to receive",
            "enum" : [ "CROWD", "PEOPLE", "FACES", "MOTION", "BANDWIDTH", "VEHICLES", "LICENSEPLATES", "ALERTS", "AM_VERIFICATION", "DWELL" ],
            "nullable" : true
          }
        },
        "required" : [ "interval", "scope", "type" ]
      },
      "Report_GetSummaryCountReportWSResponse" : {
        "type" : "object",
        "description" : "Response object for getting summary count reports.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "timeSeriesDataPoints" : {
            "type" : "array",
            "description" : "List of summary count time series data points",
            "items" : {
              "$ref" : "#/components/schemas/SummaryCountTimeSeriesDataPointType"
            },
            "nullable" : true
          }
        }
      },
      "Report_GetThresholdCrossingCountReportWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting threshold crossing count reports.",
        "properties" : {
          "bucketSize" : {
            "type" : "string",
            "description" : "Size of the report buckets",
            "enum" : [ "QUARTER_HOUR", "HOUR", "DAY", "WEEK", "MONTH" ],
            "nullable" : true
          },
          "crossingObject" : {
            "type" : "string",
            "description" : "Type of crossing object to count",
            "enum" : [ "HUMAN", "VEHICLE", "FACE", "LPR", "POSE", "CLIP_EMBED", "UNKNOWN" ],
            "nullable" : true
          },
          "dedupe" : {
            "type" : "boolean",
            "description" : "Whether to deduplicate the results",
            "example" : true,
            "nullable" : true
          },
          "deviceUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          },
          "endTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "End time in milliseconds",
            "example" : 1640998800000,
            "nullable" : true
          },
          "startTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start time in milliseconds",
            "example" : 1640995200000,
            "nullable" : true
          }
        }
      },
      "Report_GetThresholdCrossingCountReportWSResponse" : {
        "type" : "object",
        "description" : "Response object for getting threshold crossing count reports.",
        "properties" : {
          "crossingCounts" : {
            "type" : "array",
            "description" : "List of crossing counts",
            "items" : {
              "$ref" : "#/components/schemas/CrossingCountsType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Report_GetThresholdCrossingCountsWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting threshold crossing counts.",
        "properties" : {
          "crossingObject" : {
            "type" : "string",
            "description" : "Type of crossing object to count",
            "enum" : [ "HUMAN", "VEHICLE", "FACE", "LPR", "POSE", "CLIP_EMBED", "UNKNOWN" ],
            "nullable" : true
          },
          "dailyResetTimeMinute" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Daily reset time in minutes",
            "example" : 0,
            "nullable" : true
          },
          "devices" : {
            "type" : "array",
            "description" : "List of device UUIDs to get threshold crossing counts for",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          },
          "endTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "End time in milliseconds",
            "example" : 1640998800000,
            "nullable" : true
          },
          "startTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start time in milliseconds",
            "example" : 1640995200000,
            "nullable" : true
          }
        }
      },
      "Report_GetThresholdCrossingCountsWSResponse" : {
        "type" : "object",
        "description" : "Response object for getting threshold crossing counts.",
        "properties" : {
          "counts" : {
            "type" : "array",
            "description" : "List of threshold crossing counts",
            "items" : {
              "$ref" : "#/components/schemas/Report_GetThresholdCrossingCountsWSResponse_ThresholdCrossingCountType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Report_GetThresholdCrossingCountsWSResponse_ThresholdCrossingCountType" : {
        "type" : "object",
        "description" : "Threshold crossing count data point.",
        "properties" : {
          "count" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Count of threshold crossings",
            "example" : 5,
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Timestamp in milliseconds",
            "example" : 1640995200000,
            "nullable" : true
          }
        }
      },
      "Report_GetThresholdCrossingEventsForDeviceWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting threshold crossing events for a specific device.",
        "properties" : {
          "crossingObject" : {
            "type" : "string",
            "description" : "Type of crossing object for events returned, ie HUMAN/VEHICLE, defaults to all types if null",
            "enum" : [ "HUMAN", "VEHICLE", "FACE", "LPR", "POSE", "CLIP_EMBED", "UNKNOWN" ],
            "nullable" : true
          },
          "deviceUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          },
          "endTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "End timestamp of query period in epoch MS",
            "example" : 1640998800000,
            "nullable" : true
          },
          "lastEvaluatedKey" : {
            "type" : "string",
            "description" : "Should be null on first request and populated on subsequent requests if provided in the response to retrieve the next page",
            "nullable" : true
          },
          "maxPageSize" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Max number of results to return. Response's lastEvaluatedKey will be null if no additional results are available",
            "example" : 100,
            "nullable" : true
          },
          "startTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start timestamp of query period in epoch MS",
            "example" : 1640995200000,
            "nullable" : true
          }
        }
      },
      "Report_GetThresholdCrossingEventsForDeviceWSResponse" : {
        "type" : "object",
        "description" : "Response object for getting threshold crossing events for a specific device.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "lastEvaluatedKey" : {
            "type" : "string",
            "description" : "If a max page size was specified and there are additional results that can be retrieved this will be non-null and should be supplied in the next request to retrieve the next page of results",
            "nullable" : true
          },
          "thresholdCrossingEvents" : {
            "type" : "array",
            "description" : "List of threshold crossing events for the device",
            "items" : {
              "$ref" : "#/components/schemas/MinimalThresholdEventType"
            },
            "nullable" : true
          }
        }
      },
      "Report_GetThresholdCrossingEventsWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting threshold crossing events.",
        "properties" : {
          "crossingObject" : {
            "type" : "string",
            "description" : "Type of crossing object to get events for",
            "enum" : [ "HUMAN", "VEHICLE", "FACE", "LPR", "POSE", "CLIP_EMBED", "UNKNOWN" ],
            "nullable" : true
          },
          "devices" : {
            "type" : "array",
            "description" : "List of device UUIDs to get threshold crossing events for",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          },
          "endTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "End time in milliseconds",
            "example" : 1640998800000,
            "nullable" : true
          },
          "startTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start time in milliseconds",
            "example" : 1640995200000,
            "nullable" : true
          }
        }
      },
      "Report_GetThresholdCrossingEventsWSResponse" : {
        "type" : "object",
        "description" : "Response object for getting threshold crossing events.",
        "properties" : {
          "deviceToThresholdCrossingEventMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "description" : "Map of device UUIDs to their threshold crossing events",
              "items" : {
                "$ref" : "#/components/schemas/MinimalThresholdEventType"
              },
              "nullable" : true
            },
            "description" : "Map of device UUIDs to their threshold crossing events",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Report_ResetRunningAverageWSRequest" : {
        "type" : "object",
        "description" : "Request object for resetting running average.",
        "properties" : {
          "scope" : {
            "type" : "string",
            "description" : "Scope of the report to reset",
            "enum" : [ "REGION", "DEVICE", "LOCATION", "ORG" ],
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Report_ResetRunningAverageWSResponse" : {
        "type" : "object",
        "description" : "Response object for resetting running average.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Report_TimeSeriesDataPointV2ExtendedType" : {
        "type" : "object",
        "description" : "Extended time series data point with additional timestamp information.",
        "properties" : {
          "approximateTimestampMsMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int64",
              "description" : "A mapping of timestamps (in Unix epoch milliseconds) that indicate, for each type and interval, the point in time where the aggregated occupancy count is closest to the occupancy observed in the corresponding video segment",
              "nullable" : true
            },
            "description" : "A mapping of timestamps (in Unix epoch milliseconds) that indicate, for each type and interval, the point in time where the aggregated occupancy count is closest to the occupancy observed in the corresponding video segment",
            "nullable" : true
          },
          "dateLocal" : {
            "type" : "string",
            "nullable" : true
          },
          "dateUtc" : {
            "type" : "string",
            "nullable" : true
          },
          "eventCountMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The representative timestamp (in Unix epoch milliseconds) for the interval",
            "example" : 1640995200000,
            "nullable" : true
          }
        }
      },
      "RequestToExitEnumType" : {
        "type" : "string",
        "enum" : [ "integrated", "remote" ]
      },
      "RequestToExitPhysicalPortEnumType" : {
        "type" : "string",
        "enum" : [ "GPIO_INPUT", "GPIO_INPUT_SUPERVISED" ]
      },
      "RequestToExitPortType" : {
        "type" : "object",
        "properties" : {
          "boardNum" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "portNum" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "portType" : {
            "$ref" : "#/components/schemas/RequestToExitPhysicalPortEnumType"
          },
          "supervisionConfiguration" : {
            "$ref" : "#/components/schemas/PortSupervisionConfigurationType"
          }
        }
      },
      "RequestToExitShadowType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "state" : {
              "$ref" : "#/components/schemas/RequestToExitStateEnumType"
            },
            "stateUpdateEventTimestampMs" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "supervisionState" : {
              "$ref" : "#/components/schemas/SupervisionStateEnumType"
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentShadowEnumType"
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "RequestToExitStateChangeEventType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "componentCompositeUuid" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "intentOnly" : {
              "type" : "boolean",
              "nullable" : true
            },
            "newState" : {
              "$ref" : "#/components/schemas/RequestToExitStateEnumType"
            },
            "newSupervisionState" : {
              "$ref" : "#/components/schemas/SupervisionStateEnumType"
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "correlationId" : {
            "type" : "string",
            "nullable" : true
          },
          "createdAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEventEnumType"
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "RequestToExitStateEnumType" : {
        "type" : "string",
        "enum" : [ "ACTIVE", "INACTIVE", "UNKNOWN" ]
      },
      "Resolution" : {
        "type" : "object",
        "properties" : {
          "height" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "width" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "Response" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "allowedMethods" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "closed" : {
            "type" : "boolean",
            "nullable" : true
          },
          "cookies" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/NewCookie"
            },
            "nullable" : true
          },
          "date" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "entity" : {
            "type" : "object",
            "nullable" : true
          },
          "entityTag" : {
            "$ref" : "#/components/schemas/EntityTag"
          },
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "nullable" : true
              },
              "nullable" : true
            },
            "nullable" : true,
            "properties" : {
              "empty" : {
                "type" : "boolean",
                "nullable" : true
              }
            }
          },
          "language" : {
            "type" : "object",
            "nullable" : true,
            "properties" : {
              "country" : {
                "type" : "string",
                "nullable" : true
              },
              "displayCountry" : {
                "type" : "string",
                "nullable" : true
              },
              "displayLanguage" : {
                "type" : "string",
                "nullable" : true
              },
              "displayName" : {
                "type" : "string",
                "nullable" : true
              },
              "displayScript" : {
                "type" : "string",
                "nullable" : true
              },
              "displayVariant" : {
                "type" : "string",
                "nullable" : true
              },
              "extensionKeys" : {
                "type" : "array",
                "items" : {
                  "type" : "string",
                  "nullable" : true
                },
                "nullable" : true,
                "uniqueItems" : true
              },
              "iso3Country" : {
                "type" : "string",
                "nullable" : true
              },
              "iso3Language" : {
                "type" : "string",
                "nullable" : true
              },
              "language" : {
                "type" : "string",
                "nullable" : true
              },
              "script" : {
                "type" : "string",
                "nullable" : true
              },
              "unicodeLocaleAttributes" : {
                "type" : "array",
                "items" : {
                  "type" : "string",
                  "nullable" : true
                },
                "nullable" : true,
                "uniqueItems" : true
              },
              "unicodeLocaleKeys" : {
                "type" : "array",
                "items" : {
                  "type" : "string",
                  "nullable" : true
                },
                "nullable" : true,
                "uniqueItems" : true
              },
              "variant" : {
                "type" : "string",
                "nullable" : true
              }
            }
          },
          "lastModified" : {
            "type" : "string",
            "format" : "date-time",
            "nullable" : true
          },
          "length" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "links" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Link"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "location" : {
            "type" : "string",
            "format" : "uri",
            "nullable" : true
          },
          "mediaType" : {
            "$ref" : "#/components/schemas/MediaType"
          },
          "metadata" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "nullable" : true
              },
              "nullable" : true
            },
            "nullable" : true,
            "properties" : {
              "empty" : {
                "type" : "boolean",
                "nullable" : true
              }
            }
          },
          "status" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "statusInfo" : {
            "$ref" : "#/components/schemas/StatusType"
          },
          "stringHeaders" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "nullable" : true
              },
              "nullable" : true
            },
            "nullable" : true,
            "properties" : {
              "empty" : {
                "type" : "boolean",
                "nullable" : true
              }
            }
          }
        }
      },
      "ResponseEntity" : {
        "type" : "object",
        "properties" : {
          "body" : {
            "type" : "object",
            "nullable" : true
          },
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "nullable" : true
              },
              "nullable" : true
            },
            "nullable" : true,
            "properties" : {
              "accept" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/MediaType"
                },
                "nullable" : true
              },
              "acceptCharset" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "nullable" : true,
                  "properties" : {
                    "registered" : {
                      "type" : "boolean",
                      "nullable" : true
                    }
                  }
                },
                "nullable" : true
              },
              "acceptLanguage" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "nullable" : true,
                  "properties" : {
                    "range" : {
                      "type" : "string",
                      "nullable" : true
                    },
                    "weight" : {
                      "type" : "number",
                      "format" : "double",
                      "nullable" : true
                    }
                  }
                },
                "nullable" : true
              },
              "acceptLanguageAsLocales" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "nullable" : true,
                  "properties" : {
                    "country" : {
                      "type" : "string",
                      "nullable" : true
                    },
                    "displayCountry" : {
                      "type" : "string",
                      "nullable" : true
                    },
                    "displayLanguage" : {
                      "type" : "string",
                      "nullable" : true
                    },
                    "displayName" : {
                      "type" : "string",
                      "nullable" : true
                    },
                    "displayScript" : {
                      "type" : "string",
                      "nullable" : true
                    },
                    "displayVariant" : {
                      "type" : "string",
                      "nullable" : true
                    },
                    "extensionKeys" : {
                      "type" : "array",
                      "items" : {
                        "type" : "string",
                        "nullable" : true
                      },
                      "nullable" : true,
                      "uniqueItems" : true
                    },
                    "iso3Country" : {
                      "type" : "string",
                      "nullable" : true
                    },
                    "iso3Language" : {
                      "type" : "string",
                      "nullable" : true
                    },
                    "language" : {
                      "type" : "string",
                      "nullable" : true
                    },
                    "script" : {
                      "type" : "string",
                      "nullable" : true
                    },
                    "unicodeLocaleAttributes" : {
                      "type" : "array",
                      "items" : {
                        "type" : "string",
                        "nullable" : true
                      },
                      "nullable" : true,
                      "uniqueItems" : true
                    },
                    "unicodeLocaleKeys" : {
                      "type" : "array",
                      "items" : {
                        "type" : "string",
                        "nullable" : true
                      },
                      "nullable" : true,
                      "uniqueItems" : true
                    },
                    "variant" : {
                      "type" : "string",
                      "nullable" : true
                    }
                  }
                },
                "nullable" : true
              },
              "acceptPatch" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/MediaType"
                },
                "nullable" : true
              },
              "accessControlAllowCredentials" : {
                "type" : "boolean",
                "nullable" : true
              },
              "accessControlAllowHeaders" : {
                "type" : "array",
                "items" : {
                  "type" : "string",
                  "nullable" : true
                },
                "nullable" : true
              },
              "accessControlAllowMethods" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/HttpMethod"
                },
                "nullable" : true
              },
              "accessControlAllowOrigin" : {
                "type" : "string",
                "nullable" : true
              },
              "accessControlExposeHeaders" : {
                "type" : "array",
                "items" : {
                  "type" : "string",
                  "nullable" : true
                },
                "nullable" : true
              },
              "accessControlMaxAge" : {
                "type" : "integer",
                "format" : "int64",
                "nullable" : true
              },
              "accessControlRequestHeaders" : {
                "type" : "array",
                "items" : {
                  "type" : "string",
                  "nullable" : true
                },
                "nullable" : true
              },
              "accessControlRequestMethod" : {
                "$ref" : "#/components/schemas/HttpMethod"
              },
              "all" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "string",
                  "nullable" : true
                },
                "nullable" : true,
                "writeOnly" : true
              },
              "allow" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/HttpMethod"
                },
                "nullable" : true,
                "uniqueItems" : true
              },
              "basicAuth" : {
                "type" : "string",
                "nullable" : true,
                "writeOnly" : true
              },
              "bearerAuth" : {
                "type" : "string",
                "nullable" : true,
                "writeOnly" : true
              },
              "cacheControl" : {
                "type" : "string",
                "nullable" : true
              },
              "connection" : {
                "type" : "array",
                "items" : {
                  "type" : "string",
                  "nullable" : true
                },
                "nullable" : true
              },
              "contentDisposition" : {
                "$ref" : "#/components/schemas/ContentDisposition"
              },
              "contentLanguage" : {
                "type" : "object",
                "nullable" : true,
                "properties" : {
                  "country" : {
                    "type" : "string",
                    "nullable" : true
                  },
                  "displayCountry" : {
                    "type" : "string",
                    "nullable" : true
                  },
                  "displayLanguage" : {
                    "type" : "string",
                    "nullable" : true
                  },
                  "displayName" : {
                    "type" : "string",
                    "nullable" : true
                  },
                  "displayScript" : {
                    "type" : "string",
                    "nullable" : true
                  },
                  "displayVariant" : {
                    "type" : "string",
                    "nullable" : true
                  },
                  "extensionKeys" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string",
                      "nullable" : true
                    },
                    "nullable" : true,
                    "uniqueItems" : true
                  },
                  "iso3Country" : {
                    "type" : "string",
                    "nullable" : true
                  },
                  "iso3Language" : {
                    "type" : "string",
                    "nullable" : true
                  },
                  "language" : {
                    "type" : "string",
                    "nullable" : true
                  },
                  "script" : {
                    "type" : "string",
                    "nullable" : true
                  },
                  "unicodeLocaleAttributes" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string",
                      "nullable" : true
                    },
                    "nullable" : true,
                    "uniqueItems" : true
                  },
                  "unicodeLocaleKeys" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string",
                      "nullable" : true
                    },
                    "nullable" : true,
                    "uniqueItems" : true
                  },
                  "variant" : {
                    "type" : "string",
                    "nullable" : true
                  }
                }
              },
              "contentLength" : {
                "type" : "integer",
                "format" : "int64",
                "nullable" : true
              },
              "contentType" : {
                "$ref" : "#/components/schemas/MediaType"
              },
              "date" : {
                "type" : "integer",
                "format" : "int64",
                "nullable" : true
              },
              "empty" : {
                "type" : "boolean",
                "nullable" : true
              },
              "etag" : {
                "type" : "string",
                "nullable" : true
              },
              "expires" : {
                "type" : "integer",
                "format" : "int64",
                "nullable" : true
              },
              "host" : {
                "type" : "object",
                "nullable" : true,
                "properties" : {
                  "address" : {
                    "type" : "object",
                    "nullable" : true,
                    "properties" : {
                      "address" : {
                        "type" : "array",
                        "items" : {
                          "type" : "string",
                          "format" : "byte",
                          "nullable" : true
                        },
                        "nullable" : true
                      },
                      "anyLocalAddress" : {
                        "type" : "boolean",
                        "nullable" : true
                      },
                      "canonicalHostName" : {
                        "type" : "string",
                        "nullable" : true
                      },
                      "hostAddress" : {
                        "type" : "string",
                        "nullable" : true
                      },
                      "hostName" : {
                        "type" : "string",
                        "nullable" : true
                      },
                      "linkLocalAddress" : {
                        "type" : "boolean",
                        "nullable" : true
                      },
                      "loopbackAddress" : {
                        "type" : "boolean",
                        "nullable" : true
                      },
                      "mcglobal" : {
                        "type" : "boolean",
                        "nullable" : true
                      },
                      "mclinkLocal" : {
                        "type" : "boolean",
                        "nullable" : true
                      },
                      "mcnodeLocal" : {
                        "type" : "boolean",
                        "nullable" : true
                      },
                      "mcorgLocal" : {
                        "type" : "boolean",
                        "nullable" : true
                      },
                      "mcsiteLocal" : {
                        "type" : "boolean",
                        "nullable" : true
                      },
                      "multicastAddress" : {
                        "type" : "boolean",
                        "nullable" : true
                      },
                      "siteLocalAddress" : {
                        "type" : "boolean",
                        "nullable" : true
                      }
                    }
                  },
                  "hostName" : {
                    "type" : "string",
                    "nullable" : true
                  },
                  "hostString" : {
                    "type" : "string",
                    "nullable" : true
                  },
                  "port" : {
                    "type" : "integer",
                    "format" : "int32",
                    "nullable" : true
                  },
                  "unresolved" : {
                    "type" : "boolean",
                    "nullable" : true
                  }
                }
              },
              "ifMatch" : {
                "type" : "array",
                "items" : {
                  "type" : "string",
                  "nullable" : true
                },
                "nullable" : true
              },
              "ifModifiedSince" : {
                "type" : "integer",
                "format" : "int64",
                "nullable" : true
              },
              "ifNoneMatch" : {
                "type" : "array",
                "items" : {
                  "type" : "string",
                  "nullable" : true
                },
                "nullable" : true
              },
              "ifUnmodifiedSince" : {
                "type" : "integer",
                "format" : "int64",
                "nullable" : true
              },
              "lastModified" : {
                "type" : "integer",
                "format" : "int64",
                "nullable" : true
              },
              "location" : {
                "type" : "string",
                "format" : "uri",
                "nullable" : true
              },
              "origin" : {
                "type" : "string",
                "nullable" : true
              },
              "pragma" : {
                "type" : "string",
                "nullable" : true
              },
              "range" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/HttpRange"
                },
                "nullable" : true
              },
              "upgrade" : {
                "type" : "string",
                "nullable" : true
              },
              "vary" : {
                "type" : "array",
                "items" : {
                  "type" : "string",
                  "nullable" : true
                },
                "nullable" : true
              }
            }
          },
          "statusCode" : {
            "$ref" : "#/components/schemas/HttpStatusCode"
          },
          "statusCodeValue" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "ResponseEntityString" : {
        "type" : "object",
        "properties" : {
          "body" : {
            "type" : "string",
            "nullable" : true
          },
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "nullable" : true
              },
              "nullable" : true
            },
            "nullable" : true,
            "properties" : {
              "accept" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/MediaType"
                },
                "nullable" : true
              },
              "acceptCharset" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "nullable" : true,
                  "properties" : {
                    "registered" : {
                      "type" : "boolean",
                      "nullable" : true
                    }
                  }
                },
                "nullable" : true
              },
              "acceptLanguage" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "nullable" : true,
                  "properties" : {
                    "range" : {
                      "type" : "string",
                      "nullable" : true
                    },
                    "weight" : {
                      "type" : "number",
                      "format" : "double",
                      "nullable" : true
                    }
                  }
                },
                "nullable" : true
              },
              "acceptLanguageAsLocales" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "nullable" : true,
                  "properties" : {
                    "country" : {
                      "type" : "string",
                      "nullable" : true
                    },
                    "displayCountry" : {
                      "type" : "string",
                      "nullable" : true
                    },
                    "displayLanguage" : {
                      "type" : "string",
                      "nullable" : true
                    },
                    "displayName" : {
                      "type" : "string",
                      "nullable" : true
                    },
                    "displayScript" : {
                      "type" : "string",
                      "nullable" : true
                    },
                    "displayVariant" : {
                      "type" : "string",
                      "nullable" : true
                    },
                    "extensionKeys" : {
                      "type" : "array",
                      "items" : {
                        "type" : "string",
                        "nullable" : true
                      },
                      "nullable" : true,
                      "uniqueItems" : true
                    },
                    "iso3Country" : {
                      "type" : "string",
                      "nullable" : true
                    },
                    "iso3Language" : {
                      "type" : "string",
                      "nullable" : true
                    },
                    "language" : {
                      "type" : "string",
                      "nullable" : true
                    },
                    "script" : {
                      "type" : "string",
                      "nullable" : true
                    },
                    "unicodeLocaleAttributes" : {
                      "type" : "array",
                      "items" : {
                        "type" : "string",
                        "nullable" : true
                      },
                      "nullable" : true,
                      "uniqueItems" : true
                    },
                    "unicodeLocaleKeys" : {
                      "type" : "array",
                      "items" : {
                        "type" : "string",
                        "nullable" : true
                      },
                      "nullable" : true,
                      "uniqueItems" : true
                    },
                    "variant" : {
                      "type" : "string",
                      "nullable" : true
                    }
                  }
                },
                "nullable" : true
              },
              "acceptPatch" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/MediaType"
                },
                "nullable" : true
              },
              "accessControlAllowCredentials" : {
                "type" : "boolean",
                "nullable" : true
              },
              "accessControlAllowHeaders" : {
                "type" : "array",
                "items" : {
                  "type" : "string",
                  "nullable" : true
                },
                "nullable" : true
              },
              "accessControlAllowMethods" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/HttpMethod"
                },
                "nullable" : true
              },
              "accessControlAllowOrigin" : {
                "type" : "string",
                "nullable" : true
              },
              "accessControlExposeHeaders" : {
                "type" : "array",
                "items" : {
                  "type" : "string",
                  "nullable" : true
                },
                "nullable" : true
              },
              "accessControlMaxAge" : {
                "type" : "integer",
                "format" : "int64",
                "nullable" : true
              },
              "accessControlRequestHeaders" : {
                "type" : "array",
                "items" : {
                  "type" : "string",
                  "nullable" : true
                },
                "nullable" : true
              },
              "accessControlRequestMethod" : {
                "$ref" : "#/components/schemas/HttpMethod"
              },
              "all" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "string",
                  "nullable" : true
                },
                "nullable" : true,
                "writeOnly" : true
              },
              "allow" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/HttpMethod"
                },
                "nullable" : true,
                "uniqueItems" : true
              },
              "basicAuth" : {
                "type" : "string",
                "nullable" : true,
                "writeOnly" : true
              },
              "bearerAuth" : {
                "type" : "string",
                "nullable" : true,
                "writeOnly" : true
              },
              "cacheControl" : {
                "type" : "string",
                "nullable" : true
              },
              "connection" : {
                "type" : "array",
                "items" : {
                  "type" : "string",
                  "nullable" : true
                },
                "nullable" : true
              },
              "contentDisposition" : {
                "$ref" : "#/components/schemas/ContentDisposition"
              },
              "contentLanguage" : {
                "type" : "object",
                "nullable" : true,
                "properties" : {
                  "country" : {
                    "type" : "string",
                    "nullable" : true
                  },
                  "displayCountry" : {
                    "type" : "string",
                    "nullable" : true
                  },
                  "displayLanguage" : {
                    "type" : "string",
                    "nullable" : true
                  },
                  "displayName" : {
                    "type" : "string",
                    "nullable" : true
                  },
                  "displayScript" : {
                    "type" : "string",
                    "nullable" : true
                  },
                  "displayVariant" : {
                    "type" : "string",
                    "nullable" : true
                  },
                  "extensionKeys" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string",
                      "nullable" : true
                    },
                    "nullable" : true,
                    "uniqueItems" : true
                  },
                  "iso3Country" : {
                    "type" : "string",
                    "nullable" : true
                  },
                  "iso3Language" : {
                    "type" : "string",
                    "nullable" : true
                  },
                  "language" : {
                    "type" : "string",
                    "nullable" : true
                  },
                  "script" : {
                    "type" : "string",
                    "nullable" : true
                  },
                  "unicodeLocaleAttributes" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string",
                      "nullable" : true
                    },
                    "nullable" : true,
                    "uniqueItems" : true
                  },
                  "unicodeLocaleKeys" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string",
                      "nullable" : true
                    },
                    "nullable" : true,
                    "uniqueItems" : true
                  },
                  "variant" : {
                    "type" : "string",
                    "nullable" : true
                  }
                }
              },
              "contentLength" : {
                "type" : "integer",
                "format" : "int64",
                "nullable" : true
              },
              "contentType" : {
                "$ref" : "#/components/schemas/MediaType"
              },
              "date" : {
                "type" : "integer",
                "format" : "int64",
                "nullable" : true
              },
              "empty" : {
                "type" : "boolean",
                "nullable" : true
              },
              "etag" : {
                "type" : "string",
                "nullable" : true
              },
              "expires" : {
                "type" : "integer",
                "format" : "int64",
                "nullable" : true
              },
              "host" : {
                "type" : "object",
                "nullable" : true,
                "properties" : {
                  "address" : {
                    "type" : "object",
                    "nullable" : true,
                    "properties" : {
                      "address" : {
                        "type" : "array",
                        "items" : {
                          "type" : "string",
                          "format" : "byte",
                          "nullable" : true
                        },
                        "nullable" : true
                      },
                      "anyLocalAddress" : {
                        "type" : "boolean",
                        "nullable" : true
                      },
                      "canonicalHostName" : {
                        "type" : "string",
                        "nullable" : true
                      },
                      "hostAddress" : {
                        "type" : "string",
                        "nullable" : true
                      },
                      "hostName" : {
                        "type" : "string",
                        "nullable" : true
                      },
                      "linkLocalAddress" : {
                        "type" : "boolean",
                        "nullable" : true
                      },
                      "loopbackAddress" : {
                        "type" : "boolean",
                        "nullable" : true
                      },
                      "mcglobal" : {
                        "type" : "boolean",
                        "nullable" : true
                      },
                      "mclinkLocal" : {
                        "type" : "boolean",
                        "nullable" : true
                      },
                      "mcnodeLocal" : {
                        "type" : "boolean",
                        "nullable" : true
                      },
                      "mcorgLocal" : {
                        "type" : "boolean",
                        "nullable" : true
                      },
                      "mcsiteLocal" : {
                        "type" : "boolean",
                        "nullable" : true
                      },
                      "multicastAddress" : {
                        "type" : "boolean",
                        "nullable" : true
                      },
                      "siteLocalAddress" : {
                        "type" : "boolean",
                        "nullable" : true
                      }
                    }
                  },
                  "hostName" : {
                    "type" : "string",
                    "nullable" : true
                  },
                  "hostString" : {
                    "type" : "string",
                    "nullable" : true
                  },
                  "port" : {
                    "type" : "integer",
                    "format" : "int32",
                    "nullable" : true
                  },
                  "unresolved" : {
                    "type" : "boolean",
                    "nullable" : true
                  }
                }
              },
              "ifMatch" : {
                "type" : "array",
                "items" : {
                  "type" : "string",
                  "nullable" : true
                },
                "nullable" : true
              },
              "ifModifiedSince" : {
                "type" : "integer",
                "format" : "int64",
                "nullable" : true
              },
              "ifNoneMatch" : {
                "type" : "array",
                "items" : {
                  "type" : "string",
                  "nullable" : true
                },
                "nullable" : true
              },
              "ifUnmodifiedSince" : {
                "type" : "integer",
                "format" : "int64",
                "nullable" : true
              },
              "lastModified" : {
                "type" : "integer",
                "format" : "int64",
                "nullable" : true
              },
              "location" : {
                "type" : "string",
                "format" : "uri",
                "nullable" : true
              },
              "origin" : {
                "type" : "string",
                "nullable" : true
              },
              "pragma" : {
                "type" : "string",
                "nullable" : true
              },
              "range" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/HttpRange"
                },
                "nullable" : true
              },
              "upgrade" : {
                "type" : "string",
                "nullable" : true
              },
              "vary" : {
                "type" : "array",
                "items" : {
                  "type" : "string",
                  "nullable" : true
                },
                "nullable" : true
              }
            }
          },
          "statusCode" : {
            "$ref" : "#/components/schemas/HttpStatusCode"
          },
          "statusCodeValue" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "ResponseType" : {
        "type" : "string",
        "enum" : [ "ANSWER", "REPORT", "UNKNOWN" ]
      },
      "RhombusKeyAppConfigType" : {
        "type" : "object",
        "properties" : {
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "preferences" : {
            "$ref" : "#/components/schemas/RhombusKeyAppPreferencesType"
          },
          "rhombusOrgUserUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "settings" : {
            "$ref" : "#/components/schemas/RhombusKeyAppSettingsType"
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "RhombusKeyAppPreferencesType" : {
        "type" : "object",
        "properties" : {
          "favoriteAccessControlledDoorUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "RhombusKeyAppSettingsType" : {
        "type" : "object",
        "properties" : {
          "bypassSaml" : {
            "type" : "boolean",
            "nullable" : true
          },
          "credentialProvisioningRules" : {
            "$ref" : "#/components/schemas/RhombusSecureMobileCredentialProvisioningRulesType"
          },
          "remoteUnlockEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "rhombusKeyAccessEnabled" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "RhombusOrgUserType" : {
        "type" : "object",
        "description" : "List of users in the organization for reports",
        "properties" : {
          "accessibleRhombusApps" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "PARTNER", "CONSOLE", "RHOMBUS_KEY", "UNKNOWN" ],
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "accountOwner" : {
            "type" : "boolean",
            "nullable" : true
          },
          "bypassSaml" : {
            "type" : "boolean",
            "nullable" : true
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "deleted" : {
            "type" : "boolean",
            "nullable" : true
          },
          "firstName" : {
            "type" : "string",
            "nullable" : true
          },
          "lastName" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUserCustomizationFlags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "rhombusUserUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "status" : {
            "type" : "string",
            "enum" : [ "JOINED", "PENDING", "INACTIVE", "UNKNOWN" ],
            "nullable" : true
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "RhombusOsdpDoorReaderType" : {
        "type" : "object",
        "properties" : {
          "baseType" : {
            "$ref" : "#/components/schemas/ComponentBaseEnumType"
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "deviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "disableCardReader" : {
            "type" : "boolean",
            "nullable" : true
          },
          "disableKeypad" : {
            "type" : "boolean",
            "nullable" : true
          },
          "disableWaveToUnlock" : {
            "type" : "boolean",
            "nullable" : true
          },
          "hardwareUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "osdpAddress" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "otherReaderUnlockAudioFeedbackEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "ownerHardwareType" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "port" : {
            "$ref" : "#/components/schemas/OsdpReaderPortType"
          },
          "portImmutable" : {
            "type" : "boolean",
            "nullable" : true
          },
          "readerType" : {
            "$ref" : "#/components/schemas/DoorReaderEnumType"
          },
          "remoteUnlockAudioFeedbackEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "serialNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEnumType"
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "RhombusSecureCsnType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "algorithm" : {
              "$ref" : "#/components/schemas/SecureTokenAlgorithm"
            },
            "baseKeyIdentifier" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "endDateEpochSecExclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "lastUsedAccessControlledDoorUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "lastUsedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "lastUsedLocationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "lowercaseHexValue" : {
            "type" : "string",
            "nullable" : true,
            "readOnly" : true
          },
          "managedCredUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "note" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "startDateEpochSecInclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/AccessControlCredentialEnumType"
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "value" : {
            "type" : "string",
            "nullable" : true
          },
          "workflowStatus" : {
            "$ref" : "#/components/schemas/AccessControlCredentialWorkflowStatusEnumType"
          }
        }
      },
      "RhombusSecureMobileAppState" : {
        "type" : "object",
        "description" : "Updated mobile app state",
        "properties" : {
          "appName" : {
            "type" : "string",
            "nullable" : true
          },
          "appNotifications" : {
            "$ref" : "#/components/schemas/RhombusSecureMobileFeature"
          },
          "appOS" : {
            "type" : "string",
            "nullable" : true
          },
          "appStatusUpdatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "appVersion" : {
            "type" : "string",
            "nullable" : true
          },
          "clientType" : {
            "$ref" : "#/components/schemas/MobileTokenOSEnum"
          },
          "credentialUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "deviceModel" : {
            "type" : "string",
            "nullable" : true
          },
          "installationId" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "tapToUnlock" : {
            "$ref" : "#/components/schemas/RhombusSecureMobileFeature"
          },
          "userAgent" : {
            "type" : "string",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "waveToUnlock" : {
            "$ref" : "#/components/schemas/RhombusSecureMobileFeature"
          }
        }
      },
      "RhombusSecureMobileAppStateStats" : {
        "type" : "object",
        "description" : "Mobile app state statistics",
        "properties" : {
          "tapToUnlockStats" : {
            "$ref" : "#/components/schemas/RhombusSecureMobileCredStatRhombusSecureMobileFeatureStatus"
          },
          "versionStats" : {
            "$ref" : "#/components/schemas/RhombusSecureMobileCredStatString"
          },
          "waveToUnlockStats" : {
            "$ref" : "#/components/schemas/RhombusSecureMobileCredStatRhombusSecureMobileFeatureStatus"
          }
        }
      },
      "RhombusSecureMobileCredStatRhombusSecureMobileFeatureStatus" : {
        "type" : "object",
        "properties" : {
          "androidCredRefMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/StatsCredentialReference"
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "androidTotal" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true,
            "readOnly" : true
          },
          "androidTotalMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "nullable" : true,
            "readOnly" : true
          },
          "iphoneCredRefMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/StatsCredentialReference"
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "iphoneTotal" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "readOnly" : true
          },
          "iphoneTotalMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "nullable" : true,
            "readOnly" : true
          },
          "total" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true,
            "readOnly" : true
          }
        }
      },
      "RhombusSecureMobileCredStatString" : {
        "type" : "object",
        "properties" : {
          "androidCredRefMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/StatsCredentialReference"
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "androidTotal" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true,
            "readOnly" : true
          },
          "androidTotalMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "nullable" : true,
            "readOnly" : true
          },
          "iphoneCredRefMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/StatsCredentialReference"
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "iphoneTotal" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "readOnly" : true
          },
          "iphoneTotalMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "nullable" : true,
            "readOnly" : true
          },
          "total" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true,
            "readOnly" : true
          }
        }
      },
      "RhombusSecureMobileCredentialProvisioningRulesType" : {
        "type" : "object",
        "properties" : {
          "endDateProvisioner" : {
            "$ref" : "#/components/schemas/EpochSecondsProvisioner"
          },
          "maxMobileCredsAllowed" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "startDateProvisioner" : {
            "$ref" : "#/components/schemas/EpochSecondsProvisioner"
          }
        }
      },
      "RhombusSecureMobileFeature" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "settings" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RhombusSecureMobileFeatureSetting"
            },
            "nullable" : true
          },
          "status" : {
            "$ref" : "#/components/schemas/RhombusSecureMobileFeatureStatus"
          }
        }
      },
      "RhombusSecureMobileFeatureSetting" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "status" : {
            "$ref" : "#/components/schemas/RhombusSecureMobileFeatureSettingStatus"
          },
          "value" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "RhombusSecureMobileFeatureSettingStatus" : {
        "type" : "string",
        "enum" : [ "OPTIMAL", "INHIBITED" ]
      },
      "RhombusSecureMobileFeatureStatus" : {
        "type" : "string",
        "enum" : [ "OPT_OUT", "UNAVAILABLE", "OPTIMAL", "INHIBITED", "UNKNOWN" ]
      },
      "RhombusSecureMobileType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "algorithm" : {
              "$ref" : "#/components/schemas/SecureTokenAlgorithm"
            },
            "appName" : {
              "type" : "string",
              "nullable" : true
            },
            "appNotifications" : {
              "$ref" : "#/components/schemas/RhombusSecureMobileFeature"
            },
            "appOS" : {
              "type" : "string",
              "nullable" : true
            },
            "appStatusUpdatedAtMillis" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "appVersion" : {
              "type" : "string",
              "nullable" : true
            },
            "baseKeyIdentifier" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "clientType" : {
              "$ref" : "#/components/schemas/MobileTokenOSEnum"
            },
            "deviceModel" : {
              "type" : "string",
              "nullable" : true
            },
            "installationId" : {
              "type" : "string",
              "nullable" : true
            },
            "tapToUnlock" : {
              "$ref" : "#/components/schemas/RhombusSecureMobileFeature"
            },
            "userAgent" : {
              "type" : "string",
              "nullable" : true
            },
            "waveToUnlock" : {
              "$ref" : "#/components/schemas/RhombusSecureMobileFeature"
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "endDateEpochSecExclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "lastUsedAccessControlledDoorUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "lastUsedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "lastUsedLocationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "lowercaseHexValue" : {
            "type" : "string",
            "nullable" : true,
            "readOnly" : true
          },
          "managedCredUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "note" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "startDateEpochSecInclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/AccessControlCredentialEnumType"
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "value" : {
            "type" : "string",
            "nullable" : true
          },
          "workflowStatus" : {
            "$ref" : "#/components/schemas/AccessControlCredentialWorkflowStatusEnumType"
          }
        }
      },
      "RhombusShipmentInfoType" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "additionalEmails" : {
            "type" : "string",
            "nullable" : true
          },
          "chosenCarrierName" : {
            "type" : "string",
            "nullable" : true
          },
          "claimKeyToLicenseMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "nullable" : true
              },
              "nullable" : true,
              "uniqueItems" : true
            },
            "nullable" : true
          },
          "claimKeyToLicenseMapV2" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/SalesforceLicenseStartDateTimeAndEndDateTime"
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "customerEmails" : {
            "type" : "string",
            "nullable" : true
          },
          "customerName" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "partnerOrgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "purchaseOrderNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "rmaReturnTrackingNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "rmaUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "rmaUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          },
          "salesForceOpportunityId" : {
            "type" : "string",
            "nullable" : true
          },
          "zendeskTicketNumber" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "RtspEndpoint" : {
        "type" : "object",
        "properties" : {
          "audioSupported" : {
            "type" : "boolean",
            "nullable" : true
          },
          "lastRtspUrlStatus" : {
            "type" : "string",
            "enum" : [ "UNKNOWN", "NOT_REACHABLE", "NOT_AUTHENTICATED", "NOT_SUPPORTED", "GOOD" ],
            "nullable" : true
          },
          "onvifProfileToken" : {
            "type" : "string",
            "nullable" : true
          },
          "rtspUrl" : {
            "type" : "string",
            "nullable" : true
          },
          "source" : {
            "$ref" : "#/components/schemas/RtspEndpointSource"
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "RtspEndpointSource" : {
        "type" : "string",
        "enum" : [ "USER", "ONVIF" ]
      },
      "RuleActionType" : {
        "type" : "object",
        "description" : "The action to take when this lockdown rule is triggered.",
        "properties" : {
          "activateLocationLockdown" : {
            "$ref" : "#/components/schemas/ActivateLocationLockdownActionType"
          },
          "alertAction" : {
            "type" : "boolean",
            "nullable" : true
          },
          "audioPlaybackActions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AudioPlaybackActionType"
            },
            "nullable" : true
          },
          "cancelLoopingAudioPlaybackAction" : {
            "$ref" : "#/components/schemas/CancelLoopingAudioPlaybackActionType"
          },
          "connectAudioDeviceToPhoneNumberAction" : {
            "$ref" : "#/components/schemas/ConnectAudioDeviceToPhoneNumberActionType"
          },
          "customLLMActions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CustomLLMActionType"
            },
            "nullable" : true
          },
          "integrationCommandActions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/IntegrationCommandActionType"
            },
            "nullable" : true
          },
          "integrationNotificationActions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/IntegrationNotificationActionType"
            },
            "nullable" : true
          },
          "liveNotificationAction" : {
            "type" : "boolean",
            "nullable" : true
          },
          "remoteDoorUnlockActions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RemoteDoorUnlockActionType"
            },
            "nullable" : true
          },
          "thirdPartyAudioPlaybackAction" : {
            "$ref" : "#/components/schemas/ThirdPartyAudioPlaybackActionType"
          },
          "triggerComponentRelayActions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TriggerComponentRelayActionType"
            },
            "nullable" : true
          },
          "webhookActions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/WebhookActionType"
            },
            "nullable" : true
          }
        }
      },
      "RuleEventOriginator" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "ruleName" : {
              "type" : "string",
              "nullable" : true
            },
            "ruleUuid" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/EventOriginatorEnum"
          }
        }
      },
      "RuleFilterType" : {
        "type" : "object",
        "description" : "Optional filters to apply to this lockdown rule.",
        "properties" : {
          "scheduleUuids" : {
            "type" : "array",
            "description" : "List of schedules that apply to the rule. at least one schedule must be met to trigger this rule. If null, then this rule is enabled all the time.",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          },
          "triggerBackoffSecs" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Number of seconds to back off after rule is triggered before triggering again. I.e. this rule will only trigger once every X seconds regardless of how many triggering events occur within that window",
            "nullable" : true
          }
        }
      },
      "RuleLockdownEventOriginator" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "ruleName" : {
              "type" : "string",
              "nullable" : true
            },
            "ruleUuid" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/LockdownEventOriginatorEnumType"
          }
        }
      },
      "RuleTriggerConjunctionEnum" : {
        "type" : "string",
        "enum" : [ "AND", "OR", "UNKNOWN" ]
      },
      "RuleTriggerTypeEnum" : {
        "type" : "string",
        "enum" : [ "DEVICE_ACTIVITY_EVENT", "AUDIT_EVENT", "DIAGNOSTIC_EVENT", "ALERT_MONITORING_EVENT", "BADGE_INTEGRATION_EVENT", "SCHEDULED_EVENT", "VISION_LLM_EVENT", "RECURRING_EVENT", "LOCATION_LOCKDOWN_ACTIVATED_EVENT", "LOCATION_LOCKDOWN_DEACTIVATED_EVENT", "BUTTON_INTEGRATION_EVENT", "CUSTOM_LLM_EVENT", "UNKNOWN" ]
      },
      "RuleType" : {
        "type" : "object",
        "description" : "Updated rule data",
        "properties" : {
          "action" : {
            "$ref" : "#/components/schemas/RuleActionType"
          },
          "conjunction" : {
            "$ref" : "#/components/schemas/RuleTriggerConjunctionEnum"
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "ownerUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "ruleFilters" : {
            "$ref" : "#/components/schemas/RuleFilterType"
          },
          "ruleType" : {
            "$ref" : "#/components/schemas/RuleTypeEnum"
          },
          "triggers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BaseRuleTriggerType"
            },
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "RuleTypeEnum" : {
        "type" : "string",
        "enum" : [ "BUTTON_DEFINED", "USER_DEFINED", "DOORBELL_CAMERA_DEFINED", "DOOR_CONTROLLER_DEFINED", "LOCKDOWN_PLAN_DEFINED", "CUSTOM_LLM_DEFINED" ]
      },
      "RulesEventRecordType" : {
        "type" : "object",
        "description" : "List of rules event records",
        "properties" : {
          "activatedLocationLockdownRecord" : {
            "$ref" : "#/components/schemas/ActivateLocationLockdownActionRecordType"
          },
          "alertActionRecord" : {
            "$ref" : "#/components/schemas/AlertActionRecordType"
          },
          "alertMonitoringEventRecords" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AlertMonitoringEventRecordType"
            },
            "nullable" : true
          },
          "audioPlaybackActionRecords" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AudioPlaybackActionRecordType"
            },
            "nullable" : true
          },
          "cancelLoopingAudioPlaybackActionRecordType" : {
            "$ref" : "#/components/schemas/CancelLoopingAudioPlaybackActionRecordType"
          },
          "deviceEventRecords" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DeviceEventRecordType"
            },
            "nullable" : true
          },
          "integrationActionStatuses" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationActionStatusEnum"
            },
            "nullable" : true
          },
          "liveNotificationActionRecord" : {
            "$ref" : "#/components/schemas/LiveNotificationActionRecordType"
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "ruleUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "scheduledEventRecords" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ScheduledEventRecordType"
            },
            "nullable" : true
          },
          "triggerComponentRelayRecords" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TriggerComponentRelayActionRecordType"
            },
            "nullable" : true
          },
          "triggeredTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "unlockDoorActionRecords" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UnlockDoorActionRecordType"
            },
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "visionLLMEventRecords" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/VisionLLMEventRecordType"
            },
            "nullable" : true
          },
          "webhookActionStatuses" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "boolean",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Rules_CreateRuleWSRequest" : {
        "type" : "object",
        "description" : "Request object for creating a rule.",
        "properties" : {
          "rule" : {
            "$ref" : "#/components/schemas/RuleType"
          }
        }
      },
      "Rules_CreateRuleWSResponse" : {
        "type" : "object",
        "description" : "Response object for creating a rule.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "ruleUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Rules_DeleteRulePauseSettingWSRequest" : {
        "type" : "object",
        "description" : "Request object for deleting a rule pause setting.",
        "properties" : {
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Rules_DeleteRulePauseSettingWSResponse" : {
        "type" : "object",
        "description" : "Response object for deleting a rule pause setting.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Rules_DeleteRuleWSRequest" : {
        "type" : "object",
        "description" : "Request object for deleting a rule.",
        "properties" : {
          "ruleUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Rules_DeleteRuleWSResponse" : {
        "type" : "object",
        "description" : "Response object for deleting a rule.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Rules_GetRulePauseSettingsResponse" : {
        "type" : "object",
        "description" : "Response object for getting rule pause settings.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "rulesPausedMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "description" : "Map of rule UUIDs to their pause settings",
              "items" : {
                "$ref" : "#/components/schemas/ScheduledIntervalType"
              },
              "nullable" : true
            },
            "description" : "Map of rule UUIDs to their pause settings",
            "nullable" : true
          }
        }
      },
      "Rules_GetRulePauseSettingsWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting rule pause settings."
      },
      "Rules_GetRulesForOrgWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting rules for an organization."
      },
      "Rules_GetRulesForOrgWSResponse" : {
        "type" : "object",
        "description" : "Response object for getting rules for an organization.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "rules" : {
            "type" : "array",
            "description" : "List of rules for the organization",
            "items" : {
              "$ref" : "#/components/schemas/RuleType"
            },
            "nullable" : true
          }
        }
      },
      "Rules_PauseRuleWSRequest" : {
        "type" : "object",
        "description" : "Request object for pausing a rule.",
        "properties" : {
          "durationSec" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Duration to pause the rule in seconds",
            "example" : 3600,
            "nullable" : true
          },
          "ruleUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "scheduledTimestampSec" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Scheduled timestamp in seconds when the pause should take effect",
            "example" : 1640995200,
            "nullable" : true
          }
        }
      },
      "Rules_PauseRuleWSResponse" : {
        "type" : "object",
        "description" : "Response object for pausing a rule.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Rules_UpdateRuleWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating a rule.",
        "properties" : {
          "ruleUpdate" : {
            "$ref" : "#/components/schemas/RuleType"
          }
        }
      },
      "Rules_UpdateRuleWSResponse" : {
        "type" : "object",
        "description" : "Response object for updating a rule.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Rules_records_DeleteRulesEventRecordWSRequest" : {
        "type" : "object",
        "description" : "Request object for deleting a rules event record.",
        "properties" : {
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Rules_records_DeleteRulesEventRecordWSResponse" : {
        "type" : "object",
        "description" : "Response object for deleting a rules event record."
      },
      "Rules_records_GetLatestRulesEventRecordsWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting latest rules event records.",
        "properties" : {
          "associatedUuids" : {
            "type" : "array",
            "description" : "List of associated UUIDs to filter by",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          },
          "n" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Number of latest records to retrieve",
            "example" : 10,
            "nullable" : true
          },
          "ruleUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Rules_records_GetLatestRulesEventRecordsWSResponse" : {
        "type" : "object",
        "description" : "Response object for getting latest rules event records.",
        "properties" : {
          "rulesEventRecords" : {
            "type" : "array",
            "description" : "List of latest rules event records",
            "items" : {
              "$ref" : "#/components/schemas/RulesEventRecordType"
            },
            "nullable" : true
          }
        }
      },
      "Rules_records_GetRulesEventRecordsWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting rules event records.",
        "properties" : {
          "associatedUuids" : {
            "type" : "array",
            "description" : "Associated uuids for devices, components, locations and componenet composites. **Optional, can be null.",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          },
          "endTime" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "End time for the query period",
            "example" : 1640998800000,
            "nullable" : true
          },
          "startTime" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start time for the query period",
            "example" : 1640995200000,
            "nullable" : true
          }
        }
      },
      "Rules_records_GetRulesEventRecordsWSResponse" : {
        "type" : "object",
        "description" : "Response object for getting rules event records.",
        "properties" : {
          "rulesEventRecords" : {
            "type" : "array",
            "description" : "List of rules event records",
            "items" : {
              "$ref" : "#/components/schemas/RulesEventRecordType"
            },
            "nullable" : true
          }
        }
      },
      "Rules_records_GetRulesFilteredWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting filtered rules.",
        "properties" : {
          "associatedUuids" : {
            "type" : "array",
            "description" : "List of associated UUIDs to filter by",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          },
          "ruleTypeFilter" : {
            "type" : "array",
            "description" : "List of rule types to filter by",
            "items" : {
              "$ref" : "#/components/schemas/RuleTypeEnum"
            },
            "nullable" : true
          }
        }
      },
      "SAMLSettingsType" : {
        "type" : "object",
        "properties" : {
          "addUsersOnRoleMismatch" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "idpMetaDataXml" : {
            "type" : "string",
            "nullable" : true
          },
          "justInTimeAccountProvisioningEnabled" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "SCIMSettingsType" : {
        "type" : "object",
        "properties" : {
          "addUsersOnRoleMismatch" : {
            "type" : "boolean",
            "nullable" : true
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "rhombusKeyAppSettings" : {
            "$ref" : "#/components/schemas/RhombusKeyAppSettingsType"
          },
          "sendWelcomeEmailToNewRhombusKeyUsers" : {
            "type" : "boolean",
            "nullable" : true
          },
          "sendWelcomeEmailToNewUsers" : {
            "type" : "boolean",
            "nullable" : true
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "SalesforceLicenseStartDateTimeAndEndDateTime" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "contractEndDateTime" : {
            "type" : "string",
            "nullable" : true
          },
          "contractStartDateTime" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "SaltoSettings" : {
        "type" : "object",
        "properties" : {
          "alertUnauthorizedFaces" : {
            "type" : "boolean",
            "nullable" : true
          },
          "createSeekPoints" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "identifyFacesFromBadge" : {
            "type" : "boolean",
            "nullable" : true
          },
          "saveClips" : {
            "type" : "boolean",
            "nullable" : true
          },
          "tokenToCamerasMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "RUUID",
                "description" : "base 64 (url-safe) uuid string",
                "example" : "AAAAAAAAAAAAAAAAAAAAAA",
                "nullable" : true
              },
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "SavedClipV2Type" : {
        "type" : "object",
        "description" : "List of saved clips",
        "properties" : {
          "accessSettings" : {
            "$ref" : "#/components/schemas/ClipAccessSettings"
          },
          "alterMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/AlteredView"
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "analyzed" : {
            "type" : "boolean",
            "nullable" : true
          },
          "byteCount" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "clipLocation" : {
            "$ref" : "#/components/schemas/MetaDataLocationType"
          },
          "consoleDelete" : {
            "type" : "boolean",
            "nullable" : true
          },
          "createdAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "devicePresentationOrder" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "DeviceFacetUuid",
              "description" : "RUUID with optional appended facet information",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
              "nullable" : true
            },
            "nullable" : true
          },
          "deviceUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          },
          "deviceUuidMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/MetaDataLocationType"
            },
            "nullable" : true
          },
          "deviceUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "DeviceFacetUuid",
              "description" : "RUUID with optional appended facet information",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
              "nullable" : true
            },
            "nullable" : true
          },
          "durationSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "externalTransactionId" : {
            "type" : "string",
            "nullable" : true
          },
          "fisheyeMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/DewarpedView"
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "integrationUploadList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/IntegrationEnum"
            },
            "nullable" : true
          },
          "isMonitoringClip" : {
            "type" : "boolean",
            "nullable" : true
          },
          "isVendorClip" : {
            "type" : "boolean",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "sendToSharedStorage" : {
            "type" : "boolean",
            "nullable" : true
          },
          "sha256Hex" : {
            "type" : "string",
            "nullable" : true
          },
          "sourceAlertUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "status" : {
            "type" : "string",
            "enum" : [ "INITIATING", "UPLOADING", "RENDERING", "FAILED", "COMPLETE", "OFFLINE", "UNKNOWN" ],
            "nullable" : true
          },
          "thumbnailLocation" : {
            "$ref" : "#/components/schemas/MetaDataLocationType"
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "title" : {
            "type" : "string",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "videoResolution" : {
            "$ref" : "#/components/schemas/Resolution"
          }
        }
      },
      "SavedClipWithDetailsType" : {
        "type" : "object",
        "description" : "Detailed information about the saved clip",
        "properties" : {
          "accessSettings" : {
            "$ref" : "#/components/schemas/ClipAccessSettings"
          },
          "alterMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/AlteredView"
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "analyzed" : {
            "type" : "boolean",
            "nullable" : true
          },
          "boundingBoxes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ClipBoundingBoxType"
            },
            "nullable" : true
          },
          "byteCount" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "clipLocation" : {
            "$ref" : "#/components/schemas/MetaDataLocationType"
          },
          "consoleDelete" : {
            "type" : "boolean",
            "nullable" : true
          },
          "createdAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "devicePresentationOrder" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "DeviceFacetUuid",
              "description" : "RUUID with optional appended facet information",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
              "nullable" : true
            },
            "nullable" : true
          },
          "deviceUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          },
          "deviceUuidMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/MetaDataLocationType"
            },
            "nullable" : true
          },
          "deviceUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "DeviceFacetUuid",
              "description" : "RUUID with optional appended facet information",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
              "nullable" : true
            },
            "nullable" : true
          },
          "durationSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "externalTransactionId" : {
            "type" : "string",
            "nullable" : true
          },
          "fisheyeMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/DewarpedView"
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "integrationUploadList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/IntegrationEnum"
            },
            "nullable" : true
          },
          "isMonitoringClip" : {
            "type" : "boolean",
            "nullable" : true
          },
          "isVendorClip" : {
            "type" : "boolean",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "seekPoints" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ClipSeekPointV2Type"
            },
            "nullable" : true
          },
          "sendToSharedStorage" : {
            "type" : "boolean",
            "nullable" : true
          },
          "sha256Hex" : {
            "type" : "string",
            "nullable" : true
          },
          "sourceAlertUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "status" : {
            "type" : "string",
            "enum" : [ "INITIATING", "UPLOADING", "RENDERING", "FAILED", "COMPLETE", "OFFLINE", "UNKNOWN" ],
            "nullable" : true
          },
          "thumbnailLocation" : {
            "$ref" : "#/components/schemas/MetaDataLocationType"
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "title" : {
            "type" : "string",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "videoResolution" : {
            "$ref" : "#/components/schemas/Resolution"
          }
        }
      },
      "SceneQueryReport" : {
        "type" : "object",
        "description" : "List of time series data points",
        "properties" : {
          "deviceFacetUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          },
          "events" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SceneQueryReportEvent"
            },
            "nullable" : true
          },
          "promptType" : {
            "type" : "string",
            "enum" : [ "COUNT", "PERCENT", "BOOLEAN" ],
            "nullable" : true
          },
          "promptUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "SceneQueryReportEvent" : {
        "type" : "object",
        "description" : "Scene query report event from the triggered prompt",
        "properties" : {
          "checkCondition" : {
            "type" : "boolean",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "value" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Scenequery_CreatePromptConfigurationWSRequest" : {
        "type" : "object",
        "description" : "Request object for creating a prompt configuration.",
        "properties" : {
          "promptConfiguration" : {
            "$ref" : "#/components/schemas/PromptConfigurationType"
          }
        }
      },
      "Scenequery_CreatePromptConfigurationWSResponse" : {
        "type" : "object",
        "description" : "Response object for creating a prompt configuration.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "promptConfiguration" : {
            "$ref" : "#/components/schemas/PromptConfigurationType"
          }
        }
      },
      "Scenequery_DeletePromptConfigurationWSRequest" : {
        "type" : "object",
        "description" : "Request object for deleting a prompt configuration.",
        "properties" : {
          "promptUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Scenequery_DeletePromptConfigurationWSResponse" : {
        "type" : "object",
        "description" : "Response object for deleting a prompt configuration.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Scenequery_FindAllPromptConfigurationsWSRequest" : {
        "type" : "object",
        "description" : "Request object for finding all prompt configurations."
      },
      "Scenequery_FindAllPromptConfigurationsWSResponse" : {
        "type" : "object",
        "description" : "Response object for finding all prompt configurations.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "promptConfigurations" : {
            "type" : "array",
            "description" : "List of all prompt configurations",
            "items" : {
              "$ref" : "#/components/schemas/PromptConfigurationType"
            },
            "nullable" : true
          }
        }
      },
      "Scenequery_GetPromptConfigurationWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting a prompt configuration.",
        "properties" : {
          "promptUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Scenequery_GetPromptConfigurationWSResponse" : {
        "type" : "object",
        "description" : "Response object for getting a prompt configuration.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "promptConfiguration" : {
            "$ref" : "#/components/schemas/PromptConfigurationType"
          }
        }
      },
      "Scenequery_SelectiveUpdatePromptConfigurationWSRequest" : {
        "type" : "object",
        "description" : "Request object for selectively updating a prompt configuration.",
        "properties" : {
          "active" : {
            "type" : "boolean",
            "description" : "Optional active status for the prompt configuration",
            "nullable" : true
          },
          "cameraConfigurations" : {
            "type" : "array",
            "description" : "List of camera configurations for the prompt",
            "items" : {
              "$ref" : "#/components/schemas/CameraConfiguration"
            },
            "nullable" : true
          },
          "checkCondition" : {
            "$ref" : "#/components/schemas/CheckCondition"
          },
          "description" : {
            "type" : "string",
            "description" : "Optional description for the prompt configuration",
            "nullable" : true
          },
          "minuteTriggerRate" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Optional minute trigger rate for the configuration",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Optional name for the prompt configuration",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "prompt" : {
            "type" : "string",
            "description" : "Optional prompt text for the configuration",
            "nullable" : true
          },
          "promptType" : {
            "type" : "string",
            "description" : "Optional prompt type for the configuration",
            "enum" : [ "COUNT", "PERCENT", "BOOLEAN" ],
            "nullable" : true
          },
          "scheduleUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "shortName" : {
            "type" : "string",
            "description" : "Optional short name for the prompt configuration",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Scenequery_SelectiveUpdatePromptConfigurationWSResponse" : {
        "type" : "object",
        "description" : "Response object for selectively updating a prompt configuration.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Scenequery_TriggerPromptWSRequest" : {
        "type" : "object",
        "description" : "Request object for triggering a prompt.",
        "properties" : {
          "deviceFacetUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          },
          "prompt" : {
            "type" : "string",
            "description" : "Prompt text to trigger",
            "example" : "Count people in the scene",
            "nullable" : true
          },
          "promptType" : {
            "type" : "string",
            "description" : "Type of prompt to trigger",
            "enum" : [ "COUNT", "PERCENT", "BOOLEAN" ],
            "nullable" : true
          },
          "region" : {
            "$ref" : "#/components/schemas/RegionPolygonType"
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Timestamp in milliseconds for the trigger",
            "example" : 1640995200000,
            "nullable" : true
          }
        }
      },
      "Scenequery_TriggerPromptWSResponse" : {
        "type" : "object",
        "description" : "Response object for triggering a prompt.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "event" : {
            "$ref" : "#/components/schemas/SceneQueryReportEvent"
          }
        }
      },
      "Scenequery_UpdatePromptConfigurationWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating a prompt configuration.",
        "properties" : {
          "promptConfiguration" : {
            "$ref" : "#/components/schemas/PromptConfigurationType"
          }
        }
      },
      "Scenequery_UpdatePromptConfigurationWSResponse" : {
        "type" : "object",
        "description" : "Response object for updating a prompt configuration.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "promptConfiguration" : {
            "$ref" : "#/components/schemas/PromptConfigurationType"
          }
        }
      },
      "Schedule_AccessControlledDoorNextNearestSchedule" : {
        "type" : "object",
        "description" : "Information about the next nearest schedule for access controlled doors.",
        "properties" : {
          "currentlyActive" : {
            "type" : "boolean",
            "description" : "Whether the schedule is currently active",
            "nullable" : true
          },
          "doorState" : {
            "$ref" : "#/components/schemas/AccessControlledDoorStateEnumType"
          },
          "scheduleUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "source" : {
            "$ref" : "#/components/schemas/Schedule_AccessControlledDoorStateSourceEnum"
          },
          "startsAtMillisInclusive" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start time in milliseconds (inclusive)",
            "example" : 1640995200000,
            "nullable" : true
          },
          "stopsAtMillisInclusive" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Stop time in milliseconds (inclusive)",
            "example" : 1640998800000,
            "nullable" : true
          }
        }
      },
      "Schedule_AccessControlledDoorStateSourceEnum" : {
        "type" : "string",
        "description" : "Source of the door state",
        "enum" : [ "DEFAULT_STATE", "DOOR_SCHEDULE", "DSE_DEFAULT_STATE", "DSE_SCHEDULE", "DOOR_STATE_OVERRIDE" ]
      },
      "Schedule_CreateAbsoluteScheduleWSRequest" : {
        "type" : "object",
        "description" : "Request object for creating an absolute schedule.",
        "properties" : {
          "schedule" : {
            "$ref" : "#/components/schemas/AbsoluteSecondsScheduleType"
          }
        }
      },
      "Schedule_CreateAbsoluteScheduleWSResponse" : {
        "type" : "object",
        "description" : "Response object for creating an absolute schedule.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "scheduleUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Schedule_CreateRelativeDateTimeIntervalsScheduleWSRequest" : {
        "type" : "object",
        "description" : "Request object for creating a relative datetime intervals schedule.",
        "properties" : {
          "schedule" : {
            "$ref" : "#/components/schemas/RelativeDateTimeIntervalsScheduleType"
          }
        }
      },
      "Schedule_CreateRelativeDateTimeIntervalsScheduleWSResponse" : {
        "type" : "object",
        "description" : "Response object for creating a relative datetime intervals schedule.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "scheduleUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Schedule_CreateRelativeScheduleWSRequest" : {
        "type" : "object",
        "description" : "Request object for creating a relative schedule.",
        "properties" : {
          "schedule" : {
            "$ref" : "#/components/schemas/RealtimeRelativeSecondsScheduleType"
          }
        }
      },
      "Schedule_CreateRelativeScheduleWSResponse" : {
        "type" : "object",
        "description" : "Response object for creating a relative schedule.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "scheduleUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Schedule_CreateWeeklyScheduleWSRequest" : {
        "type" : "object",
        "description" : "Request object for creating a weekly schedule.",
        "properties" : {
          "schedule" : {
            "$ref" : "#/components/schemas/WeeklyRepeatingScheduleType"
          }
        }
      },
      "Schedule_CreateWeeklyScheduleWSResponse" : {
        "type" : "object",
        "description" : "Response object for creating a weekly schedule.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "scheduleUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Schedule_FindAbsoluteScheduleWSRequest" : {
        "type" : "object",
        "description" : "Request object for finding an absolute schedule.",
        "properties" : {
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Schedule_FindAbsoluteScheduleWSResponse" : {
        "type" : "object",
        "description" : "Response object for finding an absolute schedule.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "schedule" : {
            "$ref" : "#/components/schemas/AbsoluteSecondsScheduleType"
          }
        }
      },
      "Schedule_FindRelativeDateTimeIntervalsScheduleWSRequest" : {
        "type" : "object",
        "description" : "Request object for finding a relative datetime intervals schedule.",
        "properties" : {
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Schedule_FindRelativeDateTimeIntervalsScheduleWSResponse" : {
        "type" : "object",
        "description" : "Response object for finding a relative datetime intervals schedule.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "schedule" : {
            "$ref" : "#/components/schemas/RelativeDateTimeIntervalsScheduleType"
          }
        }
      },
      "Schedule_FindRelativeScheduleWSRequest" : {
        "type" : "object",
        "description" : "Request object for finding a relative schedule.",
        "properties" : {
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Schedule_FindRelativeScheduleWSResponse" : {
        "type" : "object",
        "description" : "Response object for finding a relative schedule.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "schedule" : {
            "$ref" : "#/components/schemas/RealtimeRelativeSecondsScheduleType"
          }
        }
      },
      "Schedule_FindWeeklyScheduleWSRequest" : {
        "type" : "object",
        "description" : "Request object for finding a weekly schedule.",
        "properties" : {
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Schedule_FindWeeklyScheduleWSResponse" : {
        "type" : "object",
        "description" : "Response object for finding a weekly schedule.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "schedule" : {
            "$ref" : "#/components/schemas/WeeklyRepeatingScheduleType"
          }
        }
      },
      "Schedule_GetScheduleDataV2WSRequest" : {
        "type" : "object",
        "description" : "Request object for getting schedule data v2.",
        "properties" : {
          "scheduleUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Schedule_GetScheduleDataV2WSResponse" : {
        "type" : "object",
        "description" : "Response object for getting schedule data v2.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "weeklyScheduleData" : {
            "$ref" : "#/components/schemas/Schedule_WeeklyRepeatingScheduleDataType"
          }
        }
      },
      "Schedule_GetScheduleDataWSResponse" : {
        "type" : "object",
        "description" : "Response object for getting schedule data.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "weeklyScheduleData" : {
            "type" : "array",
            "description" : "List of weekly schedule data",
            "items" : {
              "$ref" : "#/components/schemas/Schedule_WeeklyRepeatingScheduleDataType"
            },
            "nullable" : true
          }
        }
      },
      "Schedule_GetSchedulesWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting all schedules."
      },
      "Schedule_GetSchedulesWSResponse" : {
        "type" : "object",
        "description" : "Response object for getting all schedules.",
        "properties" : {
          "absoluteSchedules" : {
            "type" : "array",
            "description" : "List of absolute schedules",
            "items" : {
              "$ref" : "#/components/schemas/AbsoluteSecondsScheduleType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "relativeDatetimeSchedules" : {
            "type" : "array",
            "description" : "List of relative datetime intervals schedules",
            "items" : {
              "$ref" : "#/components/schemas/RelativeDateTimeIntervalsScheduleType"
            },
            "nullable" : true
          },
          "relativeSchedules" : {
            "type" : "array",
            "description" : "List of relative schedules",
            "items" : {
              "$ref" : "#/components/schemas/RealtimeRelativeSecondsScheduleType"
            },
            "nullable" : true
          },
          "weeklySchedules" : {
            "type" : "array",
            "description" : "List of weekly repeating schedules",
            "items" : {
              "$ref" : "#/components/schemas/WeeklyRepeatingScheduleType"
            },
            "nullable" : true
          }
        }
      },
      "Schedule_WeeklyRepeatingScheduleDataType" : {
        "type" : "object",
        "description" : "Weekly repeating schedule data type with usage information.",
        "properties" : {
          "accessGrantUuids" : {
            "type" : "array",
            "description" : "Set of access grant UUIDs using this schedule",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "alarmMonitoringUuids" : {
            "type" : "array",
            "description" : "Set of alarm monitoring UUIDs using this schedule",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "alertPolicyUuids" : {
            "type" : "array",
            "description" : "Set of alert policy UUIDs using this schedule",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "customEventUuids" : {
            "type" : "array",
            "description" : "Set of custom event UUIDs using this schedule",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "doorSettingUuids" : {
            "type" : "array",
            "description" : "Set of door setting UUIDs using this schedule",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "intervalList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/WeeklyMinuteIntervalType"
            },
            "nullable" : true
          },
          "locationsUsedIn" : {
            "type" : "array",
            "description" : "Set of location UUIDs where this schedule is used",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "mutable" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "oneTimeUse" : {
            "type" : "boolean",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "ruleUuids" : {
            "type" : "array",
            "description" : "Set of rule UUIDs using this schedule",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "sharedStreamUuids" : {
            "type" : "array",
            "description" : "Set of shared stream UUIDs using this schedule",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "strategy" : {
            "type" : "string",
            "enum" : [ "WEEKLY_REPEATING_MINUTES", "ABSOLUTE_SECONDS", "REALTIME_RELATIVE_SECONDS", "RELATIVE_DATETIME_INTERVALS" ],
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "ScheduledAction" : {
        "type" : "object",
        "properties" : {
          "action" : {
            "$ref" : "#/components/schemas/RuleActionType"
          },
          "backoffMinutes" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "backoffSeconds" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "ruleUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "scheduleUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "ScheduledEventRecordType" : {
        "type" : "object",
        "properties" : {
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "ScheduledIntervalType" : {
        "type" : "object",
        "description" : "Map of location UUIDs to snooze intervals",
        "properties" : {
          "durationSecs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "timestampSec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "ScheduledRuleTriggerType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "locationUuids" : {
              "type" : "array",
              "description" : "List of locations to use for timezone evaluation and for display purposes",
              "items" : {
                "type" : "string",
                "format" : "RUUID",
                "description" : "base 64 (url-safe) uuid string",
                "example" : "AAAAAAAAAAAAAAAAAAAAAA",
                "nullable" : true
              },
              "nullable" : true
            },
            "minOfDay" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "minute of the day for this trigger. note that it is dependent on the timezone of the devices in the rule actions or the timezone of the specified locations.",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/RuleTriggerTypeEnum"
          }
        }
      },
      "ScopedCloudArchivingConfig" : {
        "type" : "object",
        "description" : "Cloud archiving configuration to update",
        "properties" : {
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "scope" : {
            "$ref" : "#/components/schemas/DeviceTargetScope"
          },
          "targetUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "uploadScheduleInverted" : {
            "type" : "boolean",
            "nullable" : true
          },
          "uploadScheduleUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "uploadStrategy" : {
            "$ref" : "#/components/schemas/CloudArchivingStrategy"
          }
        }
      },
      "Search_DeleteVideoEmbeddingWSRequest" : {
        "type" : "object",
        "description" : "Request object for deleting video embeddings.",
        "properties" : {
          "embedding" : {
            "$ref" : "#/components/schemas/GenericVideoEmbedding"
          }
        }
      },
      "Search_DeleteVideoEmbeddingWSResponse" : {
        "type" : "object",
        "description" : "Response object for deleting video embeddings.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Search_IndexVideoEmbeddingWSRequest" : {
        "type" : "object",
        "description" : "Request object for indexing video embeddings.",
        "properties" : {
          "embedding" : {
            "$ref" : "#/components/schemas/GenericVideoEmbedding"
          }
        }
      },
      "Search_IndexVideoEmbeddingWSResponse" : {
        "type" : "object",
        "description" : "Response object for indexing video embeddings.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Search_SearchLicensePlatesWSRequest" : {
        "type" : "object",
        "description" : "Request object for searching license plates.",
        "properties" : {
          "deviceUuids" : {
            "type" : "array",
            "description" : "List of device facet UUIDs to search in",
            "items" : {
              "type" : "string",
              "format" : "DeviceFacetUuid",
              "description" : "RUUID with optional appended facet information",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
              "nullable" : true
            },
            "nullable" : true
          },
          "endTime" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "End time in milliseconds for the search period",
            "example" : 1640998800000,
            "nullable" : true
          },
          "forcedFuzziness" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Forced fuzziness level for the search (deprecated)",
            "example" : 2,
            "nullable" : true
          },
          "fuzzy" : {
            "type" : "boolean",
            "description" : "Whether to use fuzzy search",
            "example" : true,
            "nullable" : true
          },
          "licensePlate" : {
            "type" : "string",
            "description" : "License plate number to search for",
            "example" : "ABC123",
            "nullable" : true
          },
          "startTime" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start time in milliseconds for the search period",
            "example" : 1640995200000,
            "nullable" : true
          }
        }
      },
      "Search_SearchLicensePlatesWSResponse" : {
        "type" : "object",
        "description" : "Response object for searching license plates.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "vehicleEvents" : {
            "type" : "array",
            "description" : "List of vehicle events matching the search criteria",
            "items" : {
              "$ref" : "#/components/schemas/VehicleEventSearchHitType"
            },
            "nullable" : true
          }
        }
      },
      "Search_SearchObjectsByColorWSRequest" : {
        "type" : "object",
        "description" : "Request object for searching objects by color.",
        "properties" : {
          "colorFilter" : {
            "type" : "array",
            "description" : "Set of colors to filter by",
            "items" : {
              "type" : "string",
              "description" : "Set of colors to filter by",
              "enum" : [ "BLACK", "BLUE", "BROWN", "GRAYWHITE", "GREEN", "ORANGE", "PINK", "PURPLE", "RED", "YELLOW", "UNKNOWN" ],
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "deviceFilter" : {
            "type" : "array",
            "description" : "List of device facet UUIDs to filter by",
            "items" : {
              "type" : "string",
              "format" : "DeviceFacetUuid",
              "description" : "RUUID with optional appended facet information",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
              "nullable" : true
            },
            "nullable" : true
          },
          "endTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "End time in milliseconds for the search period",
            "example" : 1640998800000,
            "nullable" : true
          },
          "objectTypeFilter" : {
            "type" : "array",
            "description" : "Set of activity types to filter by",
            "items" : {
              "$ref" : "#/components/schemas/ActivityEnum"
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "startTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start time in milliseconds for the search period",
            "example" : 1640995200000,
            "nullable" : true
          }
        }
      },
      "Search_SearchObjectsByColorWSResponse" : {
        "type" : "object",
        "description" : "Response object for searching objects by color.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "objects" : {
            "type" : "array",
            "description" : "List of objects matching the color search criteria",
            "items" : {
              "$ref" : "#/components/schemas/FootageBoundingBoxType"
            },
            "nullable" : true
          }
        }
      },
      "Search_SearchSimilarObjectEmbeddingsByTextWSRequest" : {
        "type" : "object",
        "description" : "Request object for searching similar object embeddings by text.",
        "properties" : {
          "maxNumResults" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Optional number of results to return. Setting to larger numbers will increase latency.",
            "nullable" : true
          },
          "model" : {
            "$ref" : "#/components/schemas/ObjectSearchModelEnum"
          },
          "objectTypeFilter" : {
            "type" : "array",
            "description" : "Optional object type filter to narrow results to only vehicles or only humans.",
            "items" : {
              "type" : "string",
              "enum" : [ "MOTION_HUMAN", "MOTION_CAR" ],
              "nullable" : true
            },
            "nullable" : true
          },
          "queryDeviceUuids" : {
            "type" : "array",
            "description" : "Optional list of device uuids to filter result set on.",
            "items" : {
              "type" : "string",
              "format" : "DeviceFacetUuid",
              "description" : "RUUID with optional appended facet information",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
              "nullable" : true
            },
            "nullable" : true
          },
          "queryEndTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "End time in epoch milliseconds. Results returned will have occurred before this time.",
            "nullable" : true
          },
          "queryStartTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start time in epoch milliseconds. Results returned will have occurred after this time.",
            "nullable" : true
          },
          "regionFilter" : {
            "type" : "array",
            "description" : "Optional region filter to return results only if they overlap with the supplied region. This is a list of perymyriad points defining a polygon. The first and last elements must be the same to make a connected polygon. For example, a triangle should have 4 points defined in this list.",
            "items" : {
              "type" : "array",
              "description" : "Permyriad point [x, y]",
              "items" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Permyriad point [x, y]",
                "nullable" : true
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "searchText" : {
            "type" : "string",
            "description" : "The search text to find similar objects to. Phrases like \"red sedan\", \"person in yellow shirt\", etc.",
            "nullable" : true
          },
          "similarityThreshold" : {
            "type" : "number",
            "format" : "float",
            "description" : "Optional threshold applied to filter returned results, set as a float in [0.0, 1.0].",
            "nullable" : true
          }
        },
        "required" : [ "model", "queryEndTimeMs", "queryStartTimeMs", "searchText" ]
      },
      "Search_SearchSimilarObjectEmbeddingsByVectorWSRequest" : {
        "type" : "object",
        "description" : "Request object for searching similar object embeddings by vector.",
        "properties" : {
          "maxNumResults" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Maximum number of results to return",
            "example" : 10,
            "nullable" : true
          },
          "model" : {
            "$ref" : "#/components/schemas/ObjectSearchModelEnum"
          },
          "objectTypeFilter" : {
            "type" : "array",
            "description" : "List of object types to filter by",
            "items" : {
              "type" : "string",
              "description" : "List of object types to filter by",
              "nullable" : true
            },
            "nullable" : true
          },
          "queryDeviceUuids" : {
            "type" : "array",
            "description" : "List of device facet UUIDs to search in",
            "items" : {
              "type" : "string",
              "format" : "DeviceFacetUuid",
              "description" : "RUUID with optional appended facet information",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
              "nullable" : true
            },
            "nullable" : true
          },
          "queryEndTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Query end time in milliseconds",
            "example" : 1640998800000,
            "nullable" : true
          },
          "queryStartTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Query start time in milliseconds",
            "example" : 1640995200000,
            "nullable" : true
          },
          "regionFilter" : {
            "type" : "array",
            "description" : "List of perymyriad points defining a polygon region filter",
            "items" : {
              "type" : "array",
              "description" : "List of perymyriad points defining a polygon region filter",
              "items" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "List of perymyriad points defining a polygon region filter",
                "nullable" : true
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "searchEmbedding" : {
            "type" : "array",
            "description" : "Search embedding vector",
            "items" : {
              "type" : "number",
              "format" : "float",
              "description" : "Search embedding vector",
              "nullable" : true
            },
            "nullable" : true
          },
          "similarityThreshold" : {
            "type" : "number",
            "format" : "float",
            "description" : "Similarity threshold for search results",
            "example" : 0.8,
            "nullable" : true
          }
        }
      },
      "Search_SearchSimilarObjectEmbeddingsWSRequest" : {
        "type" : "object",
        "description" : "Request object for searching similar object embeddings.",
        "properties" : {
          "maxNumResults" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Optional number of results to return. Setting to larger numbers will increase latency.",
            "nullable" : true
          },
          "model" : {
            "$ref" : "#/components/schemas/ObjectSearchModelEnum"
          },
          "objectTypeFilter" : {
            "type" : "array",
            "description" : "Optional object type filter to narrow results to only vehicles or only humans.",
            "items" : {
              "type" : "string",
              "enum" : [ "MOTION_HUMAN", "MOTION_CAR" ],
              "nullable" : true
            },
            "nullable" : true
          },
          "queryDeviceUuids" : {
            "type" : "array",
            "description" : "Optional list of device uuids to filter result set on.",
            "items" : {
              "type" : "string",
              "format" : "DeviceFacetUuid",
              "description" : "RUUID with optional appended facet information",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
              "nullable" : true
            },
            "nullable" : true
          },
          "queryEndTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "End time in epoch milliseconds. Results returned will have occurred before this time.",
            "nullable" : true
          },
          "queryStartTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start time in epoch milliseconds. Results returned will have occurred after this time.",
            "nullable" : true
          },
          "regionFilter" : {
            "type" : "array",
            "description" : "Optional region filter to return results only if they overlap with the supplied region. This is a list of perymyriad points defining a polygon. The first and last elements must be the same to make a connected polygon. For example, a triangle should have 4 points defined in this list.",
            "items" : {
              "type" : "array",
              "description" : "Permyriad point [x, y]",
              "items" : {
                "type" : "integer",
                "format" : "int32",
                "description" : "Permyriad point [x, y]",
                "nullable" : true
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "searchEmbeddingId" : {
            "type" : "string",
            "description" : "The id of the embedding event you want to find similar objects to. Typically this is obtained from a previous text search result.",
            "nullable" : true
          },
          "similarityThreshold" : {
            "type" : "number",
            "format" : "float",
            "description" : "Optional threshold applied to filter returned results, set as a float in [0.0, 1.0].",
            "nullable" : true
          }
        },
        "required" : [ "model", "queryEndTimeMs", "queryStartTimeMs", "searchEmbeddingId" ]
      },
      "Search_SearchSimilarObjectEmbeddingsWSResponse" : {
        "type" : "object",
        "description" : "Response object for searching similar object embeddings.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "moderationReason" : {
            "type" : "string",
            "description" : "Reason for moderation if query is not allowed",
            "nullable" : true
          },
          "queryAllowed" : {
            "type" : "boolean",
            "description" : "Whether the query is allowed",
            "nullable" : true
          },
          "similarEmbeddings" : {
            "type" : "array",
            "description" : "List of similar object embedding matches",
            "items" : {
              "$ref" : "#/components/schemas/GenericObjectEmbeddingMatch"
            },
            "nullable" : true
          }
        }
      },
      "Search_SearchSimilarVideoEmbeddingsByTimeWindowWSRequest" : {
        "type" : "object",
        "description" : "Request object for searching similar video embeddings by time window.",
        "properties" : {
          "maxNumResults" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Maximum number of results to return",
            "example" : 10,
            "nullable" : true
          },
          "model" : {
            "$ref" : "#/components/schemas/VideoSimilarityModelEnum"
          },
          "queryDeviceUuids" : {
            "type" : "array",
            "description" : "List of device facet UUIDs to search in",
            "items" : {
              "type" : "string",
              "format" : "DeviceFacetUuid",
              "description" : "RUUID with optional appended facet information",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
              "nullable" : true
            },
            "nullable" : true
          },
          "queryEndTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Query end time in milliseconds",
            "example" : 1640998800000,
            "nullable" : true
          },
          "queryStartTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Query start time in milliseconds",
            "example" : 1640995200000,
            "nullable" : true
          },
          "searchEventDeviceUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          },
          "searchEventEndTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Search event end time in milliseconds",
            "example" : 1640998800000,
            "nullable" : true
          },
          "searchEventStartTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Search event start time in milliseconds",
            "example" : 1640995200000,
            "nullable" : true
          },
          "similarityThreshold" : {
            "type" : "number",
            "format" : "float",
            "description" : "Similarity threshold for search results",
            "example" : 0.8,
            "nullable" : true
          }
        }
      },
      "Search_SearchSimilarVideoEmbeddingsByTimeWindowWSResponse" : {
        "type" : "object",
        "description" : "Response object for searching similar video embeddings by time window.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "searchEmbeddings" : {
            "type" : "array",
            "description" : "List of search embeddings",
            "items" : {
              "$ref" : "#/components/schemas/GenericVideoEmbedding"
            },
            "nullable" : true
          },
          "similarEmbeddings" : {
            "type" : "array",
            "description" : "List of similar video embedding matches",
            "items" : {
              "$ref" : "#/components/schemas/GenericVideoEmbeddingMatch"
            },
            "nullable" : true
          }
        }
      },
      "Search_SearchSimilarVideoEmbeddingsWSRequest" : {
        "type" : "object",
        "description" : "Request object for searching similar video embeddings.",
        "properties" : {
          "maxNumResults" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Maximum number of results to return",
            "example" : 10,
            "nullable" : true
          },
          "model" : {
            "$ref" : "#/components/schemas/VideoSimilarityModelEnum"
          },
          "queryDeviceUuids" : {
            "type" : "array",
            "description" : "List of device facet UUIDs to search in",
            "items" : {
              "type" : "string",
              "format" : "DeviceFacetUuid",
              "description" : "RUUID with optional appended facet information",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
              "nullable" : true
            },
            "nullable" : true
          },
          "queryEndTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Query end time in milliseconds",
            "example" : 1640998800000,
            "nullable" : true
          },
          "queryStartTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Query start time in milliseconds",
            "example" : 1640995200000,
            "nullable" : true
          },
          "searchEmbedding" : {
            "type" : "array",
            "description" : "Search embedding vector",
            "items" : {
              "type" : "number",
              "format" : "float",
              "description" : "Search embedding vector",
              "nullable" : true
            },
            "nullable" : true
          },
          "similarityThreshold" : {
            "type" : "number",
            "format" : "float",
            "description" : "Similarity threshold for search results",
            "example" : 0.8,
            "nullable" : true
          }
        }
      },
      "Search_SearchSimilarVideoEmbeddingsWSResponse" : {
        "type" : "object",
        "description" : "Response object for searching similar video embeddings.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "similarEmbeddings" : {
            "type" : "array",
            "description" : "List of similar video embedding matches",
            "items" : {
              "$ref" : "#/components/schemas/GenericVideoEmbeddingMatch"
            },
            "nullable" : true
          }
        }
      },
      "SecureTokenAlgorithm" : {
        "type" : "string",
        "enum" : [ "AN10922_AES128" ]
      },
      "SecurityZoneInfoType" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "assignedCameraList" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          },
          "isParentZone" : {
            "type" : "boolean",
            "nullable" : true
          },
          "securityZoneName" : {
            "type" : "string",
            "nullable" : true
          },
          "zoneAddress" : {
            "type" : "string",
            "nullable" : true
          },
          "zoneId" : {
            "type" : "string",
            "nullable" : true
          },
          "zoneParentId" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "SeekpointIndexType" : {
        "type" : "object",
        "description" : "List of custom footage seek points V2",
        "properties" : {
          "compositComponentUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "customDescription" : {
            "type" : "string",
            "nullable" : true
          },
          "customDisplayName" : {
            "type" : "string",
            "nullable" : true
          },
          "deviceUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "objectType" : {
            "$ref" : "#/components/schemas/ActivityEnum"
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "seekPointType" : {
            "$ref" : "#/components/schemas/SeekpointType"
          },
          "seekpointType" : {
            "$ref" : "#/components/schemas/SeekpointType"
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "SeekpointType" : {
        "type" : "string",
        "enum" : [ "0", "1", "2" ]
      },
      "SensorValType" : {
        "type" : "object",
        "properties" : {
          "sensorBoolean" : {
            "type" : "boolean",
            "nullable" : true
          },
          "sensorDouble" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "sensorLong" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "Sensor_FootageSensorSeekPointDisplayType" : {
        "type" : "object",
        "description" : "Display type for sensor seekpoints with sensor name information.",
        "properties" : {
          "a" : {
            "$ref" : "#/components/schemas/ActivityEnum"
          },
          "al" : {
            "type" : "boolean",
            "description" : "alerted on this?",
            "nullable" : true
          },
          "cd" : {
            "type" : "string",
            "description" : "Custom activity display description, maximum 100 characters",
            "nullable" : true
          },
          "cdn" : {
            "type" : "string",
            "description" : "custom activity display name",
            "nullable" : true
          },
          "co2" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "cu" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "DeviceFacetUuid",
              "description" : "RUUID with optional appended facet information",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
              "nullable" : true
            },
            "nullable" : true
          },
          "ethanol" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "h" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "humidity",
            "nullable" : true
          },
          "heatIndexDegF" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "hp" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "humidity percent in 16.16 fixed point",
            "nullable" : true
          },
          "iaq" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "lu" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "pm25" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "probeTempC" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "sn" : {
            "type" : "string",
            "description" : "Name of the sensor",
            "example" : "Motion Sensor 1",
            "nullable" : true
          },
          "su" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "t" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "temperature",
            "nullable" : true
          },
          "tc" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "temperature in Celsius in 16.16 fixed point",
            "nullable" : true
          },
          "thcPercent" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "ts" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "timestamp in milliseconds since epoch",
            "nullable" : true
          },
          "tvoc" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "vapeSmokePercent" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          }
        },
        "required" : [ "a", "ts" ]
      },
      "Sensor_GetFootageSensorSeekpointsForCameraWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting sensor seekpoints for a camera.",
        "properties" : {
          "cameraUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "durationSec" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Duration in seconds for the query period",
            "example" : 3600,
            "nullable" : true
          },
          "startTimeSec" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start time in seconds for the query period",
            "example" : 1640995200,
            "nullable" : true
          }
        }
      },
      "Sensor_GetFootageSensorSeekpointsForCameraWSResponse" : {
        "type" : "object",
        "description" : "Response object for getting sensor seekpoints for a camera.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "seekPoints" : {
            "type" : "array",
            "description" : "List of sensor seekpoints for the camera",
            "items" : {
              "$ref" : "#/components/schemas/Sensor_FootageSensorSeekPointDisplayType"
            },
            "nullable" : true
          }
        }
      },
      "Sensor_GetFootageSensorSeekpointsForLocationWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting sensor seekpoints for a location.",
        "properties" : {
          "durationSec" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Duration in seconds for the query period",
            "example" : 3600,
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "startTimeSec" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start time in seconds for the query period",
            "example" : 1640995200,
            "nullable" : true
          }
        }
      },
      "Sensor_GetFootageSensorSeekpointsForLocationWSResponse" : {
        "type" : "object",
        "description" : "Response object for getting sensor seekpoints for a location.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "seekPoints" : {
            "type" : "array",
            "description" : "List of sensor seekpoints for the location",
            "items" : {
              "$ref" : "#/components/schemas/Sensor_FootageSensorSeekPointDisplayType"
            },
            "nullable" : true
          }
        }
      },
      "Sensor_GetFootageSensorSeekpointsForSensorWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting sensor seekpoints for a specific sensor.",
        "properties" : {
          "durationSec" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Duration in seconds for the query period",
            "example" : 3600,
            "nullable" : true
          },
          "sensorUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "startTimeSec" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start time in seconds for the query period",
            "example" : 1640995200,
            "nullable" : true
          }
        }
      },
      "Sensor_GetFootageSensorSeekpointsForSensorWSResponse" : {
        "type" : "object",
        "description" : "Response object for getting sensor seekpoints for a specific sensor.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "footageSeekPoints" : {
            "type" : "array",
            "description" : "List of footage seekpoints for the sensor",
            "items" : {
              "$ref" : "#/components/schemas/FootageSeekPointV2Type"
            },
            "nullable" : true
          },
          "seekPoints" : {
            "type" : "array",
            "description" : "List of sensor seekpoints for the sensor",
            "items" : {
              "$ref" : "#/components/schemas/Sensor_FootageSensorSeekPointDisplayType"
            },
            "nullable" : true
          }
        }
      },
      "Sensor_GetSensorPresenceWindowsWSRequest" : {
        "type" : "object",
        "description" : "Request object for retrieving stored video information for a sensor.",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "durationSec" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Duration in seconds for the presence window query",
            "example" : 3600,
            "nullable" : true
          },
          "startTimeSec" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start time in seconds for the presence window query",
            "example" : 1640995200,
            "nullable" : true
          }
        }
      },
      "Sensor_GetSensorPresenceWindowsWSResponse" : {
        "type" : "object",
        "description" : "Response object containing stored video information for a sensor.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "presenceWindows" : {
            "type" : "array",
            "description" : "List of presence windows for the sensor",
            "items" : {
              "$ref" : "#/components/schemas/TimeWindowSeconds"
            },
            "nullable" : true
          }
        }
      },
      "ServiceNowSettings" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabledTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "enablingUser" : {
            "type" : "string",
            "nullable" : true
          },
          "enablingUserUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "instanceUrl" : {
            "type" : "string",
            "nullable" : true
          },
          "password" : {
            "type" : "string",
            "nullable" : true
          },
          "username" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "SessionClientInfoType" : {
        "type" : "object",
        "properties" : {
          "appName" : {
            "type" : "string",
            "nullable" : true
          },
          "appOs" : {
            "type" : "string",
            "nullable" : true
          },
          "appVersion" : {
            "type" : "string",
            "nullable" : true
          },
          "userAgent" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "SessionInfoWSType" : {
        "type" : "object",
        "description" : "List of support authority sessions",
        "properties" : {
          "clientInfo" : {
            "$ref" : "#/components/schemas/SessionClientInfoType"
          },
          "clientType" : {
            "type" : "string",
            "enum" : [ "MOBILE", "IOS", "ANDROID", "BROWSER" ],
            "nullable" : true
          },
          "currentSession" : {
            "type" : "boolean",
            "nullable" : true
          },
          "lastActivityTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "lastIpAccessedFrom" : {
            "type" : "string",
            "nullable" : true
          },
          "lastIpAccessedFromGeoLocation" : {
            "$ref" : "#/components/schemas/GeoIpLocationType"
          }
        }
      },
      "Share_GetSharedClipDataWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting shared clip data."
      },
      "Share_GetSharedClipDataWSResponse" : {
        "type" : "object",
        "description" : "Response object containing shared clip data.",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "Description of the shared clip",
            "example" : "Review of security incident from main entrance",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "orgName" : {
            "type" : "string",
            "description" : "Name of the organization",
            "example" : "Rhombus Systems",
            "nullable" : true
          },
          "sharedWebClips" : {
            "type" : "array",
            "description" : "List of shared web clips",
            "items" : {
              "$ref" : "#/components/schemas/Share_SharedClipPublicType"
            },
            "nullable" : true
          },
          "title" : {
            "type" : "string",
            "description" : "Title of the shared clip",
            "example" : "Security Incident Review",
            "nullable" : true
          }
        }
      },
      "Share_GetSharedFootageBoundingBoxesWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting shared footage bounding boxes.",
        "properties" : {
          "cameraUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "duration" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Duration in seconds for the bounding boxes query",
            "example" : 3600,
            "nullable" : true
          },
          "startTime" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start time in milliseconds for the bounding boxes query",
            "example" : 1640995200000,
            "nullable" : true
          }
        }
      },
      "Share_GetSharedFootageBoundingBoxesWSResponse" : {
        "type" : "object",
        "description" : "Response object containing shared footage bounding boxes.",
        "properties" : {
          "boundingBoxes" : {
            "type" : "array",
            "description" : "List of shared footage bounding boxes",
            "items" : {
              "$ref" : "#/components/schemas/FootageBoundingBoxType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Share_GetSharedFootageSeekpointsV2WSRequest" : {
        "type" : "object",
        "description" : "Request object for getting shared footage seekpoints V2.",
        "properties" : {
          "cameraUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "duration" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Duration in seconds for the seekpoints query",
            "example" : 3600,
            "nullable" : true
          },
          "startTime" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start time in milliseconds for the seekpoints query",
            "example" : 1640995200000,
            "nullable" : true
          }
        }
      },
      "Share_GetSharedFootageSeekpointsV2WSResponse" : {
        "type" : "object",
        "description" : "Response object containing shared footage seekpoints V2.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "footageSeekPoints" : {
            "type" : "array",
            "description" : "List of shared footage seekpoints V2",
            "items" : {
              "$ref" : "#/components/schemas/FootageSeekPointV2Type"
            },
            "nullable" : true
          },
          "seekPoints" : {
            "type" : "array",
            "description" : "List of shared footage seekpoints (deprecated)",
            "items" : {
              "$ref" : "#/components/schemas/FootageSeekPointV2Type"
            },
            "nullable" : true
          }
        }
      },
      "Share_GetSharedFootageSeekpointsWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting shared footage seekpoints.",
        "properties" : {
          "duration" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Duration in seconds for the footage seekpoints query",
            "example" : 3600,
            "nullable" : true
          },
          "startTime" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start time in milliseconds for the footage seekpoints query",
            "example" : 1640995200000,
            "nullable" : true
          }
        }
      },
      "Share_GetSharedFootageSeekpointsWSResponse" : {
        "type" : "object",
        "description" : "Response object containing shared footage seekpoints.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "seekPoints" : {
            "type" : "array",
            "description" : "List of shared footage seekpoints",
            "items" : {
              "$ref" : "#/components/schemas/FootageSeekPointType"
            },
            "nullable" : true
          }
        }
      },
      "Share_GetSharedFootageSensorSeekpointsForCameraWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting shared footage sensor seekpoints for a camera.",
        "properties" : {
          "durationSec" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Duration in seconds for the sensor seekpoints query",
            "example" : 3600,
            "nullable" : true
          },
          "startTimeSec" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start time in seconds for the sensor seekpoints query",
            "example" : 1640995200,
            "nullable" : true
          }
        }
      },
      "Share_GetSharedFootageSensorSeekpointsForCameraWSResponse" : {
        "type" : "object",
        "description" : "Response object containing shared footage sensor seekpoints for a camera.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "seekPoints" : {
            "type" : "array",
            "description" : "List of shared footage sensor seekpoints for the camera",
            "items" : {
              "$ref" : "#/components/schemas/Sensor_FootageSensorSeekPointDisplayType"
            },
            "nullable" : true
          }
        }
      },
      "Share_GetSharedLiveStreamInfoWSResponse" : {
        "type" : "object",
        "description" : "Response object containing shared live stream information.",
        "properties" : {
          "aecEnabled" : {
            "type" : "boolean",
            "description" : "Whether AEC is enabled for the shared live stream",
            "example" : true,
            "nullable" : true
          },
          "audioPushToTalkEnabled" : {
            "type" : "boolean",
            "description" : "Whether audio push-to-talk is enabled for the shared live stream",
            "example" : true,
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "fisheyeDisplayMode" : {
            "$ref" : "#/components/schemas/FisheyeDisplayMode"
          },
          "hideOverlay" : {
            "type" : "boolean",
            "description" : "Whether overlay is hidden for the shared live stream",
            "example" : false,
            "nullable" : true
          },
          "hwVariation" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "locationName" : {
            "type" : "string",
            "description" : "Name of the location",
            "example" : "Main Building",
            "nullable" : true
          },
          "mountingDirection" : {
            "type" : "string",
            "description" : "Camera mounting direction of the shared live stream",
            "enum" : [ "DOWN", "UP", "SIDEWAYS", "UNKNOWN" ],
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the shared live stream",
            "example" : "Main Entrance Camera",
            "nullable" : true
          },
          "oldestSegmentSeconds" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Oldest segment time in seconds for the shared live stream",
            "example" : 86400,
            "nullable" : true
          },
          "schedule" : {
            "$ref" : "#/components/schemas/BaseSavedScheduleType"
          },
          "sharedWithMonitoringService" : {
            "type" : "boolean",
            "description" : "Whether the shared live stream is shared with monitoring service",
            "example" : false,
            "nullable" : true
          },
          "tileViews" : {
            "type" : "array",
            "description" : "List of dewarped tile views for the shared live stream",
            "items" : {
              "$ref" : "#/components/schemas/DewarpedView"
            },
            "nullable" : true
          },
          "tz" : {
            "type" : "object",
            "description" : "Time zone of the shared live stream",
            "nullable" : true,
            "properties" : {
              "displayName" : {
                "type" : "string",
                "nullable" : true
              },
              "dstsavings" : {
                "type" : "integer",
                "format" : "int32",
                "nullable" : true
              },
              "id" : {
                "type" : "string",
                "nullable" : true
              },
              "rawOffset" : {
                "type" : "integer",
                "format" : "int32",
                "nullable" : true
              }
            }
          },
          "vodEnabled" : {
            "type" : "boolean",
            "description" : "Whether VOD is enabled for the shared live stream",
            "example" : true,
            "nullable" : true
          }
        }
      },
      "Share_GetSharedMediaUrisWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting shared media URIs."
      },
      "Share_GetSharedMediaUrisWSResponse" : {
        "type" : "object",
        "description" : "Response object containing shared media URIs.",
        "properties" : {
          "audioWanLiveMpdUri" : {
            "type" : "string",
            "description" : "WAN live MPD audio URI for the shared media",
            "example" : "https://example.com/live/audio/mpd/stream",
            "nullable" : true
          },
          "audioWanLiveOpusUri" : {
            "type" : "string",
            "description" : "WAN live Opus audio URI for the shared media",
            "example" : "https://example.com/live/opus/stream",
            "nullable" : true
          },
          "audioWanVodMpdUriTemplate" : {
            "type" : "string",
            "description" : "WAN VOD MPD audio URI template for the shared media",
            "example" : "https://example.com/vod/audio/mpd/{timestamp}",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "wanLiveH264Uri" : {
            "type" : "string",
            "description" : "WAN live H.264 URI for the shared media",
            "example" : "https://example.com/live/h264/stream",
            "nullable" : true
          },
          "wanLiveM3u8Uri" : {
            "type" : "string",
            "description" : "WAN live M3U8 URI for the shared media",
            "example" : "https://example.com/live/m3u8/stream",
            "nullable" : true
          },
          "wanLiveMpdUri" : {
            "type" : "string",
            "description" : "WAN live MPD URI for the shared media",
            "example" : "https://example.com/live/mpd/stream",
            "nullable" : true
          },
          "wanVodM3u8UriTemplate" : {
            "type" : "string",
            "description" : "WAN VOD M3U8 URI template for the shared media",
            "example" : "https://example.com/vod/m3u8/{timestamp}",
            "nullable" : true
          },
          "wanVodMpdUriTemplate" : {
            "type" : "string",
            "description" : "WAN VOD MPD URI template for the shared media",
            "example" : "https://example.com/vod/mpd/{timestamp}",
            "nullable" : true
          }
        }
      },
      "Share_GetSharedPresenceWindowsWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting shared presence windows.",
        "properties" : {
          "durationSec" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Duration in seconds for the presence window query",
            "example" : 3600,
            "nullable" : true
          },
          "startTimeSec" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start time in seconds for the presence window query",
            "example" : 1640995200,
            "nullable" : true
          }
        }
      },
      "Share_GetSharedPresenceWindowsWSResponse" : {
        "type" : "object",
        "description" : "Response object containing shared presence windows.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "presenceWindows" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "description" : "Map of presence types to their time windows",
              "items" : {
                "$ref" : "#/components/schemas/TimeWindowSeconds"
              },
              "nullable" : true
            },
            "description" : "Map of presence types to their time windows",
            "nullable" : true
          }
        }
      },
      "Share_GetSharedTimelapseDataV2WSResponse" : {
        "type" : "object",
        "description" : "Response object containing shared timelapse data V2.",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "Description of the shared timelapse",
            "example" : "Daily timelapse of security events",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "orgName" : {
            "type" : "string",
            "description" : "Name of the organization",
            "example" : "Rhombus Systems",
            "nullable" : true
          },
          "publicTimelapseUuids" : {
            "type" : "array",
            "description" : "List of public timelapse UUIDs",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          },
          "title" : {
            "type" : "string",
            "description" : "Title of the shared timelapse",
            "example" : "Daily Security Review",
            "nullable" : true
          }
        }
      },
      "Share_GetSharedTimelapseDataWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting shared timelapse data."
      },
      "Share_GetSharedTimelapseDataWSResponse" : {
        "type" : "object",
        "description" : "Response object containing shared timelapse data.",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "Description of the shared timelapse",
            "example" : "Daily timelapse of the main entrance",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "orgName" : {
            "type" : "string",
            "description" : "Name of the organization",
            "example" : "Rhombus Systems",
            "nullable" : true
          }
        }
      },
      "Share_GetSharedVideoWallInfoWSResponse" : {
        "type" : "object",
        "description" : "Response object containing shared video wall information.",
        "properties" : {
          "deviceList" : {
            "type" : "array",
            "description" : "List of devices in the shared video wall",
            "items" : {
              "$ref" : "#/components/schemas/Share_SharedVideoWallDeviceType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the shared video wall",
            "example" : "Main Security Wall",
            "nullable" : true
          },
          "settings" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "description" : "Settings for the shared video wall",
              "nullable" : true
            },
            "description" : "Settings for the shared video wall",
            "nullable" : true
          },
          "vodEnabled" : {
            "type" : "boolean",
            "description" : "Whether VOD is enabled for the video wall",
            "example" : true,
            "nullable" : true
          }
        }
      },
      "Share_GetSharedVideoWallMediaUrisWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting shared video wall media URIs.",
        "properties" : {
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Share_GetSharedVideoWallMediaUrisWSResponse" : {
        "type" : "object",
        "description" : "Response object containing shared video wall media URIs.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "wanLiveH264Uri" : {
            "type" : "string",
            "description" : "WAN live H.264 URI for the shared video wall",
            "example" : "https://example.com/live/h264/stream",
            "nullable" : true
          },
          "wanLiveM3u8Uri" : {
            "type" : "string",
            "description" : "WAN live M3U8 URI for the shared video wall",
            "example" : "https://example.com/live/m3u8/stream",
            "nullable" : true
          },
          "wanLiveMpdUri" : {
            "type" : "string",
            "description" : "WAN live MPD URI for the shared video wall",
            "example" : "https://example.com/live/mpd/stream",
            "nullable" : true
          },
          "wanVodM3u8UriTemplate" : {
            "type" : "string",
            "description" : "WAN VOD M3U8 URI template for the shared video wall",
            "example" : "https://example.com/vod/m3u8/{timestamp}",
            "nullable" : true
          },
          "wanVodMpdUriTemplate" : {
            "type" : "string",
            "description" : "WAN VOD MPD URI template for the shared video wall",
            "example" : "https://example.com/vod/mpd/{timestamp}",
            "nullable" : true
          }
        }
      },
      "Share_ShareLinkWSRequest" : {
        "type" : "object",
        "description" : "Request object for sharing a link via phone numbers and email addresses.",
        "properties" : {
          "emailAddresses" : {
            "type" : "array",
            "description" : "List of email addresses to share the link with",
            "items" : {
              "type" : "string",
              "description" : "List of email addresses to share the link with",
              "nullable" : true
            },
            "nullable" : true
          },
          "link" : {
            "type" : "string",
            "description" : "The link to be shared",
            "example" : "https://example.com/shared/video/123",
            "nullable" : true
          },
          "phoneNumbers" : {
            "type" : "array",
            "description" : "List of phone numbers to share the link with",
            "items" : {
              "type" : "string",
              "description" : "List of phone numbers to share the link with",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Share_ShareLinkWSResponse" : {
        "type" : "object",
        "description" : "Response object for sharing a link.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Share_SharedClipPublicType" : {
        "type" : "object",
        "description" : "Public type for shared clips with comprehensive metadata.",
        "properties" : {
          "boundingBoxes" : {
            "type" : "array",
            "description" : "List of bounding boxes for the clip",
            "items" : {
              "$ref" : "#/components/schemas/ClipBoundingBoxType"
            },
            "nullable" : true
          },
          "clipLocation" : {
            "$ref" : "#/components/schemas/MetaDataLocationType"
          },
          "description" : {
            "type" : "string",
            "description" : "Description of the shared clip",
            "example" : "Security incident review from main entrance",
            "nullable" : true
          },
          "deviceBoundingBoxMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "description" : "Map of device UUIDs to their bounding boxes",
              "items" : {
                "$ref" : "#/components/schemas/ClipBoundingBoxType"
              },
              "nullable" : true
            },
            "description" : "Map of device UUIDs to their bounding boxes",
            "nullable" : true
          },
          "deviceMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/MetaDataLocationType"
            },
            "description" : "Map of device UUIDs to their metadata locations",
            "nullable" : true
          },
          "deviceSeekPointMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "description" : "Map of device UUIDs to their seek points",
              "items" : {
                "$ref" : "#/components/schemas/ClipSeekPointV2Type"
              },
              "nullable" : true
            },
            "description" : "Map of device UUIDs to their seek points",
            "nullable" : true
          },
          "durationSec" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Duration in seconds of the clip",
            "example" : 3600,
            "nullable" : true
          },
          "locationNameMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "description" : "Map of location UUIDs to their names",
              "nullable" : true
            },
            "description" : "Map of location UUIDs to their names",
            "nullable" : true
          },
          "locationTimeZoneMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "description" : "Map of location UUIDs to their time zones",
              "nullable" : true,
              "properties" : {
                "displayName" : {
                  "type" : "string",
                  "nullable" : true
                },
                "dstsavings" : {
                  "type" : "integer",
                  "format" : "int32",
                  "nullable" : true
                },
                "id" : {
                  "type" : "string",
                  "nullable" : true
                },
                "rawOffset" : {
                  "type" : "integer",
                  "format" : "int32",
                  "nullable" : true
                }
              }
            },
            "description" : "Map of location UUIDs to their time zones",
            "nullable" : true
          },
          "publicClipUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "seekPoints" : {
            "type" : "array",
            "description" : "List of seek points for the clip",
            "items" : {
              "$ref" : "#/components/schemas/ClipSeekPointV2Type"
            },
            "nullable" : true
          },
          "startTime" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start time in milliseconds of the clip",
            "example" : 1640995200000,
            "nullable" : true
          },
          "thumbnailLocation" : {
            "$ref" : "#/components/schemas/MetaDataLocationType"
          }
        }
      },
      "Share_SharedVideoWallDeviceType" : {
        "type" : "object",
        "description" : "Device type for shared video walls.",
        "properties" : {
          "fisheyeDisplayMode" : {
            "$ref" : "#/components/schemas/FisheyeDisplayMode"
          },
          "hwVariation" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "locationName" : {
            "type" : "string",
            "description" : "Name of the location for the shared video wall device",
            "example" : "Main Building",
            "nullable" : true
          },
          "mountingDirection" : {
            "type" : "string",
            "description" : "Camera mounting direction of the shared video wall device",
            "enum" : [ "DOWN", "UP", "SIDEWAYS", "UNKNOWN" ],
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the shared video wall device",
            "example" : "Camera 1",
            "nullable" : true
          },
          "tileViews" : {
            "type" : "array",
            "description" : "List of dewarped tile views for the shared video wall device",
            "items" : {
              "$ref" : "#/components/schemas/DewarpedView"
            },
            "nullable" : true
          },
          "tz" : {
            "type" : "object",
            "description" : "Time zone of the shared video wall device",
            "nullable" : true,
            "properties" : {
              "displayName" : {
                "type" : "string",
                "nullable" : true
              },
              "dstsavings" : {
                "type" : "integer",
                "format" : "int32",
                "nullable" : true
              },
              "id" : {
                "type" : "string",
                "nullable" : true
              },
              "rawOffset" : {
                "type" : "integer",
                "format" : "int32",
                "nullable" : true
              }
            }
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "SharedClipGroupWithDetailsType" : {
        "type" : "object",
        "description" : "Detailed information about the shared clip group",
        "properties" : {
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "expirationTimeSecs" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "sharedClips" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SharedClipWithDetailsType"
            },
            "nullable" : true
          },
          "title" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "SharedClipGroupWrapperType" : {
        "type" : "object",
        "description" : "List of shared clip groups",
        "properties" : {
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "expirationTime" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "isSecured" : {
            "type" : "boolean",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "sharedClips" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SharedClipType"
            },
            "nullable" : true
          },
          "title" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "SharedClipGroupWrapperV2Type" : {
        "type" : "object",
        "description" : "List of shared clip groups",
        "properties" : {
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "expirationTimeSecs" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "isSecured" : {
            "type" : "boolean",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "sharedClips" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SharedClipV2Type"
            },
            "nullable" : true
          },
          "title" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "SharedClipType" : {
        "type" : "object",
        "properties" : {
          "clipMetaData" : {
            "$ref" : "#/components/schemas/ClipMetaDataType"
          },
          "deviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "deviceUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "SharedClipV2Type" : {
        "type" : "object",
        "properties" : {
          "clipLocation" : {
            "$ref" : "#/components/schemas/MetaDataLocationType"
          },
          "deviceUuidMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/MetaDataLocationType"
            },
            "nullable" : true
          },
          "durationSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "startTime" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "thumbnailLocation" : {
            "$ref" : "#/components/schemas/MetaDataLocationType"
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "SharedClipWithDetailsType" : {
        "type" : "object",
        "properties" : {
          "boundingBoxes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ClipBoundingBoxType"
            },
            "nullable" : true
          },
          "clipLocation" : {
            "$ref" : "#/components/schemas/MetaDataLocationType"
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "deviceUuidMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/MetaDataLocationType"
            },
            "nullable" : true
          },
          "durationSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "seekPoints" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ClipSeekPointV2Type"
            },
            "nullable" : true
          },
          "startTime" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "thumbnailLocation" : {
            "$ref" : "#/components/schemas/MetaDataLocationType"
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "SharedTimelapseClipType" : {
        "type" : "object",
        "properties" : {
          "clipDuration" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "clipFormat" : {
            "type" : "string",
            "enum" : [ "MPEG", "GIF" ],
            "nullable" : true
          },
          "sources" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TimelapseSource"
            },
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "videoStartTime" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "videoStopTime" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "SharedTimelapseGroupWrapperType" : {
        "type" : "object",
        "description" : "List of shared timelapse groups for the organization",
        "properties" : {
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "expirationTimeSecs" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "isSecured" : {
            "type" : "boolean",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "sharedTimelapses" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SharedTimelapseClipType"
            },
            "nullable" : true
          },
          "title" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "ShellyDevice" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "canSendCommands" : {
            "type" : "string",
            "enum" : [ "AUTHORIZED", "UNAUTHORIZED", "UNKNOWN" ],
            "nullable" : true
          },
          "channels" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "deviceType" : {
            "type" : "string",
            "enum" : [ "RELAY", "LIGHT", "ROLLER" ],
            "nullable" : true
          },
          "hostUrl" : {
            "type" : "string",
            "nullable" : true
          },
          "isOnline" : {
            "type" : "boolean",
            "nullable" : true
          },
          "temperature" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "voltage" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          }
        }
      },
      "ShellyType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "canSendDiagnosticNotifications" : {
              "type" : "boolean",
              "nullable" : true
            },
            "diagnosticQuietPeriodSecs" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "shellyDeviceMap" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/ShellyDevice"
              },
              "nullable" : true
            },
            "thirdPartyDeviceToLocationMap" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "string",
                "format" : "RUUID",
                "description" : "base 64 (url-safe) uuid string",
                "example" : "AAAAAAAAAAAAAAAAAAAAAA",
                "nullable" : true
              },
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Shipment" : {
        "type" : "object",
        "properties" : {
          "methodOfPaymentCode" : {
            "type" : "string",
            "nullable" : true
          },
          "notes" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "serviceLevel" : {
            "type" : "string",
            "enum" : [ "NEXT_DAY", "SECOND_DAY", "THREE_DAY", "FOUR_DAY", "GROUND", "LOCAL", "NEXT_DAY_MORNING", "WAREHOUSE" ],
            "nullable" : true
          },
          "shipDateMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "shippingMethod" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "ShippedItemType" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "partNumber" : {
            "type" : "string",
            "nullable" : true
          },
          "quantityShipped" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "serialNumber" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Shipper" : {
        "type" : "object",
        "properties" : {
          "address1" : {
            "type" : "string",
            "nullable" : true
          },
          "address2" : {
            "type" : "string",
            "nullable" : true
          },
          "address3" : {
            "type" : "string",
            "nullable" : true
          },
          "city" : {
            "type" : "string",
            "nullable" : true
          },
          "companyName" : {
            "type" : "string",
            "nullable" : true
          },
          "contactName" : {
            "type" : "string",
            "nullable" : true
          },
          "country" : {
            "type" : "string",
            "nullable" : true
          },
          "postalCode" : {
            "type" : "string",
            "nullable" : true
          },
          "referenceId" : {
            "type" : "string",
            "nullable" : true
          },
          "state" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "SimpleAuditEventType" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "auditEvent" : {
            "type" : "string",
            "enum" : [ "THREAT_CASE_ESCALATED", "THREAT_CASE_CANCELLED", "THREAT_CASE_DISMISSED", "THREAT_CASE_DELETED", "THREAT_CASE_DELETE_BY_STATUS", "PIN_CREATED", "PIN_DELETED", "ALM_PIN_CREATE", "ALM_PIN_BULK_CREATE", "ALM_PIN_UPDATE", "ALM_PIN_ROTATE", "ALM_PIN_BULK_ROTATE", "ALM_PIN_DELETE", "BASIC_AUTH_SUCCESS", "BASIC_AUTH_FAILURE", "SAML_LOGIN_WEB", "LOGIN_WEB", "PASSWORDLESS_LOGIN_WEB", "PARTNER_LOGIN_WEB", "PARTNER_PASSWORDLESS_LOGIN_WEB", "SAML_LOGIN_FAILURE_WEB", "LOGIN_FAILURE_WEB", "RHOMBUS_KEY_LOGIN", "RHOMBUS_KEY_PASSWORDLESS_LOGIN", "RHOMBUS_KEY_SAML_LOGIN", "LOGOUT_WEB", "PARTNER_LOGOUT_WEB", "WEB_CONSOLE_ACCESS", "MOBILE_CONSOLE_ACCESS", "SAML_LOGIN_MOBILE", "PARTNER_LOGIN_MOBILE", "PARTNER_PASSWORDLESS_LOGIN_MOBILE", "LOGIN_MOBILE", "PASSWORDLESS_LOGIN_MOBILE", "SAML_LOGIN_FAILURE_MOBILE", "LOGIN_FAILURE_MOBILE", "LOGOUT_MOBILE", "PARTNER_LOGOUT_MOBILE", "MOBILE_ACCESS", "PARTNER_LOGIN_MOBIlE_REFRESH", "LOGIN_MOBIlE_REFRESH", "RHOMBUS_KEY_LOGIN_REFRESH", "CAMERA_WIFI_NETWORK_CHANGED", "CAMERA_FORCED_REBOOT", "AUDIO_GATEWAY_FORCED_REBOOT", "ENVIRONMENTAL_GATEWAY_FORCED_REBOOT", "DOORBELL_CAMERA_FORCED_REBOOT", "BADGE_READER_FORCED_REBOOT", "FIRMWARE_UPDATE_CAMERA", "DELETE_CAMERA", "DELETE_USER", "DELETE_LOCATION", "LOCATION_UPDATED", "DELETE_ROLE", "ERASE_CAMERA", "POLICY_UPDATE", "POLICY_DELETE", "POLICY_PAUSED_LOCATION", "POLICY_PAUSED_DEVICE", "POLICY_PAUSED_COMPONENT_COMPOSITE", "CREATE_POLICY_ADDENDUM", "DEVICE_REGISTERED", "DEVICE_UPDATE", "DEVICE_SETTINGS_UPDATE", "REVERT_TO_DEFAULTS", "DEVICE_FEATURE_UPDATE", "DEVICE_ORG_REASSIGN", "CLAIMKEY_RENEWAL_CREATED", "LICENSES_CLAIMED", "LICENSES_RETURNED", "LICENSE_ASSIGNED", "LICENSE_CREATED", "LICENSE_UPDATED", "USER_UPDATE", "USER_CREATE", "USER_IMPORT", "BULK_PROVISION_CREDENTIALS", "ROLE_CREATE", "POLICY_CREATE", "PARTNER_CLIENT_CREATE", "PARTNER_CUSTOMIZE_CLIENT", "PARTNER_CUSTOMIZE_CLIENT_DEVICE", "ORG_UPDATE", "DELETE_ORG", "DISABLE_ORG", "CREATE_ORG", "ROLE_UPDATE", "USER_ROLE_UPDATE", "USER_EMAIL_UPDATE", "TIMELAPSE_CREATE", "TIMELAPSE_DELETE", "ALERT_DISMISS", "ALL_ALERT_DISMISS", "SAVED_CLIP_CREATE", "SAVED_CLIP_DELETE", "CLIP_GROUP_CREATED", "CLIP_GROUP_DELETE", "SHARED_CLIP_DELETE", "SHARED_CLIP_CREATE", "SHARED_LINK_SENT", "SHARED_LIVE_VIDEO_STREAM_WITH_PASSWORD_CREATE", "SHARED_LIVE_VIDEO_STREAM_WITHOUT_PASSWORD_CREATE", "SHARED_LIVE_VIDEO_STREAM_DELETE", "SHARED_VIDEOWALL_WITH_PASSWORD_CREATE", "SHARED_VIDEOWALL_WITHOUT_PASSWORD_CREATE", "SHARED_VIDEOWALL_DELETE", "RAW_HTTP_STREAM_CREATED", "RAW_HTTP_STREAM_DELETED", "SETUP_VIRTUAL_MFA_DEVICE", "DELETE_VIRTUAL_MFA_DEVICE", "SETUP_SCIM_API_ACCESS", "REVOKE_SCIM_API_ACCESS", "AUDIT_EXPORT", "COUNT_EXPORT", "DIAGNOSTIC_EXPORT", "INVENTORY_EXPORT", "USERS_EXPORT", "UPTIME_EXPORT", "SUPPORT_TICKET_OPEN", "RMA_OPEN", "FEEDBACK_CREATE", "SUPPORT_ACCESS_GRANT", "SUPPORT_ACCESS_REVOKE", "SUPPORT_PARTNER_ADD", "SUPPORT_PARTNER_REMOVE", "SUPPORT_PARTNER_LOGIN_ACCESS_EXPIRED", "SUPPORT_SEARCH_TICKETS", "ACCEPT_UAP", "ACCEPT_RHOMBUS_UAP", "ACCEPT_ALERTMONITORING_UAP", "CREATE_SEEKPOINT", "DELETE_CUSTOM_SEEKPOINT", "UPDATE_INTEGRATION_SAML", "UPDATE_INTEGRATION_SLACK", "UPDATE_INTEGRATION_SLACK_V2", "DELETE_INTEGRATION_SLACK_V2", "UPDATE_INTEGRATION_BOX", "DELETE_INTEGRATION_BOX", "UPDATE_INTEGRATION_GOOGLE", "DELETE_INTEGRATION_GOOGLE", "UPDATE_INTEGRATION_GOOGLE_V2", "DELETE_INTEGRATION_GOOGLE_V2", "UPDATE_INTEGRATION_PAGERDUTY", "DELETE_INTEGRATION_PAGERDUTY", "UPDATE_INTEGRATION_SERVICENOW", "DELETE_INTEGRATION_SERVICENOW", "UPDATE_INTEGRATION_OFFICE365", "DELETE_INTEGRATION_OFFICE365", "UPDATE_INTEGRATION_DROPBOX", "DELETE_INTEGRATION_DROPBOX", "UPDATE_INTEGRATION_SQUARE", "DELETE_INTEGRATION_SQUARE", "UPDATE_INTEGRATION_AWS", "DELETE_INTEGRATION_AWS", "UPDATE_INTEGRATION_HALO", "DELETE_INTEGRATION_HALO", "UPDATE_INTEGRATION_WEBHOOK", "DELETE_INTEGRATION_WEBHOOK", "UPDATE_INTEGRATION_EMAIL", "DELETE_INTEGRATION_EMAIL", "UPDATE_INTEGRATION_MATTERMOST", "DELETE_INTEGRATION_MATTERMOST", "UPDATE_INTEGRATION_OPENPATH", "DELETE_INTEGRATION_OPENPATH", "UPDATE_INTEGRATION_AVIGILON_ALTA", "DELETE_INTEGRATION_AVIGILON_ALTA", "UPDATE_INTEGRATION_DICE", "DELETE_INTEGRATION_DICE", "UPDATE_INTEGRATION_LUMEO", "DELETE_INTEGRATION_LUMEO", "UPDATE_INTEGRATION_DEVICE", "DELETE_INTEGRATION_DEVICE", "UPDATE_INTEGRATION_GUESTMANAGEMENT", "DELETE_INTEGRATION_GUESTMANAGEMENT", "UPDATE_GUESTMANAGEMENT_SETTINGS", "DELETE_GUESTMANAGEMENT_SETTINGS", "INVITE_GUEST", "CREATE_GUEST", "CHECKIN_GUEST", "CHECKOUT_GUEST", "UPDATE_GUEST", "DELETE_GUEST", "ACTIVATE_KIOSK", "UPDATE_INTEGRATION_OMNIALERT", "DELETE_INTEGRATION_OMNIALERT", "UPDATE_INTEGRATION_OPENTECHALLIANCE", "DELETE_INTEGRATION_OPENTECHALLIANCE", "UPDATE_INTEGRATION_TOAST", "DELETE_INTEGRATION_TOAST", "UPDATE_INTEGRATION_KISI", "DELETE_INTEGRATION_KISI", "UPDATE_INTEGRATION_BRIVO", "DELETE_INTEGRATION_BRIVO", "UPDATE_INTEGRATION_BUTTERFLYMX", "DELETE_INTEGRATION_BUTTERFLYMX", "UPDATE_INTEGRATION_ENVOY", "DELETE_INTEGRATION_ENVOY", "CREATE_ENVOY_INVITE", "UPDATE_INTEGRATION_SALTO", "UPDATE_INTEGRATION_PDK", "DELETE_INTEGRATION_PDK", "UPDATE_INTEGRATION_GENEA", "DELETE_INTEGRATION_GENEA", "UPDATE_INTEGRATION_MICROSOFTTEAMS", "DELETE_INTEGRATION_MICROSOFTTEAMS", "UPDATE_INTEGRATION_AMT", "DELETE_INTEGRATION_AMT", "UPDATE_INTEGRATION_PLACEOS", "DELETE_INTEGRATION_PLACEOS", "UPDATE_INTEGRATION_INTUIFACE", "DELETE_INTEGRATION_INTUIFACE", "UPDATE_INTEGRATION_INFORMACAST", "DELETE_INTEGRATION_INFORMACAST", "UPDATE_INTEGRATION_INNERRANGE", "DELETE_INTEGRATION_INNERRANGE", "UPDATE_INTEGRATION_SHELLY", "DELETE_INTEGRATION_SHELLY", "UPDATE_INTEGRATION_FLIC", "DELETE_INTEGRATION_FLIC", "UPDATE_INTEGRATION_NINEONEONECELLULAR", "DELETE_INTEGRATION_NINEONEONECELLULAR", "UPDATE_INTEGRATION_PIMLOC", "DELETE_INTEGRATION_PIMLOC", "UPDATE_INTEGRATION_RAPTOR", "DELETE_INTEGRATION_RAPTOR", "UPDATE_INTEGRATION_LLM", "DELETE_INTEGRATION_LLM", "UPDATE_INTEGRATION_NOONLIGHT", "UPDATE_INTEGRATION_ALARM_MONITORING", "ENABLE_LIVE_ALARM_MONITORING", "ENABLE_LIVE_ALARM_MONITORING_LOCATION", "CREATE_ALARM_MONITORING_SETTINGS", "UPDATE_ALARM_MONITORING_SETTINGS", "DELETE_ALARM_MONITORING_SETTINGS", "ENABLE_ALARM_MONITORING_SETTINGS", "DISABLE_ALARM_MONITORING_SETTINGS", "REPORT_VEHICLE_EVENT", "API_TOKEN_REQUEST", "API_TOKEN_REVOKE", "API_INVOCATION", "API_OAUTH_TOKEN_REQUEST", "API_OAUTH_TOKEN_REFRESH", "API_OAUTH_TOKEN_REVOKE", "API_OAUTH_INVOCATION", "API_OAUTH_SUBMIT_APPLICATION", "API_OAUTH_UPDATE_APPLICATION", "API_OAUTH_DELETE_APPLICATION", "API_OAUTH_AUTHORIZE", "VIDEO_WALL_CREATE", "VIDEO_WALL_UPDATE", "VIDEO_WALL_DELETE", "VIEW_SHARE_TIMELAPSE", "VIEW_SHARE_CLIP", "VIEW_SHARE_STREAM", "VIEW_SHARE_VIDEOWALL", "VIEW_CAMERA_VOD", "CAMERA_POLICY_UPDATE", "CAMERA_POLICY_CREATE", "CAMERA_POLICY_DELETE", "TAG_POLICY_UPDATE", "TAG_POLICY_CREATE", "TAG_POLICY_DELETE", "CLIMATE_POLICY_UPDATE", "CLIMATE_POLICY_CREATE", "CLIMATE_POLICY_DELETE", "DOOR_POLICY_UPDATE", "DOOR_POLICY_CREATE", "DOOR_POLICY_DELETE", "DOOR_SCHEDULE_EXCEPTION_UPDATE", "DOOR_SCHEDULE_EXCEPTION_CREATE", "DOOR_SCHEDULE_EXCEPTION_DELETE", "ACCESS_CONTROLLED_DOOR_POLICY_UPDATE", "ACCESS_CONTROLLED_DOOR_POLICY_CREATE", "ACCESS_CONTROLLED_DOOR_POLICY_DELETE", "VIDEO_INTERCOM_POLICY_UPDATE", "VIDEO_INTERCOM_POLICY_CREATE", "VIDEO_INTERCOM_POLICY_DELETE", "OCCUPANCY_POLICY_UPDATE", "OCCUPANCY_POLICY_CREATE", "OCCUPANCY_POLICY_DELETE", "AUDIO_POLICY_UPDATE", "AUDIO_POLICY_CREATE", "AUDIO_POLICY_DELETE", "SCHEDULE_CREATE", "SCHEDULE_DELETE", "SCHEDULE_UPDATE", "CUSTOM_EVENT_CREATE", "CUSTOM_EVENT_DELETE", "CUSTOM_EVENT_UPDATE", "UPLOAD_FLOORPLAN", "ORG_AUDIO_RECORD_UPDATE", "ORG_AUDIO_ANALYSIS_UPDATE", "ORG_LLM_USAGE_UPDATE", "DOOR_ACCESS_UNLOCK", "RHOMBUS_KEY_DOOR_UNLOCK", "UPLOAD_ACCESS_CONTROLLED_DOOR", "UPLOAD_USER_PROFILE_PICTURE", "ACCESS_GRANT_CREATE", "ACCESS_GRANT_UPDATE", "ACCESS_GRANT_DELETE", "ACCESS_REVOCATION_CREATE", "ACCESS_REVOCATION_UPDATE", "ACCESS_REVOCATION_DELETE", "ACCESS_CONTROLLED_DOOR_CREATE", "ACCESS_CONTROLLED_DOOR_UPDATE", "ACCESS_CONTROLLED_DOOR_DELETE", "AC_CRED_RHOMBUS_SECURE_CSN_CREATE", "AC_CRED_RHOMBUS_SECURE_CSN_UPDATE", "AC_CRED_RHOMBUS_SECURE_CSN_DELETE", "AC_CRED_RHOMBUS_SECURE_CSN_REVOKED", "AC_CRED_STANDARD_CSN_CREATE", "AC_CRED_STANDARD_CSN_UPDATE", "AC_CRED_STANDARD_CSN_DELETE", "AC_CRED_STANDARD_CSN_REVOKED", "AC_CRED_RHOMBUS_SECURE_MOBILE_CREATE", "AC_CRED_RHOMBUS_SECURE_MOBILE_UPDATE", "AC_CRED_RHOMBUS_SECURE_MOBILE_DELETE", "AC_CRED_RHOMBUS_SECURE_MOBILE_REVOKED", "AC_CRED_PIN_CREATE", "AC_CRED_PIN_BULK_CREATE", "AC_CRED_PIN_UPDATE", "AC_CRED_PIN_ROTATE", "AC_CRED_PIN_BULK_ROTATE", "AC_CRED_PIN_DELETE", "AC_CRED_PIN_REVOKED", "AC_CRED_WIEGAND_CREATE", "AC_CRED_WIEGAND_UPDATE", "AC_CRED_WIEGAND_DELETE", "AC_CRED_WIEGAND_REVOKED", "AC_CRED_NOTE_UPDATE", "AC_LOCKDOWN_PLAN_CREATED", "AC_LOCKDOWN_PLAN_UPDATED", "AC_LOCKDOWN_PLAN_DELETED", "AC_LOCKDOWN_ACTIVATED", "AC_LOCKDOWN_DEACTIVATED", "AC_COMPONENT_POWER_CYCLE", "AC_DOOR_STATE_OVERRIDE_APPLIED", "AC_DOOR_STATE_OVERRIDE_CANCELLED", "SCIM_GET_ALL_USERS", "SCIM_POST_CREATE_USER", "SCIM_PUT_UPDATE_USER", "SCIM_PATCH_UPDATE_USER", "SCIM_GET_USER_BY_ID", "SCIM_DELETE_USER_BY_ID", "SCIM_GET_ALL_GROUPS", "SCIM_POST_CREATE_GROUP", "SCIM_PUT_UPDATE_GROUP", "SCIM_PATCH_UPDATE_GROUP", "SCIM_GET_GROUP_BY_ID", "SCIM_DELETE_GROUP_BY_ID", "CREATE_ACCESS_CONTROL_GROUP", "UPDATE_ACCESS_CONTROL_GROUP", "DELETE_ACCESS_CONTROL_GROUP", "RULE_CREATE", "RULE_DELETE", "RULE_UPDATE", "RULE_PAUSE", "UPLOAD_FACES", "UPDATE_FACE", "REPORT_FACE_EVENT", "FACE_EVENT_UPDATED", "FACE_EVENT_DELETED", "FACE_PERSON_CREATED", "FACE_PERSON_UPDATED", "FACE_PERSON_DELETED", "FACE_MATCHMAKER_CREATED", "FACE_MATCHMAKER_DELETED", "FACE_MATCHMAKER_UPLOADED", "FACE_MATCHING_CONFIG_UPDATED", "EXPUNGE_FACES_ORG", "EXPUNGE_VEHICLES_ORG", "DEVICE_NETWORK_CONFIGURATION_CHANGE", "KIOSK_UPDATED", "KIOSK_DELETED", "KIOSK_CREATED", "UPDATE_APERIO_FIRMWARE", "UPDATE_INTEGRATION_APERIO", "DELETE_INTEGRATION_APERIO", "THIRD_PARTY_CAMERA_CREATE", "THIRD_PARTY_CAMERA_DELETE", "THIRD_PARTY_CAMERA_UPDATED", "THIRD_PARTY_CAMERA_ASSIGNED_TO_CORE", "THIRD_PARTY_CAMERA_ASSIGNED_TO_LITE", "THIRD_PARTY_CAMERA_UNASSIGNED", "THIRD_PARTY_CAMERA_PASSWORD_CREATE", "THIRD_PARTY_CAMERA_PASSWORD_DELTE", "CREATE_CHATBOT_CONFIG", "UPDATE_CHATBOT_CONFIG", "DELETE_CHATBOT_CONFIG", "UNKNOWN" ],
            "nullable" : true
          }
        }
      },
      "SimpleDeviceActivityEventType" : {
        "type" : "object",
        "discriminator" : {
          "propertyName" : "activityEvent"
        },
        "nullable" : true,
        "properties" : {
          "activityEvent" : {
            "$ref" : "#/components/schemas/ActivityEnum"
          }
        },
        "title" : "DeviceActivityEventType"
      },
      "SimpleDiagnosticEventType" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "diagnosticEvent" : {
            "type" : "string",
            "enum" : [ "CAMERA_CONNECTED", "CAMERA_DISCONNECTED", "STARTUP", "GATEWAY_CONNECTED", "GATEWAY_DISCONNECTED", "UPDATE_STARTED", "UPDATE_FIRMWARE_DOWNLOADED", "UPDATE_FIRMWARE_APPLIED", "UPDATE_STARTING_REBOOT", "UPDATE_FAILED_MD5_MISMATCH", "UPDATE_FAILED_ACCESS_DENIED", "UPDATE_FAILED_MITM", "UPDATE_FAILED_CONNNECTION_REFUSED", "UPDATE_FAILED_CONNNECTION_TIMEOUT", "UPDATE_FAILED_CONNECTION_REFUSED", "UPDATE_FAILED_CONNECTION_TIMEOUT", "UPDATE_FAILED_DNS_FAILURE", "UPDATE_RUNNING", "BLE_CONNECTED", "BLE_CONNECTION_FAILED", "BLE_DISCONNECTED", "BLE_OP_SUCCESS", "BLE_OP_FAILURE", "UPLOAD_CLIP_SUCCESS", "UPLOAD_CLIP_FAILURE", "NOTIFICATION_FAILURE", "USB_FAILURE_REBOOT", "PERSISTENT_STORAGE_FAILURE", "PING", "FORCED_REBOOT", "AUTO_REBOOT", "AUDIO_HARDWARE_NOT_DETECTED", "ENCRYPTED_CONTAINER_FAILURE_CREATE", "ENCRYPTED_CONTAINER_FAILURE_OPEN", "ENCRYPTED_CONTAINER_FAILURE_MOUNT", "VIDEO_HARDWARE_FAILURE", "WIFI_NETWORK_CHANGED", "AI_ENGINE_DOWNLOADED", "AI_ENGINE_DOWNLOAD_FAILED_MD5_MISMATCH", "AI_ENGINE_CONFIGURED", "AI_ENGINE_CONFIGURATION_FAILED", "MITM_FAILURE", "SERVER_RECONNECT", "AP_CHANGED", "WATCHDOG_KILLED_AGENT", "WATCHDOG_DID_RESET", "CLIMATE_OFFLINE", "CLIMATE_ONLINE", "CLIMATE_LOW_BATTERY", "CLIMATE_PROBE_CONNECTED", "CLIMATE_PROBE_DISCONNECTED", "DOOR_OFFLINE", "DOOR_ONLINE", "DOOR_LOW_BATTERY", "OCCUPANCY_SENSOR_ONLINE", "OCCUPANCY_SENSOR_OFFLINE", "OCCUPANCY_SENSOR_LOW_BATTERY", "BUTTON_OFFLINE", "BUTTON_ONLINE", "BUTTON_LOW_BATTERY", "PROXIMITY_LOW_BATTERY", "DOOR_CONTROLLER_CONNECTED", "DOOR_CONTROLLER_DISCONNECTED", "APERIO_LOW_BATTERY", "APERIO_FLAT_BATTERY", "APERIO_OK_BATTERY", "APERIO_GW_CONNECTED", "APERIO_GW_DISCONNECTED", "BADGE_READER_CONNECTED", "BADGE_READER_DISCONNECTED", "REBOOT", "NETWORK_INTERRUPTION", "OPENPATH_WEBHOOK_FAILURE", "TOAST_WEBHOOK_FAILURE", "KISI_WEBHOOK_FAILURE", "BRIVO_WEBHOOK_FAILURE", "HALO_WEBHOOK_FAILURE", "SALTO_WEBHOOK_FAILURE", "SQUARE_WEBHOOK_FAILURE", "BUTTERFLYMX_WEBHOOK_FAILURE", "ENVOY_WEBHOOK_FAILURE", "GENEA_WEBHOOK_FAILURE", "PRODATAKEY_WEBHOOK_FAILURE", "AMT_WEBHOOK_FAILURE", "PLACEOS_WEBHOOK_FAILURE", "OMNIALERT_WEBHOOK_FAILURE", "FLIC_WEBHOOK_FAILURE", "PIMLOC_WEBHOOK_FAILURE", "NINEONEONECELLULAR_WEBHOOK_FAILURE", "CV_FAILURE", "NFC_HW_FAILURE", "CONFIG_ERROR", "HW_FAILURE", "KEYPAD_ONLINE", "KEYPAD_OFFLINE", "ALM_OVERAGE_APPROACHING", "ALM_OVERAGE_REACHED", "ALM_OVERAGE_EXCEEDED", "ALM_EXCESSIVE_VERIFICATIONS", "ALM_AUTHORITIES_CONTACTED", "ALM_MONITORING_ENABLED", "ALM_MONITORING_DISABLED", "ALM_MONITORING_SETTINGS_CHANGE", "ALM_THREAT_CASE_CLOSED", "ALM_THREAT_DETECTED", "KIOSK_OFFLINE", "KIOSK_ONLINE", "TUNNELED_DEVICE_CONNECTED", "TUNNELED_DEVICE_DISCONNECTED", "SD_CARD_CHANGED", "SUPERVISION_CUT_DETECTED", "SUPERVISION_SHORT_DETECTED", "SUPERVISION_INVALID_SETUP", "THIRD_PARTY_DEVICE_CONNECTED", "THIRD_PARTY_DEVICE_DISCONNECTED", "UNKNOWN" ],
            "nullable" : true
          }
        }
      },
      "SlackSettings" : {
        "type" : "object",
        "properties" : {
          "accessToken" : {
            "type" : "string",
            "nullable" : true
          },
          "channel" : {
            "type" : "string",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "webhookUrl" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "SlackSettingsV2" : {
        "type" : "object",
        "properties" : {
          "channelId" : {
            "type" : "string",
            "nullable" : true
          },
          "channelName" : {
            "type" : "string",
            "nullable" : true
          },
          "code" : {
            "type" : "string",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabledTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "enablingUser" : {
            "type" : "string",
            "nullable" : true
          },
          "enablingUserUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "orgAccessToken" : {
            "type" : "string",
            "nullable" : true
          },
          "sendChannelNotifications" : {
            "type" : "boolean",
            "nullable" : true
          },
          "sendUserNotifications" : {
            "type" : "boolean",
            "nullable" : true
          },
          "userMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/UserInfo"
            },
            "description" : "A HashMap of <RhombusOrgUser uuid : Slack user uuid, user access token>. This stores the information for each Slack user.",
            "nullable" : true
          },
          "webhookUrl" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "SplicedClipProgress" : {
        "type" : "object",
        "properties" : {
          "region" : {
            "type" : "string",
            "nullable" : true
          },
          "segmentsUploaded" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "totalSegments" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "SplicedClipType" : {
        "type" : "object",
        "description" : "List of spliced clips currently in progress",
        "properties" : {
          "accessSettings" : {
            "$ref" : "#/components/schemas/ClipAccessSettings"
          },
          "analyzeClip" : {
            "type" : "boolean",
            "nullable" : true
          },
          "clipTargetLocation" : {
            "$ref" : "#/components/schemas/MetaDataLocationType"
          },
          "clipUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "consoleDelete" : {
            "type" : "boolean",
            "nullable" : true
          },
          "deleted" : {
            "type" : "boolean",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "deviceMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/SplicedClipProgress"
            },
            "nullable" : true
          },
          "devicePresentationOrder" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "DeviceFacetUuid",
              "description" : "RUUID with optional appended facet information",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
              "nullable" : true
            },
            "nullable" : true
          },
          "deviceUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          },
          "deviceUuidMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/SplicedClipProgress"
            },
            "nullable" : true
          },
          "deviceUuidToAlteredViewMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/AlteredView"
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "deviceUuidToFisheyePresentationMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/DewarpedView"
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "duration" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "integrationUploadList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/IntegrationEnum"
            },
            "nullable" : true
          },
          "isPolicyEvent" : {
            "type" : "boolean",
            "nullable" : true
          },
          "metadataBucketRegion" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "saveClip" : {
            "type" : "boolean",
            "nullable" : true
          },
          "saveFrame" : {
            "type" : "boolean",
            "nullable" : true
          },
          "segmentsUploaded" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "sendToSharedStorage" : {
            "type" : "boolean",
            "nullable" : true
          },
          "startTime" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "status" : {
            "type" : "string",
            "enum" : [ "INITIATING", "UPLOADING", "RENDERING", "FAILED", "COMPLETE", "OFFLINE", "UNKNOWN" ],
            "nullable" : true
          },
          "thumbnailRelativeSecond" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "title" : {
            "type" : "string",
            "nullable" : true
          },
          "totalSegments" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "transactionUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "SquareSettings" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "locationIdToDeviceUuidsMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "RUUID",
                "description" : "base 64 (url-safe) uuid string",
                "example" : "AAAAAAAAAAAAAAAAAAAAAA",
                "nullable" : true
              },
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "StandardCsnType" : {
        "type" : "object",
        "allOf" : [ ],
        "nullable" : true,
        "properties" : {
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "endDateEpochSecExclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "lastUsedAccessControlledDoorUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "lastUsedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "lastUsedLocationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "lowercaseHexValue" : {
            "type" : "string",
            "nullable" : true,
            "readOnly" : true
          },
          "managedCredUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "note" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "startDateEpochSecInclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/AccessControlCredentialEnumType"
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "value" : {
            "type" : "string",
            "nullable" : true
          },
          "workflowStatus" : {
            "$ref" : "#/components/schemas/AccessControlCredentialWorkflowStatusEnumType"
          }
        }
      },
      "StaticEpochSecondsProvisioner" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "value" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "type" : {
            "type" : "string"
          }
        }
      },
      "Stats" : {
        "type" : "object",
        "properties" : {
          "avg" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "stddev" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          }
        }
      },
      "StatsCredentialReference" : {
        "type" : "object",
        "properties" : {
          "credentialUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "StatusType" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "family" : {
            "type" : "string",
            "enum" : [ "INFORMATIONAL", "SUCCESSFUL", "REDIRECTION", "CLIENT_ERROR", "SERVER_ERROR", "OTHER" ],
            "nullable" : true
          },
          "reasonPhrase" : {
            "type" : "string",
            "nullable" : true
          },
          "statusCode" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "StreamTypeEnum" : {
        "type" : "string",
        "enum" : [ "USER", "ALARM_MONITORING", "DICE", "LUMEO", "INFORMACAST", "RAPIDSOS", "UNKNOWN" ]
      },
      "StreamingOutput" : {
        "type" : "object",
        "nullable" : true
      },
      "SubLocationsHierarchyKey" : {
        "type" : "object",
        "format" : "SubLocationsHierarchyKey",
        "description" : "A sequence of one or more base 64 (url-safe) uuid substrings. These substrings are separated by dots (.).",
        "example" : "AAAAAAAAAAAAAAAAAAAAAA.AAAAAAAAAAAAAAAAAAAAAA.AAAAAAAAAAAAAAAAAAAAAA",
        "properties" : {
          "locationUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "SummaryCountTimeSeriesDataPointType" : {
        "type" : "object",
        "description" : "List of summary count time series data points",
        "properties" : {
          "avgEventCountMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/EventCount"
            },
            "nullable" : true
          },
          "dateLocal" : {
            "type" : "string",
            "nullable" : true
          },
          "dateUtc" : {
            "type" : "string",
            "nullable" : true
          },
          "maxEventCountMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/EventCount"
            },
            "nullable" : true
          },
          "minEventCountMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/EventCount"
            },
            "nullable" : true
          }
        }
      },
      "SupervisionModeEnumType" : {
        "type" : "string",
        "enum" : [ "CUT_DETECT", "SHORT_DETECT", "CUT_AND_SHORT_DETECT" ]
      },
      "SupervisionStateEnumType" : {
        "type" : "string",
        "enum" : [ "CUT_DETECTED", "SHORT_DETECTED", "NORMAL", "INVALID", "UNKNOWN" ]
      },
      "SupportAuthorityEventOriginator" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "grantedToInternalEntityUuid" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "grantedToName" : {
              "type" : "string",
              "nullable" : true
            },
            "supportAuthorityUuid" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "supportUserEmail" : {
              "type" : "string",
              "nullable" : true
            },
            "supportUsername" : {
              "type" : "string",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/EventOriginatorEnum"
          }
        }
      },
      "SupportAuthorityLockdownEventOriginator" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "grantedToInternalEntityUuid" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "grantedToName" : {
              "type" : "string",
              "nullable" : true
            },
            "supportAuthorityUuid" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "supportUserEmail" : {
              "type" : "string",
              "nullable" : true
            },
            "supportUsername" : {
              "type" : "string",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/LockdownEventOriginatorEnumType"
          }
        }
      },
      "SupportAuthorityType" : {
        "type" : "object",
        "description" : "Support authority configuration to add",
        "properties" : {
          "authorityType" : {
            "type" : "string",
            "enum" : [ "PARTNER_SUPPORT", "RHOMBUS_SUPPORT" ],
            "nullable" : true
          },
          "authorityUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "expirationTimestamp" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "grantedByUsername" : {
            "type" : "string",
            "nullable" : true
          },
          "grantedToEmail" : {
            "type" : "string",
            "nullable" : true
          },
          "grantedToInternalEntityUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "grantedToName" : {
            "type" : "string",
            "nullable" : true
          },
          "loginAccessAllowed" : {
            "type" : "boolean",
            "nullable" : true
          },
          "managedByMsp" : {
            "type" : "boolean",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "permissionGroupUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Support_AddSupportAuthorityWSRequest" : {
        "type" : "object",
        "description" : "Request object for adding a support authority to the organization.",
        "properties" : {
          "authority" : {
            "$ref" : "#/components/schemas/SupportAuthorityType"
          },
          "isCertifiedPartner" : {
            "type" : "boolean",
            "description" : "Whether this is a certified partner requiring internal entity UUID",
            "example" : true,
            "nullable" : true
          }
        }
      },
      "Support_AddSupportAuthorityWSResponse" : {
        "type" : "object",
        "description" : "Response object for adding a support authority to the organization.",
        "properties" : {
          "authorityUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Support_AlllowSupportAuthorityAccessWSRequest" : {
        "type" : "object",
        "description" : "Request object for allowing support authority access.",
        "properties" : {
          "authorityUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Support_AlllowSupportAuthorityAccessWSResponse" : {
        "type" : "object",
        "description" : "Response object for allowing support authority access.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Support_FindSupportAuthoritySessionsWSRequest" : {
        "type" : "object",
        "description" : "Request object for finding support authority sessions.",
        "properties" : {
          "authorityUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Support_FindSupportAuthoritySessionsWSResponse" : {
        "type" : "object",
        "description" : "Response object containing support authority sessions.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "sessions" : {
            "type" : "array",
            "description" : "List of support authority sessions",
            "items" : {
              "$ref" : "#/components/schemas/SessionInfoWSType"
            },
            "nullable" : true
          }
        }
      },
      "Support_GetSupportAuthoritiesWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting support authorities."
      },
      "Support_GetSupportAuthoritiesWSResponse" : {
        "type" : "object",
        "description" : "Response object containing support authorities.",
        "properties" : {
          "authorities" : {
            "type" : "array",
            "description" : "List of support authorities",
            "items" : {
              "$ref" : "#/components/schemas/Support_SupportAuthorityWSType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Support_LogoutAllSupportAuthoritySessionsWSRequest" : {
        "type" : "object",
        "description" : "Request object for logging out all support authority sessions.",
        "properties" : {
          "authorityUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Support_LogoutAllSupportAuthoritySessionsWSResponse" : {
        "type" : "object",
        "description" : "Response object for logging out all support authority sessions.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Support_LookupSupportPartnerAuthoritiesWSRequest" : {
        "type" : "object",
        "description" : "Request object for looking up support partner authorities.",
        "properties" : {
          "lookupKeyword" : {
            "type" : "string",
            "description" : "Keyword to search for support partner authorities",
            "example" : "tech support",
            "nullable" : true
          }
        }
      },
      "Support_LookupSupportPartnerAuthoritiesWSResponse" : {
        "type" : "object",
        "description" : "Response object containing support partner authorities.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "supportPartnerAuthorities" : {
            "type" : "array",
            "description" : "List of support partner authorities",
            "items" : {
              "$ref" : "#/components/schemas/Support_SupportPartnerAuthorityWSType"
            },
            "nullable" : true
          }
        }
      },
      "Support_RemoveSupportAuthorityWSRequest" : {
        "type" : "object",
        "description" : "Request object for removing a support authority from the organization.",
        "properties" : {
          "authorityUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Support_RemoveSupportAuthorityWSResponse" : {
        "type" : "object",
        "description" : "Response object for removing a support authority from the organization.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Support_RevokeSupportAuthorityAccessWSRequest" : {
        "type" : "object",
        "description" : "Request object for revoking support authority access.",
        "properties" : {
          "authorityUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Support_RevokeSupportAuthorityAccessWSResponse" : {
        "type" : "object",
        "description" : "Response object for revoking support authority access.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Support_SupportAuthoritySelectiveUpdateWSType" : {
        "type" : "object",
        "description" : "Selective update type for support authority with optional fields.",
        "properties" : {
          "authorityUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "description" : "Optional description of the support authority",
            "example" : "Technical support for system maintenance",
            "nullable" : true
          },
          "expirationTimestamp" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Optional expiration timestamp for the support authority",
            "example" : 1640995200000,
            "nullable" : true
          },
          "grantedToEmail" : {
            "type" : "string",
            "description" : "Optional email of the person granted access",
            "example" : "john.doe@example.com",
            "nullable" : true
          },
          "grantedToName" : {
            "type" : "string",
            "description" : "Optional name of the person granted access",
            "example" : "John Doe",
            "nullable" : true
          },
          "loginAccessAllowed" : {
            "type" : "boolean",
            "description" : "Optional flag indicating if login access is allowed",
            "example" : true,
            "nullable" : true
          },
          "permissionGroupUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Support_SupportAuthorityWSType" : {
        "type" : "object",
        "description" : "Webservice type for support authority with access URLs.",
        "properties" : {
          "authorityType" : {
            "type" : "string",
            "enum" : [ "PARTNER_SUPPORT", "RHOMBUS_SUPPORT" ],
            "nullable" : true
          },
          "authorityUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "expirationTimestamp" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "grantedByUsername" : {
            "type" : "string",
            "nullable" : true
          },
          "grantedToEmail" : {
            "type" : "string",
            "nullable" : true
          },
          "grantedToInternalEntityUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "grantedToName" : {
            "type" : "string",
            "nullable" : true
          },
          "loginAccessAllowed" : {
            "type" : "boolean",
            "nullable" : true
          },
          "managedByMsp" : {
            "type" : "boolean",
            "nullable" : true
          },
          "mobileAccessUrl" : {
            "type" : "string",
            "description" : "Mobile access URL for the support authority",
            "example" : "https://mobile.example.com/access",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "permissionGroupUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "webAccessUrl" : {
            "type" : "string",
            "description" : "Web access URL for the support authority",
            "example" : "https://web.example.com/access",
            "nullable" : true
          }
        }
      },
      "Support_SupportPartnerAuthorityWSType" : {
        "type" : "object",
        "description" : "Webservice type for support partner authority information.",
        "properties" : {
          "contactEmail" : {
            "type" : "string",
            "description" : "Contact email for the support partner authority",
            "example" : "jane.smith@techsupport.com",
            "nullable" : true
          },
          "contactName" : {
            "type" : "string",
            "description" : "Contact name for the support partner authority",
            "example" : "Jane Smith",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the support partner authority",
            "example" : "Tech Support Inc.",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Support_UpdateSupportAuthorityWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating a support authority.",
        "properties" : {
          "update" : {
            "$ref" : "#/components/schemas/Support_SupportAuthoritySelectiveUpdateWSType"
          }
        }
      },
      "Support_UpdateSupportAuthorityWSResponse" : {
        "type" : "object",
        "description" : "Response object for updating a support authority.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "TPLinkSettings" : {
        "type" : "object",
        "properties" : {
          "cameraToSwitchMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "password" : {
            "type" : "string",
            "nullable" : true
          },
          "targetState" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "url" : {
            "type" : "string",
            "nullable" : true
          },
          "username" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "TamperSettings" : {
        "type" : "object",
        "properties" : {
          "accelerometer_change_tamper_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "accelerometer_disabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "pressure_switch_tamper_disabled" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "TamperSettingsSelectiveUpdate" : {
        "type" : "object",
        "description" : "Update Tamper detection settings",
        "properties" : {
          "accelerometer_change_tamper_threshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "accelerometer_disabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "pressure_switch_tamper_disabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "updatedSetMethodMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "boolean",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "TempProbeType" : {
        "type" : "object",
        "properties" : {
          "adcMv" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "adcRaw" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "present" : {
            "type" : "boolean",
            "nullable" : true
          },
          "tempC" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "timestampSec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "ThirdPartyAudioPlaybackActionType" : {
        "type" : "object",
        "properties" : {
          "audioFileName" : {
            "type" : "string",
            "nullable" : true
          },
          "ipAddress" : {
            "type" : "string",
            "nullable" : true
          },
          "loopDurationSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "password" : {
            "type" : "string",
            "nullable" : true
          },
          "playCount" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "proxyDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "username" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "ThirdPartyCameraPasswordType" : {
        "type" : "object",
        "description" : "List of third-party camera passwords",
        "properties" : {
          "notes" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "password" : {
            "type" : "string",
            "nullable" : true
          },
          "username" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "ThirdPartyCameraSettings" : {
        "type" : "object",
        "properties" : {
          "onvif_ip" : {
            "type" : "string",
            "nullable" : true
          },
          "onvif_password" : {
            "type" : "string",
            "nullable" : true
          },
          "onvif_profiletoken" : {
            "type" : "string",
            "nullable" : true
          },
          "onvif_ptz_servicepath" : {
            "type" : "string",
            "nullable" : true
          },
          "onvif_username" : {
            "type" : "string",
            "nullable" : true
          },
          "ptz_engine" : {
            "type" : "string",
            "enum" : [ "DIGITAL", "MECHANICAL", "NONE", "UNKNOWN" ],
            "nullable" : true
          },
          "ptz_movement" : {
            "type" : "string",
            "enum" : [ "RELATIVE", "ABSOLUTE" ],
            "nullable" : true
          },
          "ptz_translation_space" : {
            "type" : "string",
            "enum" : [ "FOV", "DIGITAL", "NONE", "UNKNOWN" ],
            "nullable" : true
          }
        }
      },
      "ThreatCaseStatus" : {
        "type" : "string",
        "enum" : [ "INITIATED", "REQUESTED", "FOLLOW_ON", "ESCALATED", "PSAP_CONTACTED", "VERIFIED", "DISMISSED", "CANCELLED", "UNVERIFIABLE", "TIMEOUT", "ERROR", "CLOSED" ]
      },
      "ThreatCaseTimelineEventType" : {
        "type" : "object",
        "properties" : {
          "alertUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "message" : {
            "type" : "string",
            "nullable" : true
          },
          "noonlightVerificationId" : {
            "type" : "string",
            "nullable" : true
          },
          "timestampSec" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ThreatCaseTimelineEventTypeEnum"
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "ThreatCaseTimelineEventTypeEnum" : {
        "type" : "string",
        "enum" : [ "ALERT", "DELAYED_ALERT", "USER", "SERVICE_PROVIDER", "ERROR", "PANIC_BUTTON", "ACCESS_CONTROL_INTEGRATION", "UNKNOWN" ]
      },
      "TimeInterval" : {
        "type" : "object",
        "description" : "Time interval for filtering vehicle events",
        "properties" : {
          "endMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "startMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "TimeSeriesDataPointV2Type" : {
        "type" : "object",
        "description" : "Map of UUIDs to their time series data points",
        "properties" : {
          "dateLocal" : {
            "type" : "string",
            "nullable" : true
          },
          "dateUtc" : {
            "type" : "string",
            "nullable" : true
          },
          "eventCountMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "TimeWindowSeconds" : {
        "type" : "object",
        "description" : "Map of presence types to their time windows",
        "properties" : {
          "durationSeconds" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "startSeconds" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "TimelapseClipType" : {
        "type" : "object",
        "description" : "Updated timelapse clip information",
        "properties" : {
          "clipCreationTime" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "clipDuration" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "clipFormat" : {
            "type" : "string",
            "enum" : [ "MPEG", "GIF" ],
            "nullable" : true
          },
          "clipUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "drawCameraDetails" : {
            "type" : "boolean",
            "nullable" : true
          },
          "drawTimestamp" : {
            "type" : "boolean",
            "nullable" : true
          },
          "drawWatermark" : {
            "type" : "boolean",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "passwordDigest" : {
            "type" : "string",
            "nullable" : true
          },
          "shared" : {
            "type" : "boolean",
            "nullable" : true
          },
          "skipNights" : {
            "type" : "boolean",
            "nullable" : true
          },
          "skipNonBusinessHours" : {
            "type" : "boolean",
            "nullable" : true
          },
          "skipWeekends" : {
            "type" : "boolean",
            "nullable" : true
          },
          "sources" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TimelapseSource"
            },
            "nullable" : true
          },
          "status" : {
            "$ref" : "#/components/schemas/TimelapseStatus"
          },
          "title" : {
            "type" : "string",
            "nullable" : true
          },
          "videoStartTime" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "videoStopTime" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "TimelapseSource" : {
        "type" : "object",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          }
        }
      },
      "TimelapseStatus" : {
        "type" : "object",
        "properties" : {
          "percentComplete" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "state" : {
            "type" : "string",
            "enum" : [ "INITIATED", "INPROGRESS", "COMPLETE", "FAILED" ],
            "nullable" : true
          }
        }
      },
      "TimestampFilter" : {
        "type" : "object",
        "description" : "Optional filter by an event timestamp. If not specified, the filter defaults to the last 7 days.",
        "properties" : {
          "rangeEnd" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "End of the date range (inclusive).",
            "nullable" : true
          },
          "rangeStart" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "Start of the date range (inclusive).",
            "nullable" : true
          }
        }
      },
      "ToastCheckInfo" : {
        "type" : "object",
        "properties" : {
          "totalAmount" : {
            "type" : "number",
            "format" : "double",
            "nullable" : true
          }
        }
      },
      "ToastOrderIdType" : {
        "type" : "object",
        "properties" : {
          "employeeName" : {
            "type" : "string",
            "nullable" : true
          },
          "guid" : {
            "type" : "string",
            "nullable" : true
          },
          "locationName" : {
            "type" : "string",
            "nullable" : true
          },
          "restaurantName" : {
            "type" : "string",
            "nullable" : true
          },
          "toastCheckInfo" : {
            "$ref" : "#/components/schemas/ToastCheckInfo"
          }
        }
      },
      "ToastRestaurantInfo" : {
        "type" : "object",
        "description" : "A HashMap of <Restaurant Guid, ToastRestaurantInfo>. This stores the information for each restaurant.",
        "properties" : {
          "locationName" : {
            "type" : "string",
            "description" : "The location name of the restaurant from Toast",
            "nullable" : true
          },
          "restaurantName" : {
            "type" : "string",
            "description" : "The name of the restaurant from Toast. e.g., COFFEE CAN",
            "nullable" : true
          }
        }
      },
      "ToastRestaurantSettings" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "locationName" : {
            "type" : "string",
            "description" : "The location name of the restaurant from Toast",
            "nullable" : true
          },
          "restaurantName" : {
            "type" : "string",
            "description" : "The name of the restaurant from Toast, e.g. COFFEE CAN",
            "nullable" : true
          },
          "serviceAreaSettingsMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/GenericPosSettings"
            },
            "description" : "Collection of service area settings for this restaurant",
            "nullable" : true
          }
        }
      },
      "ToastSettings" : {
        "type" : "object",
        "description" : "Toast POS integration settings to update",
        "properties" : {
          "currentToastRestaurantGuid" : {
            "type" : "string",
            "description" : "The current restaurant guid you want to use",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabledTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "enablingUser" : {
            "type" : "string",
            "nullable" : true
          },
          "enablingUserUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "migrated" : {
            "type" : "boolean",
            "nullable" : true
          },
          "posInfoMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/PosIntegrationInfoType"
            },
            "description" : "A HashMap of <Service Area Guid, PosIntegrationInfoType>. This stores the Pos Information and assigned cameras.",
            "nullable" : true
          },
          "toastRestaurantInfoMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/ToastRestaurantInfo"
            },
            "description" : "A HashMap of <Restaurant Guid, ToastRestaurantInfo>. This stores the information for each restaurant.",
            "nullable" : true
          }
        }
      },
      "ToastType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "currentToastRestaurantGuid" : {
              "type" : "string",
              "nullable" : true
            },
            "restaurantSettingsMap" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/ToastRestaurantSettings"
              },
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Trigger" : {
        "type" : "object",
        "properties" : {
          "activity" : {
            "type" : "string",
            "enum" : [ "MOTION_HUMAN", "VISUAL_TAMPER", "MOTION", "FACE_ALERT", "POSE_ANOMALOUS", "MOTION_CAR", "LICENSEPLATE_ALERT", "HELMET_MISSING", "MASK_MISSING", "TAMPER", "PEOPLECOUNT_HIGH", "GUN_DETECT_EVENT", "HUMAN_ENTER", "HUMAN_EXIT", "CAR_ENTER", "CAR_EXIT", "RECURRING_INTERVAL" ],
            "nullable" : true
          },
          "value" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "TriggerComponentRelayActionRecordType" : {
        "type" : "object",
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "outputType" : {
            "$ref" : "#/components/schemas/ComponentRelayOutputType"
          },
          "overrideRelayDurationMs" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "overrideRelayDurationSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "state" : {
            "$ref" : "#/components/schemas/GenericRelayStateEnumType"
          },
          "succeeded" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "TriggerComponentRelayActionType" : {
        "type" : "object",
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "outputType" : {
            "$ref" : "#/components/schemas/ComponentRelayOutputType"
          },
          "overrideRelayDurationMs" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "overrideRelayDurationSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "state" : {
            "$ref" : "#/components/schemas/GenericRelayStateEnumType"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true,
            "readOnly" : true
          }
        }
      },
      "TriggerContent" : {
        "type" : "object",
        "properties" : {
          "apiKey" : {
            "type" : "string",
            "nullable" : true
          },
          "experienceIds" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "experienceNames" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "message" : {
            "type" : "string",
            "nullable" : true
          },
          "parameter1" : {
            "type" : "string",
            "nullable" : true
          },
          "parameter2" : {
            "type" : "string",
            "nullable" : true
          },
          "parameter3" : {
            "type" : "string",
            "nullable" : true
          },
          "playerDeviceNames" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "playerIds" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "playerTags" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "TripwireSettingsType" : {
        "type" : "object",
        "properties" : {
          "intervalSeconds" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "threshold" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "TvOsConfigType" : {
        "type" : "object",
        "description" : "tvOs configuration to update",
        "properties" : {
          "limitedVideoWallUuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Tvos_GetTvOsConfigWsRequest" : {
        "type" : "object",
        "description" : "Request object for getting a specific tvOs configuration.",
        "properties" : {
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Tvos_GetTvOsConfigWsResponse" : {
        "type" : "object",
        "description" : "Response object containing a specific tvOs configuration.",
        "properties" : {
          "config" : {
            "$ref" : "#/components/schemas/TvOsConfigType"
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Tvos_GetTvOsConfigsForOrgWsRequest" : {
        "type" : "object",
        "description" : "Request object for getting all tvOs configurations for the organization."
      },
      "Tvos_GetTvOsConfigsForOrgWsResponse" : {
        "type" : "object",
        "description" : "Response object containing all tvOs configurations for the organization.",
        "properties" : {
          "configs" : {
            "type" : "array",
            "description" : "List of tvOs configurations for the organization",
            "items" : {
              "$ref" : "#/components/schemas/TvOsConfigType"
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Tvos_UpdateTvOsConfigWsRequest" : {
        "type" : "object",
        "description" : "Request object for updating a tvOs configuration.",
        "properties" : {
          "config" : {
            "$ref" : "#/components/schemas/TvOsConfigType"
          }
        }
      },
      "Tvos_UpdateTvOsConfigWsResponse" : {
        "type" : "object",
        "description" : "Response object for updating a tvOs configuration.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "TwilioSettings" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "phoneNumbers" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "UAPSettingsType" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "text" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "UnHealthyDeviceAlertType" : {
        "type" : "object",
        "description" : "List of unhealthy device alerts",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "nullable" : true
          },
          "symptom" : {
            "type" : "string",
            "enum" : [ "POLICY_NOT_ASSIGNED", "DOWN", "SLOW_INTERNET" ],
            "nullable" : true
          },
          "timestamp" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "UnlockDoorActionRecordType" : {
        "type" : "object",
        "properties" : {
          "doorId" : {
            "type" : "string",
            "nullable" : true
          },
          "placeId" : {
            "type" : "string",
            "nullable" : true
          },
          "succeeded" : {
            "type" : "boolean",
            "nullable" : true
          },
          "system" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "UriBuilder" : {
        "type" : "object",
        "nullable" : true
      },
      "UserCustomMetadataTextElement" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "color" : {
              "type" : "string",
              "nullable" : true
            },
            "maxWidth" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "metadataTemplateUuid" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "style" : {
              "type" : "string",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/BadgeTemplateElementEnum"
          },
          "x" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "y" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "UserCustomizationsType" : {
        "type" : "object",
        "description" : "User customization settings and preferences",
        "properties" : {
          "dashboard" : {
            "$ref" : "#/components/schemas/DashboardCustomizations"
          },
          "frontend" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "UserEventOriginator" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "userEmail" : {
              "type" : "string",
              "nullable" : true
            },
            "userUuid" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "username" : {
              "type" : "string",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/EventOriginatorEnum"
          }
        }
      },
      "UserInfo" : {
        "type" : "object",
        "description" : "A HashMap of <RhombusOrgUser uuid : Slack user uuid, user access token>. This stores the information for each Slack user.",
        "properties" : {
          "userAccessToken" : {
            "type" : "string",
            "description" : "Slack user access token",
            "nullable" : true
          },
          "userId" : {
            "type" : "string",
            "description" : "Slack user uuid",
            "nullable" : true
          }
        }
      },
      "UserLockdownEventOriginator" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "userEmail" : {
              "type" : "string",
              "nullable" : true
            },
            "userUuid" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "username" : {
              "type" : "string",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/LockdownEventOriginatorEnumType"
          }
        }
      },
      "UserMetadataEnum" : {
        "type" : "string",
        "enum" : [ "NAME", "FIRST_NAME", "LAST_NAME", "EMAIL" ]
      },
      "UserMetadataField" : {
        "type" : "object",
        "properties" : {
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "fieldValue" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "templateUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "UserMetadataFieldTemplate" : {
        "type" : "object",
        "properties" : {
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "fieldName" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "scimFieldName" : {
            "type" : "string",
            "nullable" : true
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "UserMetadataFieldTemplateSelectiveUpdate" : {
        "type" : "object",
        "properties" : {
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "fieldName" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "scimFieldName" : {
            "type" : "string",
            "nullable" : true
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "updatedSetMethodMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "boolean",
              "nullable" : true
            },
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "UserMetadataTextElement" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "color" : {
              "type" : "string",
              "nullable" : true
            },
            "field" : {
              "$ref" : "#/components/schemas/UserMetadataEnum"
            },
            "maxWidth" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "style" : {
              "type" : "string",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/BadgeTemplateElementEnum"
          },
          "x" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "y" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "UserNotificationSelectiveUpdateV2" : {
        "type" : "object",
        "description" : "Template update configuration",
        "properties" : {
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "smsPhoneNumbers" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "summaryEmailEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "timeFrames" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NotificationTimeFrame"
            },
            "nullable" : true
          },
          "updatedSetMethodMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "boolean",
              "nullable" : true
            },
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "UserNotificationSettingsV3Type" : {
        "type" : "object",
        "description" : "List of user notification settings (V3)",
        "properties" : {
          "notificationIntervalsV2" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NotificationIntervalV2Type"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "smsPhoneNumbers" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "summaryEmailEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "UserNotificationSettingsV4Type" : {
        "type" : "object",
        "description" : "List of user notification settings (V4)",
        "properties" : {
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "smsPhoneNumbers" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "summaryEmailEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "timeFrames" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NotificationTimeFrame"
            },
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "UserPermissionGroupType" : {
        "type" : "object",
        "description" : "Updated permission group configuration",
        "properties" : {
          "accessControlLocationAccessMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Permission"
            },
            "nullable" : true
          },
          "accessibleLocations" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "assignablePermissionGroups" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "defaultAccessControlPermissionForNewLocations" : {
            "$ref" : "#/components/schemas/Permission"
          },
          "defaultPermissionForNewLocations" : {
            "$ref" : "#/components/schemas/Permission"
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "deviceAccessMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Permission"
            },
            "nullable" : true
          },
          "functionalityList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Functionality"
            },
            "nullable" : true
          },
          "inLine" : {
            "type" : "boolean",
            "nullable" : true
          },
          "installer" : {
            "type" : "boolean",
            "nullable" : true
          },
          "locationAccessMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Permission"
            },
            "nullable" : true
          },
          "locationGranularAccessMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/Permission"
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "mutable" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "storedInS3" : {
            "type" : "boolean",
            "nullable" : true
          },
          "superAdmin" : {
            "type" : "boolean",
            "nullable" : true
          },
          "userPermissionGroupAccessMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Permission"
            },
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "UserPermissionType" : {
        "type" : "object",
        "description" : "List of user permissions",
        "properties" : {
          "groupUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "UserProfilePhotoElement" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "height" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "width" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/BadgeTemplateElementEnum"
          },
          "x" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "y" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "UserVirtualMfaDeviceType" : {
        "type" : "object",
        "description" : "Virtual MFA device information for the current user",
        "properties" : {
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          }
        }
      },
      "User_AssignEmailToUserWSRequest" : {
        "type" : "object",
        "description" : "Request object for assigning an email to a user.",
        "properties" : {
          "emailToAssign" : {
            "type" : "string",
            "description" : "Email address to assign to the user",
            "example" : "user@example.com",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "User_AssignEmailToUserWSResponse" : {
        "type" : "object",
        "description" : "Response object for assigning an email to a user."
      },
      "User_BulkProvisionCredentialsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "messages" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "User_ChangeUserEmailWSRequest" : {
        "type" : "object",
        "description" : "Request object for changing a user's email address.",
        "properties" : {
          "newEmail" : {
            "type" : "string",
            "description" : "New email address for the user",
            "example" : "newemail@example.com",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "User_ChangeUserEmailWSResponse" : {
        "type" : "object",
        "description" : "Response object for changing a user's email address.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "User_ChangeUserPasswordWSRequest" : {
        "type" : "object",
        "description" : "Request object for changing a user's password.",
        "properties" : {
          "currentPassword" : {
            "type" : "string",
            "description" : "Current password of the user",
            "example" : "currentPassword123",
            "nullable" : true
          },
          "newPassword" : {
            "type" : "string",
            "description" : "New password for the user",
            "example" : "newPassword123",
            "nullable" : true
          }
        }
      },
      "User_ChangeUserPasswordWSResponse" : {
        "type" : "object",
        "description" : "Response object for changing a user's password.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "responseStatus" : {
            "type" : "string",
            "description" : "Status of the password change response",
            "enum" : [ "BASIC_AUTH_FAILED", "PASSWORD_MISMATCH", "SAME_PASSWORD", "USER_EXISTS", "USER_NOT_FOUND", "DEVICE_NOT_FOUND", "POLICY_NOT_FOUND", "LOCATION_NOT_FOUND", "ORG_NOT_FOUND", "BAD_INPUT", "SUCCESS", "PASSWORD_TOO_SHORT" ],
            "nullable" : true
          }
        }
      },
      "User_CreateUserWSRequest" : {
        "type" : "object",
        "description" : "CreateUserWSRequest",
        "properties" : {
          "accessibleRhombusApps" : {
            "type" : "array",
            "description" : "The set of accessible Rhombus apps",
            "items" : {
              "type" : "string",
              "description" : "The set of accessible Rhombus apps",
              "enum" : [ "PARTNER", "CONSOLE", "RHOMBUS_KEY", "UNKNOWN" ],
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "email" : {
            "type" : "string",
            "description" : "The email of the user",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the user",
            "nullable" : true
          },
          "permissionGroupUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "rhombusKeySettings" : {
            "$ref" : "#/components/schemas/RhombusKeyAppSettingsType"
          },
          "suppressRhombusKeyWelcomeEmail" : {
            "type" : "boolean",
            "description" : "Suppress the welcome email for the Rhombus Key mobile app if the user is provided access",
            "nullable" : true
          },
          "suppressWelcomeEmail" : {
            "type" : "boolean",
            "description" : "Suppress the welcome email",
            "nullable" : true
          }
        }
      },
      "User_CreateUserWSResponse" : {
        "type" : "object",
        "description" : "Response object for creating a user.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "responseStatus" : {
            "type" : "string",
            "description" : "Status of the user creation response",
            "enum" : [ "BASIC_AUTH_FAILED", "PASSWORD_MISMATCH", "SAME_PASSWORD", "USER_EXISTS", "USER_NOT_FOUND", "DEVICE_NOT_FOUND", "POLICY_NOT_FOUND", "LOCATION_NOT_FOUND", "ORG_NOT_FOUND", "BAD_INPUT", "SUCCESS", "PASSWORD_TOO_SHORT" ],
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "User_DeleteUserWSRequest" : {
        "type" : "object",
        "description" : "Request object for deleting a user.",
        "properties" : {
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "User_DeleteUserWSResponse" : {
        "type" : "object",
        "description" : "Response object for deleting a user.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "User_DeleteVirtualMfaDeviceForCurrentUserWSRequest" : {
        "type" : "object",
        "description" : "Request object for deleting the virtual MFA device for the current user."
      },
      "User_DeleteVirtualMfaDeviceForCurrentUserWSResponse" : {
        "type" : "object",
        "description" : "Response object for deleting the virtual MFA device for the current user.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "User_FindUserByEmailWSRequest" : {
        "type" : "object",
        "description" : "Request object for finding a user by email.",
        "properties" : {
          "email" : {
            "type" : "string",
            "description" : "Email address of the user to find",
            "example" : "user@example.com",
            "nullable" : true
          }
        }
      },
      "User_FindUserByEmailWSResponse" : {
        "type" : "object",
        "description" : "Response object containing user information found by email.",
        "properties" : {
          "user" : {
            "$ref" : "#/components/schemas/WrappedRhombusOrgUserType"
          }
        }
      },
      "User_FindUserWSRequest" : {
        "type" : "object",
        "description" : "Request object for finding a user by UUID.",
        "properties" : {
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "User_FindUserWSResponse" : {
        "type" : "object",
        "description" : "Response object containing user information.",
        "properties" : {
          "user" : {
            "$ref" : "#/components/schemas/WrappedRhombusOrgUserType"
          }
        }
      },
      "User_GetBulkProvisionCredentialsFormatWSResponse" : {
        "type" : "object",
        "properties" : {
          "accessControlEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "example" : {
            "type" : "string",
            "nullable" : true
          },
          "explanation" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "User_GetImportUsersFormatWSResponse" : {
        "type" : "object",
        "properties" : {
          "accessControlEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "example" : {
            "type" : "string",
            "nullable" : true
          },
          "explanation" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "User_GetRhombusKeyConfigForUserWSRequest" : {
        "type" : "object",
        "properties" : {
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "User_GetRhombusKeyConfigForUserWSResponse" : {
        "type" : "object",
        "properties" : {
          "userRhombusKeyConfig" : {
            "$ref" : "#/components/schemas/RhombusKeyAppConfigType"
          }
        }
      },
      "User_GetUserCustomizationFlagsWSRequest" : {
        "type" : "object",
        "properties" : {
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "User_GetUserCustomizationFlagsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "userCustomizations" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "User_GetUsersInOrgForReportsWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting users in the organization for reports."
      },
      "User_GetUsersInOrgForReportsWSResponse" : {
        "type" : "object",
        "description" : "Response object containing users in the organization for reports.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "users" : {
            "type" : "array",
            "description" : "List of users in the organization for reports",
            "items" : {
              "$ref" : "#/components/schemas/RhombusOrgUserType"
            },
            "nullable" : true
          }
        }
      },
      "User_GetUsersInOrgWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting all users in the organization."
      },
      "User_GetUsersInOrgWSResponse" : {
        "type" : "object",
        "description" : "Response object containing all users in the organization with their settings and permissions.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "notificationSettings" : {
            "type" : "array",
            "description" : "List of user notification settings (V3)",
            "items" : {
              "$ref" : "#/components/schemas/UserNotificationSettingsV3Type"
            },
            "nullable" : true
          },
          "notificationSettingsV2" : {
            "type" : "array",
            "description" : "List of user notification settings (V4)",
            "items" : {
              "$ref" : "#/components/schemas/UserNotificationSettingsV4Type"
            },
            "nullable" : true
          },
          "partners" : {
            "type" : "array",
            "description" : "List of partner users in the organization",
            "items" : {
              "$ref" : "#/components/schemas/WrappedRhombusOrgUserType"
            },
            "nullable" : true
          },
          "rhombusKeyAppConfigs" : {
            "type" : "array",
            "description" : "List of Rhombus Key app configurations",
            "items" : {
              "$ref" : "#/components/schemas/RhombusKeyAppConfigType"
            },
            "nullable" : true
          },
          "snoozeSettings" : {
            "type" : "array",
            "description" : "List of user snooze notification settings",
            "items" : {
              "$ref" : "#/components/schemas/User_UserSnoozeNotificationSettingsType"
            },
            "nullable" : true
          },
          "userPermissions" : {
            "type" : "array",
            "description" : "List of user permissions",
            "items" : {
              "$ref" : "#/components/schemas/UserPermissionType"
            },
            "nullable" : true
          },
          "users" : {
            "type" : "array",
            "description" : "List of users in the organization",
            "items" : {
              "$ref" : "#/components/schemas/WrappedRhombusOrgUserType"
            },
            "nullable" : true
          }
        }
      },
      "User_GetVirtualMfaDeviceForCurrentUserWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting the virtual MFA device for the current user."
      },
      "User_GetVirtualMfaDeviceForCurrentUserWSResponse" : {
        "type" : "object",
        "description" : "Response object containing the virtual MFA device for the current user.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "virtualMfaDevice" : {
            "$ref" : "#/components/schemas/UserVirtualMfaDeviceType"
          }
        }
      },
      "User_ImportUsersWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "messages" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "User_RhombusKeyOrgDetailsType" : {
        "type" : "object",
        "description" : "Organization details and summary information",
        "properties" : {
          "companyLogoUrl" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "User_SendMobileDownloadSMSWSRequest" : {
        "type" : "object",
        "description" : "Request object for sending a mobile download SMS.",
        "properties" : {
          "phoneNumber" : {
            "type" : "string",
            "description" : "Phone number to send the SMS to",
            "example" : "+1234567890",
            "nullable" : true
          }
        }
      },
      "User_SendMobileDownloadSMSWSResponse" : {
        "type" : "object",
        "description" : "Response object for sending a mobile download SMS.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "User_SendPartnerAccessGrantedEmailWSRequest" : {
        "type" : "object",
        "description" : "Request object for sending a partner access granted email.",
        "properties" : {
          "loginLink" : {
            "type" : "string",
            "description" : "Login link for the partner",
            "example" : "https://app.rhombussystems.com/login?token=abc123",
            "nullable" : true
          },
          "partnerEmailAddress" : {
            "type" : "string",
            "description" : "Email address of the partner",
            "example" : "partner@example.com",
            "nullable" : true
          },
          "partnerFullName" : {
            "type" : "string",
            "description" : "Full name of the partner",
            "example" : "John Doe",
            "nullable" : true
          },
          "phoneNumber" : {
            "type" : "string",
            "description" : "Phone number of the partner",
            "example" : "+1234567890",
            "nullable" : true
          }
        }
      },
      "User_SendPartnerAccessGrantedEmailWSResponse" : {
        "type" : "object",
        "description" : "Response object for sending a partner access granted email.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "User_SendRhombusKeyUserWelcomeEmailWSRequest" : {
        "type" : "object",
        "description" : "Request object for sending a Rhombus Key user welcome email.",
        "properties" : {
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "User_SendRhombusKeyUserWelcomeEmailWSResponse" : {
        "type" : "object",
        "description" : "Response object for sending a Rhombus Key user welcome email.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "User_SendUserWelcomeEmailWSRequest" : {
        "type" : "object",
        "description" : "Request object for sending a welcome email to a user.",
        "properties" : {
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "User_SendUserWelcomeEmailWSResponse" : {
        "type" : "object",
        "description" : "Response object for sending a welcome email to a user.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "User_SetupVirtualMfaDeviceForCurrentUserWSRequest" : {
        "type" : "object",
        "description" : "Request object for setting up a virtual MFA device for the current user."
      },
      "User_SetupVirtualMfaDeviceForCurrentUserWSResponse" : {
        "type" : "object",
        "description" : "Response object for setting up a virtual MFA device for the current user.",
        "properties" : {
          "alreadyExists" : {
            "type" : "boolean",
            "description" : "Whether the MFA device already exists",
            "example" : false,
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "qrCodeSetupData" : {
            "type" : "string",
            "description" : "QR code setup data for the MFA device",
            "example" : "otpauth://totp/Rhombus:user@example.com?secret=JBSWY3DPEHPK3PXP&issuer=Rhombus",
            "nullable" : true
          },
          "success" : {
            "type" : "boolean",
            "description" : "Whether the MFA device setup was successful",
            "example" : true,
            "nullable" : true
          }
        }
      },
      "User_UpdatePartnerUserNotificationSettingsWSRequest" : {
        "type" : "object",
        "properties" : {
          "allClientsSelected" : {
            "type" : "boolean",
            "nullable" : true
          },
          "clientNotificationIntervalsMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/PartnerNotificationClientSection"
              },
              "nullable" : true
            },
            "nullable" : true
          },
          "notificationIntervalsForAllClients" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PartnerNotificationClientSection"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "smsPhoneNumbers" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "summaryEmailEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "updatedSetMethodMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "boolean",
              "nullable" : true
            },
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "User_UpdatePartnerUserNotificationSettingsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "User_UpdatePartnerWSRequest" : {
        "type" : "object",
        "properties" : {
          "bypassSaml" : {
            "type" : "boolean",
            "nullable" : true
          },
          "mfaEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "notificationSettings" : {
            "$ref" : "#/components/schemas/PartnerNotificationSettingsType"
          },
          "notificationSettingsV2" : {
            "$ref" : "#/components/schemas/PartnerNotificationSettingsV2"
          },
          "permissionGroupUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "smsPhoneNumbers" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "summaryEmailEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "User_UpdatePartnerWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "User_UpdateRhombusKeySettingsForUserWSRequest" : {
        "type" : "object",
        "properties" : {
          "bypassSaml" : {
            "type" : "boolean",
            "nullable" : true
          },
          "endDateProvisioner" : {
            "$ref" : "#/components/schemas/EpochSecondsProvisioner"
          },
          "maxMobileCredsAllowed" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "remoteUnlockEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "rhombusKeyAccessEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "startDateProvisioner" : {
            "$ref" : "#/components/schemas/EpochSecondsProvisioner"
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "User_UpdateRhombusKeySettingsForUserWSResponse" : {
        "type" : "object",
        "properties" : {
          "userRhombusKeyConfig" : {
            "$ref" : "#/components/schemas/RhombusKeyAppConfigType"
          }
        }
      },
      "User_UpdateUserCustomizationFlagsWSRequest" : {
        "type" : "object",
        "properties" : {
          "userCustomizationFlags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "User_UpdateUserCustomizationFlagsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "User_UpdateUserNotificationSettingsWSRequest" : {
        "type" : "object",
        "properties" : {
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "smsPhoneNumbers" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "summaryEmailEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "timeFrames" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NotificationTimeFrame"
            },
            "nullable" : true
          },
          "updatedSetMethodMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "boolean",
              "nullable" : true
            },
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "User_UpdateUserNotificationSettingsWSResponse" : {
        "type" : "object",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "User_UpdateUserSelectiveWSRequest" : {
        "type" : "object",
        "properties" : {
          "bypassSaml" : {
            "type" : "boolean",
            "nullable" : true
          },
          "mfaEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "notificationIntervalsV2" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NotificationIntervalV2Type"
            },
            "nullable" : true
          },
          "permissionGroupUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "smsPhoneNumbers" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "summaryEmailEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "User_UpdateUserSelectiveWSResponse" : {
        "type" : "object",
        "description" : "Response object for selective user updates."
      },
      "User_UpdateUserWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating user information and settings.",
        "properties" : {
          "bypassSaml" : {
            "type" : "boolean",
            "description" : "Whether SAML bypass is enabled for the user",
            "example" : false,
            "nullable" : true
          },
          "mfaEnabled" : {
            "type" : "boolean",
            "description" : "Whether MFA is enabled for the user",
            "example" : true,
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name of the user",
            "example" : "John Doe",
            "nullable" : true
          },
          "notificationIntervalsV2" : {
            "type" : "array",
            "description" : "List of notification intervals (V2) for the user",
            "items" : {
              "$ref" : "#/components/schemas/NotificationIntervalV2Type"
            },
            "nullable" : true
          },
          "permissionGroupUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "smsPhoneNumbers" : {
            "type" : "array",
            "description" : "List of SMS phone numbers for the user",
            "items" : {
              "type" : "string",
              "description" : "List of SMS phone numbers for the user",
              "nullable" : true
            },
            "nullable" : true
          },
          "summaryEmailEnabled" : {
            "type" : "boolean",
            "description" : "Whether summary emails are enabled for the user",
            "example" : true,
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "User_UpdateUserWSResponse" : {
        "type" : "object",
        "description" : "Response object for updating a user.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "User_UserSnoozeNotificationSettingsType" : {
        "type" : "object",
        "description" : "User snooze notification settings with location and device-specific snooze intervals.",
        "properties" : {
          "snoozedForAllNotificationsIntervals" : {
            "type" : "array",
            "description" : "List of snooze intervals for all notifications",
            "items" : {
              "$ref" : "#/components/schemas/ScheduledIntervalType"
            },
            "nullable" : true
          },
          "snoozedForDevicesMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "description" : "Map of device UUIDs to snooze intervals",
              "items" : {
                "$ref" : "#/components/schemas/ScheduledIntervalType"
              },
              "nullable" : true
            },
            "description" : "Map of device UUIDs to snooze intervals",
            "nullable" : true
          },
          "snoozedForLocationsMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "description" : "Map of location UUIDs to snooze intervals",
              "items" : {
                "$ref" : "#/components/schemas/ScheduledIntervalType"
              },
              "nullable" : true
            },
            "description" : "Map of location UUIDs to snooze intervals",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "User_metadata_CreateUserMetadataFieldTemplateWSRequest" : {
        "type" : "object",
        "properties" : {
          "template" : {
            "$ref" : "#/components/schemas/UserMetadataFieldTemplate"
          }
        }
      },
      "User_metadata_CreateUserMetadataFieldTemplateWSResponse" : {
        "type" : "object",
        "properties" : {
          "template" : {
            "$ref" : "#/components/schemas/UserMetadataFieldTemplate"
          }
        }
      },
      "User_metadata_DeleteUserMetadataFieldTemplateWSRequest" : {
        "type" : "object",
        "properties" : {
          "templateUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "User_metadata_DeleteUserMetadataFieldTemplateWSResponse" : {
        "type" : "object",
        "properties" : {
          "template" : {
            "$ref" : "#/components/schemas/UserMetadataFieldTemplate"
          }
        }
      },
      "User_metadata_DeleteUserMetadataFieldWSRequest" : {
        "type" : "object",
        "properties" : {
          "templateUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "User_metadata_DeleteUserMetadataFieldWSResponse" : {
        "type" : "object",
        "properties" : {
          "field" : {
            "$ref" : "#/components/schemas/UserMetadataField"
          }
        }
      },
      "User_metadata_FindUserMetadataFieldTemplatesWSRequest" : {
        "type" : "object"
      },
      "User_metadata_FindUserMetadataFieldTemplatesWSResponse" : {
        "type" : "object",
        "properties" : {
          "templateMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/UserMetadataFieldTemplate"
            },
            "nullable" : true
          }
        }
      },
      "User_metadata_FindUserMetadataFieldsWSRequest" : {
        "type" : "object",
        "properties" : {
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "User_metadata_FindUserMetadataFieldsWSResponse" : {
        "type" : "object",
        "properties" : {
          "templateMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/UserMetadataFieldTemplate"
            },
            "nullable" : true
          },
          "userFieldValueMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/UserMetadataField"
            },
            "nullable" : true
          }
        }
      },
      "User_metadata_SaveUserMetadataFieldsWSRequest" : {
        "type" : "object",
        "properties" : {
          "fieldValueMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "User_metadata_SaveUserMetadataFieldsWSResponse" : {
        "type" : "object",
        "properties" : {
          "templateMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/UserMetadataFieldTemplate"
            },
            "nullable" : true
          },
          "userFieldValueMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/UserMetadataField"
            },
            "nullable" : true
          }
        }
      },
      "User_metadata_UpdateUserMetadataFieldTemplateWSRequest" : {
        "type" : "object",
        "properties" : {
          "selectiveUpdate" : {
            "$ref" : "#/components/schemas/UserMetadataFieldTemplateSelectiveUpdate"
          }
        }
      },
      "User_metadata_UpdateUserMetadataFieldTemplateWSResponse" : {
        "type" : "object",
        "properties" : {
          "template" : {
            "$ref" : "#/components/schemas/UserMetadataFieldTemplate"
          }
        }
      },
      "VacantActivityEventType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "vacancyThresholdSec" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "activityEvent" : {
            "$ref" : "#/components/schemas/ActivityEnum"
          }
        }
      },
      "VehicleEventIndexType" : {
        "type" : "object",
        "description" : "List of vehicle events matching the query criteria",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          },
          "eventTimestamp" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "imageS3Key" : {
            "type" : "string",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "matchingLicensePlates" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "partialLicensePlates" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "thumbnailS3Key" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "vehicleLicensePlate" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "VehicleEventSearchHitType" : {
        "type" : "object",
        "description" : "List of vehicle events matching the search criteria",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          },
          "eventTimestamp" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "imageS3Key" : {
            "type" : "string",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "matchingLicensePlates" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "partialLicensePlates" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "searchMatchedTerm" : {
            "type" : "string",
            "nullable" : true
          },
          "searchMatchedType" : {
            "type" : "string",
            "nullable" : true
          },
          "subLocationsHierarchyKey" : {
            "$ref" : "#/components/schemas/SubLocationsHierarchyKey"
          },
          "thumbnailS3Key" : {
            "type" : "string",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "vehicleLicensePlate" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "VehicleV2Type" : {
        "type" : "object",
        "description" : "List of vehicles in the organization",
        "properties" : {
          "alert" : {
            "type" : "boolean",
            "nullable" : true
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "licensePlate" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "thumbnailS3Key" : {
            "type" : "string",
            "nullable" : true
          },
          "trust" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "Vehicle_AddVehicleLabelWSRequest" : {
        "type" : "object",
        "description" : "Request object for adding a label to a vehicle.",
        "properties" : {
          "label" : {
            "type" : "string",
            "description" : "Label to add to the vehicle",
            "example" : "Company Car",
            "nullable" : true
          },
          "vehicleLicensePlate" : {
            "type" : "string",
            "description" : "License plate number of the vehicle to add label to",
            "example" : "ABC123",
            "nullable" : true
          }
        }
      },
      "Vehicle_AddVehicleLabelWSResponse" : {
        "type" : "object",
        "description" : "Response object for adding a label to a vehicle.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Vehicle_AssociateEventsToVehicleWSRequest" : {
        "type" : "object",
        "description" : "Request object for associating vehicle events to a saved vehicle.",
        "properties" : {
          "eventUuids" : {
            "type" : "array",
            "description" : "List of event UUIDs to associate with the vehicle",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          },
          "vehicleLicensePlate" : {
            "type" : "string",
            "description" : "License plate number of the vehicle to associate events with",
            "example" : "ABC123",
            "nullable" : true
          }
        }
      },
      "Vehicle_AssociateEventsToVehicleWSResponse" : {
        "type" : "object",
        "description" : "Response object for associating events to a vehicle.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Vehicle_DeleteVehicleWSRequest" : {
        "type" : "object",
        "description" : "Request object for deleting a vehicle.",
        "properties" : {
          "vehicleLicensePlate" : {
            "type" : "string",
            "description" : "License plate number of the vehicle to delete",
            "example" : "ABC123",
            "nullable" : true
          }
        }
      },
      "Vehicle_DeleteVehicleWSResponse" : {
        "type" : "object",
        "description" : "Response object for deleting a vehicle.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Vehicle_GetRecentVehicleEventsByLocationWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting recent vehicle events by location (deprecated).",
        "properties" : {
          "endTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "End time in milliseconds for the query period",
            "example" : 1640998800000,
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "startTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start time in milliseconds for the query period",
            "example" : 1640995200000,
            "nullable" : true
          }
        }
      },
      "Vehicle_GetRecentVehicleEventsByLocationWSResponse" : {
        "type" : "object",
        "description" : "Response object containing recent vehicle events by location (deprecated).",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "events" : {
            "type" : "array",
            "description" : "List of recent vehicle events for the location",
            "items" : {
              "$ref" : "#/components/schemas/VehicleEventIndexType"
            },
            "nullable" : true
          }
        }
      },
      "Vehicle_GetRecentVehicleEventsForVehicleWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting recent vehicle events for a specific vehicle (deprecated).",
        "properties" : {
          "endTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "End time in milliseconds for the query period",
            "example" : 1640998800000,
            "nullable" : true
          },
          "licensePlate" : {
            "type" : "string",
            "description" : "License plate number of the vehicle to get events for",
            "example" : "ABC123",
            "nullable" : true
          },
          "startTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start time in milliseconds for the query period",
            "example" : 1640995200000,
            "nullable" : true
          }
        }
      },
      "Vehicle_GetRecentVehicleEventsForVehicleWSResponse" : {
        "type" : "object",
        "description" : "Response object containing recent vehicle events for a specific vehicle (deprecated).",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "events" : {
            "type" : "array",
            "description" : "List of recent vehicle events for the specific vehicle",
            "items" : {
              "$ref" : "#/components/schemas/VehicleEventIndexType"
            },
            "nullable" : true
          }
        }
      },
      "Vehicle_GetRecentVehicleEventsWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting recent vehicle events (deprecated).",
        "properties" : {
          "deviceUuids" : {
            "type" : "array",
            "description" : "List of device UUIDs to filter events by",
            "items" : {
              "type" : "string",
              "format" : "DeviceFacetUuid",
              "description" : "RUUID with optional appended facet information",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
              "nullable" : true
            },
            "nullable" : true
          },
          "endTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "End time in milliseconds for the query period",
            "example" : 1640998800000,
            "nullable" : true
          },
          "startTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start time in milliseconds for the query period",
            "example" : 1640995200000,
            "nullable" : true
          }
        }
      },
      "Vehicle_GetRecentVehicleEventsWSResponse" : {
        "type" : "object",
        "description" : "Response object containing recent vehicle events (deprecated).",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "events" : {
            "type" : "array",
            "description" : "List of recent vehicle events",
            "items" : {
              "$ref" : "#/components/schemas/VehicleEventIndexType"
            },
            "nullable" : true
          }
        }
      },
      "Vehicle_GetVehicleEventsWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting vehicle events with filters and additive queries.",
        "properties" : {
          "deviceUuidFilter" : {
            "type" : "array",
            "description" : "Filter events by specific reporting device uuids",
            "items" : {
              "type" : "string",
              "format" : "DeviceFacetUuid",
              "description" : "RUUID with optional appended facet information",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
              "nullable" : true
            },
            "nullable" : true
          },
          "endTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Time window filter end (newest) time in Epoch milliseconds",
            "nullable" : true
          },
          "licensePlateExactQuery" : {
            "type" : "array",
            "description" : "Query events by exact license plate number. Query fields are additive queries (returned events satisfy at least one of the query fields)",
            "items" : {
              "type" : "string",
              "description" : "Query events by exact license plate number. Query fields are additive queries (returned events satisfy at least one of the query fields)",
              "nullable" : true
            },
            "nullable" : true
          },
          "licensePlateFuzzyQuery" : {
            "type" : "string",
            "description" : "Query events by partial or complete license plate with fuzzy character matching. Query fields are additive queries (returned events satisfy at least one of the query fields)",
            "nullable" : true
          },
          "locationUuidFilter" : {
            "type" : "array",
            "description" : "Filter events by specific reporting location uuids",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          },
          "nameQuery" : {
            "type" : "array",
            "description" : "Query events by vehicle name. Query fields are additive queries (returned events satisfy at least one of the query fields)",
            "items" : {
              "type" : "string",
              "description" : "Query events by vehicle name. Query fields are additive queries (returned events satisfy at least one of the query fields)",
              "nullable" : true
            },
            "nullable" : true
          },
          "startTimeMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Time window filter start (oldest) time in Epoch milliseconds",
            "nullable" : true
          },
          "unnamedQuery" : {
            "type" : "boolean",
            "description" : "Query events by name presence.  If false, returns events with a name.  If true, returns events without names.  Omit if not needed.  Query fields are additive queries (returned events satisfy at least one of the query fields)",
            "nullable" : true
          },
          "vehicleLabelQuery" : {
            "type" : "array",
            "description" : "Query events by vehicle labels. Query fields are additive queries (returned events satisfy at least one of the query fields)",
            "items" : {
              "type" : "string",
              "description" : "Query events by vehicle labels. Query fields are additive queries (returned events satisfy at least one of the query fields)",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Vehicle_GetVehicleEventsWSResponse" : {
        "type" : "object",
        "description" : "Response object containing vehicle events with filters and additive queries.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "events" : {
            "type" : "array",
            "description" : "List of vehicle events matching the query criteria",
            "items" : {
              "$ref" : "#/components/schemas/VehicleEventIndexType"
            },
            "nullable" : true
          }
        }
      },
      "Vehicle_GetVehicleLabelsForOrgWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting all vehicle labels for the organization."
      },
      "Vehicle_GetVehicleLabelsForOrgWSResponse" : {
        "type" : "object",
        "description" : "Response object containing all vehicle labels for the organization.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "vehicleLabels" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "description" : "Map of license plate to label set",
              "items" : {
                "type" : "string",
                "description" : "Map of license plate to label set",
                "nullable" : true
              },
              "nullable" : true,
              "uniqueItems" : true
            },
            "description" : "Map of license plate to label set",
            "nullable" : true
          }
        }
      },
      "Vehicle_GetVehiclesWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting all vehicles in the organization."
      },
      "Vehicle_GetVehiclesWSResponse" : {
        "type" : "object",
        "description" : "Response object containing all vehicles in the organization.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "vehicles" : {
            "type" : "array",
            "description" : "List of vehicles in the organization",
            "items" : {
              "$ref" : "#/components/schemas/VehicleV2Type"
            },
            "nullable" : true
          }
        }
      },
      "Vehicle_RemoveVehicleLabelWSRequest" : {
        "type" : "object",
        "description" : "Request object for removing a label from a vehicle.",
        "properties" : {
          "label" : {
            "type" : "string",
            "description" : "Label to remove from the vehicle",
            "example" : "Company Car",
            "nullable" : true
          },
          "vehicleLicensePlate" : {
            "type" : "string",
            "description" : "License plate number of the vehicle to remove label from",
            "example" : "ABC123",
            "nullable" : true
          }
        }
      },
      "Vehicle_RemoveVehicleLabelWSResponse" : {
        "type" : "object",
        "description" : "Response object for removing a label from a vehicle.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Vehicle_ReportVehicleEventRequest" : {
        "type" : "object",
        "description" : "Request object for reporting a mis-detected license plate event.",
        "properties" : {
          "eventUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Vehicle_ReportVehicleEventResponse" : {
        "type" : "object",
        "description" : "Response object for reporting a mis-detected license plate event.",
        "properties" : {
          "collectedMediaForTraining" : {
            "type" : "boolean",
            "description" : "Whether media was collected for AI training",
            "example" : true,
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Vehicle_SaveVehicleWSRequest" : {
        "type" : "object",
        "description" : "Request object for saving a vehicle with license plate information.",
        "properties" : {
          "alert" : {
            "type" : "boolean",
            "description" : "Whether to alert when this vehicle is detected",
            "nullable" : true
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Creation timestamp in milliseconds",
            "example" : 1640995200000,
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "description" : "Description of the vehicle",
            "example" : "Blue Honda Civic",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name for the vehicle",
            "example" : "John's Car",
            "nullable" : true
          },
          "thumbnailS3Key" : {
            "type" : "string",
            "description" : "S3 key for the vehicle thumbnail image",
            "nullable" : true
          },
          "trust" : {
            "type" : "boolean",
            "description" : "Whether this vehicle is trusted",
            "nullable" : true
          },
          "vehicleLicensePlate" : {
            "type" : "string",
            "description" : "License plate number of the vehicle",
            "example" : "ABC123",
            "nullable" : true
          }
        }
      },
      "Vehicle_SaveVehicleWSResponse" : {
        "type" : "object",
        "description" : "Response object for saving a vehicle.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "VerificationHistory" : {
        "type" : "object",
        "properties" : {
          "alertIndex" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "currentVerification" : {
            "$ref" : "#/components/schemas/VerificationRecord"
          },
          "verificationRecords" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/VerificationRecord"
            },
            "nullable" : true
          }
        }
      },
      "VerificationRecord" : {
        "type" : "object",
        "properties" : {
          "alertUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "clipVerificationId" : {
            "type" : "string",
            "nullable" : true
          },
          "failedAsClip" : {
            "type" : "boolean",
            "nullable" : true
          },
          "failedAsStream" : {
            "type" : "boolean",
            "nullable" : true
          },
          "initiatedAsClip" : {
            "type" : "boolean",
            "nullable" : true
          },
          "sentAsClip" : {
            "type" : "boolean",
            "nullable" : true
          },
          "sentAsClipAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "sentAsWindowedStream" : {
            "type" : "boolean",
            "nullable" : true
          },
          "sentAsWindowedStreamAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "streamVerificationId" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "VideoDoorbellSettings" : {
        "type" : "object",
        "properties" : {
          "standalone_doorbell_mode" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "VideoDoorbellSettingsSelectiveUpdate" : {
        "type" : "object",
        "description" : "Update Video Doorbell settings",
        "properties" : {
          "standalone_doorbell_mode" : {
            "type" : "boolean",
            "nullable" : true
          },
          "updatedSetMethodMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "boolean",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "VideoIntercomPolicyType" : {
        "type" : "object",
        "description" : "List of video intercom policies using the schedule",
        "properties" : {
          "description" : {
            "type" : "string",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "scheduledTriggers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/VideoIntercomScheduledTriggerType"
            },
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "VideoIntercomScheduledTriggerType" : {
        "type" : "object",
        "properties" : {
          "schedule" : {
            "$ref" : "#/components/schemas/WeeklyRepeatingScheduleType"
          },
          "triggerSet" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/VideoIntercomTriggerType"
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "VideoIntercomTriggerType" : {
        "type" : "object",
        "properties" : {
          "activity" : {
            "$ref" : "#/components/schemas/ActivityEnum"
          },
          "faceAlertLabelSet" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "faceAlertUnidentified" : {
            "type" : "boolean",
            "nullable" : true
          },
          "faceAllowedLabelSet" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "lufsThreshold" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "peopleCountThreshold" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "vehicleAlertLabelSet" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "vehicleAlertUnidentified" : {
            "type" : "boolean",
            "nullable" : true
          },
          "vehicleAllowedLabelSet" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          }
        }
      },
      "VideoSimilarityModelEnum" : {
        "type" : "string",
        "description" : "Video similarity model to use for search",
        "enum" : [ "CHRIS_POSE_512", "CHRIS_BOX_512", "UNKNOWN" ]
      },
      "VideoWallType" : {
        "type" : "object",
        "description" : "Video wall configuration to update",
        "properties" : {
          "deviceList" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "DeviceFacetUuid",
              "description" : "RUUID with optional appended facet information",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
              "nullable" : true
            },
            "nullable" : true
          },
          "displayName" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "othersCanEdit" : {
            "type" : "boolean",
            "nullable" : true
          },
          "ownerUserUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "settings" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object",
              "nullable" : true
            },
            "nullable" : true
          },
          "shared" : {
            "type" : "boolean",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Video_CancelSpliceV2WSRequest" : {
        "type" : "object",
        "description" : "Request object for canceling a spliced clip V2.",
        "properties" : {
          "clipUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "clipUuidList" : {
            "type" : "array",
            "description" : "List of clip UUIDs to cancel",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          },
          "deviceUuids" : {
            "type" : "array",
            "description" : "List of device facet UUIDs associated with the clips",
            "items" : {
              "type" : "string",
              "format" : "DeviceFacetUuid",
              "description" : "RUUID with optional appended facet information",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Video_CancelSpliceV2WSResponse" : {
        "type" : "object",
        "description" : "Response object for canceling a spliced clip V2.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Video_CancelSpliceWSRequest" : {
        "type" : "object",
        "description" : "Request object for canceling a spliced clip (deprecated).",
        "properties" : {
          "clipUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "deviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Video_CancelSpliceWSResponse" : {
        "type" : "object",
        "description" : "Response object for canceling a spliced clip (deprecated).",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Video_CreateSharedTimelapseGroupWSRequest" : {
        "type" : "object",
        "description" : "Request object for creating a shared timelapse group.",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "Description for the shared timelapse group",
            "example" : "Shared timelapse for security review",
            "nullable" : true
          },
          "expirationTimeSecs" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Expiration time in seconds for the shared group",
            "example" : 86400,
            "nullable" : true
          },
          "plaintextPassword" : {
            "type" : "string",
            "description" : "Plaintext password for the shared timelapse group",
            "example" : "securePassword123",
            "nullable" : true
          },
          "timelapseUuids" : {
            "type" : "array",
            "description" : "List of timelapse UUIDs to include in the shared group",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          },
          "title" : {
            "type" : "string",
            "description" : "Title for the shared timelapse group",
            "example" : "Security Review",
            "nullable" : true
          }
        }
      },
      "Video_CreateSharedTimelapseGroupWSResponse" : {
        "type" : "object",
        "description" : "Response object for creating a shared timelapse group.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "shareUrl" : {
            "type" : "string",
            "description" : "Share URL for the timelapse group",
            "example" : "https://example.com/share/timelapse/12345",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Video_DeleteSharedTimelapseGroupWSRequest" : {
        "type" : "object",
        "description" : "Request object for deleting a shared timelapse group.",
        "properties" : {
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Video_DeleteSharedTimelapseGroupWSResponse" : {
        "type" : "object",
        "description" : "Response object for deleting a shared timelapse group.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Video_DeleteTimelapseClipsWSRequest" : {
        "type" : "object",
        "description" : "Request object for deleting timelapse clips.",
        "properties" : {
          "clipUuids" : {
            "type" : "array",
            "description" : "List of timelapse clip UUIDs to delete",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Video_DeleteTimelapseClipsWSResponse" : {
        "type" : "object",
        "description" : "Response object for deleting timelapse clips.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Video_GenerateTimelapseClipWSRequest" : {
        "type" : "object",
        "description" : "Request object for generating a timelapse clip.",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "Description for the timelapse",
            "example" : "Daily timelapse of security events",
            "nullable" : true
          },
          "deviceUuids" : {
            "type" : "array",
            "description" : "List of device UUIDs to include in the timelapse",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          },
          "drawCameraDetails" : {
            "type" : "boolean",
            "description" : "Whether to draw camera details on the video",
            "example" : true,
            "nullable" : true
          },
          "drawTimestamp" : {
            "type" : "boolean",
            "description" : "Whether to draw timestamps on the video",
            "example" : true,
            "nullable" : true
          },
          "skipNights" : {
            "type" : "boolean",
            "description" : "Whether to skip night time periods",
            "example" : true,
            "nullable" : true
          },
          "skipWeekends" : {
            "type" : "boolean",
            "description" : "Whether to skip weekend periods",
            "example" : false,
            "nullable" : true
          },
          "startTime" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start time in milliseconds for the timelapse",
            "example" : 1640995200000,
            "nullable" : true
          },
          "stopTime" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Stop time in milliseconds for the timelapse",
            "example" : 1640998800000,
            "nullable" : true
          },
          "title" : {
            "type" : "string",
            "description" : "Title for the timelapse",
            "example" : "Daily Security Review",
            "nullable" : true
          },
          "videoDuration" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Duration in seconds for the output video",
            "example" : 60,
            "nullable" : true
          },
          "videoFormat" : {
            "type" : "string",
            "description" : "Format for the output video",
            "example" : "mp4",
            "nullable" : true
          }
        }
      },
      "Video_GenerateTimelapseClipWSResponse" : {
        "type" : "object",
        "description" : "Response object for generating a timelapse clip.",
        "properties" : {
          "clipUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Video_GetExactFrameUriWSRequest" : {
        "type" : "object",
        "description" : "Request object for generating URL to get an exact frame with optional crop from a camera.",
        "properties" : {
          "cameraUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          },
          "downscaleFactor" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Ratio to shrink the image pixels by",
            "minimum" : 1,
            "nullable" : true
          },
          "jpgQuality" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Adjust quality of image compression",
            "maximum" : 100,
            "minimum" : 0,
            "nullable" : true
          },
          "permyriadCropHeight" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Precise ratio to crop the height by. Capped at 10000, which is 100.00% of the image",
            "maximum" : 10000,
            "minimum" : 0,
            "nullable" : true
          },
          "permyriadCropWidth" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Precise ratio to crop the width by. Capped at 10000, which is 100.00% of the image",
            "maximum" : 10000,
            "minimum" : 0,
            "nullable" : true
          },
          "permyriadCropX" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Proportional location to start horizontal crop at. Where 10000 is 100.00% of, or the end of the image",
            "maximum" : 10000,
            "minimum" : 0,
            "nullable" : true
          },
          "permyriadCropY" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Proportional location to start vertical crop at. Where 10000 is 100.00% of, or the end of the image",
            "maximum" : 10000,
            "minimum" : 0,
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Timestamp in epoch milliseconds",
            "nullable" : true
          }
        },
        "required" : [ "cameraUuid", "timestampMs" ]
      },
      "Video_GetExactFrameUriWSResponse" : {
        "type" : "object",
        "description" : "Response object containing the exact frame URI.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "frameUri" : {
            "type" : "string",
            "description" : "URI to access the exact frame",
            "example" : "https://example.com/frame/12345.jpg",
            "nullable" : true
          },
          "responseMessage" : {
            "type" : "string",
            "description" : "Response message from the frame generation",
            "example" : "Frame generated successfully",
            "nullable" : true
          }
        }
      },
      "Video_GetMaxSpliceDurationWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting the max splice duration an organization can set."
      },
      "Video_GetMaxSpliceDurationWSResponse" : {
        "type" : "object",
        "description" : "Response object containing the max splice duration for the organization.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "maxDuration" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Maximum duration in seconds that can be set for a splice",
            "example" : 3600,
            "nullable" : true
          }
        }
      },
      "Video_GetSharedTimelapseGroupsWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting all shared timelapse groups for the organization."
      },
      "Video_GetSharedTimelapseGroupsWSResponse" : {
        "type" : "object",
        "description" : "Response object containing all shared timelapse groups for the organization.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "sharedTimelapses" : {
            "type" : "array",
            "description" : "List of shared timelapse groups for the organization",
            "items" : {
              "$ref" : "#/components/schemas/SharedTimelapseGroupWrapperType"
            },
            "nullable" : true
          }
        }
      },
      "Video_GetSplicedClipsInProgressWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting all spliced clips in progress."
      },
      "Video_GetSplicedClipsInProgressWSResponse" : {
        "type" : "object",
        "description" : "Response object containing all spliced clips in progress.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "splicedClips" : {
            "type" : "array",
            "description" : "List of spliced clips currently in progress",
            "items" : {
              "$ref" : "#/components/schemas/SplicedClipType"
            },
            "nullable" : true
          }
        }
      },
      "Video_GetTimelapseClipsWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting all timelapse clips for the organization."
      },
      "Video_GetTimelapseClipsWSResponse" : {
        "type" : "object",
        "description" : "Response object containing all timelapse clips for the organization.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "timelapseClips" : {
            "type" : "array",
            "description" : "List of timelapse clips for the organization",
            "items" : {
              "$ref" : "#/components/schemas/TimelapseClipType"
            },
            "nullable" : true
          }
        }
      },
      "Video_GetTimelapseMetadataWSRequest" : {
        "type" : "object",
        "description" : "Request object for getting timelapse metadata for cameras.",
        "properties" : {
          "deviceUuidList" : {
            "type" : "array",
            "description" : "List of device facet UUIDs to get timelapse metadata for",
            "items" : {
              "type" : "string",
              "format" : "DeviceFacetUuid",
              "description" : "RUUID with optional appended facet information",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Video_GetTimelapseMetadataWSResponse" : {
        "type" : "object",
        "description" : "Response object containing timelapse metadata for cameras.",
        "properties" : {
          "earliestTimestampMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "description" : "Map of device facet UUIDs to their earliest available timelapse timestamps",
              "nullable" : true
            },
            "description" : "Map of device facet UUIDs to their earliest available timelapse timestamps",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Video_RetrySpliceWSRequest" : {
        "type" : "object",
        "description" : "Request object for retrying a spliced clip.",
        "properties" : {
          "clipUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "deviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "duration" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Duration in seconds for the retry",
            "example" : 60,
            "nullable" : true
          },
          "startTime" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start time in milliseconds for the retry",
            "example" : 1640995200000,
            "nullable" : true
          }
        }
      },
      "Video_RetrySpliceWSResponse" : {
        "type" : "object",
        "description" : "Response object for retrying a spliced clip.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Video_ShareTimelapseClipsWSRequest" : {
        "type" : "object",
        "description" : "Request object for sharing timelapse clips (deprecated).",
        "properties" : {
          "clipUuids" : {
            "type" : "array",
            "description" : "List of timelapse clip UUIDs to share",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          }
        }
      },
      "Video_ShareTimelapseClipsWSResponse" : {
        "type" : "object",
        "description" : "Response object for sharing timelapse clips (deprecated).",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "shareUrlMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "description" : "Map of clip UUIDs to their share URLs",
              "nullable" : true
            },
            "description" : "Map of clip UUIDs to their share URLs",
            "nullable" : true
          }
        }
      },
      "Video_SpliceFrameWSRequest" : {
        "type" : "object",
        "description" : "Request object for creating a single image from a point in time.",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Timestamp in milliseconds for the frame",
            "example" : 1640995200000,
            "nullable" : true
          }
        }
      },
      "Video_SpliceFrameWSResponse" : {
        "type" : "object",
        "description" : "Response object for creating a single image from a point in time.",
        "properties" : {
          "clipUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "region" : {
            "type" : "string",
            "description" : "Region where the frame clip is stored",
            "example" : "us-west-2",
            "nullable" : true
          }
        }
      },
      "Video_SpliceV2WSRequest" : {
        "type" : "object",
        "description" : "Request object for splicing video clips V2 (deprecated).",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "Description for the spliced clip",
            "example" : "Review of security incident from main entrance",
            "nullable" : true
          },
          "deviceUuids" : {
            "type" : "array",
            "description" : "List of device UUIDs to splice video from",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          },
          "durationSec" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Duration in seconds for the splice",
            "example" : 60,
            "nullable" : true
          },
          "fisheyePresentationMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "description" : "Map of device UUIDs to dewarped view configurations for fisheye cameras",
              "items" : {
                "$ref" : "#/components/schemas/DewarpedView"
              },
              "nullable" : true
            },
            "description" : "Map of device UUIDs to dewarped view configurations for fisheye cameras",
            "nullable" : true
          },
          "startTimeMillis" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start time in milliseconds for the splice",
            "example" : 1640995200000,
            "nullable" : true
          },
          "title" : {
            "type" : "string",
            "description" : "Title for the spliced clip",
            "example" : "Security Incident Review",
            "nullable" : true
          }
        }
      },
      "Video_SpliceV2WSResponse" : {
        "type" : "object",
        "description" : "Response object for splicing video clips V2 (deprecated).",
        "properties" : {
          "clipUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Video_SpliceV3WSRequest" : {
        "type" : "object",
        "description" : "Request object for splicing video clips V3 with multiple cameras and advanced options.",
        "properties" : {
          "alteredViewMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "description" : "Map of device facet UUIDs to altered view configurations",
              "items" : {
                "$ref" : "#/components/schemas/AlteredView"
              },
              "nullable" : true
            },
            "description" : "Map of device facet UUIDs to altered view configurations",
            "nullable" : true
          },
          "audioIncluded" : {
            "type" : "boolean",
            "description" : "Whether to include audio in the clip",
            "example" : true,
            "nullable" : true
          },
          "clipVisibility" : {
            "$ref" : "#/components/schemas/ClipVisibility"
          },
          "description" : {
            "type" : "string",
            "description" : "Description for the spliced clip",
            "example" : "Review of security incident from main entrance",
            "nullable" : true
          },
          "deviceUuids" : {
            "type" : "array",
            "description" : "List of device facet UUIDs to splice video from",
            "items" : {
              "type" : "string",
              "format" : "DeviceFacetUuid",
              "description" : "RUUID with optional appended facet information",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
              "nullable" : true
            },
            "nullable" : true
          },
          "durationSec" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Duration in seconds for the splice",
            "example" : 60,
            "nullable" : true
          },
          "integrationUploadMap" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "boolean",
              "description" : "Map of integration names to upload flags",
              "nullable" : true
            },
            "description" : "Map of integration names to upload flags",
            "nullable" : true
          },
          "saveToConsole" : {
            "type" : "boolean",
            "description" : "Whether to save the clip to console",
            "example" : true,
            "nullable" : true
          },
          "sendToSharedStorage" : {
            "type" : "boolean",
            "description" : "Whether to send to shared storage",
            "example" : false,
            "nullable" : true
          },
          "sendToUserStorage" : {
            "type" : "boolean",
            "description" : "Whether to send to user storage",
            "example" : false,
            "nullable" : true
          },
          "startTimeMillis" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start time in milliseconds for the splice",
            "example" : 1640995200000,
            "nullable" : true
          },
          "title" : {
            "type" : "string",
            "description" : "Title for the spliced clip",
            "example" : "Security Incident Review",
            "nullable" : true
          }
        }
      },
      "Video_SpliceV3WSResponse" : {
        "type" : "object",
        "description" : "Response object for splicing video clips V3.",
        "properties" : {
          "clipUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "clipUuidList" : {
            "type" : "array",
            "description" : "List of UUIDs for created spliced clips",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Video_SpliceWSRequest" : {
        "type" : "object",
        "description" : "Request object for splicing video clips (deprecated).",
        "properties" : {
          "deviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "duration" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Duration in seconds for the splice",
            "example" : 60,
            "nullable" : true
          },
          "startTime" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Start time in milliseconds for the splice",
            "example" : 1640995200000,
            "nullable" : true
          }
        }
      },
      "Video_SpliceWSResponse" : {
        "type" : "object",
        "description" : "Response object for splicing video clips (deprecated).",
        "properties" : {
          "clipUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "Video_UpdateSharedTimelapseGroupWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating a shared timelapse group.",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "New description for the shared timelapse group",
            "example" : "Updated shared timelapse for security review",
            "nullable" : true
          },
          "descriptionUpdate" : {
            "type" : "boolean",
            "description" : "Whether to update the description",
            "example" : true,
            "nullable" : true
          },
          "expirationTimeSecs" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "New expiration time in seconds for the shared group",
            "example" : 172800,
            "nullable" : true
          },
          "expirationTimeUpdate" : {
            "type" : "boolean",
            "description" : "Whether to update the expiration time",
            "example" : false,
            "nullable" : true
          },
          "passwordUpdate" : {
            "type" : "boolean",
            "description" : "Whether to update the password",
            "example" : false,
            "nullable" : true
          },
          "plaintextPassword" : {
            "type" : "string",
            "description" : "New plaintext password for the shared timelapse group",
            "example" : "newSecurePassword123",
            "nullable" : true
          },
          "title" : {
            "type" : "string",
            "description" : "New title for the shared timelapse group",
            "example" : "Updated Security Review",
            "nullable" : true
          },
          "titleUpdate" : {
            "type" : "boolean",
            "description" : "Whether to update the title",
            "example" : true,
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Video_UpdateSharedTimelapseGroupWSResponse" : {
        "type" : "object",
        "description" : "Response object for updating a shared timelapse group.",
        "properties" : {
          "error" : {
            "type" : "boolean",
            "nullable" : true
          },
          "errorMsg" : {
            "type" : "string",
            "nullable" : true
          },
          "shareUrl" : {
            "type" : "string",
            "description" : "Updated share URL for the timelapse group",
            "example" : "https://example.com/share/timelapse/12345",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "Video_UpdateTimelapseClipMetadataWSRequest" : {
        "type" : "object",
        "description" : "Request object for updating a timelapse clip's editable metadata.",
        "properties" : {
          "clipUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "description" : {
            "type" : "string",
            "description" : "The new description for the timelapse clip. Omit this field to not update. Providing the field with null will cause the field to be unset",
            "nullable" : true
          },
          "title" : {
            "type" : "string",
            "description" : "The new title for the timelapse clip. Omit this field to not update. Providing the field with null will cause the field to be unset",
            "nullable" : true
          }
        },
        "required" : [ "clipUuid" ]
      },
      "Video_UpdateTimelapseClipMetadataWSResponse" : {
        "type" : "object",
        "description" : "Response object for updating a timelapse clip's metadata.",
        "properties" : {
          "timelapseClip" : {
            "$ref" : "#/components/schemas/TimelapseClipType"
          }
        }
      },
      "VisionLLMEventRecordType" : {
        "type" : "object",
        "properties" : {
          "deviceFacetUuid" : {
            "type" : "string",
            "format" : "DeviceFacetUuid",
            "description" : "RUUID with optional appended facet information",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable" : true
          },
          "fullResponse" : {
            "type" : "string",
            "nullable" : true
          },
          "parsedAffirmativeResponse" : {
            "type" : "boolean",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "userPrompt" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "VisionLLMRuleTriggerType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "createAffirmativeSeekpoints" : {
              "type" : "boolean",
              "nullable" : true
            },
            "createNegativeSeekpoints" : {
              "type" : "boolean",
              "nullable" : true
            },
            "deviceFacetUuid" : {
              "type" : "string",
              "format" : "DeviceFacetUuid",
              "description" : "RUUID with optional appended facet information",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA.v0",
              "nullable" : true
            },
            "highDetail" : {
              "type" : "boolean",
              "nullable" : true
            },
            "userPrompt" : {
              "type" : "string",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/RuleTriggerTypeEnum"
          }
        }
      },
      "WaveToUnlockIntentExpiredEvent" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "authWaitMs" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "authWaitMsTotal" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "componentCompositeUuid" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "credentials" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/CredentialEntry"
              },
              "nullable" : true
            },
            "rssiThreshold" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "componentUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "correlationId" : {
            "type" : "string",
            "nullable" : true
          },
          "createdAtMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "locationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "timestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEventEnumType"
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "WaveToUnlockSettingsType" : {
        "type" : "object",
        "properties" : {
          "awaitAuthDurationMs" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "minRSSIThreshold" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "showAwaitIntentFeedback" : {
            "type" : "boolean",
            "nullable" : true
          },
          "treatNfcAsIntent" : {
            "type" : "boolean",
            "nullable" : true
          }
        }
      },
      "WaveToUnlockSettingsType_Minimal" : {
        "type" : "object",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "minRSSIThreshold" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "WebhookActionType" : {
        "type" : "object",
        "properties" : {
          "webhookUrl" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "WebhookInfo" : {
        "type" : "object",
        "properties" : {
          "webhookDisabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "webhookSecret" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "WebhookMapEntry" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "orgId" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "webhookId" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "WebhookSettings" : {
        "type" : "object",
        "description" : "Webhook integration settings to update",
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "enabledTimestampMs" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "enablingUser" : {
            "type" : "string",
            "nullable" : true
          },
          "enablingUserUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "webhookSecret" : {
            "type" : "string",
            "nullable" : true
          },
          "webhookUrl" : {
            "type" : "string",
            "nullable" : true
          }
        }
      },
      "WebhooksType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "activityWebhooks" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "string",
                "nullable" : true
              },
              "nullable" : true
            },
            "activityWebhooksV2" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/WebhookInfo"
              },
              "nullable" : true
            },
            "diagnosticWebhooks" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "string",
                "nullable" : true
              },
              "nullable" : true
            },
            "diagnosticWebhooksV2" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/WebhookInfo"
              },
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "WeeklyMinuteIntervalType" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "minuteOfWeekStart" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "minuteOfWeekStop" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          }
        }
      },
      "WeeklyRepeatingScheduleType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "intervalList" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/WeeklyMinuteIntervalType"
              },
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "mutable" : {
            "type" : "boolean",
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "oneTimeUse" : {
            "type" : "boolean",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "strategy" : {
            "type" : "string",
            "enum" : [ "WEEKLY_REPEATING_MINUTES", "ABSOLUTE_SECONDS", "REALTIME_RELATIVE_SECONDS", "RELATIVE_DATETIME_INTERVALS" ],
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "WeeklyStatisticsDataPoint" : {
        "type" : "object",
        "description" : "List of weekly statistics data points",
        "properties" : {
          "date" : {
            "type" : "string",
            "nullable" : true
          },
          "stats" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Stats"
            },
            "nullable" : true
          }
        }
      },
      "Wiegand64BitRawCredentialType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "cardNumber" : {
              "type" : "integer",
              "format" : "int64",
              "nullable" : true
            },
            "format" : {
              "$ref" : "#/components/schemas/WiegandFormatEnumType"
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "endDateEpochSecExclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "lastUsedAccessControlledDoorUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "lastUsedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "lastUsedLocationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "lowercaseHexValue" : {
            "type" : "string",
            "nullable" : true,
            "readOnly" : true
          },
          "managedCredUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "note" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "startDateEpochSecInclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/AccessControlCredentialEnumType"
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "value" : {
            "type" : "string",
            "nullable" : true
          },
          "workflowStatus" : {
            "$ref" : "#/components/schemas/AccessControlCredentialWorkflowStatusEnumType"
          }
        }
      },
      "WiegandD10202Credential" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "cardNumber" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "facilityCode" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "format" : {
              "$ref" : "#/components/schemas/WiegandFormatEnumType"
            },
            "nonParityValue" : {
              "type" : "string",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "endDateEpochSecExclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "lastUsedAccessControlledDoorUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "lastUsedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "lastUsedLocationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "lowercaseHexValue" : {
            "type" : "string",
            "nullable" : true,
            "readOnly" : true
          },
          "managedCredUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "note" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "startDateEpochSecInclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/AccessControlCredentialEnumType"
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "value" : {
            "type" : "string",
            "nullable" : true
          },
          "workflowStatus" : {
            "$ref" : "#/components/schemas/AccessControlCredentialWorkflowStatusEnumType"
          }
        }
      },
      "WiegandDataPhysicalPortEnumType" : {
        "type" : "string",
        "enum" : [ "WIEGAND_INPUT" ]
      },
      "WiegandDataPortType" : {
        "type" : "object",
        "properties" : {
          "boardNum" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "portNum" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "portType" : {
            "$ref" : "#/components/schemas/WiegandDataPhysicalPortEnumType"
          }
        }
      },
      "WiegandDoorReaderType" : {
        "type" : "object",
        "properties" : {
          "baseType" : {
            "$ref" : "#/components/schemas/ComponentBaseEnumType"
          },
          "buzzerPort" : {
            "$ref" : "#/components/schemas/WiegandOutputPortType"
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "d0Port" : {
            "$ref" : "#/components/schemas/WiegandDataPortType"
          },
          "d1Port" : {
            "$ref" : "#/components/schemas/WiegandDataPortType"
          },
          "disableCardReader" : {
            "type" : "boolean",
            "nullable" : true
          },
          "disableKeypad" : {
            "type" : "boolean",
            "nullable" : true
          },
          "disableWaveToUnlock" : {
            "type" : "boolean",
            "nullable" : true
          },
          "gledPort" : {
            "$ref" : "#/components/schemas/WiegandOutputPortType"
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "otherReaderUnlockAudioFeedbackEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "ownerDeviceUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "ownerHardwareType" : {
            "$ref" : "#/components/schemas/HardwareVariationEnum"
          },
          "portImmutable" : {
            "type" : "boolean",
            "nullable" : true
          },
          "readerType" : {
            "$ref" : "#/components/schemas/DoorReaderEnumType"
          },
          "remoteUnlockAudioFeedbackEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "rledPort" : {
            "$ref" : "#/components/schemas/WiegandOutputPortType"
          },
          "tamperPort" : {
            "$ref" : "#/components/schemas/WiegandInputPortType"
          },
          "type" : {
            "$ref" : "#/components/schemas/ComponentEnumType"
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "WiegandFormatEnumType" : {
        "type" : "string",
        "enum" : [ "H10301", "D10202", "H10304", "H10302", "WIEGAND_64BIT_RAW", "HID_CORP1000" ]
      },
      "WiegandH10301CredentialType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "cardNumber" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "facilityCode" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "format" : {
              "$ref" : "#/components/schemas/WiegandFormatEnumType"
            },
            "nonParityValue" : {
              "type" : "string",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "endDateEpochSecExclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "lastUsedAccessControlledDoorUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "lastUsedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "lastUsedLocationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "lowercaseHexValue" : {
            "type" : "string",
            "nullable" : true,
            "readOnly" : true
          },
          "managedCredUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "note" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "startDateEpochSecInclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/AccessControlCredentialEnumType"
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "value" : {
            "type" : "string",
            "nullable" : true
          },
          "workflowStatus" : {
            "$ref" : "#/components/schemas/AccessControlCredentialWorkflowStatusEnumType"
          }
        }
      },
      "WiegandH10304Credential" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "cardNumber" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "facilityCode" : {
              "type" : "integer",
              "format" : "int32",
              "nullable" : true
            },
            "format" : {
              "$ref" : "#/components/schemas/WiegandFormatEnumType"
            },
            "nonParityValue" : {
              "type" : "string",
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "endDateEpochSecExclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "lastUsedAccessControlledDoorUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "lastUsedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "lastUsedLocationUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "lowercaseHexValue" : {
            "type" : "string",
            "nullable" : true,
            "readOnly" : true
          },
          "managedCredUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "note" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "startDateEpochSecInclusive" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "type" : {
            "$ref" : "#/components/schemas/AccessControlCredentialEnumType"
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "value" : {
            "type" : "string",
            "nullable" : true
          },
          "workflowStatus" : {
            "$ref" : "#/components/schemas/AccessControlCredentialWorkflowStatusEnumType"
          }
        }
      },
      "WiegandInputPhysicalPortEnumType" : {
        "type" : "string",
        "enum" : [ "WIEGAND_INPUT", "GPIO_INPUT" ]
      },
      "WiegandInputPortType" : {
        "type" : "object",
        "properties" : {
          "boardNum" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "portNum" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "portType" : {
            "$ref" : "#/components/schemas/WiegandInputPhysicalPortEnumType"
          }
        }
      },
      "WiegandOutputPhysicalPortEnumType" : {
        "type" : "string",
        "enum" : [ "WIEGAND_OUTPUT" ]
      },
      "WiegandOutputPortType" : {
        "type" : "object",
        "properties" : {
          "boardNum" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "portNum" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "portType" : {
            "$ref" : "#/components/schemas/WiegandOutputPhysicalPortEnumType"
          }
        }
      },
      "WrappedRhombusOrgUserType" : {
        "type" : "object",
        "description" : "List of users in the organization",
        "properties" : {
          "accessibleRhombusApps" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "PARTNER", "CONSOLE", "RHOMBUS_KEY", "UNKNOWN" ],
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "accountOwner" : {
            "type" : "boolean",
            "nullable" : true
          },
          "bypassSaml" : {
            "type" : "boolean",
            "nullable" : true
          },
          "changePasswordOnLogin" : {
            "type" : "boolean",
            "nullable" : true
          },
          "createdAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "deleted" : {
            "type" : "boolean",
            "nullable" : true
          },
          "email" : {
            "type" : "string",
            "nullable" : true
          },
          "emailCaseSensitive" : {
            "type" : "string",
            "nullable" : true
          },
          "emailVerified" : {
            "type" : "boolean",
            "nullable" : true
          },
          "firstName" : {
            "type" : "string",
            "nullable" : true
          },
          "lastName" : {
            "type" : "string",
            "nullable" : true
          },
          "mfaEnabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "mfaTokenType" : {
            "type" : "string",
            "enum" : [ "EMAIL", "SMS", "VIRTUAL_MFA" ],
            "nullable" : true
          },
          "name" : {
            "type" : "string",
            "nullable" : true
          },
          "orgUserCustomizationFlags" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string",
              "nullable" : true
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "passwordSet" : {
            "type" : "boolean",
            "nullable" : true
          },
          "rhombusUserUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "status" : {
            "type" : "string",
            "enum" : [ "JOINED", "PENDING", "INACTIVE", "UNKNOWN" ],
            "nullable" : true
          },
          "updatedAtMillis" : {
            "type" : "integer",
            "format" : "int64",
            "nullable" : true
          },
          "uuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "ZapierEnum" : {
        "type" : "string",
        "description" : "Zapier integration type",
        "enum" : [ "BUTTON_EVENTS", "DOOR_SENSOR_EVENTS", "ENVIRONMENTAL_SENSOR_EVENTS", "RULE_EVENTS" ]
      },
      "ZapierType" : {
        "type" : "object",
        "allOf" : [ {
          "type" : "object",
          "properties" : {
            "zapierWebhooks" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/components/schemas/ZapierWebhookSettings"
              },
              "nullable" : true
            }
          }
        } ],
        "nullable" : true,
        "properties" : {
          "enabled" : {
            "type" : "boolean",
            "nullable" : true
          },
          "integration" : {
            "$ref" : "#/components/schemas/IntegrationEnum"
          },
          "integrationAuditMap" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/IntegrationAuditEvent"
            },
            "nullable" : true
          },
          "orgUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          },
          "userUuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      },
      "ZapierWebhookSettings" : {
        "type" : "object",
        "nullable" : true,
        "properties" : {
          "backoffSec" : {
            "type" : "integer",
            "format" : "int32",
            "nullable" : true
          },
          "doorState" : {
            "type" : "string",
            "enum" : [ "OPEN", "CLOSED", "AJAR" ],
            "nullable" : true
          },
          "humidityLowerThreshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "humidityUpperThreshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "tempLowerThreshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "tempUpperThreshold" : {
            "type" : "number",
            "format" : "float",
            "nullable" : true
          },
          "url" : {
            "type" : "string",
            "nullable" : true
          },
          "uuids" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "RUUID",
              "description" : "base 64 (url-safe) uuid string",
              "example" : "AAAAAAAAAAAAAAAAAAAAAA",
              "nullable" : true
            },
            "nullable" : true,
            "uniqueItems" : true
          },
          "zapEnum" : {
            "$ref" : "#/components/schemas/ZapierEnum"
          }
        },
        "required" : [ "url", "zapEnum" ]
      },
      "rctpRMAType" : {
        "type" : "object",
        "properties" : {
          "falseReport" : {
            "type" : "boolean",
            "nullable" : true
          },
          "rectified" : {
            "type" : "boolean",
            "nullable" : true
          },
          "rmauuid" : {
            "type" : "string",
            "format" : "RUUID",
            "description" : "base 64 (url-safe) uuid string",
            "example" : "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable" : true
          }
        }
      }
    },
    "securitySchemes" : {
      "ApiKeyAuth" : {
        "description" : "Your API key for Rhombus.",
        "in" : "header",
        "name" : "x-auth-apikey",
        "type" : "apiKey"
      }
    }
  },
  "x-samples-languages" : [ "curl", "node", "python", "java" ]
}