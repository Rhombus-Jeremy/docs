{
  "tag": "Policy Webservice",
  "schemas": {
    "Policy_CreateAccessControlledDoorPolicyWSRequest": {
      "type": "object",
      "properties": {
        "policy": {
          "$ref": "#/components/schemas/Policy_MinimalAccessControlledDoorPolicyType"
        }
      }
    },
    "Policy_CreateAccessControlledDoorPolicyWSResponse": {
      "type": "object",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "policyUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Policy_CreateAudioPolicyWSRequest": {
      "type": "object",
      "description": "Request object for creating an audio policy.",
      "properties": {
        "policy": {
          "$ref": "#/components/schemas/Policy_MinimalAudioPolicyType"
        }
      }
    },
    "Policy_CreateAudioPolicyWSResponse": {
      "type": "object",
      "description": "Response object containing the UUID of the created audio policy.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "policyUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Policy_CreateCameraPolicyWSRequest": {
      "type": "object",
      "description": "Request object for creating a camera policy.",
      "properties": {
        "policy": {
          "$ref": "#/components/schemas/Policy_MinimalCameraPolicyV2Type"
        }
      }
    },
    "Policy_CreateCameraPolicyWSResponse": {
      "type": "object",
      "description": "Response object containing the UUID of the created camera policy.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "policyUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Policy_CreateClimatePolicyWSRequest": {
      "type": "object",
      "description": "Request object for creating a climate policy.",
      "properties": {
        "policy": {
          "$ref": "#/components/schemas/Policy_MinimalClimatePolicyType"
        }
      }
    },
    "Policy_CreateClimatePolicyWSResponse": {
      "type": "object",
      "description": "Response object containing the UUID of the created climate policy.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "policyUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Policy_CreateDoorPolicyWSRequest": {
      "type": "object",
      "description": "Request object for creating a door sensor policy.",
      "properties": {
        "policy": {
          "$ref": "#/components/schemas/Policy_MinimalDoorPolicyType"
        }
      }
    },
    "Policy_CreateDoorPolicyWSResponse": {
      "type": "object",
      "description": "Response object containing the UUID of the created door sensor policy.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "policyUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Policy_CreateOccupancyPolicyWSRequest": {
      "type": "object",
      "properties": {
        "policy": {
          "$ref": "#/components/schemas/Policy_MinimalOccupancyPolicyType"
        }
      }
    },
    "Policy_CreateOccupancyPolicyWSResponse": {
      "type": "object",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "policyUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Policy_CreatePolicyAddendumForLocationRequest": {
      "type": "object",
      "description": "Request object for creating a policy addendum for a location.",
      "properties": {
        "activities": {
          "type": "array",
          "description": "Set of activities to include in the policy addendum",
          "items": {
            "$ref": "#/components/schemas/ActivityEnum"
          },
          "nullable": true,
          "uniqueItems": true
        },
        "durationSec": {
          "type": "integer",
          "format": "int64",
          "description": "Duration in seconds for the policy addendum",
          "example": 3600,
          "nullable": true
        },
        "locationUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        },
        "scheduledTimestampSec": {
          "type": "integer",
          "format": "int64",
          "description": "Scheduled timestamp in seconds for the policy addendum",
          "example": 1640995200,
          "nullable": true
        }
      }
    },
    "Policy_CreatePolicyAddendumForLocationResponse": {
      "type": "object",
      "description": "Response object for creating a policy addendum for a location.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Policy_CreatePolicyAddendumsForDevicesRequest": {
      "type": "object",
      "description": "Request object for creating policy addendums for multiple devices.",
      "properties": {
        "activities": {
          "type": "array",
          "description": "Set of activities to include in the policy addendums",
          "items": {
            "$ref": "#/components/schemas/ActivityEnum"
          },
          "nullable": true,
          "uniqueItems": true
        },
        "deviceUuids": {
          "type": "array",
          "description": "List of device UUIDs to create policy addendums for",
          "items": {
            "type": "string",
            "format": "RUUID",
            "description": "base 64 (url-safe) uuid string",
            "example": "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable": true
          },
          "nullable": true
        },
        "durationSec": {
          "type": "integer",
          "format": "int64",
          "description": "Duration in seconds for the policy addendums",
          "example": 3600,
          "nullable": true
        },
        "scheduledTimestampSec": {
          "type": "integer",
          "format": "int64",
          "description": "Scheduled timestamp in seconds for the policy addendums",
          "example": 1640995200,
          "nullable": true
        }
      }
    },
    "Policy_CreatePolicyAddendumsForDevicesResponse": {
      "type": "object",
      "description": "Response object for creating policy addendums for multiple devices.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Policy_CreateProximityPolicyWSRequest": {
      "type": "object",
      "properties": {
        "policy": {
          "$ref": "#/components/schemas/Policy_MinimalProximityPolicyType"
        }
      }
    },
    "Policy_CreateProximityPolicyWSResponse": {
      "type": "object",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "policyUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Policy_CreateScheduleWSRequest": {
      "type": "object",
      "description": "Request object for creating a schedule to be used for policy creation.",
      "properties": {
        "schedule": {
          "$ref": "#/components/schemas/WeeklyRepeatingScheduleType"
        }
      }
    },
    "Policy_CreateScheduleWSResponse": {
      "type": "object",
      "description": "Response object containing the UUID of the created schedule.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "scheduleUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Policy_CreateVideoIntercomPolicyWSRequest": {
      "type": "object",
      "properties": {
        "policy": {
          "$ref": "#/components/schemas/Policy_MinimalVideoIntercomPolicyType"
        }
      }
    },
    "Policy_CreateVideoIntercomPolicyWSResponse": {
      "type": "object",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "policyUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Policy_DeleteAccessControlledDoorPolicyWSRequest": {
      "type": "object",
      "description": "Request object for deleting an access controlled door policy.",
      "properties": {
        "policyUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Policy_DeleteAccessControlledDoorPolicyWSResponse": {
      "type": "object",
      "description": "Response object for deleting an access controlled door policy.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Policy_DeleteAudioPolicyWSRequest": {
      "type": "object",
      "description": "Request object for deleting an audio policy.",
      "properties": {
        "policyUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Policy_DeleteAudioPolicyWSResponse": {
      "type": "object",
      "description": "Response object for deleting an audio policy.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Policy_DeleteCameraPolicyWSRequest": {
      "type": "object",
      "description": "Request object for deleting a camera policy.",
      "properties": {
        "policyUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Policy_DeleteCameraPolicyWSResponse": {
      "type": "object",
      "description": "Response object for deleting a camera policy.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Policy_DeleteClimatePolicyWSRequest": {
      "type": "object",
      "description": "Request object for deleting a climate policy.",
      "properties": {
        "policyUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Policy_DeleteClimatePolicyWSResponse": {
      "type": "object",
      "description": "Response object for deleting a climate policy.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Policy_DeleteDevicePolicyAddendumsWSRequest": {
      "type": "object",
      "description": "Request object for deleting device policy addendums.",
      "properties": {
        "uuids": {
          "type": "array",
          "description": "List of device policy addendum UUIDs to delete",
          "items": {
            "type": "string",
            "format": "RUUID",
            "description": "base 64 (url-safe) uuid string",
            "example": "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable": true
          },
          "nullable": true
        }
      }
    },
    "Policy_DeleteDevicePolicyAddendumsWSResponse": {
      "type": "object",
      "description": "Response object for deleting device policy addendums.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Policy_DeleteDoorPolicyWSRequest": {
      "type": "object",
      "description": "Request object for deleting a door sensor policy.",
      "properties": {
        "policyUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Policy_DeleteDoorPolicyWSResponse": {
      "type": "object",
      "description": "Response object for deleting a door sensor policy.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Policy_DeleteLocationPolicyAddendumWSRequest": {
      "type": "object",
      "description": "Request object for deleting a location policy addendum.",
      "properties": {
        "uuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Policy_DeleteLocationPolicyAddendumWSResponse": {
      "type": "object",
      "description": "Response object for deleting a location policy addendum.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Policy_DeleteOccupancyPolicyWSRequest": {
      "type": "object",
      "description": "Request object for deleting an occupancy policy.",
      "properties": {
        "policyUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Policy_DeleteOccupancyPolicyWSResponse": {
      "type": "object",
      "description": "Response object for deleting an occupancy policy.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Policy_DeletePolicyPauseSettingWSRequest": {
      "type": "object",
      "description": "Request object for deleting a policy pause setting.",
      "properties": {
        "uuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Policy_DeletePolicyPauseSettingWSResponse": {
      "type": "object",
      "description": "Response object for deleting a policy pause setting.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Policy_DeleteProximityPolicyWSRequest": {
      "type": "object",
      "description": "Request object for deleting a proximity policy.",
      "properties": {
        "policyUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Policy_DeleteProximityPolicyWSResponse": {
      "type": "object",
      "description": "Response object for deleting a proximity policy.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Policy_DeleteScheduleWSRequest": {
      "type": "object",
      "description": "Request object for deleting a schedule used for policy creation.",
      "properties": {
        "scheduleUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Policy_DeleteScheduleWSResponse": {
      "type": "object",
      "description": "Response object for deleting a schedule.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Policy_DeleteVideoIntercomPolicyWSRequest": {
      "type": "object",
      "description": "Request object for deleting a video intercom policy.",
      "properties": {
        "policyUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Policy_DeleteVideoIntercomPolicyWSResponse": {
      "type": "object",
      "description": "Response object for deleting a video intercom policy.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "policyUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Policy_FindSchedulesWSRequest": {
      "type": "object",
      "description": "Request object for finding all schedules in the organization."
    },
    "Policy_FindSchedulesWSResponse": {
      "type": "object",
      "description": "Response object containing all schedules in the organization.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "schedules": {
          "type": "array",
          "description": "List of schedules in the organization",
          "items": {
            "$ref": "#/components/schemas/WeeklyRepeatingScheduleType"
          },
          "nullable": true
        }
      }
    },
    "Policy_GetAccessControlledDoorPoliciesWSRequest": {
      "type": "object",
      "description": "Request object for getting all access controlled door policies in the organization."
    },
    "Policy_GetAccessControlledDoorPoliciesWSResponse": {
      "type": "object",
      "description": "Response object containing all access controlled door policies in the organization.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "policies": {
          "type": "array",
          "description": "List of access controlled door policies in the organization",
          "items": {
            "$ref": "#/components/schemas/AccessControlledDoorPolicyType"
          },
          "nullable": true
        }
      }
    },
    "Policy_GetAudioPoliciesWSRequest": {
      "type": "object",
      "description": "Request object for getting all audio policies in the organization."
    },
    "Policy_GetAudioPoliciesWSResponse": {
      "type": "object",
      "description": "Response object containing all audio policies in the organization.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "policies": {
          "type": "array",
          "description": "List of audio policies in the organization",
          "items": {
            "$ref": "#/components/schemas/Policy_ExternalAudioPolicyType"
          },
          "nullable": true
        }
      }
    },
    "Policy_GetCameraPoliciesWSRequest": {
      "type": "object",
      "description": "Request object for getting all camera policies in the organization."
    },
    "Policy_GetCameraPoliciesWSResponse": {
      "type": "object",
      "description": "Response object containing all camera policies in the organization.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "policies": {
          "type": "array",
          "description": "List of camera policies in the organization",
          "items": {
            "$ref": "#/components/schemas/CameraPolicyV2Type"
          },
          "nullable": true
        }
      }
    },
    "Policy_GetClimatePoliciesWSRequest": {
      "type": "object",
      "description": "Request object for getting all climate policies in the organization."
    },
    "Policy_GetClimatePoliciesWSResponse": {
      "type": "object",
      "description": "Response object containing all climate policies in the organization.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "policies": {
          "type": "array",
          "description": "List of climate policies in the organization",
          "items": {
            "$ref": "#/components/schemas/ClimatePolicyType"
          },
          "nullable": true
        }
      }
    },
    "Policy_GetDoorPoliciesWSRequest": {
      "type": "object",
      "description": "Request object for getting all door sensor policies in the organization."
    },
    "Policy_GetDoorPoliciesWSResponse": {
      "type": "object",
      "description": "Response object containing all door sensor policies in the organization.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "policies": {
          "type": "array",
          "description": "List of door sensor policies in the organization",
          "items": {
            "$ref": "#/components/schemas/DoorPolicyType"
          },
          "nullable": true
        }
      }
    },
    "Policy_GetOccupancyPoliciesWSRequest": {
      "type": "object",
      "description": "Request object for getting all occupancy policies in the organization."
    },
    "Policy_GetOccupancyPoliciesWSResponse": {
      "type": "object",
      "description": "Response object containing all occupancy policies in the organization.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "policies": {
          "type": "array",
          "description": "List of occupancy policies in the organization",
          "items": {
            "$ref": "#/components/schemas/OccupancyPolicyType"
          },
          "nullable": true
        }
      }
    },
    "Policy_GetPoliciesUsingScheduleWSRequest": {
      "type": "object",
      "description": "Request object for getting all policies that use a specific schedule.",
      "properties": {
        "scheduleUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Policy_GetPoliciesUsingScheduleWSResponse": {
      "type": "object",
      "description": "Response object containing all policies that use a specific schedule, organized by policy type.",
      "properties": {
        "accessControlledDoorPolicyList": {
          "type": "array",
          "description": "List of access controlled door policies using the schedule",
          "items": {
            "$ref": "#/components/schemas/AccessControlledDoorPolicyType"
          },
          "nullable": true
        },
        "audioPolicyList": {
          "type": "array",
          "description": "List of audio policies using the schedule",
          "items": {
            "$ref": "#/components/schemas/AudioPolicyType"
          },
          "nullable": true
        },
        "cameraPolicyList": {
          "type": "array",
          "description": "List of camera policies using the schedule",
          "items": {
            "$ref": "#/components/schemas/CameraPolicyV2Type"
          },
          "nullable": true
        },
        "climatePolicyList": {
          "type": "array",
          "description": "List of climate policies using the schedule",
          "items": {
            "$ref": "#/components/schemas/ClimatePolicyType"
          },
          "nullable": true
        },
        "doorPolicyList": {
          "type": "array",
          "description": "List of door sensor policies using the schedule",
          "items": {
            "$ref": "#/components/schemas/DoorPolicyType"
          },
          "nullable": true
        },
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "occupancyPolicyList": {
          "type": "array",
          "description": "List of occupancy policies using the schedule",
          "items": {
            "$ref": "#/components/schemas/OccupancyPolicyType"
          },
          "nullable": true
        },
        "proximityPolicyList": {
          "type": "array",
          "description": "List of proximity policies using the schedule",
          "items": {
            "$ref": "#/components/schemas/ProximityPolicyType"
          },
          "nullable": true
        },
        "videoIntercomPolicyList": {
          "type": "array",
          "description": "List of video intercom policies using the schedule",
          "items": {
            "$ref": "#/components/schemas/VideoIntercomPolicyType"
          },
          "nullable": true
        }
      }
    },
    "Policy_GetPolicyAddendumsWSRequest": {
      "type": "object",
      "description": "Request object for getting policy addendums."
    },
    "Policy_GetPolicyAddendumsWSResponse": {
      "type": "object",
      "description": "Response object containing policy addendums for devices and locations.",
      "properties": {
        "deviceAddendumsMap": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "description": "Map of device UUIDs to their policy addendum scheduled intervals",
            "items": {
              "$ref": "#/components/schemas/ScheduledIntervalType"
            },
            "nullable": true
          },
          "description": "Map of device UUIDs to their policy addendum scheduled intervals",
          "nullable": true
        },
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "locationAddendumsMap": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "description": "Map of location UUIDs to their policy addendum scheduled intervals",
            "items": {
              "$ref": "#/components/schemas/ScheduledIntervalType"
            },
            "nullable": true
          },
          "description": "Map of location UUIDs to their policy addendum scheduled intervals",
          "nullable": true
        }
      }
    },
    "Policy_GetPolicyPauseSettingsWSRequest": {
      "type": "object",
      "description": "Request object for getting policy pause settings."
    },
    "Policy_GetPolicyPauseSettingsWSResponse": {
      "type": "object",
      "description": "Response object containing policy pause settings for locations, devices, and component composites.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "policiesPausedForComponentCompositesMap": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "description": "Map of component composite UUIDs to their paused policy scheduled intervals",
            "items": {
              "$ref": "#/components/schemas/ScheduledIntervalType"
            },
            "nullable": true
          },
          "description": "Map of component composite UUIDs to their paused policy scheduled intervals",
          "nullable": true
        },
        "policiesPausedForDevicesMap": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "description": "Map of device UUIDs to their paused policy scheduled intervals",
            "items": {
              "$ref": "#/components/schemas/ScheduledIntervalType"
            },
            "nullable": true
          },
          "description": "Map of device UUIDs to their paused policy scheduled intervals",
          "nullable": true
        },
        "policiesPausedForLocationsMap": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "description": "Map of location UUIDs to their paused policy scheduled intervals",
            "items": {
              "$ref": "#/components/schemas/ScheduledIntervalType"
            },
            "nullable": true
          },
          "description": "Map of location UUIDs to their paused policy scheduled intervals",
          "nullable": true
        }
      }
    },
    "Policy_GetProximityPoliciesWSRequest": {
      "type": "object",
      "description": "Request object for getting all proximity policies in the organization."
    },
    "Policy_GetProximityPoliciesWSResponse": {
      "type": "object",
      "description": "Response object containing all proximity policies in the organization.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "policies": {
          "type": "array",
          "description": "List of proximity policies in the organization",
          "items": {
            "$ref": "#/components/schemas/ProximityPolicyType"
          },
          "nullable": true
        }
      }
    },
    "Policy_GetVideoIntercomPoliciesWSRequest": {
      "type": "object",
      "description": "Request object for getting all video intercom policies in the organization."
    },
    "Policy_GetVideoIntercomPoliciesWSResponse": {
      "type": "object",
      "description": "Response object containing all video intercom policies in the organization.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "policies": {
          "type": "array",
          "description": "List of video intercom policies in the organization",
          "items": {
            "$ref": "#/components/schemas/Policy_ExternalVideoIntercomPolicyType"
          },
          "nullable": true
        }
      }
    },
    "Policy_PauseAlertPolicyWSRequest": {
      "type": "object",
      "description": "Request object for pausing alert policies for specified locations, devices, and components.",
      "properties": {
        "componentCompositeUuids": {
          "type": "array",
          "description": "List of component composite UUIDs to pause alert policies for",
          "items": {
            "type": "string",
            "format": "RUUID",
            "description": "base 64 (url-safe) uuid string",
            "example": "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable": true
          },
          "nullable": true
        },
        "deviceUuids": {
          "type": "array",
          "description": "List of device UUIDs to pause alert policies for",
          "items": {
            "type": "string",
            "format": "RUUID",
            "description": "base 64 (url-safe) uuid string",
            "example": "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable": true
          },
          "nullable": true
        },
        "durationSec": {
          "type": "integer",
          "format": "int64",
          "description": "Duration in seconds to pause alert policies",
          "example": 3600,
          "nullable": true
        },
        "locationUuids": {
          "type": "array",
          "description": "List of location UUIDs to pause alert policies for",
          "items": {
            "type": "string",
            "format": "RUUID",
            "description": "base 64 (url-safe) uuid string",
            "example": "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable": true
          },
          "nullable": true
        },
        "scheduledTimestampSec": {
          "type": "integer",
          "format": "int64",
          "description": "Scheduled timestamp in seconds for when to pause alert policies",
          "example": 1640995200,
          "nullable": true
        }
      }
    },
    "Policy_PauseAlertPolicyWSResponse": {
      "type": "object",
      "description": "Response object for pausing alert policies.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Policy_UpdateAccessControlledDoorPolicyWSRequest": {
      "type": "object",
      "description": "Request object for updating an access controlled door policy.",
      "properties": {
        "policy": {
          "$ref": "#/components/schemas/Policy_MinimalAccessControlledDoorPolicyType"
        }
      }
    },
    "Policy_UpdateAccessControlledDoorPolicyWSResponse": {
      "type": "object",
      "description": "Response object for updating an access controlled door policy.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Policy_UpdateAudioPolicyWSRequest": {
      "type": "object",
      "description": "Request object for updating an audio policy.",
      "properties": {
        "policy": {
          "$ref": "#/components/schemas/Policy_MinimalAudioPolicyType"
        }
      }
    },
    "Policy_UpdateAudioPolicyWSResponse": {
      "type": "object",
      "description": "Response object for updating an audio policy.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Policy_UpdateCameraPolicyWSRequest": {
      "type": "object",
      "description": "Request object for updating a camera policy.",
      "properties": {
        "policy": {
          "$ref": "#/components/schemas/Policy_MinimalCameraPolicyV2Type"
        }
      }
    },
    "Policy_UpdateCameraPolicyWSResponse": {
      "type": "object",
      "description": "Response object for updating a camera policy.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Policy_UpdateClimatePolicyWSRequest": {
      "type": "object",
      "description": "Request object for updating a climate policy.",
      "properties": {
        "policy": {
          "$ref": "#/components/schemas/Policy_MinimalClimatePolicyType"
        }
      }
    },
    "Policy_UpdateClimatePolicyWSResponse": {
      "type": "object",
      "description": "Response object for updating a climate policy.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Policy_UpdateDoorPolicyWSRequest": {
      "type": "object",
      "description": "Request object for updating a door sensor policy.",
      "properties": {
        "policy": {
          "$ref": "#/components/schemas/Policy_MinimalDoorPolicyType"
        }
      }
    },
    "Policy_UpdateDoorPolicyWSResponse": {
      "type": "object",
      "description": "Response object for updating a door sensor policy.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Policy_UpdateOccupancyPolicyWSRequest": {
      "type": "object",
      "description": "Request object for updating an occupancy policy.",
      "properties": {
        "policy": {
          "$ref": "#/components/schemas/Policy_MinimalOccupancyPolicyType"
        }
      }
    },
    "Policy_UpdateOccupancyPolicyWSResponse": {
      "type": "object",
      "description": "Response object for updating an occupancy policy.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Policy_UpdateProximityPolicyWSRequest": {
      "type": "object",
      "description": "Request object for updating a proximity policy.",
      "properties": {
        "policy": {
          "$ref": "#/components/schemas/Policy_MinimalProximityPolicyType"
        }
      }
    },
    "Policy_UpdateProximityPolicyWSResponse": {
      "type": "object",
      "description": "Response object for updating a proximity policy.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Policy_UpdateScheduleWSRequest": {
      "type": "object",
      "description": "Request object for updating a schedule used for policy creation.",
      "properties": {
        "schedule": {
          "$ref": "#/components/schemas/WeeklyRepeatingScheduleType"
        }
      }
    },
    "Policy_UpdateScheduleWSResponse": {
      "type": "object",
      "description": "Response object for updating a schedule.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Policy_UpdateVideoIntercomPolicyWSRequest": {
      "type": "object",
      "description": "Request object for updating a video intercom policy.",
      "properties": {
        "policy": {
          "$ref": "#/components/schemas/Policy_MinimalVideoIntercomPolicyType"
        }
      }
    },
    "Policy_UpdateVideoIntercomPolicyWSResponse": {
      "type": "object",
      "description": "Response object for updating a video intercom policy.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    }
  },
  "schemaCount": 90
}
