{
  "tag": "Org Webservice",
  "schemas": {
    "GetTemporaryOrgTokenResponse": {
      "type": "object",
      "properties": {
        "tempOrgToken": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Org_ClaimActivationTokenWSRequest": {
      "type": "object",
      "properties": {
        "activationToken": {
          "type": "string",
          "nullable": true
        },
        "name": {
          "type": "string",
          "nullable": true
        },
        "permissionGroupUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Org_ClaimActivationTokenWSResponse": {
      "type": "object",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Org_ClaimShipmentRegistrationTokenWSRequest": {
      "type": "object",
      "properties": {
        "claimList": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Org_DeviceRegistrationClaimType"
          },
          "nullable": true
        },
        "tokenUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Org_ClaimShipmentRegistrationTokenWSResponse": {
      "type": "object",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Org_CreatePendingRegistrationRequest": {
      "type": "object",
      "description": "Request object for creating pending hardware registration.",
      "properties": {
        "locationUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        },
        "orgUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        },
        "serialNumber": {
          "type": "string",
          "description": "Serial number of the hardware device",
          "example": "RH123456789",
          "nullable": true
        },
        "wifiPsk": {
          "type": "array",
          "description": "WiFi pre-shared key for the device",
          "items": {
            "type": "string",
            "format": "byte",
            "description": "WiFi pre-shared key for the device",
            "nullable": true
          },
          "nullable": true
        },
        "wifiSsid": {
          "type": "string",
          "description": "WiFi SSID for the device",
          "example": "Office_WiFi",
          "nullable": true
        }
      }
    },
    "Org_CreatePendingRegistrationResponse": {
      "type": "object",
      "description": "Response object for creating pending hardware registration.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Org_DeleteCloudArchivingConfigWSRequest": {
      "type": "object",
      "description": "Request object for deleting cloud archiving configuration.",
      "properties": {
        "scope": {
          "$ref": "#/components/schemas/DeviceTargetScope"
        },
        "targetUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Org_DeleteCloudArchivingConfigWSResponse": {
      "type": "object",
      "description": "Response object for deleting cloud archiving configuration.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Org_DeleteKeypadLogoWSRequest": {
      "type": "object",
      "description": "Request object for deleting keypad logo."
    },
    "Org_DeleteKeypadLogoWSResponse": {
      "type": "object",
      "description": "Response object for deleting keypad logo.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Org_DeleteRhombusKeyLogoWSRequest": {
      "type": "object",
      "description": "Request object for deleting Rhombus Key logo.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Org_DeleteRhombusKeyLogoWSResponse": {
      "type": "object",
      "description": "Response object for deleting Rhombus Key logo.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Org_FindAllHardwareWithPendingRegistrationRequest": {
      "type": "object"
    },
    "Org_FindAllHardwareWithPendingRegistrationResponse": {
      "type": "object",
      "properties": {
        "hardwareList": {
          "type": "array",
          "deprecated": true,
          "description": "Use hardwareWithPendingRegistrationInfoList instead",
          "items": {
            "$ref": "#/components/schemas/HardwareType"
          },
          "nullable": true
        },
        "hardwareWithPendingRegistrationInfoList": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Org_HardwareWithPendingRegistrationInfoType"
          },
          "nullable": true
        }
      }
    },
    "Org_FindHardwareAvailableForPendingRegistrationRequest": {
      "type": "object"
    },
    "Org_FindHardwareAvailableForPendingRegistrationResponse": {
      "type": "object",
      "properties": {
        "hardwareList": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/HardwareType"
          },
          "nullable": true
        }
      }
    },
    "Org_FindIfTeamNameAvailableRequest": {
      "type": "object",
      "description": "Request object for checking if a team name is available.",
      "properties": {
        "teamName": {
          "type": "string",
          "description": "Team name to check availability for",
          "example": "Engineering Team",
          "nullable": true
        }
      }
    },
    "Org_FindIfTeamNameAvailableResponse": {
      "type": "object",
      "description": "Response object indicating if a team name is available.",
      "properties": {
        "available": {
          "type": "boolean",
          "description": "Whether the team name is available",
          "example": true,
          "nullable": true
        }
      }
    },
    "Org_FindSCIMSettingsForOrgWSRequest": {
      "type": "object",
      "description": "Request object for finding SCIM settings for organization."
    },
    "Org_FindSCIMSettingsForOrgWSResponse": {
      "type": "object",
      "description": "Response object containing SCIM settings for organization.",
      "properties": {
        "scimSettings": {
          "$ref": "#/components/schemas/SCIMSettingsType"
        }
      }
    },
    "Org_GenerateFederatedSessionTokenRequest": {
      "type": "object",
      "description": "Request object for generating a federated session token.",
      "properties": {
        "domain": {
          "type": "string",
          "description": "The domain that is allowed to use the federated token. The token should begin with a 'dot' and end with a domain suffix. The validation will perform an 'endsWith' operation of the domain supplied by the Referrer header",
          "example": ".rhombus.com",
          "nullable": true
        },
        "durationSec": {
          "type": "integer",
          "format": "int32",
          "description": "Duration of the federated session token in seconds",
          "example": 3600,
          "nullable": true
        }
      }
    },
    "Org_GenerateFederatedSessionTokenResponse": {
      "type": "object",
      "description": "Response object containing the generated federated session token.",
      "properties": {
        "federatedSessionToken": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Org_GetClientOrgWSRequest": {
      "type": "object",
      "description": "Request object for getting client organization details.",
      "properties": {
        "orgUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Org_GetClientOrgWSResponse": {
      "type": "object",
      "description": "Response object containing client organization details.",
      "properties": {
        "featureFlags": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "description": "Map of feature flags for the client organization",
            "nullable": true
          },
          "description": "Map of feature flags for the client organization",
          "nullable": true
        },
        "org": {
          "$ref": "#/components/schemas/OrgV2Type"
        },
        "partnerOrgPermissionGroup": {
          "$ref": "#/components/schemas/UserPermissionGroupType"
        }
      }
    },
    "Org_GetCloudArchivingConfigsWSRequest": {
      "type": "object",
      "description": "Request object for getting cloud archiving configurations."
    },
    "Org_GetCloudArchivingConfigsWSResponse": {
      "type": "object",
      "description": "Response object containing cloud archiving configurations.",
      "properties": {
        "archivingConfigs": {
          "type": "array",
          "description": "List of cloud archiving configurations",
          "items": {
            "$ref": "#/components/schemas/ScopedCloudArchivingConfig"
          },
          "nullable": true
        },
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Org_GetFeaturesWSRequest": {
      "type": "object",
      "description": "Request object for getting organization features."
    },
    "Org_GetFeaturesWSResponse": {
      "type": "object",
      "description": "Response object containing organization feature flags.",
      "properties": {
        "behaviorDetection": {
          "type": "boolean",
          "description": "Whether behavior detection is enabled",
          "example": false,
          "nullable": true
        },
        "cloudArchiving": {
          "type": "boolean",
          "description": "Whether cloud archiving is enabled",
          "example": false,
          "nullable": true
        },
        "engagementCounting": {
          "type": "boolean",
          "description": "Whether engagement counting is enabled",
          "example": false,
          "nullable": true
        },
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "faceCounting": {
          "type": "boolean",
          "description": "Whether face counting is enabled",
          "example": false,
          "nullable": true
        },
        "faceCountingNonUnique": {
          "type": "boolean",
          "description": "Whether non-unique face counting is enabled",
          "example": false,
          "nullable": true
        },
        "faceRecognition": {
          "type": "boolean",
          "description": "Whether face recognition is enabled",
          "example": false,
          "nullable": true
        },
        "licensePlateRecognition": {
          "type": "boolean",
          "description": "Whether license plate recognition is enabled",
          "example": false,
          "nullable": true
        },
        "peopleCounting": {
          "type": "boolean",
          "description": "Whether people counting is enabled",
          "example": false,
          "nullable": true
        },
        "ppeDetection": {
          "type": "boolean",
          "description": "Whether PPE detection is enabled",
          "example": false,
          "nullable": true
        },
        "rulesEngine": {
          "type": "boolean",
          "description": "Whether rules engine is enabled (deprecated)",
          "example": false,
          "nullable": true
        },
        "vehicleCounting": {
          "type": "boolean",
          "description": "Whether vehicle counting is enabled",
          "example": false,
          "nullable": true
        }
      }
    },
    "Org_GetOrgIntegrationsWSRequest": {
      "type": "object",
      "description": "Request object for getting organization integrations (deprecated, use integration package)."
    },
    "Org_GetOrgIntegrationsWSResponse": {
      "type": "object",
      "description": "Response object containing organization integrations (deprecated, use integration package).",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "orgIntegrations": {
          "$ref": "#/components/schemas/OrgIntegrationsType"
        }
      }
    },
    "Org_GetOrgNotificationTemplateV2WSResponse": {
      "type": "object",
      "description": "Response object containing organization notification template V2.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "notificationSettings": {
          "$ref": "#/components/schemas/UserNotificationSettingsV4Type"
        }
      }
    },
    "Org_GetOrgNotificationTemplateWSRequest": {
      "type": "object",
      "description": "Request object for getting organization notification template."
    },
    "Org_GetOrgNotificationTemplateWSResponse": {
      "type": "object",
      "description": "Response object containing organization notification template.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "notificationSettings": {
          "$ref": "#/components/schemas/UserNotificationSettingsV3Type"
        }
      }
    },
    "Org_GetOrgV2WSRequest": {
      "type": "object",
      "description": "Request object for getting organization details V2."
    },
    "Org_GetOrgV2WSResponse": {
      "type": "object",
      "description": "Response object containing organization details V2 with camera configuration options.",
      "properties": {
        "cameraConfigDefaults": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/components/schemas/Deviceconfig_settings_VideoConfigurationDefault"
          },
          "description": "Map of hardware variations to default video configurations",
          "nullable": true
        },
        "cameraConfigOptions": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "description": "Map of hardware variations to available video configuration options",
            "items": {
              "$ref": "#/components/schemas/Deviceconfig_settings_VideoConfigurationOption"
            },
            "nullable": true
          },
          "description": "Map of hardware variations to available video configuration options",
          "nullable": true
        },
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "featureFlags": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "description": "Map of feature flags for the organization",
            "nullable": true
          },
          "description": "Map of feature flags for the organization",
          "nullable": true
        },
        "org": {
          "$ref": "#/components/schemas/OrgV2Type"
        }
      }
    },
    "Org_GetOrgWSRequest": {
      "type": "object",
      "description": "Request object for getting organization details (deprecated)."
    },
    "Org_GetOrgWSResponse": {
      "type": "object",
      "description": "Response object containing organization details (deprecated).",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "featureFlags": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "description": "Map of feature flags for the organization",
            "nullable": true
          },
          "description": "Map of feature flags for the organization",
          "nullable": true
        },
        "org": {
          "$ref": "#/components/schemas/OrgType"
        }
      }
    },
    "Org_GetSAMLSettingsV2WSRequest": {
      "type": "object",
      "description": "Request object for getting SAML settings V2."
    },
    "Org_GetSAMLSettingsV2WSResponse": {
      "type": "object",
      "description": "Response object containing SAML settings V2.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "samlSettings": {
          "type": "array",
          "description": "List of SAML settings for the organization",
          "items": {
            "$ref": "#/components/schemas/OrgSamlSettingsType"
          },
          "nullable": true
        }
      }
    },
    "Org_GetSAMLSettingsWSRequest": {
      "type": "object",
      "description": "Request object for getting SAML settings (deprecated)."
    },
    "Org_GetSAMLSettingsWSResponse": {
      "type": "object",
      "description": "Response object containing SAML settings (deprecated).",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "samlSettings": {
          "$ref": "#/components/schemas/OrgSamlSettingsType"
        }
      }
    },
    "Org_GetScimDisplayInfoResponse": {
      "type": "object",
      "description": "Response object containing SCIM display information.",
      "properties": {
        "azureScimEndpointUrl": {
          "type": "string",
          "description": "Azure SCIM endpoint URL",
          "example": "https://api.rhombussystems.com/scim/v2/azure",
          "nullable": true
        },
        "scimEndpointUrl": {
          "type": "string",
          "description": "SCIM endpoint URL",
          "example": "https://api.rhombussystems.com/scim/v2",
          "nullable": true
        }
      }
    },
    "Org_GetTemporaryOrgTokenWSRequest": {
      "type": "object",
      "description": "Request object for getting temporary organization token."
    },
    "Org_PeekShipmentRegistrationTokenWSRequest": {
      "type": "object",
      "properties": {
        "tokenUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Org_PeekShipmentRegistrationTokenWSResponse": {
      "type": "object",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "hardwareUuidList": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "RUUID",
            "description": "base 64 (url-safe) uuid string",
            "example": "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable": true
          },
          "nullable": true
        }
      }
    },
    "Org_RemovePendingRegistrationRequest": {
      "type": "object",
      "properties": {
        "serialNumber": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Org_RemovePendingRegistrationResponse": {
      "type": "object"
    },
    "Org_RevokeSCIMAccessForOrgWSRequest": {
      "type": "object",
      "description": "Request object for revoking SCIM access for organization."
    },
    "Org_RevokeSCIMAccessForOrgWSResponse": {
      "type": "object",
      "description": "Response object for revoking SCIM access for organization."
    },
    "Org_SetupSCIMAccessForOrgWSRequest": {
      "type": "object",
      "description": "Request object for setting up SCIM access for organization.",
      "properties": {
        "addUsersOnRoleMismatch": {
          "type": "boolean",
          "description": "Whether to add users on role mismatch",
          "example": false,
          "nullable": true
        },
        "rhombusKeyAppSettings": {
          "$ref": "#/components/schemas/RhombusKeyAppSettingsType"
        },
        "sendWelcomeEmailToNewRhombusKeyUsers": {
          "type": "boolean",
          "description": "Whether to send welcome email to new Rhombus Key users",
          "example": true,
          "nullable": true
        },
        "sendWelcomeEmailToNewUsers": {
          "type": "boolean",
          "description": "Whether to send welcome email to new users",
          "example": true,
          "nullable": true
        }
      }
    },
    "Org_SetupSCIMAccessForOrgWSResponse": {
      "type": "object",
      "description": "Response object for setting up SCIM access for organization.",
      "properties": {
        "scimAccessAlreadySetupFailure": {
          "type": "boolean",
          "nullable": true
        },
        "token": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Org_UpdateAiTrainingSettingsWSRequest": {
      "type": "object",
      "description": "Request object for updating AI training settings.",
      "properties": {
        "shareAiTrainingMediaWithRhombus": {
          "type": "boolean",
          "description": "Whether to share AI training media with Rhombus",
          "example": false,
          "nullable": true
        }
      }
    },
    "Org_UpdateAiTrainingSettingsWSResponse": {
      "type": "object",
      "description": "Response object for updating AI training settings.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Org_UpdateCloudArchivingConfigWSRequest": {
      "type": "object",
      "description": "Request object for updating cloud archiving configuration.",
      "properties": {
        "archivingConfig": {
          "$ref": "#/components/schemas/ScopedCloudArchivingConfig"
        }
      }
    },
    "Org_UpdateCloudArchivingConfigWSResponse": {
      "type": "object",
      "description": "Response object for updating cloud archiving configuration.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Org_UpdateFirmwareSettingsWSRequest": {
      "type": "object",
      "description": "Request object for updating firmware settings.",
      "properties": {
        "firmwareSettings": {
          "$ref": "#/components/schemas/FirmwareUpdateSettingsType"
        },
        "firmwareUpdateSettings": {
          "$ref": "#/components/schemas/FirmwareUpdateSettingsType"
        },
        "firmwareUpdateSettingsOverrides": {
          "type": "array",
          "description": "Overrides default firmware update settings.",
          "items": {
            "$ref": "#/components/schemas/FirmwareUpdateSettingsOverrideType"
          },
          "nullable": true
        }
      }
    },
    "Org_UpdateFirmwareSettingsWSResponse": {
      "type": "object",
      "description": "Response object for updating firmware settings.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Org_UpdateGeneralSettingsWSRequest": {
      "type": "object",
      "description": "Request object for updating general organization settings.",
      "properties": {
        "accountBillingContactEmail": {
          "type": "string",
          "description": "Email of the account billing contact",
          "example": "billing@acme.com",
          "nullable": true
        },
        "accountOwnerEmail": {
          "type": "string",
          "description": "Email of the account owner",
          "example": "owner@acme.com",
          "nullable": true
        },
        "accountTechnicalContactEmail": {
          "type": "string",
          "description": "Email of the account technical contact",
          "example": "tech@acme.com",
          "nullable": true
        },
        "accountTechnicalContacts": {
          "type": "array",
          "description": "List of account technical contact emails",
          "items": {
            "type": "string",
            "description": "List of account technical contact emails",
            "nullable": true
          },
          "nullable": true
        },
        "defaultPlayerViewLiveType": {
          "$ref": "#/components/schemas/PlayerViewLiveTypeEnum"
        },
        "inactivityTimeout": {
          "type": "integer",
          "format": "int32",
          "description": "Inactivity timeout in minutes",
          "example": 30,
          "nullable": true
        },
        "name": {
          "type": "string",
          "description": "Name of the organization",
          "example": "Acme Corporation",
          "nullable": true
        },
        "uapSettings": {
          "$ref": "#/components/schemas/UAPSettingsType"
        }
      }
    },
    "Org_UpdateGeneralSettingsWSResponse": {
      "type": "object",
      "description": "Response object for updating general organization settings.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Org_UpdateMFASettingsWSRequest": {
      "type": "object",
      "description": "Request object for updating MFA settings.",
      "properties": {
        "mfaEnabled": {
          "type": "boolean",
          "description": "Whether MFA is enabled for the organization",
          "example": true,
          "nullable": true
        },
        "v3AuthNumDaysSkip2FAForTrustedDevices": {
          "type": "integer",
          "format": "int32",
          "description": "Number of days to skip 2FA for trusted devices (< 0 = forever, 0 = always require 2FA, > 0 = days to skip)",
          "example": 30,
          "nullable": true
        }
      }
    },
    "Org_UpdateMFASettingsWSResponse": {
      "type": "object",
      "description": "Response object for updating MFA settings.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "org": {
          "$ref": "#/components/schemas/OrgV2Type"
        }
      }
    },
    "Org_UpdateOrgAudioAnalysisPolicyWSRequest": {
      "type": "object",
      "description": "Request object for updating organization audio analysis policy.",
      "properties": {
        "audioAnalysisEnabled": {
          "type": "boolean",
          "description": "Whether audio analysis is enabled for the organization",
          "example": true,
          "nullable": true
        }
      }
    },
    "Org_UpdateOrgAudioAnalysisPolicyWSResponse": {
      "type": "object",
      "description": "Response object for updating organization audio analysis policy.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Org_UpdateOrgAudioRecordingPolicyWSRequest": {
      "type": "object",
      "description": "Request object for updating organization audio recording policy.",
      "properties": {
        "audioRecordingEnabled": {
          "type": "boolean",
          "description": "Whether audio recording is enabled for the organization",
          "example": true,
          "nullable": true
        }
      }
    },
    "Org_UpdateOrgAudioRecordingPolicyWSResponse": {
      "type": "object",
      "description": "Response object for updating organization audio recording policy.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Org_UpdateOrgLLMUsagePolicyWSRequest": {
      "type": "object",
      "description": "Request object for updating organization LLM usage opt-in policy.",
      "properties": {
        "llmUsageEnabled": {
          "type": "boolean",
          "description": "Whether the org is opting in to use LLMs",
          "example": true,
          "nullable": true
        }
      }
    },
    "Org_UpdateOrgLLMUsagePolicyWSResponse": {
      "type": "object",
      "description": "Response object for updating organization LLM usage opt-in policy.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Org_UpdateOrgNotificationTemplateV2WSRequest": {
      "type": "object",
      "description": "Request object for updating organization notification template V2.",
      "properties": {
        "summaryEmailEnabled": {
          "type": "boolean",
          "description": "Whether summary email is enabled",
          "example": true,
          "nullable": true
        },
        "templateUpdate": {
          "$ref": "#/components/schemas/UserNotificationSelectiveUpdateV2"
        }
      }
    },
    "Org_UpdateOrgNotificationTemplateV2WSResponse": {
      "type": "object",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Org_UpdateOrgNotificationTemplateWSRequest": {
      "type": "object",
      "description": "Request object for updating organization notification template.",
      "properties": {
        "notificationIntervalsV2": {
          "type": "array",
          "description": "List of notification intervals V2",
          "items": {
            "$ref": "#/components/schemas/NotificationIntervalV2Type"
          },
          "nullable": true
        },
        "summaryEmailEnabled": {
          "type": "boolean",
          "description": "Whether summary email is enabled",
          "example": true,
          "nullable": true
        }
      }
    },
    "Org_UpdateOrgNotificationTemplateWSResponse": {
      "type": "object",
      "description": "Response object for updating organization notification template.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Org_UpdateOrgWSRequest": {
      "type": "object",
      "description": "Request object for updating organization details (deprecated).",
      "properties": {
        "org": {
          "$ref": "#/components/schemas/OrgType"
        }
      }
    },
    "Org_UpdateOrgWSResponse": {
      "type": "object",
      "description": "Response object for updating organization details (deprecated).",
      "properties": {
        "samlEntityIdUniquenessConstraintFailure": {
          "type": "boolean",
          "nullable": true
        },
        "teamNameNotAssignedFailure": {
          "type": "boolean",
          "nullable": true
        },
        "teamNameUniquenessConstraintFailure": {
          "type": "boolean",
          "nullable": true
        }
      }
    },
    "Org_UpdatePendingRegistrationRequest": {
      "type": "object",
      "properties": {
        "hardwareUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        },
        "locationUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        },
        "name": {
          "type": "string",
          "nullable": true
        },
        "policyUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Org_UpdatePendingRegistrationResponse": {
      "type": "object",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Org_UpdateSAMLSettingsV2WSRequest": {
      "type": "object",
      "description": "Request object for updating SAML settings V2.",
      "properties": {
        "samlSettings": {
          "type": "array",
          "description": "List of SAML settings to update",
          "items": {
            "$ref": "#/components/schemas/OrgSamlSettingsType"
          },
          "nullable": true
        }
      }
    },
    "Org_UpdateSAMLSettingsV2WSResponse": {
      "type": "object",
      "description": "Response object for updating SAML settings V2.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Org_UpdateSAMLSettingsWSRequest": {
      "type": "object",
      "description": "Request object for updating SAML settings (deprecated).",
      "properties": {
        "samlSettings": {
          "$ref": "#/components/schemas/OrgSamlSettingsType"
        }
      }
    },
    "Org_UpdateSAMLSettingsWSResponse": {
      "type": "object",
      "description": "Response object for updating SAML settings (deprecated).",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Org_UpdateSCIMSettingsForOrgWSRequest": {
      "type": "object",
      "description": "Request object for updating SCIM settings for organization.",
      "properties": {
        "addUsersOnRoleMismatch": {
          "type": "boolean",
          "description": "Whether to add users on role mismatch",
          "example": false,
          "nullable": true
        },
        "rhombusKeyAppSettings": {
          "$ref": "#/components/schemas/RhombusKeyAppSettingsType"
        },
        "sendWelcomeEmailToNewRhombusKeyUsers": {
          "type": "boolean",
          "description": "Whether to send welcome email to new Rhombus Key users",
          "example": true,
          "nullable": true
        },
        "sendWelcomeEmailToNewUsers": {
          "type": "boolean",
          "description": "Whether to send welcome email to new users",
          "example": true,
          "nullable": true
        }
      }
    },
    "Org_UpdateSCIMSettingsForOrgWSResponse": {
      "type": "object",
      "description": "Response object for updating SCIM settings for organization.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    }
  },
  "schemaCount": 82
}
