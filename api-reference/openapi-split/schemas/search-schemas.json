{
  "tag": "Search Webservice",
  "schemas": {
    "Search_SearchLicensePlatesWSRequest": {
      "type": "object",
      "description": "Request object for searching license plates.",
      "properties": {
        "deviceUuids": {
          "type": "array",
          "description": "List of device facet UUIDs to search in",
          "items": {
            "type": "string",
            "format": "DeviceFacetUuid",
            "description": "RUUID with optional appended facet information",
            "example": "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable": true
          },
          "nullable": true
        },
        "endTime": {
          "type": "integer",
          "format": "int64",
          "description": "End time in milliseconds for the search period",
          "example": 1640998800000,
          "nullable": true
        },
        "forcedFuzziness": {
          "type": "integer",
          "format": "int32",
          "description": "Forced fuzziness level for the search (deprecated)",
          "example": 2,
          "nullable": true
        },
        "fuzzy": {
          "type": "boolean",
          "description": "Whether to use fuzzy search",
          "example": true,
          "nullable": true
        },
        "licensePlate": {
          "type": "string",
          "description": "License plate number to search for",
          "example": "ABC123",
          "nullable": true
        },
        "startTime": {
          "type": "integer",
          "format": "int64",
          "description": "Start time in milliseconds for the search period",
          "example": 1640995200000,
          "nullable": true
        }
      }
    },
    "Search_SearchLicensePlatesWSResponse": {
      "type": "object",
      "description": "Response object for searching license plates.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "vehicleEvents": {
          "type": "array",
          "description": "List of vehicle events matching the search criteria",
          "items": {
            "$ref": "#/components/schemas/VehicleEventSearchHitType"
          },
          "nullable": true
        }
      }
    },
    "Search_SearchObjectsByColorWSRequest": {
      "type": "object",
      "description": "Request object for searching objects by color.",
      "properties": {
        "colorFilter": {
          "type": "array",
          "description": "Set of colors to filter by",
          "items": {
            "type": "string",
            "description": "Set of colors to filter by",
            "enum": [
              "BLACK",
              "BLUE",
              "BROWN",
              "GRAYWHITE",
              "GREEN",
              "ORANGE",
              "PINK",
              "PURPLE",
              "RED",
              "YELLOW",
              "UNKNOWN"
            ],
            "nullable": true
          },
          "nullable": true,
          "uniqueItems": true
        },
        "deviceFilter": {
          "type": "array",
          "description": "List of device facet UUIDs to filter by",
          "items": {
            "type": "string",
            "format": "DeviceFacetUuid",
            "description": "RUUID with optional appended facet information",
            "example": "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable": true
          },
          "nullable": true
        },
        "endTimeMs": {
          "type": "integer",
          "format": "int64",
          "description": "End time in milliseconds for the search period",
          "example": 1640998800000,
          "nullable": true
        },
        "objectTypeFilter": {
          "type": "array",
          "description": "Set of activity types to filter by",
          "items": {
            "$ref": "#/components/schemas/ActivityEnum"
          },
          "nullable": true,
          "uniqueItems": true
        },
        "startTimeMs": {
          "type": "integer",
          "format": "int64",
          "description": "Start time in milliseconds for the search period",
          "example": 1640995200000,
          "nullable": true
        }
      }
    },
    "Search_SearchObjectsByColorWSResponse": {
      "type": "object",
      "description": "Response object for searching objects by color.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "objects": {
          "type": "array",
          "description": "List of objects matching the color search criteria",
          "items": {
            "$ref": "#/components/schemas/FootageBoundingBoxType"
          },
          "nullable": true
        }
      }
    },
    "Search_SearchSimilarObjectEmbeddingsByTextWSRequest": {
      "type": "object",
      "description": "Request object for searching similar object embeddings by text.",
      "properties": {
        "maxNumResults": {
          "type": "integer",
          "format": "int32",
          "description": "Optional number of results to return. Setting to larger numbers will increase latency.",
          "nullable": true
        },
        "model": {
          "$ref": "#/components/schemas/ObjectSearchModelEnum"
        },
        "objectTypeFilter": {
          "type": "array",
          "description": "Optional object type filter to narrow results to only vehicles or only humans.",
          "items": {
            "type": "string",
            "enum": [
              "MOTION_HUMAN",
              "MOTION_CAR"
            ],
            "nullable": true
          },
          "nullable": true
        },
        "queryDeviceUuids": {
          "type": "array",
          "description": "Optional list of device uuids to filter result set on.",
          "items": {
            "type": "string",
            "format": "DeviceFacetUuid",
            "description": "RUUID with optional appended facet information",
            "example": "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable": true
          },
          "nullable": true
        },
        "queryEndTimeMs": {
          "type": "integer",
          "format": "int64",
          "description": "End time in epoch milliseconds. Results returned will have occurred before this time.",
          "nullable": true
        },
        "queryStartTimeMs": {
          "type": "integer",
          "format": "int64",
          "description": "Start time in epoch milliseconds. Results returned will have occurred after this time.",
          "nullable": true
        },
        "regionFilter": {
          "type": "array",
          "description": "Optional region filter to return results only if they overlap with the supplied region. This is a list of perymyriad points defining a polygon. The first and last elements must be the same to make a connected polygon. For example, a triangle should have 4 points defined in this list.",
          "items": {
            "type": "array",
            "description": "Permyriad point [x, y]",
            "items": {
              "type": "integer",
              "format": "int32",
              "description": "Permyriad point [x, y]",
              "nullable": true
            },
            "nullable": true
          },
          "nullable": true
        },
        "searchText": {
          "type": "string",
          "description": "The search text to find similar objects to. Phrases like \"red sedan\", \"person in yellow shirt\", etc.",
          "nullable": true
        },
        "similarityThreshold": {
          "type": "number",
          "format": "float",
          "description": "Optional threshold applied to filter returned results, set as a float in [0.0, 1.0].",
          "nullable": true
        }
      },
      "required": [
        "model",
        "queryEndTimeMs",
        "queryStartTimeMs",
        "searchText"
      ]
    },
    "Search_SearchSimilarObjectEmbeddingsWSRequest": {
      "type": "object",
      "description": "Request object for searching similar object embeddings.",
      "properties": {
        "maxNumResults": {
          "type": "integer",
          "format": "int32",
          "description": "Optional number of results to return. Setting to larger numbers will increase latency.",
          "nullable": true
        },
        "model": {
          "$ref": "#/components/schemas/ObjectSearchModelEnum"
        },
        "objectTypeFilter": {
          "type": "array",
          "description": "Optional object type filter to narrow results to only vehicles or only humans.",
          "items": {
            "type": "string",
            "enum": [
              "MOTION_HUMAN",
              "MOTION_CAR"
            ],
            "nullable": true
          },
          "nullable": true
        },
        "queryDeviceUuids": {
          "type": "array",
          "description": "Optional list of device uuids to filter result set on.",
          "items": {
            "type": "string",
            "format": "DeviceFacetUuid",
            "description": "RUUID with optional appended facet information",
            "example": "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable": true
          },
          "nullable": true
        },
        "queryEndTimeMs": {
          "type": "integer",
          "format": "int64",
          "description": "End time in epoch milliseconds. Results returned will have occurred before this time.",
          "nullable": true
        },
        "queryStartTimeMs": {
          "type": "integer",
          "format": "int64",
          "description": "Start time in epoch milliseconds. Results returned will have occurred after this time.",
          "nullable": true
        },
        "regionFilter": {
          "type": "array",
          "description": "Optional region filter to return results only if they overlap with the supplied region. This is a list of perymyriad points defining a polygon. The first and last elements must be the same to make a connected polygon. For example, a triangle should have 4 points defined in this list.",
          "items": {
            "type": "array",
            "description": "Permyriad point [x, y]",
            "items": {
              "type": "integer",
              "format": "int32",
              "description": "Permyriad point [x, y]",
              "nullable": true
            },
            "nullable": true
          },
          "nullable": true
        },
        "searchEmbeddingId": {
          "type": "string",
          "description": "The id of the embedding event you want to find similar objects to. Typically this is obtained from a previous text search result.",
          "nullable": true
        },
        "similarityThreshold": {
          "type": "number",
          "format": "float",
          "description": "Optional threshold applied to filter returned results, set as a float in [0.0, 1.0].",
          "nullable": true
        }
      },
      "required": [
        "model",
        "queryEndTimeMs",
        "queryStartTimeMs",
        "searchEmbeddingId"
      ]
    },
    "Search_SearchSimilarObjectEmbeddingsWSResponse": {
      "type": "object",
      "description": "Response object for searching similar object embeddings.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "moderationReason": {
          "type": "string",
          "description": "Reason for moderation if query is not allowed",
          "nullable": true
        },
        "queryAllowed": {
          "type": "boolean",
          "description": "Whether the query is allowed",
          "nullable": true
        },
        "similarEmbeddings": {
          "type": "array",
          "description": "List of similar object embedding matches",
          "items": {
            "$ref": "#/components/schemas/GenericObjectEmbeddingMatch"
          },
          "nullable": true
        }
      }
    }
  },
  "schemaCount": 7
}
