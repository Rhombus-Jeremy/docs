{
  "tag": "Face Recognition Matchmaker Webservice",
  "schemas": {
    "Facerecognition_matchmaker_CreateFaceMatchmakerFromSightingWSRequest": {
      "type": "object",
      "description": "Request object for creating a face matchmaker from a face event sighting.",
      "properties": {
        "faceEventUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        },
        "personUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Facerecognition_matchmaker_CreateFaceMatchmakerFromSightingWSResponse": {
      "type": "object",
      "description": "Response object for creating a face matchmaker from a face event sighting.",
      "properties": {
        "faceMatchmaker": {
          "$ref": "#/components/schemas/Facerecognition_matchmaker_ExternalFaceMatchmaker"
        }
      }
    },
    "Facerecognition_matchmaker_DeleteFaceMatchmakerWSRequest": {
      "type": "object",
      "description": "Request object for deleting a face matchmaker.",
      "properties": {
        "faceId": {
          "type": "string",
          "description": "Face ID of the matchmaker to delete",
          "example": "face_12345",
          "nullable": true
        }
      }
    },
    "Facerecognition_matchmaker_DeleteFaceMatchmakerWSResponse": {
      "type": "object",
      "description": "Response object for deleting a face matchmaker."
    },
    "Facerecognition_matchmaker_FindFaceMatchmakersByOrgWSRequest": {
      "type": "object",
      "description": "Request object for finding face matchmakers by organization."
    },
    "Facerecognition_matchmaker_FindFaceMatchmakersByOrgWSResponse": {
      "type": "object",
      "description": "Response object containing face matchmakers for an organization.",
      "properties": {
        "faceMatchmakers": {
          "type": "array",
          "description": "List of face matchmakers for the organization",
          "items": {
            "$ref": "#/components/schemas/Facerecognition_matchmaker_ExternalFaceMatchmaker"
          },
          "nullable": true
        }
      }
    },
    "Facerecognition_matchmaker_FindFaceMatchmakersByPersonWSRequest": {
      "type": "object",
      "description": "Request object for finding face matchmakers by person UUID.",
      "properties": {
        "personUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Facerecognition_matchmaker_FindFaceMatchmakersByPersonWSResponse": {
      "type": "object",
      "description": "Response object containing face matchmakers for a specific person.",
      "properties": {
        "faceMatchmakers": {
          "type": "array",
          "description": "List of face matchmakers for the specified person",
          "items": {
            "$ref": "#/components/schemas/Facerecognition_matchmaker_ExternalFaceMatchmaker"
          },
          "nullable": true
        }
      }
    },
    "Facerecognition_matchmaker_FindFaceUploadMetadataByTransactionWSRequest": {
      "type": "object",
      "description": "Request object for finding face upload metadata by transaction ID.",
      "properties": {
        "transactionId": {
          "type": "string",
          "description": "Transaction ID to find face upload metadata for",
          "example": "txn_12345",
          "nullable": true
        }
      }
    },
    "Facerecognition_matchmaker_FindFaceUploadMetadataByTransactionWSResponse": {
      "type": "object",
      "description": "Response object containing face upload metadata for a transaction.",
      "properties": {
        "faceUploadMetadata": {
          "type": "array",
          "description": "List of face upload metadata for the transaction",
          "items": {
            "$ref": "#/components/schemas/FaceUploadMetadata"
          },
          "nullable": true
        }
      }
    },
    "Facerecognition_matchmaker_GetFaceMatchingConfigWSRequest": {
      "type": "object",
      "description": "Request object for retrieving face matching configuration."
    },
    "Facerecognition_matchmaker_GetFaceMatchingConfigWSResponse": {
      "type": "object",
      "description": "Response object containing face matching configuration settings.",
      "properties": {
        "faceMatchConfidenceThreshold": {
          "type": "number",
          "format": "float",
          "description": "Face match confidence threshold value",
          "example": 0.7,
          "nullable": true
        }
      }
    },
    "Facerecognition_matchmaker_GetFaceMatchmakerWSRequest": {
      "type": "object",
      "description": "Request object for retrieving a face matchmaker by face ID.",
      "properties": {
        "faceId": {
          "type": "string",
          "description": "Face ID to retrieve the matchmaker for",
          "example": "face_12345",
          "nullable": true
        }
      }
    },
    "Facerecognition_matchmaker_GetFaceMatchmakerWSResponse": {
      "type": "object",
      "description": "Response object containing a face matchmaker.",
      "properties": {
        "faceMatchmaker": {
          "$ref": "#/components/schemas/Facerecognition_matchmaker_ExternalFaceMatchmaker"
        }
      }
    },
    "Facerecognition_matchmaker_UpdateFaceMatchingConfigWSRequest": {
      "type": "object",
      "description": "Request object for updating face matching configuration settings.",
      "properties": {
        "faceMatchConfidenceThreshold": {
          "type": "number",
          "format": "float",
          "description": "Minimum confidence level required for the system to automatically assign a match. If null, the system uses the built-in default.",
          "maximum": 1.0,
          "minimum": 0.0,
          "nullable": true
        }
      }
    },
    "Facerecognition_matchmaker_UpdateFaceMatchingConfigWSResponse": {
      "type": "object",
      "description": "Response object for updating face matching configuration settings.",
      "properties": {
        "faceMatchConfidenceThreshold": {
          "type": "number",
          "format": "float",
          "description": "Updated face match confidence threshold value",
          "example": 0.7,
          "nullable": true
        }
      }
    },
    "Facerecognition_matchmaker_UploadFaceMatchmakersWSResponse": {
      "type": "object",
      "description": "Response object for uploading face matchmakers with transaction tracking and upload results.",
      "properties": {
        "fileUploadResults": {
          "type": "array",
          "description": "List of file upload results for each uploaded face matchmaker",
          "items": {
            "$ref": "#/components/schemas/Facerecognition_matchmaker_FileUploadResult"
          },
          "nullable": true
        },
        "transactionId": {
          "type": "string",
          "description": "Transaction ID to track face matchmakers upload progress",
          "example": "txn_12345",
          "nullable": true
        }
      }
    },
    "FormDataMultiPart": {
      "type": "object",
      "nullable": true,
      "properties": {
        "bodyParts": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/BodyPart"
          },
          "nullable": true
        },
        "contentDisposition": {
          "$ref": "#/components/schemas/ContentDisposition"
        },
        "entity": {
          "type": "object",
          "nullable": true
        },
        "fields": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FormDataBodyPart"
            },
            "nullable": true
          },
          "nullable": true
        },
        "headers": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "nullable": true,
          "properties": {
            "empty": {
              "type": "boolean",
              "nullable": true
            }
          }
        },
        "mediaType": {
          "$ref": "#/components/schemas/MediaType"
        },
        "messageBodyWorkers": {
          "$ref": "#/components/schemas/MessageBodyWorkers"
        },
        "parameterizedHeaders": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParameterizedHeader"
            },
            "nullable": true
          },
          "nullable": true,
          "properties": {
            "empty": {
              "type": "boolean",
              "nullable": true
            }
          }
        },
        "parent": {
          "$ref": "#/components/schemas/MultiPart"
        },
        "providers": {
          "$ref": "#/components/schemas/Providers"
        }
      }
    }
  },
  "schemaCount": 18
}
