{
  "tag": "Report Webservice",
  "schemas": {
    "Integration_GetEnvoyDeliveriesWSRequest": {
      "type": "object",
      "properties": {
        "endTimestampMs": {
          "type": "integer",
          "format": "int64",
          "nullable": true
        },
        "locationIds": {
          "type": "array",
          "items": {
            "type": "string",
            "nullable": true
          },
          "nullable": true
        },
        "startTimestampMs": {
          "type": "integer",
          "format": "int64",
          "nullable": true
        }
      }
    },
    "Integration_GetEnvoyDeliveriesWSResponse": {
      "type": "object",
      "properties": {
        "collectedDeliveries": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/EnvoyDelivery"
          },
          "nullable": true
        },
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "pendingDeliveries": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/EnvoyDelivery"
          },
          "nullable": true
        }
      }
    },
    "Integration_GetEnvoyEmployeesWSRequest": {
      "type": "object",
      "properties": {
        "locationIds": {
          "type": "array",
          "items": {
            "type": "string",
            "nullable": true
          },
          "nullable": true
        }
      }
    },
    "Integration_GetEnvoyEmployeesWSResponse": {
      "type": "object",
      "properties": {
        "employees": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/EnvoyPersonInfo"
          },
          "nullable": true
        },
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Integration_GetEnvoyLocationsWSRequest": {
      "type": "object"
    },
    "Integration_GetEnvoyLocationsWSResponse": {
      "type": "object",
      "properties": {
        "authError": {
          "type": "boolean",
          "nullable": true
        },
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "locationList": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/EnvoyLocation"
          },
          "nullable": true
        }
      }
    },
    "Integration_GetEnvoyVisitorsWSRequest": {
      "type": "object",
      "properties": {
        "endTimestampMs": {
          "type": "integer",
          "format": "int64",
          "nullable": true
        },
        "includeSignedOutVisitors": {
          "type": "boolean",
          "nullable": true
        },
        "locationIds": {
          "type": "array",
          "items": {
            "type": "string",
            "nullable": true
          },
          "nullable": true
        },
        "startTimestampMs": {
          "type": "integer",
          "format": "int64",
          "nullable": true
        }
      }
    },
    "Integration_GetEnvoyVisitorsWSResponse": {
      "type": "object",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "invites": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/EnvoyExpectedGuest"
          },
          "nullable": true
        },
        "visitors": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/EnvoyGuest"
          },
          "nullable": true
        }
      }
    },
    "Integration_GetIntegrationDiagnosticEventsWSRequest": {
      "type": "object",
      "properties": {
        "timestampMsAfter": {
          "type": "integer",
          "format": "int64",
          "nullable": true
        },
        "timestampMsBefore": {
          "type": "integer",
          "format": "int64",
          "nullable": true
        }
      }
    },
    "Integration_GetIntegrationDiagnosticEventsWSResponse": {
      "type": "object",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "integrationDiagnosticEvents": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/IntegrationDiagnosticEventType"
          },
          "nullable": true
        }
      }
    },
    "Integration_GetToastEventsTableAllLocationsWSRequest": {
      "type": "object",
      "properties": {
        "businessDate": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Integration_GetToastEventsTableAllLocationsWSResponse": {
      "type": "object",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "eventTable": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Integration_GetToastEventsTableWSResponse_EventTableRow"
          },
          "nullable": true
        },
        "failedGuids": {
          "type": "array",
          "items": {
            "type": "string",
            "nullable": true
          },
          "nullable": true
        }
      }
    },
    "Integration_GetToastEventsTableWSRequest": {
      "type": "object",
      "properties": {
        "businessDate": {
          "type": "string",
          "nullable": true
        },
        "restaurantGuid": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Integration_GetToastEventsTableWSResponse": {
      "type": "object",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "eventTable": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Integration_GetToastEventsTableWSResponse_EventTableRow"
          },
          "nullable": true
        }
      }
    },
    "Report_GetAuditFeedWSRequest": {
      "type": "object",
      "description": "Request object for getting audit feed.",
      "properties": {
        "excludeActions": {
          "type": "array",
          "description": "If not empty, events with actions specified in the list are filtered out. If both include and exclude actions are specified, exclude actions are ignored.",
          "items": {
            "type": "string",
            "enum": [
              "THREAT_CASE_ESCALATED",
              "THREAT_CASE_CANCELLED",
              "THREAT_CASE_DISMISSED",
              "THREAT_CASE_DELETED",
              "THREAT_CASE_DELETE_BY_STATUS",
              "PIN_CREATED",
              "PIN_DELETED",
              "ALM_PIN_CREATE",
              "ALM_PIN_BULK_CREATE",
              "ALM_PIN_UPDATE",
              "ALM_PIN_ROTATE",
              "ALM_PIN_BULK_ROTATE",
              "ALM_PIN_DELETE",
              "BASIC_AUTH_SUCCESS",
              "BASIC_AUTH_FAILURE",
              "SAML_LOGIN_WEB",
              "LOGIN_WEB",
              "PASSWORDLESS_LOGIN_WEB",
              "PARTNER_LOGIN_WEB",
              "PARTNER_PASSWORDLESS_LOGIN_WEB",
              "SAML_LOGIN_FAILURE_WEB",
              "LOGIN_FAILURE_WEB",
              "RHOMBUS_KEY_LOGIN",
              "RHOMBUS_KEY_PASSWORDLESS_LOGIN",
              "RHOMBUS_KEY_SAML_LOGIN",
              "LOGOUT_WEB",
              "PARTNER_LOGOUT_WEB",
              "WEB_CONSOLE_ACCESS",
              "MOBILE_CONSOLE_ACCESS",
              "SAML_LOGIN_MOBILE",
              "PARTNER_LOGIN_MOBILE",
              "PARTNER_PASSWORDLESS_LOGIN_MOBILE",
              "LOGIN_MOBILE",
              "PASSWORDLESS_LOGIN_MOBILE",
              "SAML_LOGIN_FAILURE_MOBILE",
              "LOGIN_FAILURE_MOBILE",
              "LOGOUT_MOBILE",
              "PARTNER_LOGOUT_MOBILE",
              "MOBILE_ACCESS",
              "PARTNER_LOGIN_MOBIlE_REFRESH",
              "LOGIN_MOBIlE_REFRESH",
              "RHOMBUS_KEY_LOGIN_REFRESH",
              "CAMERA_WIFI_NETWORK_CHANGED",
              "CAMERA_FORCED_REBOOT",
              "AUDIO_GATEWAY_FORCED_REBOOT",
              "ENVIRONMENTAL_GATEWAY_FORCED_REBOOT",
              "DOORBELL_CAMERA_FORCED_REBOOT",
              "BADGE_READER_FORCED_REBOOT",
              "FIRMWARE_UPDATE_CAMERA",
              "DELETE_CAMERA",
              "DELETE_USER",
              "DELETE_LOCATION",
              "LOCATION_UPDATED",
              "DELETE_ROLE",
              "ERASE_CAMERA",
              "POLICY_UPDATE",
              "POLICY_DELETE",
              "POLICY_PAUSED_LOCATION",
              "POLICY_PAUSED_DEVICE",
              "POLICY_PAUSED_COMPONENT_COMPOSITE",
              "CREATE_POLICY_ADDENDUM",
              "DEVICE_REGISTERED",
              "DEVICE_UPDATE",
              "DEVICE_SETTINGS_UPDATE",
              "REVERT_TO_DEFAULTS",
              "DEVICE_FEATURE_UPDATE",
              "DEVICE_ORG_REASSIGN",
              "CLAIMKEY_RENEWAL_CREATED",
              "LICENSES_CLAIMED",
              "LICENSES_RETURNED",
              "LICENSE_ASSIGNED",
              "LICENSE_CREATED",
              "LICENSE_UPDATED",
              "USER_UPDATE",
              "USER_CREATE",
              "USER_IMPORT",
              "BULK_PROVISION_CREDENTIALS",
              "ROLE_CREATE",
              "POLICY_CREATE",
              "PARTNER_CLIENT_CREATE",
              "PARTNER_CUSTOMIZE_CLIENT",
              "PARTNER_CUSTOMIZE_CLIENT_DEVICE",
              "ORG_UPDATE",
              "DELETE_ORG",
              "DISABLE_ORG",
              "CREATE_ORG",
              "ROLE_UPDATE",
              "USER_ROLE_UPDATE",
              "USER_EMAIL_UPDATE",
              "TIMELAPSE_CREATE",
              "TIMELAPSE_DELETE",
              "ALERT_DISMISS",
              "ALL_ALERT_DISMISS",
              "SAVED_CLIP_CREATE",
              "SAVED_CLIP_DELETE",
              "CLIP_GROUP_CREATED",
              "CLIP_GROUP_DELETE",
              "SHARED_CLIP_DELETE",
              "SHARED_CLIP_CREATE",
              "SHARED_LINK_SENT",
              "SHARED_LIVE_VIDEO_STREAM_WITH_PASSWORD_CREATE",
              "SHARED_LIVE_VIDEO_STREAM_WITHOUT_PASSWORD_CREATE",
              "SHARED_LIVE_VIDEO_STREAM_DELETE",
              "SHARED_VIDEOWALL_WITH_PASSWORD_CREATE",
              "SHARED_VIDEOWALL_WITHOUT_PASSWORD_CREATE",
              "SHARED_VIDEOWALL_DELETE",
              "RAW_HTTP_STREAM_CREATED",
              "RAW_HTTP_STREAM_DELETED",
              "SETUP_VIRTUAL_MFA_DEVICE",
              "DELETE_VIRTUAL_MFA_DEVICE",
              "SETUP_SCIM_API_ACCESS",
              "REVOKE_SCIM_API_ACCESS",
              "AUDIT_EXPORT",
              "COUNT_EXPORT",
              "DIAGNOSTIC_EXPORT",
              "INVENTORY_EXPORT",
              "USERS_EXPORT",
              "UPTIME_EXPORT",
              "SUPPORT_TICKET_OPEN",
              "RMA_OPEN",
              "FEEDBACK_CREATE",
              "SUPPORT_ACCESS_GRANT",
              "SUPPORT_ACCESS_REVOKE",
              "SUPPORT_PARTNER_ADD",
              "SUPPORT_PARTNER_REMOVE",
              "SUPPORT_PARTNER_LOGIN_ACCESS_EXPIRED",
              "SUPPORT_SEARCH_TICKETS",
              "ACCEPT_UAP",
              "ACCEPT_RHOMBUS_UAP",
              "ACCEPT_ALERTMONITORING_UAP",
              "CREATE_SEEKPOINT",
              "DELETE_CUSTOM_SEEKPOINT",
              "UPDATE_INTEGRATION_SAML",
              "UPDATE_INTEGRATION_SLACK",
              "UPDATE_INTEGRATION_SLACK_V2",
              "DELETE_INTEGRATION_SLACK_V2",
              "UPDATE_INTEGRATION_BOX",
              "DELETE_INTEGRATION_BOX",
              "UPDATE_INTEGRATION_GOOGLE",
              "DELETE_INTEGRATION_GOOGLE",
              "UPDATE_INTEGRATION_GOOGLE_V2",
              "DELETE_INTEGRATION_GOOGLE_V2",
              "UPDATE_INTEGRATION_PAGERDUTY",
              "DELETE_INTEGRATION_PAGERDUTY",
              "UPDATE_INTEGRATION_SERVICENOW",
              "DELETE_INTEGRATION_SERVICENOW",
              "UPDATE_INTEGRATION_OFFICE365",
              "DELETE_INTEGRATION_OFFICE365",
              "UPDATE_INTEGRATION_DROPBOX",
              "DELETE_INTEGRATION_DROPBOX",
              "UPDATE_INTEGRATION_SQUARE",
              "DELETE_INTEGRATION_SQUARE",
              "UPDATE_INTEGRATION_AWS",
              "DELETE_INTEGRATION_AWS",
              "UPDATE_INTEGRATION_HALO",
              "DELETE_INTEGRATION_HALO",
              "UPDATE_INTEGRATION_WEBHOOK",
              "DELETE_INTEGRATION_WEBHOOK",
              "UPDATE_INTEGRATION_EMAIL",
              "DELETE_INTEGRATION_EMAIL",
              "UPDATE_INTEGRATION_MATTERMOST",
              "DELETE_INTEGRATION_MATTERMOST",
              "UPDATE_INTEGRATION_OPENPATH",
              "DELETE_INTEGRATION_OPENPATH",
              "UPDATE_INTEGRATION_AVIGILON_ALTA",
              "DELETE_INTEGRATION_AVIGILON_ALTA",
              "UPDATE_INTEGRATION_DICE",
              "DELETE_INTEGRATION_DICE",
              "UPDATE_INTEGRATION_LUMEO",
              "DELETE_INTEGRATION_LUMEO",
              "UPDATE_INTEGRATION_DEVICE",
              "DELETE_INTEGRATION_DEVICE",
              "UPDATE_INTEGRATION_GUESTMANAGEMENT",
              "DELETE_INTEGRATION_GUESTMANAGEMENT",
              "UPDATE_GUESTMANAGEMENT_SETTINGS",
              "DELETE_GUESTMANAGEMENT_SETTINGS",
              "INVITE_GUEST",
              "CREATE_GUEST",
              "CHECKIN_GUEST",
              "CHECKOUT_GUEST",
              "UPDATE_GUEST",
              "DELETE_GUEST",
              "ACTIVATE_KIOSK",
              "UPDATE_INTEGRATION_OMNIALERT",
              "DELETE_INTEGRATION_OMNIALERT",
              "UPDATE_INTEGRATION_OPENTECHALLIANCE",
              "DELETE_INTEGRATION_OPENTECHALLIANCE",
              "UPDATE_INTEGRATION_TOAST",
              "DELETE_INTEGRATION_TOAST",
              "UPDATE_INTEGRATION_KISI",
              "DELETE_INTEGRATION_KISI",
              "UPDATE_INTEGRATION_BRIVO",
              "DELETE_INTEGRATION_BRIVO",
              "UPDATE_INTEGRATION_BUTTERFLYMX",
              "DELETE_INTEGRATION_BUTTERFLYMX",
              "UPDATE_INTEGRATION_ENVOY",
              "DELETE_INTEGRATION_ENVOY",
              "CREATE_ENVOY_INVITE",
              "UPDATE_INTEGRATION_SALTO",
              "UPDATE_INTEGRATION_PDK",
              "DELETE_INTEGRATION_PDK",
              "UPDATE_INTEGRATION_GENEA",
              "DELETE_INTEGRATION_GENEA",
              "UPDATE_INTEGRATION_MICROSOFTTEAMS",
              "DELETE_INTEGRATION_MICROSOFTTEAMS",
              "UPDATE_INTEGRATION_AMT",
              "DELETE_INTEGRATION_AMT",
              "UPDATE_INTEGRATION_PLACEOS",
              "DELETE_INTEGRATION_PLACEOS",
              "UPDATE_INTEGRATION_INTUIFACE",
              "DELETE_INTEGRATION_INTUIFACE",
              "UPDATE_INTEGRATION_INFORMACAST",
              "DELETE_INTEGRATION_INFORMACAST",
              "UPDATE_INTEGRATION_INNERRANGE",
              "DELETE_INTEGRATION_INNERRANGE",
              "UPDATE_INTEGRATION_SHELLY",
              "DELETE_INTEGRATION_SHELLY",
              "UPDATE_INTEGRATION_FLIC",
              "DELETE_INTEGRATION_FLIC",
              "UPDATE_INTEGRATION_NINEONEONECELLULAR",
              "DELETE_INTEGRATION_NINEONEONECELLULAR",
              "UPDATE_INTEGRATION_PIMLOC",
              "DELETE_INTEGRATION_PIMLOC",
              "UPDATE_INTEGRATION_RAPTOR",
              "DELETE_INTEGRATION_RAPTOR",
              "UPDATE_INTEGRATION_LLM",
              "DELETE_INTEGRATION_LLM",
              "UPDATE_INTEGRATION_NOONLIGHT",
              "UPDATE_INTEGRATION_ALARM_MONITORING",
              "ENABLE_LIVE_ALARM_MONITORING",
              "ENABLE_LIVE_ALARM_MONITORING_LOCATION",
              "CREATE_ALARM_MONITORING_SETTINGS",
              "UPDATE_ALARM_MONITORING_SETTINGS",
              "DELETE_ALARM_MONITORING_SETTINGS",
              "ENABLE_ALARM_MONITORING_SETTINGS",
              "DISABLE_ALARM_MONITORING_SETTINGS",
              "REPORT_VEHICLE_EVENT",
              "API_TOKEN_REQUEST",
              "API_TOKEN_REVOKE",
              "API_INVOCATION",
              "API_OAUTH_TOKEN_REQUEST",
              "API_OAUTH_TOKEN_REFRESH",
              "API_OAUTH_TOKEN_REVOKE",
              "API_OAUTH_INVOCATION",
              "API_OAUTH_SUBMIT_APPLICATION",
              "API_OAUTH_UPDATE_APPLICATION",
              "API_OAUTH_DELETE_APPLICATION",
              "API_OAUTH_AUTHORIZE",
              "VIDEO_WALL_CREATE",
              "VIDEO_WALL_UPDATE",
              "VIDEO_WALL_DELETE",
              "VIEW_SHARE_TIMELAPSE",
              "VIEW_SHARE_CLIP",
              "VIEW_SHARE_STREAM",
              "VIEW_SHARE_VIDEOWALL",
              "VIEW_CAMERA_VOD",
              "CAMERA_POLICY_UPDATE",
              "CAMERA_POLICY_CREATE",
              "CAMERA_POLICY_DELETE",
              "TAG_POLICY_UPDATE",
              "TAG_POLICY_CREATE",
              "TAG_POLICY_DELETE",
              "CLIMATE_POLICY_UPDATE",
              "CLIMATE_POLICY_CREATE",
              "CLIMATE_POLICY_DELETE",
              "DOOR_POLICY_UPDATE",
              "DOOR_POLICY_CREATE",
              "DOOR_POLICY_DELETE",
              "DOOR_SCHEDULE_EXCEPTION_UPDATE",
              "DOOR_SCHEDULE_EXCEPTION_CREATE",
              "DOOR_SCHEDULE_EXCEPTION_DELETE",
              "ACCESS_CONTROLLED_DOOR_POLICY_UPDATE",
              "ACCESS_CONTROLLED_DOOR_POLICY_CREATE",
              "ACCESS_CONTROLLED_DOOR_POLICY_DELETE",
              "VIDEO_INTERCOM_POLICY_UPDATE",
              "VIDEO_INTERCOM_POLICY_CREATE",
              "VIDEO_INTERCOM_POLICY_DELETE",
              "OCCUPANCY_POLICY_UPDATE",
              "OCCUPANCY_POLICY_CREATE",
              "OCCUPANCY_POLICY_DELETE",
              "AUDIO_POLICY_UPDATE",
              "AUDIO_POLICY_CREATE",
              "AUDIO_POLICY_DELETE",
              "SCHEDULE_CREATE",
              "SCHEDULE_DELETE",
              "SCHEDULE_UPDATE",
              "CUSTOM_EVENT_CREATE",
              "CUSTOM_EVENT_DELETE",
              "CUSTOM_EVENT_UPDATE",
              "UPLOAD_FLOORPLAN",
              "ORG_AUDIO_RECORD_UPDATE",
              "ORG_AUDIO_ANALYSIS_UPDATE",
              "ORG_LLM_USAGE_UPDATE",
              "DOOR_ACCESS_UNLOCK",
              "RHOMBUS_KEY_DOOR_UNLOCK",
              "UPLOAD_ACCESS_CONTROLLED_DOOR",
              "UPLOAD_USER_PROFILE_PICTURE",
              "ACCESS_GRANT_CREATE",
              "ACCESS_GRANT_UPDATE",
              "ACCESS_GRANT_DELETE",
              "ACCESS_REVOCATION_CREATE",
              "ACCESS_REVOCATION_UPDATE",
              "ACCESS_REVOCATION_DELETE",
              "ACCESS_CONTROLLED_DOOR_CREATE",
              "ACCESS_CONTROLLED_DOOR_UPDATE",
              "ACCESS_CONTROLLED_DOOR_DELETE",
              "AC_CRED_RHOMBUS_SECURE_CSN_CREATE",
              "AC_CRED_RHOMBUS_SECURE_CSN_UPDATE",
              "AC_CRED_RHOMBUS_SECURE_CSN_DELETE",
              "AC_CRED_RHOMBUS_SECURE_CSN_REVOKED",
              "AC_CRED_STANDARD_CSN_CREATE",
              "AC_CRED_STANDARD_CSN_UPDATE",
              "AC_CRED_STANDARD_CSN_DELETE",
              "AC_CRED_STANDARD_CSN_REVOKED",
              "AC_CRED_RHOMBUS_SECURE_MOBILE_CREATE",
              "AC_CRED_RHOMBUS_SECURE_MOBILE_UPDATE",
              "AC_CRED_RHOMBUS_SECURE_MOBILE_DELETE",
              "AC_CRED_RHOMBUS_SECURE_MOBILE_REVOKED",
              "AC_CRED_PIN_CREATE",
              "AC_CRED_PIN_BULK_CREATE",
              "AC_CRED_PIN_UPDATE",
              "AC_CRED_PIN_ROTATE",
              "AC_CRED_PIN_BULK_ROTATE",
              "AC_CRED_PIN_DELETE",
              "AC_CRED_PIN_REVOKED",
              "AC_CRED_WIEGAND_CREATE",
              "AC_CRED_WIEGAND_UPDATE",
              "AC_CRED_WIEGAND_DELETE",
              "AC_CRED_WIEGAND_REVOKED",
              "AC_CRED_NOTE_UPDATE",
              "AC_LOCKDOWN_PLAN_CREATED",
              "AC_LOCKDOWN_PLAN_UPDATED",
              "AC_LOCKDOWN_PLAN_DELETED",
              "AC_LOCKDOWN_ACTIVATED",
              "AC_LOCKDOWN_DEACTIVATED",
              "AC_COMPONENT_POWER_CYCLE",
              "AC_DOOR_STATE_OVERRIDE_APPLIED",
              "AC_DOOR_STATE_OVERRIDE_CANCELLED",
              "SCIM_GET_ALL_USERS",
              "SCIM_POST_CREATE_USER",
              "SCIM_PUT_UPDATE_USER",
              "SCIM_PATCH_UPDATE_USER",
              "SCIM_GET_USER_BY_ID",
              "SCIM_DELETE_USER_BY_ID",
              "SCIM_GET_ALL_GROUPS",
              "SCIM_POST_CREATE_GROUP",
              "SCIM_PUT_UPDATE_GROUP",
              "SCIM_PATCH_UPDATE_GROUP",
              "SCIM_GET_GROUP_BY_ID",
              "SCIM_DELETE_GROUP_BY_ID",
              "CREATE_ACCESS_CONTROL_GROUP",
              "UPDATE_ACCESS_CONTROL_GROUP",
              "DELETE_ACCESS_CONTROL_GROUP",
              "RULE_CREATE",
              "RULE_DELETE",
              "RULE_UPDATE",
              "RULE_PAUSE",
              "UPLOAD_FACES",
              "UPDATE_FACE",
              "REPORT_FACE_EVENT",
              "FACE_EVENT_UPDATED",
              "FACE_EVENT_DELETED",
              "FACE_PERSON_CREATED",
              "FACE_PERSON_UPDATED",
              "FACE_PERSON_DELETED",
              "FACE_MATCHMAKER_CREATED",
              "FACE_MATCHMAKER_DELETED",
              "FACE_MATCHMAKER_UPLOADED",
              "FACE_MATCHING_CONFIG_UPDATED",
              "EXPUNGE_FACES_ORG",
              "EXPUNGE_VEHICLES_ORG",
              "DEVICE_NETWORK_CONFIGURATION_CHANGE",
              "KIOSK_UPDATED",
              "KIOSK_DELETED",
              "KIOSK_CREATED",
              "UPDATE_APERIO_FIRMWARE",
              "UPDATE_INTEGRATION_APERIO",
              "DELETE_INTEGRATION_APERIO",
              "THIRD_PARTY_CAMERA_CREATE",
              "THIRD_PARTY_CAMERA_DELETE",
              "THIRD_PARTY_CAMERA_UPDATED",
              "THIRD_PARTY_CAMERA_ASSIGNED_TO_CORE",
              "THIRD_PARTY_CAMERA_ASSIGNED_TO_LITE",
              "THIRD_PARTY_CAMERA_UNASSIGNED",
              "THIRD_PARTY_CAMERA_PASSWORD_CREATE",
              "THIRD_PARTY_CAMERA_PASSWORD_DELTE",
              "CREATE_CHATBOT_CONFIG",
              "UPDATE_CHATBOT_CONFIG",
              "DELETE_CHATBOT_CONFIG",
              "UNKNOWN"
            ],
            "nullable": true
          },
          "maxItems": 50,
          "nullable": true
        },
        "includeActions": {
          "type": "array",
          "description": "If not empty, only events with actions specified in the list are returned. If both include and exclude actions are specified, exclude actions are ignored. ",
          "items": {
            "type": "string",
            "enum": [
              "THREAT_CASE_ESCALATED",
              "THREAT_CASE_CANCELLED",
              "THREAT_CASE_DISMISSED",
              "THREAT_CASE_DELETED",
              "THREAT_CASE_DELETE_BY_STATUS",
              "PIN_CREATED",
              "PIN_DELETED",
              "ALM_PIN_CREATE",
              "ALM_PIN_BULK_CREATE",
              "ALM_PIN_UPDATE",
              "ALM_PIN_ROTATE",
              "ALM_PIN_BULK_ROTATE",
              "ALM_PIN_DELETE",
              "BASIC_AUTH_SUCCESS",
              "BASIC_AUTH_FAILURE",
              "SAML_LOGIN_WEB",
              "LOGIN_WEB",
              "PASSWORDLESS_LOGIN_WEB",
              "PARTNER_LOGIN_WEB",
              "PARTNER_PASSWORDLESS_LOGIN_WEB",
              "SAML_LOGIN_FAILURE_WEB",
              "LOGIN_FAILURE_WEB",
              "RHOMBUS_KEY_LOGIN",
              "RHOMBUS_KEY_PASSWORDLESS_LOGIN",
              "RHOMBUS_KEY_SAML_LOGIN",
              "LOGOUT_WEB",
              "PARTNER_LOGOUT_WEB",
              "WEB_CONSOLE_ACCESS",
              "MOBILE_CONSOLE_ACCESS",
              "SAML_LOGIN_MOBILE",
              "PARTNER_LOGIN_MOBILE",
              "PARTNER_PASSWORDLESS_LOGIN_MOBILE",
              "LOGIN_MOBILE",
              "PASSWORDLESS_LOGIN_MOBILE",
              "SAML_LOGIN_FAILURE_MOBILE",
              "LOGIN_FAILURE_MOBILE",
              "LOGOUT_MOBILE",
              "PARTNER_LOGOUT_MOBILE",
              "MOBILE_ACCESS",
              "PARTNER_LOGIN_MOBIlE_REFRESH",
              "LOGIN_MOBIlE_REFRESH",
              "RHOMBUS_KEY_LOGIN_REFRESH",
              "CAMERA_WIFI_NETWORK_CHANGED",
              "CAMERA_FORCED_REBOOT",
              "AUDIO_GATEWAY_FORCED_REBOOT",
              "ENVIRONMENTAL_GATEWAY_FORCED_REBOOT",
              "DOORBELL_CAMERA_FORCED_REBOOT",
              "BADGE_READER_FORCED_REBOOT",
              "FIRMWARE_UPDATE_CAMERA",
              "DELETE_CAMERA",
              "DELETE_USER",
              "DELETE_LOCATION",
              "LOCATION_UPDATED",
              "DELETE_ROLE",
              "ERASE_CAMERA",
              "POLICY_UPDATE",
              "POLICY_DELETE",
              "POLICY_PAUSED_LOCATION",
              "POLICY_PAUSED_DEVICE",
              "POLICY_PAUSED_COMPONENT_COMPOSITE",
              "CREATE_POLICY_ADDENDUM",
              "DEVICE_REGISTERED",
              "DEVICE_UPDATE",
              "DEVICE_SETTINGS_UPDATE",
              "REVERT_TO_DEFAULTS",
              "DEVICE_FEATURE_UPDATE",
              "DEVICE_ORG_REASSIGN",
              "CLAIMKEY_RENEWAL_CREATED",
              "LICENSES_CLAIMED",
              "LICENSES_RETURNED",
              "LICENSE_ASSIGNED",
              "LICENSE_CREATED",
              "LICENSE_UPDATED",
              "USER_UPDATE",
              "USER_CREATE",
              "USER_IMPORT",
              "BULK_PROVISION_CREDENTIALS",
              "ROLE_CREATE",
              "POLICY_CREATE",
              "PARTNER_CLIENT_CREATE",
              "PARTNER_CUSTOMIZE_CLIENT",
              "PARTNER_CUSTOMIZE_CLIENT_DEVICE",
              "ORG_UPDATE",
              "DELETE_ORG",
              "DISABLE_ORG",
              "CREATE_ORG",
              "ROLE_UPDATE",
              "USER_ROLE_UPDATE",
              "USER_EMAIL_UPDATE",
              "TIMELAPSE_CREATE",
              "TIMELAPSE_DELETE",
              "ALERT_DISMISS",
              "ALL_ALERT_DISMISS",
              "SAVED_CLIP_CREATE",
              "SAVED_CLIP_DELETE",
              "CLIP_GROUP_CREATED",
              "CLIP_GROUP_DELETE",
              "SHARED_CLIP_DELETE",
              "SHARED_CLIP_CREATE",
              "SHARED_LINK_SENT",
              "SHARED_LIVE_VIDEO_STREAM_WITH_PASSWORD_CREATE",
              "SHARED_LIVE_VIDEO_STREAM_WITHOUT_PASSWORD_CREATE",
              "SHARED_LIVE_VIDEO_STREAM_DELETE",
              "SHARED_VIDEOWALL_WITH_PASSWORD_CREATE",
              "SHARED_VIDEOWALL_WITHOUT_PASSWORD_CREATE",
              "SHARED_VIDEOWALL_DELETE",
              "RAW_HTTP_STREAM_CREATED",
              "RAW_HTTP_STREAM_DELETED",
              "SETUP_VIRTUAL_MFA_DEVICE",
              "DELETE_VIRTUAL_MFA_DEVICE",
              "SETUP_SCIM_API_ACCESS",
              "REVOKE_SCIM_API_ACCESS",
              "AUDIT_EXPORT",
              "COUNT_EXPORT",
              "DIAGNOSTIC_EXPORT",
              "INVENTORY_EXPORT",
              "USERS_EXPORT",
              "UPTIME_EXPORT",
              "SUPPORT_TICKET_OPEN",
              "RMA_OPEN",
              "FEEDBACK_CREATE",
              "SUPPORT_ACCESS_GRANT",
              "SUPPORT_ACCESS_REVOKE",
              "SUPPORT_PARTNER_ADD",
              "SUPPORT_PARTNER_REMOVE",
              "SUPPORT_PARTNER_LOGIN_ACCESS_EXPIRED",
              "SUPPORT_SEARCH_TICKETS",
              "ACCEPT_UAP",
              "ACCEPT_RHOMBUS_UAP",
              "ACCEPT_ALERTMONITORING_UAP",
              "CREATE_SEEKPOINT",
              "DELETE_CUSTOM_SEEKPOINT",
              "UPDATE_INTEGRATION_SAML",
              "UPDATE_INTEGRATION_SLACK",
              "UPDATE_INTEGRATION_SLACK_V2",
              "DELETE_INTEGRATION_SLACK_V2",
              "UPDATE_INTEGRATION_BOX",
              "DELETE_INTEGRATION_BOX",
              "UPDATE_INTEGRATION_GOOGLE",
              "DELETE_INTEGRATION_GOOGLE",
              "UPDATE_INTEGRATION_GOOGLE_V2",
              "DELETE_INTEGRATION_GOOGLE_V2",
              "UPDATE_INTEGRATION_PAGERDUTY",
              "DELETE_INTEGRATION_PAGERDUTY",
              "UPDATE_INTEGRATION_SERVICENOW",
              "DELETE_INTEGRATION_SERVICENOW",
              "UPDATE_INTEGRATION_OFFICE365",
              "DELETE_INTEGRATION_OFFICE365",
              "UPDATE_INTEGRATION_DROPBOX",
              "DELETE_INTEGRATION_DROPBOX",
              "UPDATE_INTEGRATION_SQUARE",
              "DELETE_INTEGRATION_SQUARE",
              "UPDATE_INTEGRATION_AWS",
              "DELETE_INTEGRATION_AWS",
              "UPDATE_INTEGRATION_HALO",
              "DELETE_INTEGRATION_HALO",
              "UPDATE_INTEGRATION_WEBHOOK",
              "DELETE_INTEGRATION_WEBHOOK",
              "UPDATE_INTEGRATION_EMAIL",
              "DELETE_INTEGRATION_EMAIL",
              "UPDATE_INTEGRATION_MATTERMOST",
              "DELETE_INTEGRATION_MATTERMOST",
              "UPDATE_INTEGRATION_OPENPATH",
              "DELETE_INTEGRATION_OPENPATH",
              "UPDATE_INTEGRATION_AVIGILON_ALTA",
              "DELETE_INTEGRATION_AVIGILON_ALTA",
              "UPDATE_INTEGRATION_DICE",
              "DELETE_INTEGRATION_DICE",
              "UPDATE_INTEGRATION_LUMEO",
              "DELETE_INTEGRATION_LUMEO",
              "UPDATE_INTEGRATION_DEVICE",
              "DELETE_INTEGRATION_DEVICE",
              "UPDATE_INTEGRATION_GUESTMANAGEMENT",
              "DELETE_INTEGRATION_GUESTMANAGEMENT",
              "UPDATE_GUESTMANAGEMENT_SETTINGS",
              "DELETE_GUESTMANAGEMENT_SETTINGS",
              "INVITE_GUEST",
              "CREATE_GUEST",
              "CHECKIN_GUEST",
              "CHECKOUT_GUEST",
              "UPDATE_GUEST",
              "DELETE_GUEST",
              "ACTIVATE_KIOSK",
              "UPDATE_INTEGRATION_OMNIALERT",
              "DELETE_INTEGRATION_OMNIALERT",
              "UPDATE_INTEGRATION_OPENTECHALLIANCE",
              "DELETE_INTEGRATION_OPENTECHALLIANCE",
              "UPDATE_INTEGRATION_TOAST",
              "DELETE_INTEGRATION_TOAST",
              "UPDATE_INTEGRATION_KISI",
              "DELETE_INTEGRATION_KISI",
              "UPDATE_INTEGRATION_BRIVO",
              "DELETE_INTEGRATION_BRIVO",
              "UPDATE_INTEGRATION_BUTTERFLYMX",
              "DELETE_INTEGRATION_BUTTERFLYMX",
              "UPDATE_INTEGRATION_ENVOY",
              "DELETE_INTEGRATION_ENVOY",
              "CREATE_ENVOY_INVITE",
              "UPDATE_INTEGRATION_SALTO",
              "UPDATE_INTEGRATION_PDK",
              "DELETE_INTEGRATION_PDK",
              "UPDATE_INTEGRATION_GENEA",
              "DELETE_INTEGRATION_GENEA",
              "UPDATE_INTEGRATION_MICROSOFTTEAMS",
              "DELETE_INTEGRATION_MICROSOFTTEAMS",
              "UPDATE_INTEGRATION_AMT",
              "DELETE_INTEGRATION_AMT",
              "UPDATE_INTEGRATION_PLACEOS",
              "DELETE_INTEGRATION_PLACEOS",
              "UPDATE_INTEGRATION_INTUIFACE",
              "DELETE_INTEGRATION_INTUIFACE",
              "UPDATE_INTEGRATION_INFORMACAST",
              "DELETE_INTEGRATION_INFORMACAST",
              "UPDATE_INTEGRATION_INNERRANGE",
              "DELETE_INTEGRATION_INNERRANGE",
              "UPDATE_INTEGRATION_SHELLY",
              "DELETE_INTEGRATION_SHELLY",
              "UPDATE_INTEGRATION_FLIC",
              "DELETE_INTEGRATION_FLIC",
              "UPDATE_INTEGRATION_NINEONEONECELLULAR",
              "DELETE_INTEGRATION_NINEONEONECELLULAR",
              "UPDATE_INTEGRATION_PIMLOC",
              "DELETE_INTEGRATION_PIMLOC",
              "UPDATE_INTEGRATION_RAPTOR",
              "DELETE_INTEGRATION_RAPTOR",
              "UPDATE_INTEGRATION_LLM",
              "DELETE_INTEGRATION_LLM",
              "UPDATE_INTEGRATION_NOONLIGHT",
              "UPDATE_INTEGRATION_ALARM_MONITORING",
              "ENABLE_LIVE_ALARM_MONITORING",
              "ENABLE_LIVE_ALARM_MONITORING_LOCATION",
              "CREATE_ALARM_MONITORING_SETTINGS",
              "UPDATE_ALARM_MONITORING_SETTINGS",
              "DELETE_ALARM_MONITORING_SETTINGS",
              "ENABLE_ALARM_MONITORING_SETTINGS",
              "DISABLE_ALARM_MONITORING_SETTINGS",
              "REPORT_VEHICLE_EVENT",
              "API_TOKEN_REQUEST",
              "API_TOKEN_REVOKE",
              "API_INVOCATION",
              "API_OAUTH_TOKEN_REQUEST",
              "API_OAUTH_TOKEN_REFRESH",
              "API_OAUTH_TOKEN_REVOKE",
              "API_OAUTH_INVOCATION",
              "API_OAUTH_SUBMIT_APPLICATION",
              "API_OAUTH_UPDATE_APPLICATION",
              "API_OAUTH_DELETE_APPLICATION",
              "API_OAUTH_AUTHORIZE",
              "VIDEO_WALL_CREATE",
              "VIDEO_WALL_UPDATE",
              "VIDEO_WALL_DELETE",
              "VIEW_SHARE_TIMELAPSE",
              "VIEW_SHARE_CLIP",
              "VIEW_SHARE_STREAM",
              "VIEW_SHARE_VIDEOWALL",
              "VIEW_CAMERA_VOD",
              "CAMERA_POLICY_UPDATE",
              "CAMERA_POLICY_CREATE",
              "CAMERA_POLICY_DELETE",
              "TAG_POLICY_UPDATE",
              "TAG_POLICY_CREATE",
              "TAG_POLICY_DELETE",
              "CLIMATE_POLICY_UPDATE",
              "CLIMATE_POLICY_CREATE",
              "CLIMATE_POLICY_DELETE",
              "DOOR_POLICY_UPDATE",
              "DOOR_POLICY_CREATE",
              "DOOR_POLICY_DELETE",
              "DOOR_SCHEDULE_EXCEPTION_UPDATE",
              "DOOR_SCHEDULE_EXCEPTION_CREATE",
              "DOOR_SCHEDULE_EXCEPTION_DELETE",
              "ACCESS_CONTROLLED_DOOR_POLICY_UPDATE",
              "ACCESS_CONTROLLED_DOOR_POLICY_CREATE",
              "ACCESS_CONTROLLED_DOOR_POLICY_DELETE",
              "VIDEO_INTERCOM_POLICY_UPDATE",
              "VIDEO_INTERCOM_POLICY_CREATE",
              "VIDEO_INTERCOM_POLICY_DELETE",
              "OCCUPANCY_POLICY_UPDATE",
              "OCCUPANCY_POLICY_CREATE",
              "OCCUPANCY_POLICY_DELETE",
              "AUDIO_POLICY_UPDATE",
              "AUDIO_POLICY_CREATE",
              "AUDIO_POLICY_DELETE",
              "SCHEDULE_CREATE",
              "SCHEDULE_DELETE",
              "SCHEDULE_UPDATE",
              "CUSTOM_EVENT_CREATE",
              "CUSTOM_EVENT_DELETE",
              "CUSTOM_EVENT_UPDATE",
              "UPLOAD_FLOORPLAN",
              "ORG_AUDIO_RECORD_UPDATE",
              "ORG_AUDIO_ANALYSIS_UPDATE",
              "ORG_LLM_USAGE_UPDATE",
              "DOOR_ACCESS_UNLOCK",
              "RHOMBUS_KEY_DOOR_UNLOCK",
              "UPLOAD_ACCESS_CONTROLLED_DOOR",
              "UPLOAD_USER_PROFILE_PICTURE",
              "ACCESS_GRANT_CREATE",
              "ACCESS_GRANT_UPDATE",
              "ACCESS_GRANT_DELETE",
              "ACCESS_REVOCATION_CREATE",
              "ACCESS_REVOCATION_UPDATE",
              "ACCESS_REVOCATION_DELETE",
              "ACCESS_CONTROLLED_DOOR_CREATE",
              "ACCESS_CONTROLLED_DOOR_UPDATE",
              "ACCESS_CONTROLLED_DOOR_DELETE",
              "AC_CRED_RHOMBUS_SECURE_CSN_CREATE",
              "AC_CRED_RHOMBUS_SECURE_CSN_UPDATE",
              "AC_CRED_RHOMBUS_SECURE_CSN_DELETE",
              "AC_CRED_RHOMBUS_SECURE_CSN_REVOKED",
              "AC_CRED_STANDARD_CSN_CREATE",
              "AC_CRED_STANDARD_CSN_UPDATE",
              "AC_CRED_STANDARD_CSN_DELETE",
              "AC_CRED_STANDARD_CSN_REVOKED",
              "AC_CRED_RHOMBUS_SECURE_MOBILE_CREATE",
              "AC_CRED_RHOMBUS_SECURE_MOBILE_UPDATE",
              "AC_CRED_RHOMBUS_SECURE_MOBILE_DELETE",
              "AC_CRED_RHOMBUS_SECURE_MOBILE_REVOKED",
              "AC_CRED_PIN_CREATE",
              "AC_CRED_PIN_BULK_CREATE",
              "AC_CRED_PIN_UPDATE",
              "AC_CRED_PIN_ROTATE",
              "AC_CRED_PIN_BULK_ROTATE",
              "AC_CRED_PIN_DELETE",
              "AC_CRED_PIN_REVOKED",
              "AC_CRED_WIEGAND_CREATE",
              "AC_CRED_WIEGAND_UPDATE",
              "AC_CRED_WIEGAND_DELETE",
              "AC_CRED_WIEGAND_REVOKED",
              "AC_CRED_NOTE_UPDATE",
              "AC_LOCKDOWN_PLAN_CREATED",
              "AC_LOCKDOWN_PLAN_UPDATED",
              "AC_LOCKDOWN_PLAN_DELETED",
              "AC_LOCKDOWN_ACTIVATED",
              "AC_LOCKDOWN_DEACTIVATED",
              "AC_COMPONENT_POWER_CYCLE",
              "AC_DOOR_STATE_OVERRIDE_APPLIED",
              "AC_DOOR_STATE_OVERRIDE_CANCELLED",
              "SCIM_GET_ALL_USERS",
              "SCIM_POST_CREATE_USER",
              "SCIM_PUT_UPDATE_USER",
              "SCIM_PATCH_UPDATE_USER",
              "SCIM_GET_USER_BY_ID",
              "SCIM_DELETE_USER_BY_ID",
              "SCIM_GET_ALL_GROUPS",
              "SCIM_POST_CREATE_GROUP",
              "SCIM_PUT_UPDATE_GROUP",
              "SCIM_PATCH_UPDATE_GROUP",
              "SCIM_GET_GROUP_BY_ID",
              "SCIM_DELETE_GROUP_BY_ID",
              "CREATE_ACCESS_CONTROL_GROUP",
              "UPDATE_ACCESS_CONTROL_GROUP",
              "DELETE_ACCESS_CONTROL_GROUP",
              "RULE_CREATE",
              "RULE_DELETE",
              "RULE_UPDATE",
              "RULE_PAUSE",
              "UPLOAD_FACES",
              "UPDATE_FACE",
              "REPORT_FACE_EVENT",
              "FACE_EVENT_UPDATED",
              "FACE_EVENT_DELETED",
              "FACE_PERSON_CREATED",
              "FACE_PERSON_UPDATED",
              "FACE_PERSON_DELETED",
              "FACE_MATCHMAKER_CREATED",
              "FACE_MATCHMAKER_DELETED",
              "FACE_MATCHMAKER_UPLOADED",
              "FACE_MATCHING_CONFIG_UPDATED",
              "EXPUNGE_FACES_ORG",
              "EXPUNGE_VEHICLES_ORG",
              "DEVICE_NETWORK_CONFIGURATION_CHANGE",
              "KIOSK_UPDATED",
              "KIOSK_DELETED",
              "KIOSK_CREATED",
              "UPDATE_APERIO_FIRMWARE",
              "UPDATE_INTEGRATION_APERIO",
              "DELETE_INTEGRATION_APERIO",
              "THIRD_PARTY_CAMERA_CREATE",
              "THIRD_PARTY_CAMERA_DELETE",
              "THIRD_PARTY_CAMERA_UPDATED",
              "THIRD_PARTY_CAMERA_ASSIGNED_TO_CORE",
              "THIRD_PARTY_CAMERA_ASSIGNED_TO_LITE",
              "THIRD_PARTY_CAMERA_UNASSIGNED",
              "THIRD_PARTY_CAMERA_PASSWORD_CREATE",
              "THIRD_PARTY_CAMERA_PASSWORD_DELTE",
              "CREATE_CHATBOT_CONFIG",
              "UPDATE_CHATBOT_CONFIG",
              "DELETE_CHATBOT_CONFIG",
              "UNKNOWN"
            ],
            "nullable": true
          },
          "maxItems": 50,
          "nullable": true
        },
        "timestampMsAfter": {
          "type": "integer",
          "format": "int64",
          "description": "Timestamp in milliseconds after which to get audit events",
          "example": 1640995200000,
          "nullable": true
        },
        "timestampMsBefore": {
          "type": "integer",
          "format": "int64",
          "description": "Timestamp in milliseconds before which to get audit events",
          "example": 1640998800000,
          "nullable": true
        }
      }
    },
    "Report_GetAuditFeedWSResponse": {
      "type": "object",
      "description": "Response object for getting audit feed.",
      "properties": {
        "auditEvents": {
          "type": "array",
          "description": "List of audit events",
          "items": {
            "$ref": "#/components/schemas/Report_AuditEventWeb"
          },
          "nullable": true
        },
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Report_GetCountReportV2WSRequest": {
      "type": "object",
      "description": "Request object for getting count reports V2.",
      "properties": {
        "endDate": {
          "type": "string",
          "deprecated": true,
          "description": "Deprecated input, use endTimeMs instead",
          "nullable": true
        },
        "endTimeMs": {
          "type": "integer",
          "format": "int64",
          "description": "End datetime provided as a UNIX timestamp in milliseconds",
          "minimum": 0,
          "nullable": true
        },
        "interval": {
          "type": "string",
          "description": "Time intervals to get reports for",
          "enum": [
            "MINUTELY",
            "QUARTERHOURLY",
            "HOURLY",
            "DAILY",
            "WEEKLY",
            "MONTHLY"
          ],
          "nullable": true
        },
        "scope": {
          "type": "string",
          "description": "Level of granularity to get reports for",
          "enum": [
            "REGION",
            "DEVICE",
            "LOCATION",
            "ORG"
          ],
          "nullable": true
        },
        "startDate": {
          "type": "string",
          "deprecated": true,
          "description": "Deprecated input, use startTimeMs instead",
          "nullable": true
        },
        "startTimeMs": {
          "type": "integer",
          "format": "int64",
          "description": "Start datetime provided as a UNIX timestamp in milliseconds",
          "minimum": 0,
          "nullable": true
        },
        "types": {
          "type": "array",
          "description": "Types of reports to receive",
          "items": {
            "type": "string",
            "description": "Types of reports to receive",
            "enum": [
              "CROWD",
              "PEOPLE",
              "FACES",
              "MOTION",
              "BANDWIDTH",
              "VEHICLES",
              "LICENSEPLATES",
              "ALERTS",
              "AM_VERIFICATION",
              "DWELL"
            ],
            "nullable": true
          },
          "nullable": true
        },
        "uuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      },
      "required": [
        "interval",
        "scope",
        "types"
      ]
    },
    "Report_GetCountReportWSRequest": {
      "type": "object",
      "description": "Request object for getting count reports.",
      "properties": {
        "endDate": {
          "type": "string",
          "description": "End date for the report",
          "example": "2024-01-31",
          "nullable": true
        },
        "interval": {
          "type": "string",
          "description": "Time interval for the report",
          "enum": [
            "MINUTELY",
            "QUARTERHOURLY",
            "HOURLY",
            "DAILY",
            "WEEKLY",
            "MONTHLY"
          ],
          "nullable": true
        },
        "scope": {
          "type": "string",
          "description": "Scope of the report",
          "enum": [
            "REGION",
            "DEVICE",
            "LOCATION",
            "ORG"
          ],
          "nullable": true
        },
        "startDate": {
          "type": "string",
          "description": "Start date for the report",
          "example": "2024-01-01",
          "nullable": true
        },
        "type": {
          "type": "string",
          "description": "Type of report to get",
          "enum": [
            "CROWD",
            "PEOPLE",
            "FACES",
            "MOTION",
            "BANDWIDTH",
            "VEHICLES",
            "LICENSEPLATES",
            "ALERTS",
            "AM_VERIFICATION",
            "DWELL"
          ],
          "nullable": true
        },
        "uuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Report_GetCountReportWSResponse": {
      "type": "object",
      "description": "Response object for getting count reports.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "timeSeriesDataPoints": {
          "type": "array",
          "description": "List of time series data points for count report",
          "items": {
            "$ref": "#/components/schemas/TimeSeriesDataPointV2Type"
          },
          "nullable": true
        }
      }
    },
    "Report_GetCountReportsForDevicesAtLocationWSRequest": {
      "type": "object",
      "description": "Request object for getting count reports for devices at a specific location.",
      "properties": {
        "endTimeMs": {
          "type": "integer",
          "format": "int64",
          "description": "End timestamp in epoch milliseconds.",
          "minimum": 0,
          "nullable": true
        },
        "interval": {
          "type": "string",
          "description": "Level of granularity with which event counts are grouped.",
          "enum": [
            "MINUTELY",
            "QUARTERHOURLY",
            "HOURLY",
            "DAILY",
            "WEEKLY",
            "MONTHLY"
          ],
          "nullable": true
        },
        "locationUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        },
        "startTimeMs": {
          "type": "integer",
          "format": "int64",
          "description": "Start timestamp in epoch milliseconds.",
          "minimum": 0,
          "nullable": true
        },
        "type": {
          "type": "string",
          "description": "Type of event to get counts for.",
          "enum": [
            "CROWD",
            "PEOPLE",
            "FACES",
            "MOTION",
            "BANDWIDTH",
            "VEHICLES",
            "LICENSEPLATES",
            "ALERTS",
            "AM_VERIFICATION",
            "DWELL"
          ],
          "nullable": true
        }
      },
      "required": [
        "endTimeMs",
        "interval",
        "locationUuid",
        "startTimeMs",
        "type"
      ]
    },
    "Report_GetCountReportsWSRequest": {
      "type": "object",
      "description": "Request object for getting count reports.",
      "properties": {
        "endDate": {
          "type": "string",
          "deprecated": true,
          "description": "Deprecated input, use endTimeMs instead",
          "nullable": true
        },
        "endTimeMs": {
          "type": "integer",
          "format": "int64",
          "description": "End datetime provided as a UNIX timestamp in milliseconds",
          "minimum": 0,
          "nullable": true
        },
        "interval": {
          "type": "string",
          "description": "Time intervals to get reports for",
          "enum": [
            "MINUTELY",
            "QUARTERHOURLY",
            "HOURLY",
            "DAILY",
            "WEEKLY",
            "MONTHLY"
          ],
          "nullable": true
        },
        "scope": {
          "type": "string",
          "description": "Level of granularity to get reports for, supports DEVICE and LOCATION",
          "enum": [
            "REGION",
            "DEVICE",
            "LOCATION",
            "ORG"
          ],
          "nullable": true
        },
        "startDate": {
          "type": "string",
          "deprecated": true,
          "description": "Deprecated input, use startTimeMs instead",
          "nullable": true
        },
        "startTimeMs": {
          "type": "integer",
          "format": "int64",
          "description": "Start datetime provided as a UNIX timestamp in milliseconds",
          "minimum": 0,
          "nullable": true
        },
        "type": {
          "type": "string",
          "description": "Type of reports to receive",
          "enum": [
            "CROWD",
            "PEOPLE",
            "FACES",
            "MOTION",
            "BANDWIDTH",
            "VEHICLES",
            "LICENSEPLATES",
            "ALERTS",
            "AM_VERIFICATION",
            "DWELL"
          ],
          "nullable": true
        }
      },
      "required": [
        "interval",
        "scope",
        "type"
      ]
    },
    "Report_GetCountReportsWSResponse": {
      "type": "object",
      "description": "Response object for getting count reports.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "timeSeriesDataPointsMap": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "description": "Map of UUIDs to their time series data points",
            "items": {
              "$ref": "#/components/schemas/TimeSeriesDataPointV2Type"
            },
            "nullable": true
          },
          "description": "Map of UUIDs to their time series data points",
          "nullable": true
        }
      }
    },
    "Report_GetDiagnosticFeedWSRequest": {
      "type": "object",
      "description": "Request object for getting diagnostic feed.",
      "properties": {
        "timestampMsAfter": {
          "type": "integer",
          "format": "int64",
          "description": "Timestamp in milliseconds after which to get diagnostic events",
          "example": 1640995200000,
          "nullable": true
        },
        "timestampMsBefore": {
          "type": "integer",
          "format": "int64",
          "description": "Timestamp in milliseconds before which to get diagnostic events",
          "example": 1640998800000,
          "nullable": true
        }
      }
    },
    "Report_GetDiagnosticFeedWSResponse": {
      "type": "object",
      "description": "Response object for getting diagnostic feed.",
      "properties": {
        "diagnosticEvents": {
          "type": "array",
          "description": "List of diagnostic events",
          "items": {
            "$ref": "#/components/schemas/DiagnosticEventType"
          },
          "nullable": true
        },
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Report_GetLicensePlatesByDeviceWSRequest": {
      "type": "object",
      "description": "Request object for getting license plates by device.",
      "properties": {
        "dateLocal": {
          "type": "string",
          "deprecated": true,
          "description": "Deprecated input, use timestampMs instead",
          "nullable": true
        },
        "deviceUuid": {
          "type": "string",
          "format": "DeviceFacetUuid",
          "description": "RUUID with optional appended facet information",
          "example": "AAAAAAAAAAAAAAAAAAAAAA.v0",
          "nullable": true
        },
        "interval": {
          "type": "string",
          "description": "Supports HOURLY, DAILY, WEEKLY, and MONTHLY",
          "enum": [
            "MINUTELY",
            "QUARTERHOURLY",
            "HOURLY",
            "DAILY",
            "WEEKLY",
            "MONTHLY"
          ],
          "nullable": true
        },
        "timestampMs": {
          "type": "integer",
          "format": "int64",
          "description": "Datetime provided as a UNIX timestamp in milliseconds",
          "minimum": 0,
          "nullable": true
        }
      },
      "required": [
        "deviceUuid",
        "interval"
      ]
    },
    "Report_GetLicensePlatesByDeviceWSResponse": {
      "type": "object",
      "description": "Response object for getting license plates by device.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "licensePlateEvents": {
          "type": "array",
          "description": "List of license plate events",
          "items": {
            "$ref": "#/components/schemas/VehicleEventIndexType"
          },
          "nullable": true
        }
      }
    },
    "Report_GetMostRecentPeopleCountWSRequest": {
      "type": "object",
      "description": "Request object for getting most recent people count.",
      "properties": {
        "deviceUuid": {
          "type": "string",
          "format": "DeviceFacetUuid",
          "description": "RUUID with optional appended facet information",
          "example": "AAAAAAAAAAAAAAAAAAAAAA.v0",
          "nullable": true
        },
        "numMostRecent": {
          "type": "integer",
          "format": "int32",
          "description": "Number of most recent people counts to retrieve",
          "example": 10,
          "nullable": true
        }
      }
    },
    "Report_GetMostRecentPeopleCountWSResponse": {
      "type": "object",
      "description": "Response object for getting most recent people count.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "events": {
          "type": "array",
          "description": "List of people count events",
          "items": {
            "$ref": "#/components/schemas/PeopleCountEventType"
          },
          "nullable": true
        }
      }
    },
    "Report_GetOccupancyCountsWSRequest": {
      "type": "object",
      "description": "Request object for getting occupancy counts from a device.",
      "properties": {
        "deviceUuid": {
          "type": "string",
          "format": "DeviceFacetUuid",
          "description": "RUUID with optional appended facet information",
          "example": "AAAAAAAAAAAAAAAAAAAAAA.v0",
          "nullable": true
        },
        "endTimeMs": {
          "type": "integer",
          "format": "int64",
          "description": "The end timestamp (in Unix epoch milliseconds) of the selected interval",
          "example": 1640998800000,
          "nullable": true
        },
        "interval": {
          "type": "string",
          "description": "The interval defines the granularity at which the results will be reported",
          "enum": [
            "MINUTELY",
            "QUARTERHOURLY",
            "HOURLY",
            "DAILY",
            "WEEKLY",
            "MONTHLY"
          ],
          "nullable": true
        },
        "startTimeMs": {
          "type": "integer",
          "format": "int64",
          "description": "The start timestamp (in Unix epoch milliseconds) of the selected interval",
          "example": 1640995200000,
          "nullable": true
        }
      }
    },
    "Report_GetOccupancyCountsWSResponse": {
      "type": "object",
      "description": "Response object for getting occupancy counts from a device.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "timeSeriesDataPoints": {
          "type": "array",
          "description": "List of time series data points with occupancy counts",
          "items": {
            "$ref": "#/components/schemas/Report_TimeSeriesDataPointV2ExtendedType"
          },
          "nullable": true
        }
      }
    },
    "Report_GetProximityTagLocationsByDateWSRequest": {
      "type": "object",
      "description": "Request object for getting proximity tag locations by date.",
      "properties": {
        "endDateStr": {
          "type": "string",
          "deprecated": true,
          "description": "Deprecated input, use endTimeMs instead",
          "nullable": true
        },
        "endTimeMs": {
          "type": "integer",
          "format": "int64",
          "description": "End datetime provided as a UNIX timestamp in milliseconds",
          "minimum": 0,
          "nullable": true
        },
        "startDateStr": {
          "type": "string",
          "deprecated": true,
          "description": "Deprecated input, use startTimeMs instead",
          "nullable": true
        },
        "startTimeMs": {
          "type": "integer",
          "format": "int64",
          "description": "Start datetime provided as a UNIX timestamp in milliseconds",
          "minimum": 0,
          "nullable": true
        },
        "tagUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      },
      "required": [
        "tagUuid"
      ]
    },
    "Report_GetProximityTagLocationsByDateWSResponse": {
      "type": "object",
      "description": "Response object for getting proximity tag locations by date.",
      "properties": {
        "dataPoints": {
          "type": "array",
          "description": "List of proximity tag time series data points",
          "items": {
            "$ref": "#/components/schemas/ProximityTagTimeSeriesDataPointType"
          },
          "nullable": true
        },
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Report_GetRunningAverageWSRequest": {
      "type": "object",
      "description": "Request object for getting running average statistics.",
      "properties": {
        "endDate": {
          "type": "string",
          "deprecated": true,
          "description": "Deprecated input, use endTimeMs instead",
          "nullable": true
        },
        "endTimeMs": {
          "type": "integer",
          "format": "int64",
          "description": "End datetime provided as a UNIX timestamp in milliseconds",
          "minimum": 0,
          "nullable": true
        },
        "interval": {
          "type": "string",
          "description": "Supports HOURLY, DAILY, WEEKLY, and MONTHLY, returns averages for hours of the interval selected",
          "enum": [
            "MINUTELY",
            "QUARTERHOURLY",
            "HOURLY",
            "DAILY",
            "WEEKLY",
            "MONTHLY"
          ],
          "nullable": true
        },
        "scope": {
          "type": "string",
          "description": "Level of granularity to get statistics for",
          "enum": [
            "REGION",
            "DEVICE",
            "LOCATION",
            "ORG"
          ],
          "nullable": true
        },
        "startDate": {
          "type": "string",
          "deprecated": true,
          "description": "Deprecated input, use startTimeMs instead",
          "nullable": true
        },
        "startTimeMs": {
          "type": "integer",
          "format": "int64",
          "description": "Start datetime provided as a UNIX timestamp in milliseconds",
          "minimum": 0,
          "nullable": true
        },
        "uuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      },
      "required": [
        "interval",
        "scope"
      ]
    },
    "Report_GetRunningAverageWSResponse": {
      "type": "object",
      "description": "Response object for getting running average statistics.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "statsDataPoints": {
          "type": "array",
          "description": "List of weekly statistics data points",
          "items": {
            "$ref": "#/components/schemas/WeeklyStatisticsDataPoint"
          },
          "nullable": true
        }
      }
    },
    "Report_GetSummaryCountReportWSRequest": {
      "type": "object",
      "description": "Request object for getting summary count reports.",
      "properties": {
        "endDate": {
          "type": "string",
          "deprecated": true,
          "description": "Deprecated input, use endTimeMs instead",
          "nullable": true
        },
        "endTimeMs": {
          "type": "integer",
          "format": "int64",
          "description": "End datetime provided as a UNIX timestamp in milliseconds",
          "minimum": 0,
          "nullable": true
        },
        "interval": {
          "type": "string",
          "description": "Time interval to get data for",
          "enum": [
            "MINUTELY",
            "QUARTERHOURLY",
            "HOURLY",
            "DAILY",
            "WEEKLY",
            "MONTHLY"
          ],
          "nullable": true
        },
        "scope": {
          "type": "string",
          "description": "Level of granularity to get reports for",
          "enum": [
            "REGION",
            "DEVICE",
            "LOCATION",
            "ORG"
          ],
          "nullable": true
        },
        "startDate": {
          "type": "string",
          "deprecated": true,
          "description": "Deprecated input, use startTimeMs instead",
          "nullable": true
        },
        "startTimeMs": {
          "type": "integer",
          "format": "int64",
          "description": "Start datetime provided as a UNIX timestamp in milliseconds",
          "minimum": 0,
          "nullable": true
        },
        "type": {
          "type": "string",
          "description": "Type of report to receive",
          "enum": [
            "CROWD",
            "PEOPLE",
            "FACES",
            "MOTION",
            "BANDWIDTH",
            "VEHICLES",
            "LICENSEPLATES",
            "ALERTS",
            "AM_VERIFICATION",
            "DWELL"
          ],
          "nullable": true
        }
      },
      "required": [
        "interval",
        "scope",
        "type"
      ]
    },
    "Report_GetSummaryCountReportWSResponse": {
      "type": "object",
      "description": "Response object for getting summary count reports.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "timeSeriesDataPoints": {
          "type": "array",
          "description": "List of summary count time series data points",
          "items": {
            "$ref": "#/components/schemas/SummaryCountTimeSeriesDataPointType"
          },
          "nullable": true
        }
      }
    },
    "Report_GetThresholdCrossingCountReportWSRequest": {
      "type": "object",
      "description": "Request object for getting threshold crossing count reports.",
      "properties": {
        "bucketSize": {
          "type": "string",
          "description": "Size of the report buckets",
          "enum": [
            "QUARTER_HOUR",
            "HOUR",
            "DAY",
            "WEEK",
            "MONTH"
          ],
          "nullable": true
        },
        "crossingObject": {
          "type": "string",
          "description": "Type of crossing object to count",
          "enum": [
            "HUMAN",
            "VEHICLE",
            "FACE",
            "LPR",
            "POSE",
            "CLIP_EMBED",
            "UNKNOWN"
          ],
          "nullable": true
        },
        "dedupe": {
          "type": "boolean",
          "description": "Whether to deduplicate the results",
          "example": true,
          "nullable": true
        },
        "deviceUuid": {
          "type": "string",
          "format": "DeviceFacetUuid",
          "description": "RUUID with optional appended facet information",
          "example": "AAAAAAAAAAAAAAAAAAAAAA.v0",
          "nullable": true
        },
        "endTimeMs": {
          "type": "integer",
          "format": "int64",
          "description": "End time in milliseconds",
          "example": 1640998800000,
          "nullable": true
        },
        "startTimeMs": {
          "type": "integer",
          "format": "int64",
          "description": "Start time in milliseconds",
          "example": 1640995200000,
          "nullable": true
        }
      }
    },
    "Report_GetThresholdCrossingCountReportWSResponse": {
      "type": "object",
      "description": "Response object for getting threshold crossing count reports.",
      "properties": {
        "crossingCounts": {
          "type": "array",
          "description": "List of crossing counts",
          "items": {
            "$ref": "#/components/schemas/CrossingCountsType"
          },
          "nullable": true
        },
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Report_GetThresholdCrossingCountsWSRequest": {
      "type": "object",
      "description": "Request object for getting threshold crossing counts.",
      "properties": {
        "crossingObject": {
          "type": "string",
          "description": "Type of crossing object to count",
          "enum": [
            "HUMAN",
            "VEHICLE",
            "FACE",
            "LPR",
            "POSE",
            "CLIP_EMBED",
            "UNKNOWN"
          ],
          "nullable": true
        },
        "dailyResetTimeMinute": {
          "type": "integer",
          "format": "int32",
          "description": "Daily reset time in minutes",
          "example": 0,
          "nullable": true
        },
        "devices": {
          "type": "array",
          "description": "List of device UUIDs to get threshold crossing counts for",
          "items": {
            "type": "string",
            "format": "RUUID",
            "description": "base 64 (url-safe) uuid string",
            "example": "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable": true
          },
          "nullable": true
        },
        "endTimeMs": {
          "type": "integer",
          "format": "int64",
          "description": "End time in milliseconds",
          "example": 1640998800000,
          "nullable": true
        },
        "startTimeMs": {
          "type": "integer",
          "format": "int64",
          "description": "Start time in milliseconds",
          "example": 1640995200000,
          "nullable": true
        }
      }
    },
    "Report_GetThresholdCrossingCountsWSResponse": {
      "type": "object",
      "description": "Response object for getting threshold crossing counts.",
      "properties": {
        "counts": {
          "type": "array",
          "description": "List of threshold crossing counts",
          "items": {
            "$ref": "#/components/schemas/Report_GetThresholdCrossingCountsWSResponse_ThresholdCrossingCountType"
          },
          "nullable": true
        },
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Report_GetThresholdCrossingEventsForDeviceWSRequest": {
      "type": "object",
      "description": "Request object for getting threshold crossing events for a specific device.",
      "properties": {
        "crossingObject": {
          "type": "string",
          "description": "Type of crossing object for events returned, ie HUMAN/VEHICLE, defaults to all types if null",
          "enum": [
            "HUMAN",
            "VEHICLE",
            "FACE",
            "LPR",
            "POSE",
            "CLIP_EMBED",
            "UNKNOWN"
          ],
          "nullable": true
        },
        "deviceUuid": {
          "type": "string",
          "format": "DeviceFacetUuid",
          "description": "RUUID with optional appended facet information",
          "example": "AAAAAAAAAAAAAAAAAAAAAA.v0",
          "nullable": true
        },
        "endTimeMs": {
          "type": "integer",
          "format": "int64",
          "description": "End timestamp of query period in epoch MS",
          "example": 1640998800000,
          "nullable": true
        },
        "lastEvaluatedKey": {
          "type": "string",
          "description": "Should be null on first request and populated on subsequent requests if provided in the response to retrieve the next page",
          "nullable": true
        },
        "maxPageSize": {
          "type": "integer",
          "format": "int32",
          "description": "Max number of results to return. Response's lastEvaluatedKey will be null if no additional results are available",
          "example": 100,
          "nullable": true
        },
        "startTimeMs": {
          "type": "integer",
          "format": "int64",
          "description": "Start timestamp of query period in epoch MS",
          "example": 1640995200000,
          "nullable": true
        }
      }
    },
    "Report_GetThresholdCrossingEventsForDeviceWSResponse": {
      "type": "object",
      "description": "Response object for getting threshold crossing events for a specific device.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "lastEvaluatedKey": {
          "type": "string",
          "description": "If a max page size was specified and there are additional results that can be retrieved this will be non-null and should be supplied in the next request to retrieve the next page of results",
          "nullable": true
        },
        "thresholdCrossingEvents": {
          "type": "array",
          "description": "List of threshold crossing events for the device",
          "items": {
            "$ref": "#/components/schemas/MinimalThresholdEventType"
          },
          "nullable": true
        }
      }
    },
    "Report_GetThresholdCrossingEventsWSRequest": {
      "type": "object",
      "description": "Request object for getting threshold crossing events.",
      "properties": {
        "crossingObject": {
          "type": "string",
          "description": "Type of crossing object to get events for",
          "enum": [
            "HUMAN",
            "VEHICLE",
            "FACE",
            "LPR",
            "POSE",
            "CLIP_EMBED",
            "UNKNOWN"
          ],
          "nullable": true
        },
        "devices": {
          "type": "array",
          "description": "List of device UUIDs to get threshold crossing events for",
          "items": {
            "type": "string",
            "format": "RUUID",
            "description": "base 64 (url-safe) uuid string",
            "example": "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable": true
          },
          "nullable": true
        },
        "endTimeMs": {
          "type": "integer",
          "format": "int64",
          "description": "End time in milliseconds",
          "example": 1640998800000,
          "nullable": true
        },
        "startTimeMs": {
          "type": "integer",
          "format": "int64",
          "description": "Start time in milliseconds",
          "example": 1640995200000,
          "nullable": true
        }
      }
    },
    "Report_GetThresholdCrossingEventsWSResponse": {
      "type": "object",
      "description": "Response object for getting threshold crossing events.",
      "properties": {
        "deviceToThresholdCrossingEventMap": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "description": "Map of device UUIDs to their threshold crossing events",
            "items": {
              "$ref": "#/components/schemas/MinimalThresholdEventType"
            },
            "nullable": true
          },
          "description": "Map of device UUIDs to their threshold crossing events",
          "nullable": true
        },
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Report_ResetRunningAverageWSRequest": {
      "type": "object",
      "description": "Request object for resetting running average.",
      "properties": {
        "scope": {
          "type": "string",
          "description": "Scope of the report to reset",
          "enum": [
            "REGION",
            "DEVICE",
            "LOCATION",
            "ORG"
          ],
          "nullable": true
        },
        "uuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Report_ResetRunningAverageWSResponse": {
      "type": "object",
      "description": "Response object for resetting running average.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    }
  },
  "schemaCount": 46
}
