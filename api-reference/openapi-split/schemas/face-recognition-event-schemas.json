{
  "tag": "Face Recognition Event Webservice",
  "schemas": {
    "Facerecognition_faceevent_DeleteFaceEventWSRequest": {
      "type": "object",
      "description": "Request object for deleting a face event.",
      "properties": {
        "eventUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Facerecognition_faceevent_DeleteFaceEventWSResponse": {
      "type": "object",
      "description": "Response object for deleting a face event."
    },
    "Facerecognition_faceevent_FindFaceEventsByOrgWSRequest": {
      "type": "object",
      "description": "Request object for finding face events by organization with search filtering and pagination.",
      "properties": {
        "pageRequest": {
          "$ref": "#/components/schemas/DynamoPageRequest"
        },
        "searchFilter": {
          "$ref": "#/components/schemas/Facerecognition_faceevent_ExternalFaceEventSearchFilter"
        }
      }
    },
    "Facerecognition_faceevent_FindFaceEventsByOrgWSResponse": {
      "type": "object",
      "description": "Response object containing face events for an organization with pagination information.",
      "properties": {
        "faceEvents": {
          "type": "array",
          "description": "List of face events matching the search criteria",
          "items": {
            "$ref": "#/components/schemas/Facerecognition_faceevent_ExternalFaceEvent"
          },
          "nullable": true
        },
        "lastEvaluatedKey": {
          "type": "string",
          "description": "Pagination key for retrieving the next page of results",
          "example": "next_page_key_123",
          "nullable": true
        }
      }
    },
    "Facerecognition_faceevent_GetFaceEventWSRequest": {
      "type": "object",
      "description": "Request object for retrieving a specific face event by UUID.",
      "properties": {
        "eventUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Facerecognition_faceevent_GetFaceEventWSResponse": {
      "type": "object",
      "description": "Response object containing a specific face event.",
      "properties": {
        "faceEvent": {
          "$ref": "#/components/schemas/Facerecognition_faceevent_ExternalFaceEvent"
        }
      }
    },
    "Facerecognition_faceevent_UpdateFaceEventWSRequest": {
      "type": "object",
      "description": "Request object for updating a face event with person association information.",
      "properties": {
        "eventUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        },
        "personName": {
          "type": "string",
          "description": "Name of the person associated with the face event. Ignored if person UUID matches to one of the top person matches.",
          "nullable": true
        },
        "personUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Facerecognition_faceevent_UpdateFaceEventWSResponse": {
      "type": "object",
      "description": "Response object for updating a face event.",
      "properties": {
        "faceEvent": {
          "$ref": "#/components/schemas/Facerecognition_faceevent_ExternalFaceEvent"
        }
      }
    }
  },
  "schemaCount": 8
}
