{
  "tag": "Location Webservice",
  "schemas": {
    "Location_AddLocationLabelWSRequest": {
      "type": "object",
      "description": "Request object for adding a label to a location.",
      "properties": {
        "label": {
          "type": "string",
          "description": "Label to add to the location",
          "nullable": true
        },
        "locationIdentifier": {
          "type": "string",
          "description": "Location identifier (name or ID)",
          "nullable": true
        }
      }
    },
    "Location_AddLocationLabelWSResponse": {
      "type": "object",
      "description": "Response object for adding a label to a location.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Location_CreateLocationWSRequest": {
      "type": "object",
      "description": "Request object for creating a location.",
      "properties": {
        "location": {
          "$ref": "#/components/schemas/LocationType"
        },
        "parentLocationUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Location_CreateLocationWSResponse": {
      "type": "object",
      "description": "Response object for creating a location.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "uuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Location_DeleteLocationWSRequest": {
      "type": "object",
      "description": "Request object for removing a location.",
      "properties": {
        "uuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Location_DeleteLocationWSResponse": {
      "type": "object",
      "description": "Response object for removing a location.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Location_GeoCodeWSRequest": {
      "type": "object",
      "description": "Request object for getting the latitude and longitude of an address.",
      "properties": {
        "address": {
          "type": "string",
          "description": "Address to geocode",
          "example": "1600 Pennsylvania Avenue NW, Washington, DC",
          "nullable": true
        }
      }
    },
    "Location_GeoCodeWSResponse": {
      "type": "object",
      "description": "Response object containing the latitude and longitude of an address.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "latitude": {
          "type": "number",
          "format": "double",
          "description": "Latitude coordinate of the address",
          "example": 38.8977,
          "nullable": true
        },
        "longitude": {
          "type": "number",
          "format": "double",
          "description": "Longitude coordinate of the address",
          "example": -77.0365,
          "nullable": true
        }
      }
    },
    "Location_GetLocationLabelsForOrgWSRequest": {
      "type": "object",
      "description": "Request object for getting all location labels for an organization."
    },
    "Location_GetLocationLabelsForOrgWSResponse": {
      "type": "object",
      "description": "Response object containing all location labels for an organization.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "locationLabels": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "description": "Map of location name or location id to label set",
            "items": {
              "type": "string",
              "description": "Map of location name or location id to label set",
              "nullable": true
            },
            "nullable": true,
            "uniqueItems": true
          },
          "description": "Map of location name or location id to label set",
          "nullable": true
        }
      }
    },
    "Location_GetLocationWSRequest": {
      "type": "object",
      "description": "Request object for getting location by ID.",
      "properties": {
        "locationUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        },
        "subLocationsRequired": {
          "type": "boolean",
          "description": "Whether sub-locations are required in the response",
          "example": false,
          "nullable": true
        }
      },
      "required": [
        "locationUuid"
      ]
    },
    "Location_GetLocationWSResponse": {
      "type": "object",
      "description": "Response object containing location information.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "location": {
          "$ref": "#/components/schemas/LocationType"
        }
      }
    },
    "Location_GetLocationsByGeoRequest": {
      "type": "object",
      "description": "Request object for getting list of locations given latitude and longitude.",
      "properties": {
        "latitude": {
          "type": "number",
          "format": "double",
          "description": "Latitude coordinate",
          "example": 37.7749,
          "nullable": true
        },
        "longitude": {
          "type": "number",
          "format": "double",
          "description": "Longitude coordinate",
          "example": -122.4194,
          "nullable": true
        }
      }
    },
    "Location_GetLocationsByGeoResponse": {
      "type": "object",
      "description": "Response object containing list of locations given latitude and longitude.",
      "properties": {
        "locations": {
          "type": "array",
          "description": "Collection of locations found at the specified coordinates",
          "items": {
            "$ref": "#/components/schemas/LocationType"
          },
          "nullable": true
        }
      }
    },
    "Location_GetLocationsBySubLocationsHierarchyKeyWSRequest": {
      "type": "object",
      "description": "Request object for getting nested locations by subLocationHierarchyKey.",
      "properties": {
        "subLocationsHierarchyKey": {
          "$ref": "#/components/schemas/SubLocationsHierarchyKey"
        }
      }
    },
    "Location_GetLocationsBySubLocationsHierarchyKeyWSResponse": {
      "type": "object",
      "description": "Response object containing nested locations by subLocationHierarchyKey.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "location": {
          "$ref": "#/components/schemas/LocationType"
        }
      }
    },
    "Location_GetLocationsWSRequest": {
      "type": "object",
      "description": "Request object for getting list of locations in organization.",
      "properties": {
        "subLocationsIncluded": {
          "type": "boolean",
          "description": "Whether to include sub-locations in the response",
          "example": false,
          "nullable": true
        }
      }
    },
    "Location_GetLocationsWSResponse": {
      "type": "object",
      "description": "Response object containing list of locations in organization.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "locations": {
          "type": "array",
          "description": "List of locations in the organization",
          "items": {
            "$ref": "#/components/schemas/LocationType"
          },
          "nullable": true
        }
      }
    },
    "Location_RemoveLocationLabelWSRequest": {
      "type": "object",
      "description": "Request object for removing a label from a location.",
      "properties": {
        "label": {
          "type": "string",
          "description": "Label to remove from the location",
          "nullable": true
        },
        "locationIdentifier": {
          "type": "string",
          "description": "Location identifier (name or ID)",
          "nullable": true
        }
      }
    },
    "Location_RemoveLocationLabelWSResponse": {
      "type": "object",
      "description": "Response object for removing a label from a location.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Location_SelectiveUpdateLocationWSRequest": {
      "type": "object",
      "description": "Request object for selectively updating a location.",
      "properties": {
        "address1": {
          "type": "string",
          "description": "First line of the address",
          "nullable": true
        },
        "address2": {
          "type": "string",
          "description": "Second line of the address",
          "nullable": true
        },
        "countryCode": {
          "type": "string",
          "description": "Country code of the location",
          "nullable": true
        },
        "floorPlans": {
          "type": "array",
          "description": "Floor plans for the location",
          "items": {
            "$ref": "#/components/schemas/FloorPlanType"
          },
          "nullable": true
        },
        "labels": {
          "type": "array",
          "description": "Labels offer a way to perform operations across multiple locations if they have the same label",
          "items": {
            "type": "string",
            "description": "Labels offer a way to perform operations across multiple locations if they have the same label",
            "nullable": true
          },
          "nullable": true
        },
        "latitude": {
          "type": "number",
          "format": "double",
          "description": "Latitude coordinate of the location",
          "nullable": true
        },
        "locationUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        },
        "longitude": {
          "type": "number",
          "format": "double",
          "description": "Longitude coordinate of the location",
          "nullable": true
        },
        "name": {
          "type": "string",
          "description": "Name of this location",
          "nullable": true
        },
        "policyUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        },
        "postalCode": {
          "type": "string",
          "description": "Postal code of the location",
          "nullable": true
        },
        "timezoneId": {
          "type": "string",
          "description": "Timezone identifier, e.g. America/Los_Angeles, EST, GMT+0, etc.",
          "nullable": true
        },
        "tz": {
          "type": "object",
          "description": "Use timezoneId field instead",
          "nullable": true,
          "properties": {
            "displayName": {
              "type": "string",
              "nullable": true
            },
            "dstsavings": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "id": {
              "type": "string",
              "nullable": true
            },
            "rawOffset": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        }
      },
      "required": [
        "locationUuid"
      ]
    },
    "Location_SelectiveUpdateLocationWSResponse": {
      "type": "object",
      "description": "Response object for selectively updating a location.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Location_UpdateLocationWSRequest": {
      "type": "object",
      "description": "Request object for updating a location. NOTE: This will replace old settings meaning if you leave a field blank it will be overrode to blank. For selective field updates use the endpoint /selectiveUpdateLocation.",
      "properties": {
        "location": {
          "$ref": "#/components/schemas/LocationType"
        }
      }
    },
    "Location_UpdateLocationWSResponse": {
      "type": "object",
      "description": "Response object for updating a location.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    }
  },
  "schemaCount": 24
}
