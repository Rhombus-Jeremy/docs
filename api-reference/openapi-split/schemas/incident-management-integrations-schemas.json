{
  "tag": "Incident Management Integrations Webservice",
  "schemas": {
    "BaseApiResponse": {
      "type": "object",
      "description": "Base response object denoting success, or failure with a reason, for an endpoint.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Integration_BaseIntegrationWSRequest": {
      "type": "object",
      "description": "Base request object for integration operations."
    },
    "Integration_GetInformacastScenariosWSResponse": {
      "type": "object",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "scenarios": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/InformacastScenario"
          },
          "nullable": true
        }
      }
    },
    "Integration_GetMicrosoftUsersJoinedTeamsWSResponse": {
      "type": "object",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "teamsMap": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "nullable": true
          },
          "nullable": true
        }
      }
    },
    "Integration_GetOpenAIModelsWSRequest": {
      "type": "object",
      "description": "Request object for retrieving OpenAI models.",
      "properties": {
        "openAISettings": {
          "$ref": "#/components/schemas/IOpenAIType"
        }
      }
    },
    "Integration_GetOpenAIModelsWSResponse": {
      "type": "object",
      "description": "Response object containing available OpenAI models.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "models": {
          "type": "array",
          "description": "List of available OpenAI models",
          "items": {
            "$ref": "#/components/schemas/OpenAIModel"
          },
          "nullable": true
        }
      }
    },
    "Integration_GetOrgIntegrationsV2WSResponse": {
      "type": "object",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "orgIntegrationV2": {
          "$ref": "#/components/schemas/IBaseIntegrationType"
        }
      }
    },
    "Integration_UpdateDiceIntegrationWSRequest": {
      "type": "object",
      "description": "Request object for updating Dice access control integration settings.",
      "properties": {
        "diceSettings": {
          "$ref": "#/components/schemas/IDiceType"
        }
      }
    },
    "Integration_UpdateEmailIntegrationWSRequest": {
      "type": "object",
      "description": "Request object for updating email notification integration settings.",
      "properties": {
        "emailSettings": {
          "$ref": "#/components/schemas/EmailSettings"
        }
      }
    },
    "Integration_UpdateInformacastIntegrationRequest": {
      "type": "object",
      "properties": {
        "informacastSettings": {
          "$ref": "#/components/schemas/IInformacastType"
        }
      }
    },
    "Integration_UpdateLumeoIntegrationWSRequest": {
      "type": "object",
      "properties": {
        "lumeoSettings": {
          "$ref": "#/components/schemas/ILumeoType"
        }
      }
    },
    "Integration_UpdateMattermostIntegrationWSRequest": {
      "type": "object",
      "description": "Request object for updating Mattermost team communication integration settings.",
      "properties": {
        "mattermostSettings": {
          "$ref": "#/components/schemas/MattermostSettings"
        }
      }
    },
    "Integration_UpdateMicrosoftTeamsBotForTeamWSRequest": {
      "type": "object",
      "properties": {
        "teamId": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Integration_UpdateMicrosoftTeamsIntegrationV2WSRequest": {
      "type": "object",
      "properties": {
        "microsoftTeamsSettings": {
          "$ref": "#/components/schemas/IMicrosoftTeamsType"
        },
        "teamsToUpdate": {
          "type": "array",
          "items": {
            "type": "string",
            "nullable": true
          },
          "nullable": true
        }
      }
    },
    "Integration_UpdateOpenAIIntegrationRequest": {
      "type": "object",
      "properties": {
        "openAISettings": {
          "$ref": "#/components/schemas/IOpenAIType"
        }
      }
    },
    "Integration_UpdateOrgIntegrationsWSResponse": {
      "type": "object",
      "description": "Response object for updating organization integrations.",
      "properties": {
        "authError": {
          "type": "boolean",
          "description": "Whether an authentication error occurred during update",
          "example": false,
          "nullable": true
        },
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "failedGuids": {
          "type": "array",
          "description": "List of GUIDs that failed to update",
          "items": {
            "type": "string",
            "description": "List of GUIDs that failed to update",
            "nullable": true
          },
          "nullable": true
        },
        "misconfiguredDoors": {
          "type": "array",
          "description": "List of door names that are assigned to multiple Rhombus locations",
          "items": {
            "type": "string",
            "description": "List of door names that are assigned to multiple Rhombus locations",
            "nullable": true
          },
          "nullable": true
        }
      }
    },
    "Integration_UpdatePagerDutyIntegrationWSRequest": {
      "type": "object",
      "description": "Request object for updating PagerDuty incident management integration settings.",
      "properties": {
        "pagerDutySettings": {
          "$ref": "#/components/schemas/PagerDutySettings"
        }
      }
    },
    "Integration_UpdateServiceNowIntegrationWSRequest": {
      "type": "object",
      "description": "Request object for updating ServiceNow IT service management integration settings.",
      "properties": {
        "serviceNowSettings": {
          "$ref": "#/components/schemas/ServiceNowSettings"
        }
      }
    },
    "Integration_UpdateSlackIntegrationV2WSRequest": {
      "type": "object",
      "description": "Request object for updating Slack integration V2 settings with enhanced user management.",
      "properties": {
        "adminRequest": {
          "type": "boolean",
          "description": "Whether this is an admin request",
          "example": true,
          "nullable": true
        },
        "requestUrl": {
          "type": "string",
          "description": "Request URL for Slack OAuth",
          "example": "https://slack.com/oauth/v2/authorize?client_id=123&scope=...",
          "nullable": true
        },
        "revokeUserAccessToken": {
          "type": "boolean",
          "description": "Whether to revoke user access token",
          "example": false,
          "nullable": true
        },
        "rhombusOrgUserUuid": {
          "type": "string",
          "description": "Rhombus organization user UUID",
          "example": "user-uuid-12345",
          "nullable": true
        },
        "slackSettingsV2": {
          "$ref": "#/components/schemas/SlackSettingsV2"
        },
        "userAssociate": {
          "type": "boolean",
          "description": "Whether to associate user",
          "example": true,
          "nullable": true
        },
        "userRequest": {
          "type": "boolean",
          "description": "Whether this is a user request",
          "example": false,
          "nullable": true
        }
      },
      "required": [
        "requestUrl"
      ]
    },
    "Integration_UpdateSlackIntegrationWSRequest": {
      "type": "object",
      "description": "Request object for updating Slack integration settings.",
      "properties": {
        "slackSettings": {
          "$ref": "#/components/schemas/SlackSettings"
        }
      }
    }
  },
  "schemaCount": 20
}
