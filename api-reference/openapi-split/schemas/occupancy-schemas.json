{
  "tag": "Occupancy Webservice",
  "schemas": {
    "Occupancysensor_GetMinimalOccupancySensorStatesWSRequest": {
      "type": "object",
      "description": "Request object for getting minimal occupancy sensor states for all sensors in organization."
    },
    "Occupancysensor_GetMinimalOccupancySensorStatesWSResponse": {
      "type": "object",
      "description": "Response object containing minimal occupancy sensor states for all sensors in organization.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "occupancySensorStates": {
          "type": "array",
          "description": "List of minimal occupancy sensor states",
          "items": {
            "$ref": "#/components/schemas/Occupancysensor_MinimalOccupancySensorStateType"
          },
          "nullable": true
        }
      }
    },
    "Occupancysensor_GetOccupancyEventsForSensorWSRequest": {
      "type": "object",
      "description": "Request object for getting occupancy events for a specific sensor.",
      "properties": {
        "createdAfterMs": {
          "type": "integer",
          "format": "int64",
          "description": "Filter events created after this timestamp (milliseconds since epoch)",
          "example": 1640908800000,
          "nullable": true
        },
        "createdBeforeMs": {
          "type": "integer",
          "format": "int64",
          "description": "Filter events created before this timestamp (milliseconds since epoch)",
          "example": 1640995200000,
          "nullable": true
        },
        "limit": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum number of events to return",
          "example": 100,
          "nullable": true
        },
        "sensorUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Occupancysensor_GetOccupancyEventsForSensorWSResponse": {
      "type": "object",
      "description": "Response object containing occupancy events for a specific sensor.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "events": {
          "type": "array",
          "description": "List of occupancy events for the sensor",
          "items": {
            "$ref": "#/components/schemas/OccupancyEventType"
          },
          "nullable": true
        }
      }
    },
    "Occupancysensor_UpdateOccupancySensorDetailsWSRequest": {
      "type": "object",
      "description": "Request object for updating occupancy sensor details with selective update flags.",
      "properties": {
        "associatedCameras": {
          "type": "array",
          "description": "List of associated camera device facet UUIDs",
          "items": {
            "type": "string",
            "format": "DeviceFacetUuid",
            "description": "RUUID with optional appended facet information",
            "example": "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable": true
          },
          "nullable": true
        },
        "associatedCamerasUpdated": {
          "type": "boolean",
          "description": "Whether the associated cameras should be updated",
          "example": false,
          "nullable": true
        },
        "deleted": {
          "type": "boolean",
          "description": "Whether the sensor is marked as deleted",
          "example": false,
          "nullable": true
        },
        "deletedUpdated": {
          "type": "boolean",
          "description": "Whether the deleted status should be updated",
          "example": false,
          "nullable": true
        },
        "description": {
          "type": "string",
          "description": "Description of the occupancy sensor",
          "example": "Motion sensor for conference room A",
          "nullable": true
        },
        "descriptionUpdated": {
          "type": "boolean",
          "description": "Whether the description should be updated",
          "example": false,
          "nullable": true
        },
        "floorNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Floor number where the sensor is located",
          "example": 2,
          "nullable": true
        },
        "floorNumberUpdated": {
          "type": "boolean",
          "description": "Whether the floor number should be updated",
          "example": false,
          "nullable": true
        },
        "latitude": {
          "type": "number",
          "format": "double",
          "description": "Latitude coordinate of the sensor location",
          "example": 37.7749,
          "nullable": true
        },
        "latitudeUpdated": {
          "type": "boolean",
          "description": "Whether the latitude should be updated",
          "example": false,
          "nullable": true
        },
        "locationUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        },
        "locationUuidUpdated": {
          "type": "boolean",
          "description": "Whether the location UUID should be updated",
          "example": false,
          "nullable": true
        },
        "longitude": {
          "type": "number",
          "format": "double",
          "description": "Longitude coordinate of the sensor location",
          "example": -122.4194,
          "nullable": true
        },
        "longitudeUpdated": {
          "type": "boolean",
          "description": "Whether the longitude should be updated",
          "example": false,
          "nullable": true
        },
        "name": {
          "type": "string",
          "description": "Name of the occupancy sensor",
          "example": "Conference Room Sensor",
          "nullable": true
        },
        "nameUpdated": {
          "type": "boolean",
          "description": "Whether the name should be updated",
          "example": false,
          "nullable": true
        },
        "policyUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        },
        "policyUuidUpdated": {
          "type": "boolean",
          "description": "Whether the policy UUID should be updated",
          "example": false,
          "nullable": true
        },
        "subLocationsHierarchyKey": {
          "$ref": "#/components/schemas/SubLocationsHierarchyKey"
        },
        "subLocationsHierarchyKeyUpdated": {
          "type": "boolean",
          "description": "Whether the sub-locations hierarchy key should be updated",
          "example": false,
          "nullable": true
        },
        "uuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Occupancysensor_UpdateOccupancySensorDetailsWSResponse": {
      "type": "object",
      "description": "Response object for updating occupancy sensor details.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Sensor_GetSensorPresenceWindowsWSRequest": {
      "type": "object",
      "description": "Request object for retrieving stored video information for a sensor.",
      "properties": {
        "deviceUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        },
        "durationSec": {
          "type": "integer",
          "format": "int64",
          "description": "Duration in seconds for the presence window query",
          "example": 3600,
          "nullable": true
        },
        "startTimeSec": {
          "type": "integer",
          "format": "int64",
          "description": "Start time in seconds for the presence window query",
          "example": 1640995200,
          "nullable": true
        }
      }
    },
    "Sensor_GetSensorPresenceWindowsWSResponse": {
      "type": "object",
      "description": "Response object containing stored video information for a sensor.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "presenceWindows": {
          "type": "array",
          "description": "List of presence windows for the sensor",
          "items": {
            "$ref": "#/components/schemas/TimeWindowSeconds"
          },
          "nullable": true
        }
      }
    }
  },
  "schemaCount": 8
}
