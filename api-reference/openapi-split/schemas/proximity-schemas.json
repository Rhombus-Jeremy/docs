{
  "tag": "Proximity Webservice",
  "schemas": {
    "Proximity_GetLocomotionEventsForTagWSRequest": {
      "type": "object",
      "description": "Request object for getting locomotion events for a specified proximity tag with filtering options.",
      "properties": {
        "createdAfterMs": {
          "type": "integer",
          "format": "int64",
          "description": "Filter events created after this timestamp in milliseconds",
          "example": 1640995200000,
          "nullable": true
        },
        "createdBeforeMs": {
          "type": "integer",
          "format": "int64",
          "description": "Filter events created before this timestamp in milliseconds",
          "example": 1640995200000,
          "nullable": true
        },
        "limit": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum number of events to return",
          "example": 100,
          "nullable": true
        },
        "movementFilter": {
          "type": "string",
          "description": "Filter events by locomotion movement type",
          "enum": [
            "ARRIVAL",
            "DEPARTURE",
            "MOVED_SIGNIFICANTLY",
            "UNKNOWN"
          ],
          "nullable": true
        },
        "tagUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Proximity_GetLocomotionEventsForTagWSResponse": {
      "type": "object",
      "description": "Response object containing locomotion events for a specified proximity tag.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "locomotionEvents": {
          "type": "array",
          "description": "List of locomotion events for the specified tag",
          "items": {
            "$ref": "#/components/schemas/ProximityTagLocomotionEventType"
          },
          "nullable": true
        }
      }
    },
    "Proximity_GetMinimalProximityStatesWSRequest": {
      "type": "object",
      "description": "Request object for getting basic state information about all proximity tags in the organization."
    },
    "Proximity_GetMinimalProximityStatesWSResponse": {
      "type": "object",
      "description": "Response object containing basic state information about all proximity tags in the organization.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "proximityStates": {
          "type": "array",
          "description": "List of minimal proximity state information for all tags in the organization",
          "items": {
            "$ref": "#/components/schemas/Proximity_MinimalProximityStateType"
          },
          "nullable": true
        }
      }
    },
    "Proximity_GetProximityEventsForTagWSRequest": {
      "type": "object",
      "description": "Request object for getting recent events for a specified proximity tag with filtering options.",
      "properties": {
        "createdAfterMs": {
          "type": "integer",
          "format": "int64",
          "description": "Filter events created after this timestamp in milliseconds",
          "example": 1640995200000,
          "nullable": true
        },
        "createdBeforeMs": {
          "type": "integer",
          "format": "int64",
          "description": "Filter events created before this timestamp in milliseconds",
          "example": 1640995200000,
          "nullable": true
        },
        "limit": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum number of events to return",
          "example": 100,
          "nullable": true
        },
        "statusFilter": {
          "type": "string",
          "description": "Filter events by proximity status",
          "enum": [
            "ACTIVE",
            "STATIONARY",
            "OFFLINE"
          ],
          "nullable": true
        },
        "tagUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Proximity_GetProximityEventsForTagWSResponse": {
      "type": "object",
      "description": "Response object containing recent events for a specified proximity tag.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "proximityEvents": {
          "type": "array",
          "description": "List of proximity events for the specified tag",
          "items": {
            "$ref": "#/components/schemas/ProximityEventType"
          },
          "nullable": true
        }
      }
    },
    "Proximity_UpdateProximitySensorDetailsWSRequest": {
      "type": "object",
      "description": "Request object for updating details for a proximity tag.",
      "properties": {
        "deletedUpdated": {
          "type": "boolean",
          "description": "Whether the deleted status has been updated",
          "example": false,
          "nullable": true
        },
        "description": {
          "type": "string",
          "description": "Description of the proximity tag",
          "example": "John Doe's employee badge",
          "nullable": true
        },
        "descriptionUpdated": {
          "type": "boolean",
          "description": "Whether the description has been updated",
          "example": true,
          "nullable": true
        },
        "imageUrl": {
          "type": "string",
          "description": "URL of the image for the proximity tag",
          "example": "https://example.com/badge-image.jpg",
          "nullable": true
        },
        "imageUrlUpdated": {
          "type": "boolean",
          "description": "Whether the image URL has been updated",
          "example": false,
          "nullable": true
        },
        "name": {
          "type": "string",
          "description": "Name of the proximity tag",
          "example": "Employee Badge 001",
          "nullable": true
        },
        "nameUpdated": {
          "type": "boolean",
          "description": "Whether the name has been updated",
          "example": true,
          "nullable": true
        },
        "policyUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        },
        "policyUuidUpdated": {
          "type": "boolean",
          "description": "Whether the policy UUID has been updated",
          "example": true,
          "nullable": true
        },
        "uuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Proximity_UpdateProximitySensorDetailsWSResponse": {
      "type": "object",
      "description": "Response object for updating details for a proximity tag.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    }
  },
  "schemaCount": 8
}
