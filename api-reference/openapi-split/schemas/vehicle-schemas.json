{
  "tag": "Vehicle Webservice",
  "schemas": {
    "Vehicle_AddVehicleLabelWSRequest": {
      "type": "object",
      "description": "Request object for adding a label to a vehicle.",
      "properties": {
        "label": {
          "type": "string",
          "description": "Label to add to the vehicle",
          "example": "Company Car",
          "nullable": true
        },
        "vehicleLicensePlate": {
          "type": "string",
          "description": "License plate number of the vehicle to add label to",
          "example": "ABC123",
          "nullable": true
        }
      }
    },
    "Vehicle_AddVehicleLabelWSResponse": {
      "type": "object",
      "description": "Response object for adding a label to a vehicle.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Vehicle_AssociateEventsToVehicleWSRequest": {
      "type": "object",
      "description": "Request object for associating vehicle events to a saved vehicle.",
      "properties": {
        "eventUuids": {
          "type": "array",
          "description": "List of event UUIDs to associate with the vehicle",
          "items": {
            "type": "string",
            "format": "RUUID",
            "description": "base 64 (url-safe) uuid string",
            "example": "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable": true
          },
          "nullable": true
        },
        "vehicleLicensePlate": {
          "type": "string",
          "description": "License plate number of the vehicle to associate events with",
          "example": "ABC123",
          "nullable": true
        }
      }
    },
    "Vehicle_AssociateEventsToVehicleWSResponse": {
      "type": "object",
      "description": "Response object for associating events to a vehicle.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Vehicle_DeleteVehicleWSRequest": {
      "type": "object",
      "description": "Request object for deleting a vehicle.",
      "properties": {
        "vehicleLicensePlate": {
          "type": "string",
          "description": "License plate number of the vehicle to delete",
          "example": "ABC123",
          "nullable": true
        }
      }
    },
    "Vehicle_DeleteVehicleWSResponse": {
      "type": "object",
      "description": "Response object for deleting a vehicle.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Vehicle_GetRecentVehicleEventsByLocationWSRequest": {
      "type": "object",
      "description": "Request object for getting recent vehicle events by location (deprecated).",
      "properties": {
        "endTimeMs": {
          "type": "integer",
          "format": "int64",
          "description": "End time in milliseconds for the query period",
          "example": 1640998800000,
          "nullable": true
        },
        "locationUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        },
        "startTimeMs": {
          "type": "integer",
          "format": "int64",
          "description": "Start time in milliseconds for the query period",
          "example": 1640995200000,
          "nullable": true
        }
      }
    },
    "Vehicle_GetRecentVehicleEventsByLocationWSResponse": {
      "type": "object",
      "description": "Response object containing recent vehicle events by location (deprecated).",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "events": {
          "type": "array",
          "description": "List of recent vehicle events for the location",
          "items": {
            "$ref": "#/components/schemas/VehicleEventIndexType"
          },
          "nullable": true
        }
      }
    },
    "Vehicle_GetRecentVehicleEventsForVehicleWSRequest": {
      "type": "object",
      "description": "Request object for getting recent vehicle events for a specific vehicle (deprecated).",
      "properties": {
        "endTimeMs": {
          "type": "integer",
          "format": "int64",
          "description": "End time in milliseconds for the query period",
          "example": 1640998800000,
          "nullable": true
        },
        "licensePlate": {
          "type": "string",
          "description": "License plate number of the vehicle to get events for",
          "example": "ABC123",
          "nullable": true
        },
        "startTimeMs": {
          "type": "integer",
          "format": "int64",
          "description": "Start time in milliseconds for the query period",
          "example": 1640995200000,
          "nullable": true
        }
      }
    },
    "Vehicle_GetRecentVehicleEventsForVehicleWSResponse": {
      "type": "object",
      "description": "Response object containing recent vehicle events for a specific vehicle (deprecated).",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "events": {
          "type": "array",
          "description": "List of recent vehicle events for the specific vehicle",
          "items": {
            "$ref": "#/components/schemas/VehicleEventIndexType"
          },
          "nullable": true
        }
      }
    },
    "Vehicle_GetRecentVehicleEventsWSRequest": {
      "type": "object",
      "description": "Request object for getting recent vehicle events (deprecated).",
      "properties": {
        "deviceUuids": {
          "type": "array",
          "description": "List of device UUIDs to filter events by",
          "items": {
            "type": "string",
            "format": "DeviceFacetUuid",
            "description": "RUUID with optional appended facet information",
            "example": "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable": true
          },
          "nullable": true
        },
        "endTimeMs": {
          "type": "integer",
          "format": "int64",
          "description": "End time in milliseconds for the query period",
          "example": 1640998800000,
          "nullable": true
        },
        "startTimeMs": {
          "type": "integer",
          "format": "int64",
          "description": "Start time in milliseconds for the query period",
          "example": 1640995200000,
          "nullable": true
        }
      }
    },
    "Vehicle_GetRecentVehicleEventsWSResponse": {
      "type": "object",
      "description": "Response object containing recent vehicle events (deprecated).",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "events": {
          "type": "array",
          "description": "List of recent vehicle events",
          "items": {
            "$ref": "#/components/schemas/VehicleEventIndexType"
          },
          "nullable": true
        }
      }
    },
    "Vehicle_GetVehicleEventsWSRequest": {
      "type": "object",
      "description": "Request object for getting vehicle events with filters and additive queries.",
      "properties": {
        "deviceUuidFilter": {
          "type": "array",
          "description": "Filter events by specific reporting device uuids",
          "items": {
            "type": "string",
            "format": "DeviceFacetUuid",
            "description": "RUUID with optional appended facet information",
            "example": "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable": true
          },
          "nullable": true
        },
        "endTimeMs": {
          "type": "integer",
          "format": "int64",
          "description": "Time window filter end (newest) time in Epoch milliseconds",
          "nullable": true
        },
        "licensePlateExactQuery": {
          "type": "array",
          "description": "Query events by exact license plate number. Query fields are additive queries (returned events satisfy at least one of the query fields)",
          "items": {
            "type": "string",
            "description": "Query events by exact license plate number. Query fields are additive queries (returned events satisfy at least one of the query fields)",
            "nullable": true
          },
          "nullable": true
        },
        "licensePlateFuzzyQuery": {
          "type": "string",
          "description": "Query events by partial or complete license plate with fuzzy character matching. Query fields are additive queries (returned events satisfy at least one of the query fields)",
          "nullable": true
        },
        "locationUuidFilter": {
          "type": "array",
          "description": "Filter events by specific reporting location uuids",
          "items": {
            "type": "string",
            "format": "RUUID",
            "description": "base 64 (url-safe) uuid string",
            "example": "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable": true
          },
          "nullable": true
        },
        "nameQuery": {
          "type": "array",
          "description": "Query events by vehicle name. Query fields are additive queries (returned events satisfy at least one of the query fields)",
          "items": {
            "type": "string",
            "description": "Query events by vehicle name. Query fields are additive queries (returned events satisfy at least one of the query fields)",
            "nullable": true
          },
          "nullable": true
        },
        "startTimeMs": {
          "type": "integer",
          "format": "int64",
          "description": "Time window filter start (oldest) time in Epoch milliseconds",
          "nullable": true
        },
        "unnamedQuery": {
          "type": "boolean",
          "description": "Query events by name presence.  If false, returns events with a name.  If true, returns events without names.  Omit if not needed.  Query fields are additive queries (returned events satisfy at least one of the query fields)",
          "nullable": true
        },
        "vehicleLabelQuery": {
          "type": "array",
          "description": "Query events by vehicle labels. Query fields are additive queries (returned events satisfy at least one of the query fields)",
          "items": {
            "type": "string",
            "description": "Query events by vehicle labels. Query fields are additive queries (returned events satisfy at least one of the query fields)",
            "nullable": true
          },
          "nullable": true
        }
      }
    },
    "Vehicle_GetVehicleEventsWSResponse": {
      "type": "object",
      "description": "Response object containing vehicle events with filters and additive queries.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "events": {
          "type": "array",
          "description": "List of vehicle events matching the query criteria",
          "items": {
            "$ref": "#/components/schemas/VehicleEventIndexType"
          },
          "nullable": true
        }
      }
    },
    "Vehicle_GetVehicleLabelsForOrgWSRequest": {
      "type": "object",
      "description": "Request object for getting all vehicle labels for the organization."
    },
    "Vehicle_GetVehicleLabelsForOrgWSResponse": {
      "type": "object",
      "description": "Response object containing all vehicle labels for the organization.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "vehicleLabels": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "description": "Map of license plate to label set",
            "items": {
              "type": "string",
              "description": "Map of license plate to label set",
              "nullable": true
            },
            "nullable": true,
            "uniqueItems": true
          },
          "description": "Map of license plate to label set",
          "nullable": true
        }
      }
    },
    "Vehicle_GetVehiclesWSRequest": {
      "type": "object",
      "description": "Request object for getting all vehicles in the organization."
    },
    "Vehicle_GetVehiclesWSResponse": {
      "type": "object",
      "description": "Response object containing all vehicles in the organization.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "vehicles": {
          "type": "array",
          "description": "List of vehicles in the organization",
          "items": {
            "$ref": "#/components/schemas/VehicleV2Type"
          },
          "nullable": true
        }
      }
    },
    "Vehicle_RemoveVehicleLabelWSRequest": {
      "type": "object",
      "description": "Request object for removing a label from a vehicle.",
      "properties": {
        "label": {
          "type": "string",
          "description": "Label to remove from the vehicle",
          "example": "Company Car",
          "nullable": true
        },
        "vehicleLicensePlate": {
          "type": "string",
          "description": "License plate number of the vehicle to remove label from",
          "example": "ABC123",
          "nullable": true
        }
      }
    },
    "Vehicle_RemoveVehicleLabelWSResponse": {
      "type": "object",
      "description": "Response object for removing a label from a vehicle.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Vehicle_ReportVehicleEventRequest": {
      "type": "object",
      "description": "Request object for reporting a mis-detected license plate event.",
      "properties": {
        "eventUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Vehicle_ReportVehicleEventResponse": {
      "type": "object",
      "description": "Response object for reporting a mis-detected license plate event.",
      "properties": {
        "collectedMediaForTraining": {
          "type": "boolean",
          "description": "Whether media was collected for AI training",
          "example": true,
          "nullable": true
        },
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Vehicle_SaveVehicleWSRequest": {
      "type": "object",
      "description": "Request object for saving a vehicle with license plate information.",
      "properties": {
        "alert": {
          "type": "boolean",
          "description": "Whether to alert when this vehicle is detected",
          "nullable": true
        },
        "createdAtMillis": {
          "type": "integer",
          "format": "int64",
          "description": "Creation timestamp in milliseconds",
          "example": 1640995200000,
          "nullable": true
        },
        "description": {
          "type": "string",
          "description": "Description of the vehicle",
          "example": "Blue Honda Civic",
          "nullable": true
        },
        "name": {
          "type": "string",
          "description": "Name for the vehicle",
          "example": "John's Car",
          "nullable": true
        },
        "thumbnailS3Key": {
          "type": "string",
          "description": "S3 key for the vehicle thumbnail image",
          "nullable": true
        },
        "trust": {
          "type": "boolean",
          "description": "Whether this vehicle is trusted",
          "nullable": true
        },
        "vehicleLicensePlate": {
          "type": "string",
          "description": "License plate number of the vehicle",
          "example": "ABC123",
          "nullable": true
        }
      }
    },
    "Vehicle_SaveVehicleWSResponse": {
      "type": "object",
      "description": "Response object for saving a vehicle.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    }
  },
  "schemaCount": 24
}
