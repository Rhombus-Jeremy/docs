{
  "tag": "Access Control Webservice",
  "schemas": {
    "Accesscontrol_UnlockAccessControlledDoorWSRequest": {
      "type": "object",
      "description": "Request to unlock an access controlled door.",
      "properties": {
        "accessControlledDoorUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Accesscontrol_accessgrant_CreateAccessGrantWSRequest": {
      "type": "object",
      "description": "Request to create a location access grant.",
      "properties": {
        "accessGrant": {
          "$ref": "#/components/schemas/LocationAccessGrantType"
        }
      }
    },
    "Accesscontrol_accessgrant_CreateAccessGrantWSResponse": {
      "type": "object",
      "description": "Response containing the created location access grant.",
      "properties": {
        "accessGrant": {
          "$ref": "#/components/schemas/LocationAccessGrantType"
        }
      }
    },
    "Accesscontrol_accessgrant_DeleteLocationAccessGrantWSRequest": {
      "type": "object",
      "description": "Request to delete a location access grant.",
      "properties": {
        "accessGrantUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Accesscontrol_accessgrant_DeleteLocationAccessGrantWSResponse": {
      "type": "object",
      "description": "Response for location access grant deletion."
    },
    "Accesscontrol_accessgrant_FindLocationAccessGrantsByAccessControlledDoorWSRequest": {
      "type": "object",
      "description": "Request to find location access grants by access controlled door.",
      "properties": {
        "accessControlledDoorUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Accesscontrol_accessgrant_FindLocationAccessGrantsByAccessControlledDoorWSResponse": {
      "type": "object",
      "description": "Response containing location access grants for an access controlled door.",
      "properties": {
        "accessGrants": {
          "type": "array",
          "description": "List of location access grants",
          "items": {
            "$ref": "#/components/schemas/LocationAccessGrantType"
          },
          "nullable": true
        }
      }
    },
    "Accesscontrol_accessgrant_FindLocationAccessGrantsByDoorLabelWSRequest": {
      "type": "object",
      "description": "Request to find location access grants by door label.",
      "properties": {
        "doorLabelId": {
          "type": "string",
          "description": "Door label identifier",
          "example": "door_label_123",
          "nullable": true
        }
      }
    },
    "Accesscontrol_accessgrant_FindLocationAccessGrantsByDoorLabelWSResponse": {
      "type": "object",
      "description": "Response containing location access grants for a door label.",
      "properties": {
        "accessGrants": {
          "type": "array",
          "description": "List of location access grants",
          "items": {
            "$ref": "#/components/schemas/LocationAccessGrantType"
          },
          "nullable": true
        }
      }
    },
    "Accesscontrol_accessgrant_FindLocationAccessGrantsByGroupWSRequest": {
      "type": "object",
      "description": "Request to find location access grants by group.",
      "properties": {
        "groupUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Accesscontrol_accessgrant_FindLocationAccessGrantsByGroupWSResponse": {
      "type": "object",
      "description": "Response containing location access grants for a group.",
      "properties": {
        "accessGrants": {
          "type": "array",
          "description": "List of location access grants",
          "items": {
            "$ref": "#/components/schemas/LocationAccessGrantType"
          },
          "nullable": true
        }
      }
    },
    "Accesscontrol_accessgrant_FindLocationAccessGrantsByLocationAndUserWSRequest": {
      "type": "object",
      "description": "Request to find location access grants by location and user.",
      "properties": {
        "locationUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        },
        "userUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Accesscontrol_accessgrant_FindLocationAccessGrantsByLocationAndUserWSResponse": {
      "type": "object",
      "description": "Response containing location access grants for a location and user.",
      "properties": {
        "accessGrants": {
          "type": "array",
          "description": "List of location access grants",
          "items": {
            "$ref": "#/components/schemas/LocationAccessGrantType"
          },
          "nullable": true
        }
      }
    },
    "Accesscontrol_accessgrant_FindLocationAccessGrantsByLocationWSRequest": {
      "type": "object",
      "description": "Request to find location access grants by location.",
      "properties": {
        "locationUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Accesscontrol_accessgrant_FindLocationAccessGrantsByLocationWSResponse": {
      "type": "object",
      "description": "Response containing location access grants for a location.",
      "properties": {
        "accessGrants": {
          "type": "array",
          "description": "List of location access grants",
          "items": {
            "$ref": "#/components/schemas/LocationAccessGrantType"
          },
          "nullable": true
        }
      }
    },
    "Accesscontrol_accessgrant_FindLocationAccessGrantsByOrgWSRequest": {
      "type": "object",
      "description": "Request to find location access grants by organization."
    },
    "Accesscontrol_accessgrant_FindLocationAccessGrantsByOrgWSResponse": {
      "type": "object",
      "description": "Response containing location access grants for an organization.",
      "properties": {
        "accessGrants": {
          "type": "array",
          "description": "List of location access grants",
          "items": {
            "$ref": "#/components/schemas/LocationAccessGrantType"
          },
          "nullable": true
        }
      }
    },
    "Accesscontrol_accessgrant_FindLocationAccessGrantsByUserWSRequest": {
      "type": "object",
      "description": "Request to find location access grants by user.",
      "properties": {
        "userUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Accesscontrol_accessgrant_FindLocationAccessGrantsByUserWSResponse": {
      "type": "object",
      "description": "Response containing location access grants for a user.",
      "properties": {
        "accessGrants": {
          "type": "array",
          "description": "List of location access grants",
          "items": {
            "$ref": "#/components/schemas/LocationAccessGrantType"
          },
          "nullable": true
        }
      }
    },
    "Accesscontrol_accessgrant_GetLocationAccessGrantWSRequest": {
      "type": "object",
      "description": "Request to get a location access grant by UUID.",
      "properties": {
        "accessGrantUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Accesscontrol_accessgrant_GetLocationAccessGrantWSResponse": {
      "type": "object",
      "description": "Response containing a location access grant.",
      "properties": {
        "accessGrant": {
          "$ref": "#/components/schemas/LocationAccessGrantType"
        }
      }
    },
    "Accesscontrol_accessgrant_UpdateAccessGrantWSRequest": {
      "type": "object",
      "description": "Request to update a location access grant.",
      "properties": {
        "accessGrant": {
          "$ref": "#/components/schemas/LocationAccessGrantType"
        }
      }
    },
    "Accesscontrol_accessgrant_UpdateAccessGrantWSResponse": {
      "type": "object",
      "description": "Response for location access grant update.",
      "properties": {
        "accessGrant": {
          "$ref": "#/components/schemas/LocationAccessGrantType"
        },
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "expiredACDLicensesDoorUuids": {
          "type": "array",
          "description": "Set of expired ACD license door UUIDs",
          "items": {
            "type": "string",
            "format": "RUUID",
            "description": "base 64 (url-safe) uuid string",
            "example": "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable": true
          },
          "nullable": true,
          "uniqueItems": true
        },
        "unassignedACDLicensesDoorUuids": {
          "type": "array",
          "description": "Set of unassigned ACD license door UUIDs",
          "items": {
            "type": "string",
            "format": "RUUID",
            "description": "base 64 (url-safe) uuid string",
            "example": "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable": true
          },
          "nullable": true,
          "uniqueItems": true
        }
      }
    },
    "Accesscontrol_accessrevocation_CreateAccessRevocationWSRequest": {
      "type": "object",
      "description": "Request to create a location access revocation.",
      "properties": {
        "accessRevocation": {
          "$ref": "#/components/schemas/LocationAccessRevocationType"
        }
      }
    },
    "Accesscontrol_accessrevocation_CreateAccessRevocationWSResponse": {
      "type": "object",
      "description": "Response for location access revocation creation.",
      "properties": {
        "accessRevocation": {
          "$ref": "#/components/schemas/LocationAccessRevocationType"
        }
      }
    },
    "Accesscontrol_accessrevocation_DeleteLocationAccessRevocationWSRequest": {
      "type": "object",
      "description": "Request to delete a location access revocation.",
      "properties": {
        "accessRevocationUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Accesscontrol_accessrevocation_DeleteLocationAccessRevocationWSResponse": {
      "type": "object",
      "description": "Response for location access revocation deletion."
    },
    "Accesscontrol_accessrevocation_FindLocationAccessRevocationsByAccessControlledDoorWSRequest": {
      "type": "object",
      "description": "Request to find location access revocations by access controlled door.",
      "properties": {
        "accessControlledDoorUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Accesscontrol_accessrevocation_FindLocationAccessRevocationsByAccessControlledDoorWSResponse": {
      "type": "object",
      "description": "Response containing location access revocations for an access controlled door.",
      "properties": {
        "accessRevocations": {
          "type": "array",
          "description": "List of location access revocations",
          "items": {
            "$ref": "#/components/schemas/LocationAccessRevocationType"
          },
          "nullable": true
        }
      }
    },
    "Accesscontrol_accessrevocation_FindLocationAccessRevocationsByDoorLabelWSRequest": {
      "type": "object",
      "description": "Request to find location access revocations by door label.",
      "properties": {
        "doorLabelId": {
          "type": "string",
          "description": "Door label identifier",
          "example": "door_label_123",
          "nullable": true
        }
      }
    },
    "Accesscontrol_accessrevocation_FindLocationAccessRevocationsByDoorLabelWSResponse": {
      "type": "object",
      "description": "Response containing location access revocations for a door label.",
      "properties": {
        "accessRevocations": {
          "type": "array",
          "description": "List of location access revocations",
          "items": {
            "$ref": "#/components/schemas/LocationAccessRevocationType"
          },
          "nullable": true
        }
      }
    },
    "Accesscontrol_accessrevocation_FindLocationAccessRevocationsByGroupWSRequest": {
      "type": "object",
      "description": "Request to find location access revocations by group.",
      "properties": {
        "groupUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Accesscontrol_accessrevocation_FindLocationAccessRevocationsByGroupWSResponse": {
      "type": "object",
      "description": "Response containing location access revocations for a group.",
      "properties": {
        "accessRevocations": {
          "type": "array",
          "description": "List of location access revocations",
          "items": {
            "$ref": "#/components/schemas/LocationAccessRevocationType"
          },
          "nullable": true
        }
      }
    },
    "Accesscontrol_accessrevocation_FindLocationAccessRevocationsByOrgWSRequest": {
      "type": "object",
      "description": "Request to find location access revocations by organization."
    },
    "Accesscontrol_accessrevocation_FindLocationAccessRevocationsByOrgWSResponse": {
      "type": "object",
      "description": "Response containing location access revocations for an organization.",
      "properties": {
        "accessRevocations": {
          "type": "array",
          "description": "List of location access revocations",
          "items": {
            "$ref": "#/components/schemas/LocationAccessRevocationType"
          },
          "nullable": true
        }
      }
    },
    "Accesscontrol_accessrevocation_FindLocationAccessRevocationsByUserWSRequest": {
      "type": "object",
      "description": "Request to find location access revocations by user.",
      "properties": {
        "userUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Accesscontrol_accessrevocation_FindLocationAccessRevocationsByUserWSResponse": {
      "type": "object",
      "description": "Response containing location access revocations for a user.",
      "properties": {
        "accessRevocations": {
          "type": "array",
          "description": "List of location access revocations",
          "items": {
            "$ref": "#/components/schemas/LocationAccessRevocationType"
          },
          "nullable": true
        }
      }
    },
    "Accesscontrol_accessrevocation_GetLocationAccessRevocationWSRequest": {
      "type": "object",
      "description": "Request to get a location access revocation by UUID.",
      "properties": {
        "accessRevocationUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Accesscontrol_accessrevocation_GetLocationAccessRevocationWSResponse": {
      "type": "object",
      "description": "Response containing a location access revocation.",
      "properties": {
        "accessRevocation": {
          "$ref": "#/components/schemas/LocationAccessRevocationType"
        }
      }
    },
    "Accesscontrol_accessrevocation_UpdateAccessRevocationWSRequest": {
      "type": "object",
      "description": "Request to update a location access revocation.",
      "properties": {
        "accessRevocation": {
          "$ref": "#/components/schemas/LocationAccessRevocationType"
        }
      }
    },
    "Accesscontrol_accessrevocation_UpdateAccessRevocationWSResponse": {
      "type": "object",
      "description": "Response for location access revocation update operation.",
      "properties": {
        "accessRevocation": {
          "$ref": "#/components/schemas/LocationAccessRevocationType"
        },
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "expiredACDLicensesDoorUuids": {
          "type": "array",
          "description": "Set of expired ACD licenses door UUIDs",
          "items": {
            "type": "string",
            "format": "RUUID",
            "description": "base 64 (url-safe) uuid string",
            "example": "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable": true
          },
          "nullable": true,
          "uniqueItems": true
        },
        "unassignedACDLicensesDoorUuids": {
          "type": "array",
          "description": "Set of unassigned ACD licenses door UUIDs",
          "items": {
            "type": "string",
            "format": "RUUID",
            "description": "base 64 (url-safe) uuid string",
            "example": "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable": true
          },
          "nullable": true,
          "uniqueItems": true
        }
      }
    },
    "Accesscontrol_credentials_AssignAccessControlCredentialWSRequest": {
      "type": "object",
      "description": "Request to assign an access control credential to a user.",
      "properties": {
        "credentialHexValue": {
          "type": "string",
          "description": "Hex value of the credential",
          "example": "1234567890ABCDEF",
          "nullable": true
        },
        "userUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Accesscontrol_credentials_AssignAccessControlCredentialWSResponse": {
      "type": "object",
      "description": "Response for assigning an access control credential to a user.",
      "properties": {
        "credential": {
          "$ref": "#/components/schemas/AccessControlCredentialType"
        }
      }
    },
    "Accesscontrol_credentials_BaseUnlockAccessControlledDoorWSResponse": {
      "type": "object",
      "discriminator": {
        "propertyName": "type"
      },
      "oneOf": [
        {
          "$ref": "#/components/schemas/Accesscontrol_UnlockAccessControlledDoorSuccessWSResponse"
        },
        {
          "$ref": "#/components/schemas/Accesscontrol_UnlockAccessControlledDoorErrorWSResponse"
        }
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "ERROR",
            "SUCCESS"
          ],
          "nullable": true,
          "readOnly": true
        }
      }
    },
    "Accesscontrol_credentials_CreateAccessControlCredentialByHexValueAndTypeWSRequest": {
      "type": "object",
      "description": "Request to create an access control credential by hex value and type.",
      "properties": {
        "credentialType": {
          "$ref": "#/components/schemas/AccessControlCredentialEnumType"
        },
        "endDateEpochSecExclusive": {
          "type": "integer",
          "format": "int64",
          "description": "End date in epoch seconds (exclusive)",
          "example": 1672531200,
          "nullable": true
        },
        "hexValue": {
          "type": "string",
          "description": "Hex value of the credential",
          "example": "1234567890ABCDEF",
          "nullable": true
        },
        "littleEndian": {
          "type": "boolean",
          "description": "Only needed when creating Wiegand credentials",
          "nullable": true
        },
        "numValueBits": {
          "type": "integer",
          "format": "int32",
          "description": "Only needed when creating Wiegand credentials",
          "nullable": true
        },
        "startDateEpochSecInclusive": {
          "type": "integer",
          "format": "int64",
          "description": "Start date in epoch seconds (inclusive)",
          "example": 1640995200,
          "nullable": true
        },
        "userUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Accesscontrol_credentials_CreateAccessControlCredentialByHexValueAndTypeWSResponse": {
      "type": "object",
      "description": "Response for access control credential creation by hex value and type.",
      "properties": {
        "credential": {
          "$ref": "#/components/schemas/AccessControlCredentialType"
        }
      }
    },
    "Accesscontrol_credentials_CreateRhombusSecureCsnCredentialWSRequest": {
      "type": "object",
      "description": "Request to create a Rhombus Secure CSN credential.",
      "properties": {
        "credentialValue": {
          "type": "string",
          "description": "Credential value",
          "example": "123456789",
          "nullable": true
        },
        "endDateEpochSecExclusive": {
          "type": "integer",
          "format": "int64",
          "description": "End date in epoch seconds (exclusive)",
          "example": 1672531200,
          "nullable": true
        },
        "startDateEpochSecInclusive": {
          "type": "integer",
          "format": "int64",
          "description": "Start date in epoch seconds (inclusive)",
          "example": 1640995200,
          "nullable": true
        },
        "userUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Accesscontrol_credentials_CreateRhombusSecureCsnCredentialWSResponse": {
      "type": "object",
      "description": "Response for Rhombus Secure CSN credential creation.",
      "properties": {
        "credential": {
          "$ref": "#/components/schemas/AccessControlCredentialType"
        }
      }
    },
    "Accesscontrol_credentials_CreateStandardCsnCredentialWSRequest": {
      "type": "object",
      "description": "Request to create a standard CSN credential.",
      "properties": {
        "credentialValue": {
          "type": "string",
          "description": "Credential value",
          "example": "123456789",
          "nullable": true
        },
        "endDateEpochSecExclusive": {
          "type": "integer",
          "format": "int64",
          "description": "End date in epoch seconds (exclusive)",
          "example": 1672531200,
          "nullable": true
        },
        "startDateEpochSecInclusive": {
          "type": "integer",
          "format": "int64",
          "description": "Start date in epoch seconds (inclusive)",
          "example": 1640995200,
          "nullable": true
        },
        "userUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Accesscontrol_credentials_CreateStandardCsnCredentialWSResponse": {
      "type": "object",
      "description": "Response for standard CSN credential creation.",
      "properties": {
        "credential": {
          "$ref": "#/components/schemas/AccessControlCredentialType"
        }
      }
    },
    "Accesscontrol_credentials_CreateWiegand64BitRawCredentialWSRequest": {
      "type": "object",
      "description": "Request to create a 64-bit raw Wiegand credential.",
      "properties": {
        "endDateEpochSecExclusive": {
          "type": "integer",
          "format": "int64",
          "description": "End date in epoch seconds (exclusive)",
          "example": 1672531200,
          "nullable": true
        },
        "startDateEpochSecInclusive": {
          "type": "integer",
          "format": "int64",
          "description": "Start date in epoch seconds (inclusive)",
          "example": 1640995200,
          "nullable": true
        },
        "userUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        },
        "value": {
          "type": "string",
          "description": "Credential value",
          "example": "1234567890123456",
          "nullable": true
        }
      }
    },
    "Accesscontrol_credentials_CreateWiegand64BitRawCredentialWSResponse": {
      "type": "object",
      "description": "Response for 64-bit raw Wiegand credential creation.",
      "properties": {
        "credential": {
          "$ref": "#/components/schemas/AccessControlCredentialType"
        }
      }
    },
    "Accesscontrol_credentials_CreateWiegandCredentialWSRequest": {
      "type": "object",
      "description": "Request to create a Wiegand credential.",
      "properties": {
        "cardNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Card number for the credential",
          "example": 456,
          "nullable": true
        },
        "companyId": {
          "type": "integer",
          "format": "int32",
          "description": "Company ID used by HID CORP 1000",
          "example": 1000,
          "nullable": true
        },
        "endDateEpochSecExclusive": {
          "type": "integer",
          "format": "int64",
          "description": "End date in epoch seconds (exclusive)",
          "example": 1672531200,
          "nullable": true
        },
        "facilityCode": {
          "type": "integer",
          "format": "int32",
          "description": "Facility code for the credential",
          "example": 123,
          "nullable": true
        },
        "siteCode": {
          "type": "integer",
          "format": "int32",
          "description": "Site code for the credential",
          "example": 789,
          "nullable": true
        },
        "startDateEpochSecInclusive": {
          "type": "integer",
          "format": "int64",
          "description": "Start date in epoch seconds (inclusive)",
          "example": 1640995200,
          "nullable": true
        },
        "userUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        },
        "value": {
          "type": "string",
          "description": "Final credential value used in RAW formats",
          "example": "123456789",
          "nullable": true
        },
        "wiegandFormat": {
          "$ref": "#/components/schemas/WiegandFormatEnumType"
        }
      }
    },
    "Accesscontrol_credentials_CreateWiegandCredentialWSResponse": {
      "type": "object",
      "description": "Response for Wiegand credential creation.",
      "properties": {
        "credential": {
          "$ref": "#/components/schemas/AccessControlCredentialType"
        }
      }
    },
    "Accesscontrol_credentials_CreateWiegandD10202CredentialWSRequest": {
      "type": "object",
      "description": "Request to create a D10202 Wiegand credential.",
      "properties": {
        "cardNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Card number",
          "example": 456789,
          "nullable": true
        },
        "endDateEpochSecExclusive": {
          "type": "integer",
          "format": "int64",
          "description": "End date in epoch seconds (exclusive)",
          "example": 1672531200,
          "nullable": true
        },
        "facilityCode": {
          "type": "integer",
          "format": "int32",
          "description": "Facility code",
          "example": 123,
          "nullable": true
        },
        "startDateEpochSecInclusive": {
          "type": "integer",
          "format": "int64",
          "description": "Start date in epoch seconds (inclusive)",
          "example": 1640995200,
          "nullable": true
        },
        "userUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Accesscontrol_credentials_CreateWiegandD10202CredentialWSResponse": {
      "type": "object",
      "description": "Response for D10202 Wiegand credential creation.",
      "properties": {
        "credential": {
          "$ref": "#/components/schemas/AccessControlCredentialType"
        }
      }
    },
    "Accesscontrol_credentials_CreateWiegandH10301CredentialWSRequest": {
      "type": "object",
      "description": "Request to create a H10301 Wiegand credential.",
      "properties": {
        "cardNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Card number",
          "example": 456789,
          "nullable": true
        },
        "endDateEpochSecExclusive": {
          "type": "integer",
          "format": "int64",
          "description": "End date in epoch seconds (exclusive)",
          "example": 1672531200,
          "nullable": true
        },
        "facilityCode": {
          "type": "integer",
          "format": "int32",
          "description": "Facility code",
          "example": 123,
          "nullable": true
        },
        "startDateEpochSecInclusive": {
          "type": "integer",
          "format": "int64",
          "description": "Start date in epoch seconds (inclusive)",
          "example": 1640995200,
          "nullable": true
        },
        "userUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Accesscontrol_credentials_CreateWiegandH10301CredentialWSResponse": {
      "type": "object",
      "description": "Response for H10301 Wiegand credential creation.",
      "properties": {
        "credential": {
          "$ref": "#/components/schemas/AccessControlCredentialType"
        }
      }
    },
    "Accesscontrol_credentials_CreateWiegandH10304CredentialWSRequest": {
      "type": "object",
      "description": "Request to create a H10304 Wiegand credential.",
      "properties": {
        "cardNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Card number",
          "example": 456789,
          "nullable": true
        },
        "endDateEpochSecExclusive": {
          "type": "integer",
          "format": "int64",
          "description": "End date in epoch seconds (exclusive)",
          "example": 1672531200,
          "nullable": true
        },
        "facilityCode": {
          "type": "integer",
          "format": "int32",
          "description": "Facility code",
          "example": 123,
          "nullable": true
        },
        "startDateEpochSecInclusive": {
          "type": "integer",
          "format": "int64",
          "description": "Start date in epoch seconds (inclusive)",
          "example": 1640995200,
          "nullable": true
        },
        "userUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Accesscontrol_credentials_CreateWiegandH10304CredentialWSResponse": {
      "type": "object",
      "description": "Response for H10304 Wiegand credential creation.",
      "properties": {
        "credential": {
          "$ref": "#/components/schemas/AccessControlCredentialType"
        }
      }
    },
    "Accesscontrol_credentials_DeleteAccessControlCredentialWSRequest": {
      "type": "object",
      "description": "Request to delete an access control credential.",
      "properties": {
        "credentialUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Accesscontrol_credentials_DeleteAccessControlCredentialWSResponse": {
      "type": "object",
      "description": "Response indicating successful deletion of an access control credential."
    },
    "Accesscontrol_credentials_DeleteUnassignedAccessControlCredentialWSRequest": {
      "type": "object",
      "description": "Request to delete an unassigned access control credential.",
      "properties": {
        "credentialHexValue": {
          "type": "string",
          "description": "Hex value of the credential to delete",
          "example": "1234567890ABCDEF",
          "nullable": true
        }
      }
    },
    "Accesscontrol_credentials_DeleteUnassignedAccessControlCredentialWSResponse": {
      "type": "object",
      "description": "Response indicating successful deletion of an unassigned access control credential."
    },
    "Accesscontrol_credentials_FindAccessControlCredentialByOrgWSRequest": {
      "type": "object",
      "description": "Request to find access control credentials by organization.",
      "properties": {
        "filter": {
          "$ref": "#/components/schemas/CredentialQueryFilter"
        }
      }
    },
    "Accesscontrol_credentials_FindAccessControlCredentialByOrgWSResponse": {
      "type": "object",
      "description": "Response containing access control credentials found for an organization.",
      "properties": {
        "credentials": {
          "type": "array",
          "description": "List of access control credentials",
          "items": {
            "$ref": "#/components/schemas/AccessControlCredentialType"
          },
          "nullable": true
        }
      }
    },
    "Accesscontrol_credentials_FindAccessControlCredentialByUserWSRequest": {
      "type": "object",
      "description": "Request to find access control credentials by user.",
      "properties": {
        "filter": {
          "$ref": "#/components/schemas/CredentialQueryFilter"
        },
        "userUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Accesscontrol_credentials_FindAccessControlCredentialByUserWSResponse": {
      "type": "object",
      "description": "Response containing access control credentials found for a specific user.",
      "properties": {
        "credentials": {
          "type": "array",
          "description": "List of access control credentials",
          "items": {
            "$ref": "#/components/schemas/AccessControlCredentialType"
          },
          "nullable": true
        }
      }
    },
    "Accesscontrol_credentials_FindAccessControlCredentialByUsersWSRequest": {
      "type": "object",
      "description": "Request to find access control credentials by multiple users.",
      "properties": {
        "filter": {
          "$ref": "#/components/schemas/CredentialQueryFilter"
        },
        "userUuids": {
          "type": "array",
          "description": "Set of user UUIDs to search for",
          "items": {
            "type": "string",
            "format": "RUUID",
            "description": "base 64 (url-safe) uuid string",
            "example": "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable": true
          },
          "nullable": true,
          "uniqueItems": true
        }
      }
    },
    "Accesscontrol_credentials_FindAccessControlCredentialByUsersWSResponse": {
      "type": "object",
      "description": "Response containing access control credentials mapped by user UUIDs.",
      "properties": {
        "userCredentialsMap": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "description": "Map of user UUIDs to their associated access control credentials",
            "items": {
              "$ref": "#/components/schemas/AccessControlCredentialType"
            },
            "nullable": true
          },
          "description": "Map of user UUIDs to their associated access control credentials",
          "nullable": true
        }
      }
    },
    "Accesscontrol_credentials_FindCredentialHistoryByCredentialHexValueWSRequest": {
      "type": "object",
      "description": "Request to find credential history by credential hex value.",
      "properties": {
        "credentialHexValue": {
          "type": "string",
          "description": "Hex value of the credential to search for",
          "example": "1234567890ABCDEF",
          "nullable": true
        },
        "filter": {
          "$ref": "#/components/schemas/CredentialQueryFilter"
        }
      }
    },
    "Accesscontrol_credentials_FindCredentialHistoryByCredentialHexValueWSResponse": {
      "type": "object",
      "description": "Response containing credential history found by credential hex value.",
      "properties": {
        "credentials": {
          "type": "array",
          "description": "List of credential history records",
          "items": {
            "$ref": "#/components/schemas/AccessControlCredentialType"
          },
          "nullable": true
        }
      }
    },
    "Accesscontrol_credentials_FindCredentialHistoryByCredentialValueWSRequest": {
      "type": "object",
      "description": "Request to find credential history by credential value.",
      "properties": {
        "credentialType": {
          "$ref": "#/components/schemas/AccessControlCredentialEnumType"
        },
        "credentialValue": {
          "type": "string",
          "description": "Credential value to search for",
          "example": "123456789",
          "nullable": true
        },
        "filter": {
          "$ref": "#/components/schemas/CredentialQueryFilter"
        }
      }
    },
    "Accesscontrol_credentials_FindCredentialHistoryByCredentialValueWSResponse": {
      "type": "object",
      "description": "Response containing credential history found by credential value.",
      "properties": {
        "credentials": {
          "type": "array",
          "description": "List of credential history records",
          "items": {
            "$ref": "#/components/schemas/AccessControlCredentialType"
          },
          "nullable": true
        }
      }
    },
    "Accesscontrol_credentials_FindCredentialHistoryByUserWSRequest": {
      "type": "object",
      "description": "Request to find credential history by user.",
      "properties": {
        "filter": {
          "$ref": "#/components/schemas/CredentialQueryFilter"
        },
        "userUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Accesscontrol_credentials_FindCredentialHistoryByUserWSResponse": {
      "type": "object",
      "description": "Response containing credential history found for a specific user.",
      "properties": {
        "credentials": {
          "type": "array",
          "description": "List of credential history records",
          "items": {
            "$ref": "#/components/schemas/AccessControlCredentialType"
          },
          "nullable": true
        }
      }
    },
    "Accesscontrol_credentials_GetRhombusSecureCsnCredentialDetailsWSRequest": {
      "type": "object",
      "description": "Request to get Rhombus Secure CSN credential details.",
      "properties": {
        "credentialUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Accesscontrol_credentials_GetRhombusSecureCsnCredentialDetailsWSResponse": {
      "type": "object",
      "description": "Response containing Rhombus Secure CSN credential details.",
      "properties": {
        "credential": {
          "$ref": "#/components/schemas/AccessControlCredentialType"
        }
      }
    },
    "Accesscontrol_credentials_GetStandardCsnCredentialDetailsWSRequest": {
      "type": "object",
      "description": "Request to get standard CSN credential details.",
      "properties": {
        "credentialUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Accesscontrol_credentials_GetStandardCsnCredentialDetailsWSResponse": {
      "type": "object",
      "description": "Response containing standard CSN credential details.",
      "properties": {
        "credential": {
          "$ref": "#/components/schemas/AccessControlCredentialType"
        }
      }
    },
    "Accesscontrol_credentials_RevokeAccessControlCredentialWSRequest": {
      "type": "object",
      "description": "Request to revoke an access control credential.",
      "properties": {
        "credentialUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Accesscontrol_credentials_RevokeAccessControlCredentialWSResponse": {
      "type": "object",
      "description": "Response containing the revoked access control credential details.",
      "properties": {
        "credential": {
          "$ref": "#/components/schemas/AccessControlCredentialType"
        }
      }
    },
    "Accesscontrol_credentials_SuspendAccessControlCredentialWSRequest": {
      "type": "object",
      "description": "Request to suspend an access control credential.",
      "properties": {
        "credentialUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Accesscontrol_credentials_SuspendAccessControlCredentialWSResponse": {
      "type": "object",
      "description": "Response containing the suspended access control credential details.",
      "properties": {
        "credential": {
          "$ref": "#/components/schemas/AccessControlCredentialType"
        }
      }
    },
    "Accesscontrol_credentials_UnsuspendAccessControlCredentialWSRequest": {
      "type": "object",
      "description": "Request to unsuspend an access control credential.",
      "properties": {
        "credentialUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Accesscontrol_credentials_UnsuspendAccessControlCredentialWSResponse": {
      "type": "object",
      "description": "Response containing the unsuspended access control credential details.",
      "properties": {
        "credential": {
          "$ref": "#/components/schemas/AccessControlCredentialType"
        }
      }
    },
    "Accesscontrol_credentials_UpdateRhombusSecureCsnCredentialWSRequest": {
      "type": "object",
      "description": "Request to update a Rhombus Secure CSN credential.",
      "properties": {
        "credentialUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        },
        "endDateEpochSecExclusive": {
          "type": "integer",
          "format": "int64",
          "nullable": true
        },
        "startDateEpochSecInclusive": {
          "type": "integer",
          "format": "int64",
          "nullable": true
        }
      }
    },
    "Accesscontrol_credentials_UpdateRhombusSecureCsnCredentialWSResponse": {
      "type": "object",
      "description": "Response containing the updated Rhombus Secure CSN credential.",
      "properties": {
        "credential": {
          "$ref": "#/components/schemas/AccessControlCredentialType"
        }
      }
    },
    "Accesscontrol_credentials_UpdateRhombusSecureMobileCredentialWSRequest": {
      "type": "object",
      "description": "Request to update a Rhombus Secure mobile credential.",
      "properties": {
        "credentialUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        },
        "endDateEpochSecExclusive": {
          "type": "integer",
          "format": "int64",
          "nullable": true
        },
        "startDateEpochSecInclusive": {
          "type": "integer",
          "format": "int64",
          "nullable": true
        }
      }
    },
    "Accesscontrol_credentials_UpdateRhombusSecureMobileCredentialWSResponse": {
      "type": "object",
      "description": "Response containing the updated Rhombus Secure mobile credential.",
      "properties": {
        "credential": {
          "$ref": "#/components/schemas/AccessControlCredentialType"
        }
      }
    },
    "Accesscontrol_credentials_UpdateStandardCsnCredentialWSRequest": {
      "type": "object",
      "description": "Request to update a standard CSN credential.",
      "properties": {
        "credentialUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        },
        "endDateEpochSecExclusive": {
          "type": "integer",
          "format": "int64",
          "nullable": true
        },
        "startDateEpochSecInclusive": {
          "type": "integer",
          "format": "int64",
          "nullable": true
        }
      }
    },
    "Accesscontrol_credentials_UpdateStandardCsnCredentialWSResponse": {
      "type": "object",
      "description": "Response containing the updated standard CSN credential.",
      "properties": {
        "credential": {
          "$ref": "#/components/schemas/AccessControlCredentialType"
        }
      }
    },
    "Accesscontrol_credentials_UpdateWiegandCredentialWSRequest": {
      "type": "object",
      "description": "Request to update a Wiegand credential.",
      "properties": {
        "credentialUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        },
        "endDateEpochSecExclusive": {
          "type": "integer",
          "format": "int64",
          "nullable": true
        },
        "startDateEpochSecInclusive": {
          "type": "integer",
          "format": "int64",
          "nullable": true
        }
      }
    },
    "Accesscontrol_credentials_UpdateWiegandCredentialWSResponse": {
      "type": "object",
      "description": "Response containing the updated Wiegand credential.",
      "properties": {
        "credential": {
          "$ref": "#/components/schemas/AccessControlCredentialType"
        }
      }
    },
    "Group_AddUsersToOrgGroupWSRequest": {
      "type": "object",
      "description": "Request to add users to an organization group.",
      "properties": {
        "groupUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        },
        "userUuids": {
          "type": "array",
          "description": "List of user UUIDs to add to the group",
          "items": {
            "type": "string",
            "format": "RUUID",
            "description": "base 64 (url-safe) uuid string",
            "example": "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable": true
          },
          "nullable": true
        }
      }
    },
    "Group_AddUsersToOrgGroupWSResponse": {
      "type": "object",
      "description": "Response for adding users to an organization group.",
      "properties": {
        "groupMembers": {
          "type": "array",
          "description": "Users added to the group successfully from the original request",
          "items": {
            "$ref": "#/components/schemas/OrgGroupMemberType"
          },
          "nullable": true
        }
      }
    },
    "Group_CreateOrgGroupWSRequest": {
      "type": "object",
      "description": "Request to create an organization group.",
      "properties": {
        "description": {
          "type": "string",
          "description": "Description of the group",
          "example": "Software engineering team members",
          "nullable": true
        },
        "locationUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        },
        "name": {
          "type": "string",
          "description": "Name of the group",
          "example": "Engineering Team",
          "nullable": true
        },
        "userUuids": {
          "type": "array",
          "description": "List of user UUIDs to add to the group",
          "items": {
            "type": "string",
            "format": "RUUID",
            "description": "base 64 (url-safe) uuid string",
            "example": "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable": true
          },
          "nullable": true
        }
      },
      "required": [
        "name"
      ]
    },
    "Group_CreateOrgGroupWSResponse": {
      "type": "object",
      "description": "Response for organization group creation.",
      "properties": {
        "group": {
          "$ref": "#/components/schemas/OrgGroupType"
        },
        "groupMembers": {
          "type": "array",
          "description": "List of group members if optionally added when creating the group",
          "items": {
            "$ref": "#/components/schemas/OrgGroupMemberType"
          },
          "nullable": true
        }
      }
    },
    "Group_DeleteOrgGroupWSRequest": {
      "type": "object",
      "description": "Request to delete an organization group.",
      "properties": {
        "groupUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Group_DeleteOrgGroupWSResponse": {
      "type": "object",
      "description": "Response indicating successful deletion of an organization group."
    },
    "Group_FindAllUsersForOrgGroupWSRequest": {
      "type": "object",
      "description": "Request to find all users for an organization group.",
      "properties": {
        "groupUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Group_FindAllUsersForOrgGroupWSResponse": {
      "type": "object",
      "description": "Response containing all users for an organization group.",
      "properties": {
        "groupMembers": {
          "type": "array",
          "description": "List of group members",
          "items": {
            "$ref": "#/components/schemas/OrgGroupMemberType"
          },
          "nullable": true
        }
      }
    },
    "Group_FindOrgGroupMembershipsByUserWSRequest": {
      "type": "object",
      "description": "Request to find organization group memberships by user.",
      "properties": {
        "userUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Group_FindOrgGroupMembershipsByUserWSResponse": {
      "type": "object",
      "description": "Response containing organization group memberships for a user.",
      "properties": {
        "userGroupMemberships": {
          "type": "array",
          "description": "List of user group memberships",
          "items": {
            "$ref": "#/components/schemas/OrgGroupMemberType"
          },
          "nullable": true
        }
      }
    },
    "Group_FindOrgGroupsByExactNameWSRequest": {
      "type": "object",
      "description": "Request to find organization groups by exact name.",
      "properties": {
        "groupName": {
          "type": "string",
          "description": "Case insensitive name of the group to find, if it exists",
          "example": "Engineering Team",
          "nullable": true
        }
      }
    },
    "Group_FindOrgGroupsByExactNameWSResponse": {
      "type": "object",
      "description": "Response containing organization group found by exact name.",
      "properties": {
        "group": {
          "$ref": "#/components/schemas/OrgGroupType"
        }
      }
    },
    "Group_FindOrgGroupsByNamePrefixWSRequest": {
      "type": "object",
      "description": "Request to find organization groups by name prefix.",
      "properties": {
        "groupNamePrefix": {
          "type": "string",
          "description": "Name prefix to search for groups",
          "example": "Eng",
          "nullable": true
        }
      }
    },
    "Group_FindOrgGroupsByNamePrefixWSResponse": {
      "type": "object",
      "description": "Response containing organization groups found by name prefix.",
      "properties": {
        "groups": {
          "type": "array",
          "description": "List of organization groups found by name prefix",
          "items": {
            "$ref": "#/components/schemas/OrgGroupType"
          },
          "nullable": true
        }
      }
    },
    "Group_FindOrgGroupsByOrgWSRequest": {
      "type": "object",
      "description": "Request to find organization groups by organization."
    },
    "Group_FindOrgGroupsByOrgWSResponse": {
      "type": "object",
      "description": "Response containing organization groups found by organization.",
      "properties": {
        "groups": {
          "type": "array",
          "description": "List of organization groups found by organization",
          "items": {
            "$ref": "#/components/schemas/OrgGroupType"
          },
          "nullable": true
        }
      }
    },
    "Group_FindOrgGroupsByUserMembershipWSRequest": {
      "type": "object",
      "description": "Request to find organization groups by user membership.",
      "properties": {
        "userUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Group_FindOrgGroupsByUserMembershipWSResponse": {
      "type": "object",
      "description": "Response containing organization groups found by user membership.",
      "properties": {
        "groups": {
          "type": "array",
          "description": "List of organization groups found by user membership",
          "items": {
            "$ref": "#/components/schemas/OrgGroupType"
          },
          "nullable": true
        }
      }
    },
    "Group_RemoveUsersFromOrgGroupWSRequest": {
      "type": "object",
      "description": "Request to remove users from an organization group.",
      "properties": {
        "groupUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        },
        "userUuids": {
          "type": "array",
          "description": "List of user UUIDs to remove from the group",
          "items": {
            "type": "string",
            "format": "RUUID",
            "description": "base 64 (url-safe) uuid string",
            "example": "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable": true
          },
          "nullable": true
        }
      }
    },
    "Group_RemoveUsersFromOrgGroupWSResponse": {
      "type": "object",
      "description": "Response indicating successful removal of users from an organization group."
    },
    "Group_UpdateOrgGroupWSRequest": {
      "type": "object",
      "description": "Request to update an organization group.",
      "properties": {
        "description": {
          "type": "string",
          "description": "New description for the group",
          "example": "Updated software engineering team members",
          "nullable": true
        },
        "groupUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        },
        "name": {
          "type": "string",
          "description": "New name for the group",
          "example": "Updated Engineering Team",
          "nullable": true
        }
      }
    },
    "Group_UpdateOrgGroupWSResponse": {
      "type": "object",
      "description": "Response containing the updated organization group.",
      "properties": {
        "group": {
          "$ref": "#/components/schemas/OrgGroupType"
        }
      }
    }
  },
  "schemaCount": 116
}
