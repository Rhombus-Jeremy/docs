{
  "tag": "Camera Webservice",
  "schemas": {
    "Camera_CreateCustomFootageSeekpointsWSRequest": {
      "type": "object",
      "description": "Request to create custom footage seek points for a camera.",
      "properties": {
        "cameraUuid": {
          "type": "string",
          "format": "DeviceFacetUuid",
          "description": "RUUID with optional appended facet information",
          "example": "AAAAAAAAAAAAAAAAAAAAAA.v0",
          "nullable": true
        },
        "footageSeekPoints": {
          "type": "array",
          "description": "List of custom footage seek points to create",
          "items": {
            "$ref": "#/components/schemas/CustomFootageSeekPointType"
          },
          "nullable": true
        }
      }
    },
    "Camera_CreateFootageBoundingBoxesWSRequest": {
      "type": "object",
      "description": "Request to create footage bounding boxes for a camera.",
      "properties": {
        "cameraUuid": {
          "type": "string",
          "format": "DeviceFacetUuid",
          "description": "RUUID with optional appended facet information",
          "example": "AAAAAAAAAAAAAAAAAAAAAA.v0",
          "nullable": true
        },
        "footageBoundingBoxes": {
          "type": "array",
          "description": "List of footage bounding boxes to create",
          "items": {
            "$ref": "#/components/schemas/FootageBoundingBoxType"
          },
          "nullable": true
        }
      }
    },
    "Camera_CreateFootageBoundingBoxesWSResponse": {
      "type": "object",
      "description": "Response indicating the result of creating footage bounding boxes.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Camera_CreateFootageSeekpointsWSResponse": {
      "type": "object",
      "description": "Response indicating the result of creating footage seek points.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Camera_CreateSharedLiveVideoStreamWSRequest": {
      "type": "object",
      "description": "Request to create a shared live video stream for a camera.",
      "properties": {
        "audioGatewayUuid": {
          "type": "string",
          "format": "DeviceFacetUuid",
          "description": "RUUID with optional appended facet information",
          "example": "AAAAAAAAAAAAAAAAAAAAAA.v0",
          "nullable": true
        },
        "cameraUuid": {
          "type": "string",
          "format": "DeviceFacetUuid",
          "description": "RUUID with optional appended facet information",
          "example": "AAAAAAAAAAAAAAAAAAAAAA.v0",
          "nullable": true
        },
        "expirationTimeSecs": {
          "type": "integer",
          "format": "int32",
          "description": "Add an expiration date for accessing the stream in seconds",
          "example": 86400,
          "nullable": true
        },
        "includeAudio": {
          "type": "boolean",
          "description": "Camera must be associated with an audio gateway to have audio",
          "example": false,
          "nullable": true
        },
        "invertSchedule": {
          "type": "boolean",
          "description": "If given a schedule UUID, will hide the stream during the schedule instead and show it otherwise",
          "example": false,
          "nullable": true
        },
        "name": {
          "type": "string",
          "description": "If not provided, will be named 'Unnamed'",
          "example": "Front Door Live Stream",
          "nullable": true
        },
        "password": {
          "type": "string",
          "description": "Add a password to allow access to your shared stream",
          "example": "mypassword123",
          "nullable": true
        },
        "scheduleUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        },
        "ssoProtected": {
          "type": "boolean",
          "description": "Org must have SSO setup to use SSO protected streams",
          "example": false,
          "nullable": true
        },
        "streamType": {
          "$ref": "#/components/schemas/StreamTypeEnum"
        },
        "vodEnabled": {
          "type": "boolean",
          "description": "Enables recording of live footage to a VOD",
          "example": true,
          "nullable": true
        }
      }
    },
    "Camera_CreateSharedLiveVideoStreamWSResponse": {
      "type": "object",
      "description": "Response containing the created shared live video stream information.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "sharedLiveM3U8StreamUrl": {
          "type": "string",
          "description": "M3U8 URL for the shared live video stream",
          "example": "https://example.com/live/m3u8/stream",
          "nullable": true
        },
        "sharedLiveVideoStreamUrl": {
          "type": "string",
          "description": "URL for the shared live video stream",
          "example": "https://example.com/live/video/stream",
          "nullable": true
        },
        "sharedLiveVideoStreamUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Camera_CreateSharedVideoWallWSRequest": {
      "type": "object",
      "description": "Request to create a shared video wall.",
      "properties": {
        "expirationTimeSecs": {
          "type": "integer",
          "format": "int32",
          "description": "Expiration time in seconds",
          "example": 86400,
          "nullable": true
        },
        "invertSchedule": {
          "type": "boolean",
          "description": "Whether to invert the schedule",
          "example": false,
          "nullable": true
        },
        "password": {
          "type": "string",
          "description": "Password to protect the shared video wall",
          "example": "mypassword123",
          "nullable": true
        },
        "scheduleUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        },
        "videoWallUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        },
        "vodEnabled": {
          "type": "boolean",
          "description": "Whether to enable video on demand",
          "example": true,
          "nullable": true
        }
      }
    },
    "Camera_CreateSharedVideoWallWSResponse": {
      "type": "object",
      "description": "Response containing the created shared video wall information.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "sharedLiveVideoStreamUrl": {
          "type": "string",
          "description": "URL for accessing the shared video wall",
          "example": "https://share.rhombussystems.com/videowall/abc123",
          "nullable": true
        },
        "sharedLiveVideoStreamUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Camera_CreateVideoWallWSRequest": {
      "type": "object",
      "description": "Request to create a video wall.",
      "properties": {
        "videoWall": {
          "$ref": "#/components/schemas/VideoWallType"
        }
      }
    },
    "Camera_CreateVideoWallWSResponse": {
      "type": "object",
      "description": "Response from creating a video wall.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "uuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Camera_DeleteCameraWSRequest": {
      "type": "object",
      "description": "Request to delete a camera from the system.",
      "properties": {
        "cameraUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        },
        "mummify": {
          "type": "boolean",
          "description": "Whether to mummify the camera instead of permanent deletion",
          "example": false,
          "nullable": true
        }
      }
    },
    "Camera_DeleteCameraWSResponse": {
      "type": "object",
      "description": "Response indicating the result of deleting a camera.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "responseStatus": {
          "type": "string",
          "description": "Status of the delete operation",
          "enum": [
            "BASIC_AUTH_FAILED",
            "PASSWORD_MISMATCH",
            "SAME_PASSWORD",
            "USER_EXISTS",
            "USER_NOT_FOUND",
            "DEVICE_NOT_FOUND",
            "POLICY_NOT_FOUND",
            "LOCATION_NOT_FOUND",
            "ORG_NOT_FOUND",
            "BAD_INPUT",
            "SUCCESS",
            "PASSWORD_TOO_SHORT"
          ],
          "nullable": true
        }
      }
    },
    "Camera_DeleteCustomFootageSeekpointsWSRequest": {
      "type": "object",
      "description": "Request to delete custom footage seek points for cameras within a time range.",
      "properties": {
        "cameraUuids": {
          "type": "array",
          "description": "List of camera UUIDs to delete custom seek points for",
          "items": {
            "type": "string",
            "format": "DeviceFacetUuid",
            "description": "RUUID with optional appended facet information",
            "example": "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable": true
          },
          "nullable": true
        },
        "customName": {
          "type": "string",
          "description": "Filter which custom seek points to delete with the custom name provided",
          "example": "motion_event",
          "nullable": true
        },
        "endTimestampMs": {
          "type": "integer",
          "format": "int64",
          "description": "UNIX milliseconds timestamp to end custom seek point deletion, up to 24 hours from the start timestamp",
          "example": 1641081600000,
          "nullable": true
        },
        "startTimestampMs": {
          "type": "integer",
          "format": "int64",
          "description": "UNIX milliseconds timestamp to start custom seek point deletion",
          "example": 1640995200000,
          "nullable": true
        }
      }
    },
    "Camera_DeleteCustomFootageSeekpointsWSResponse": {
      "type": "object",
      "description": "Response containing the results of deleting custom footage seek points.",
      "properties": {
        "deleteSeekpointResponseMap": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/components/schemas/Camera_DeleteCustomFootageSeekpointsWSResponse_SeekPointDeleteResponse"
          },
          "description": "Mapping of camera UUIDs to seek point deletion results",
          "nullable": true
        },
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Camera_DeleteSharedLiveVideoStreamWSRequest": {
      "type": "object",
      "description": "Request to delete a shared live video stream.",
      "properties": {
        "cameraUuid": {
          "type": "string",
          "format": "DeviceFacetUuid",
          "description": "RUUID with optional appended facet information",
          "example": "AAAAAAAAAAAAAAAAAAAAAA.v0",
          "nullable": true
        },
        "uuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Camera_DeleteSharedVideoWallWSRequest": {
      "type": "object",
      "description": "Request to delete a shared video wall.",
      "properties": {
        "uuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        },
        "videoWallUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Camera_DeleteSharedVideoWallWSResponse": {
      "type": "object",
      "description": "Response indicating the result of deleting a shared video wall.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Camera_DeleteVideoWallWSRequest": {
      "type": "object",
      "description": "Request to delete a video wall configuration.",
      "properties": {
        "uuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Camera_DeleteVideoWallWSResponse": {
      "type": "object",
      "description": "Response indicating the result of deleting a video wall configuration.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Camera_EraseCameraWSRequest": {
      "type": "object",
      "description": "Request to permanently erase a camera from the system.",
      "properties": {
        "cameraUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Camera_EraseCameraWSResponse": {
      "type": "object",
      "description": "Response indicating the result of erasing a camera.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Camera_FindAllSharedLiveVideoStreamsWSRequest": {
      "type": "object",
      "description": "Request to find all shared live video streams."
    },
    "Camera_FindAllSharedLiveVideoStreamsWSResponse": {
      "type": "object",
      "description": "Response containing all shared live video streams.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "sharedLiveVideoStreams": {
          "type": "array",
          "description": "List of shared live video streams",
          "items": {
            "$ref": "#/components/schemas/Camera_SharedLiveVideoStreamWS"
          },
          "nullable": true
        }
      }
    },
    "Camera_FindSharedLiveVideoStreamsForWSRequest": {
      "type": "object",
      "description": "Request to find shared live video streams for a camera.",
      "properties": {
        "cameraUuid": {
          "type": "string",
          "format": "DeviceFacetUuid",
          "description": "RUUID with optional appended facet information",
          "example": "AAAAAAAAAAAAAAAAAAAAAA.v0",
          "nullable": true
        }
      }
    },
    "Camera_FindSharedLiveVideoStreamsWSResponse": {
      "type": "object",
      "description": "Response containing shared live video streams.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "sharedLiveVideoStreams": {
          "type": "array",
          "description": "List of shared live video streams",
          "items": {
            "$ref": "#/components/schemas/Camera_SharedLiveVideoStreamWS"
          },
          "nullable": true
        }
      }
    },
    "Camera_FindSharedVideoWallsWSRequest": {
      "type": "object",
      "description": "Request to find shared video walls for a video wall.",
      "properties": {
        "videoWallUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Camera_FindSharedVideoWallsWSResponse": {
      "type": "object",
      "description": "Response containing shared video walls for a video wall.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "sharedVideoWalls": {
          "type": "array",
          "description": "List of shared video walls",
          "items": {
            "$ref": "#/components/schemas/Camera_SharedVideoWallWS"
          },
          "nullable": true
        }
      }
    },
    "Camera_GenerateBatchRegistrationInfoRequest": {
      "type": "object",
      "description": "Request to generate batch registration information for cameras.",
      "properties": {
        "adminUserPermissionGroups": {
          "type": "array",
          "description": "List of admin user permission group UUIDs",
          "items": {
            "type": "string",
            "format": "RUUID",
            "description": "base 64 (url-safe) uuid string",
            "example": "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable": true
          },
          "nullable": true
        },
        "latitude": {
          "type": "number",
          "format": "double",
          "description": "Latitude coordinate",
          "example": 37.7749,
          "nullable": true
        },
        "locationUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        },
        "longitude": {
          "type": "number",
          "format": "double",
          "description": "Longitude coordinate",
          "example": -122.4194,
          "nullable": true
        },
        "policyUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        },
        "readOnlyUserPermissionGroups": {
          "type": "array",
          "description": "List of read-only user permission group UUIDs",
          "items": {
            "type": "string",
            "format": "RUUID",
            "description": "base 64 (url-safe) uuid string",
            "example": "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable": true
          },
          "nullable": true
        }
      }
    },
    "Camera_GenerateBatchRegistrationInfoResponse": {
      "type": "object",
      "description": "Response containing batch registration information for cameras.",
      "properties": {
        "env": {
          "type": "string",
          "description": "Environment identifier",
          "example": "production",
          "nullable": true
        },
        "token": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Camera_GenerateWifiChangeAuthorizationTokenWSRequest": {
      "type": "object",
      "description": "Request to generate a WiFi change authorization token.",
      "properties": {
        "perceivedIp": {
          "type": "string",
          "description": "Perceived IP address",
          "example": "192.168.1.100",
          "nullable": true
        },
        "ssid": {
          "type": "string",
          "description": "WiFi network SSID",
          "example": "MyWiFiNetwork",
          "nullable": true
        }
      }
    },
    "Camera_GenerateWifiChangeAuthorizationTokenWSResponse": {
      "type": "object",
      "description": "Response containing a WiFi change authorization token.",
      "properties": {
        "authorizationToken": {
          "type": "array",
          "description": "Authorization token for WiFi change",
          "items": {
            "type": "string",
            "format": "byte",
            "description": "Authorization token for WiFi change",
            "nullable": true
          },
          "nullable": true
        },
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "userUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Camera_GetBatchRegistrationTokenUsageRequest": {
      "type": "object",
      "description": "Request to retrieve batch registration token usage information.",
      "properties": {
        "sinceMillis": {
          "type": "integer",
          "format": "int64",
          "description": "Timestamp in milliseconds since epoch to check usage from",
          "example": 1640995200000,
          "nullable": true
        },
        "token": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Camera_GetBatchRegistrationTokenUsageResponse": {
      "type": "object",
      "description": "Response containing batch registration token usage information.",
      "properties": {
        "usageList": {
          "type": "array",
          "description": "List of batch registration token usage results",
          "items": {
            "$ref": "#/components/schemas/BatchRegistrationTokenUsageResult"
          },
          "nullable": true
        }
      }
    },
    "Camera_GetCameraAIThresholdsWSRequest": {
      "type": "object",
      "description": "Request to retrieve AI thresholds for a camera.",
      "properties": {
        "cameraUuid": {
          "type": "string",
          "format": "DeviceFacetUuid",
          "description": "RUUID with optional appended facet information",
          "example": "AAAAAAAAAAAAAAAAAAAAAA.v0",
          "nullable": true
        }
      }
    },
    "Camera_GetCameraAIThresholdsWSResponse": {
      "type": "object",
      "description": "Response containing AI thresholds for a camera.",
      "properties": {
        "consecutiveHumanFilter": {
          "type": "integer",
          "format": "int32",
          "description": "Require this many consecutive frames of seeing a human to include that human detection in results. Set to 1 to always include detections, or higher to avoid false positives due to transient motion like bugs/spiders/rain. Default is 2 consecutive frames.",
          "example": 3,
          "nullable": true
        },
        "consecutiveVehicleFilter": {
          "type": "integer",
          "format": "int32",
          "description": "Require this many consecutive frames of seeing a vehicle to include that vehicle detection in results. Set to 1 to always include detections, or higher to avoid false positives due to transient motion like bugs/spiders/rain. Default is 2 consecutive frames.",
          "example": 3,
          "nullable": true
        },
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "faceConfidenceThreshold": {
          "type": "number",
          "format": "float",
          "description": "Confidence threshold for face detection. 0 or null means the built-in default.",
          "example": 0.8,
          "nullable": true
        },
        "faceMatchConfidenceThreshold": {
          "type": "number",
          "format": "float",
          "deprecated": true,
          "description": "Confidence threshold for face matching (determining if two faces are the same person). 0 or null means the built-in default. We no longer support device specific face matching threshold. This property is deprecated and will be removed.",
          "maximum": 1.0,
          "minimum": 0.0,
          "nullable": true
        },
        "humanConfidenceThreshold": {
          "type": "number",
          "format": "float",
          "description": "Confidence threshold for human detection. 0 or null means the built-in default.",
          "example": 0.7,
          "nullable": true
        },
        "lprConfidenceThreshold": {
          "type": "number",
          "format": "float",
          "description": "Confidence threshold for license plate detection and character recognition. 0 or null means the built-in default.",
          "example": 0.9,
          "nullable": true
        },
        "maxEventDurationMs": {
          "type": "integer",
          "format": "int32",
          "description": "The max event duration for an alert in milliseconds. Default is 30000, lowering down to 4000 will result in faster alert delivery but shorter alert clips.",
          "example": 15000,
          "nullable": true
        },
        "vehicleConfidenceThreshold": {
          "type": "number",
          "format": "float",
          "description": "Confidence threshold for vehicle detection. 0 or null means the built-in default.",
          "example": 0.7,
          "nullable": true
        }
      }
    },
    "Camera_GetCameraDetailsWSRequest": {
      "type": "object",
      "description": "Request to retrieve detailed information for multiple cameras.",
      "properties": {
        "cameraUuids": {
          "type": "array",
          "description": "List of camera UUIDs to retrieve details for",
          "items": {
            "type": "string",
            "format": "RUUID",
            "description": "base 64 (url-safe) uuid string",
            "example": "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable": true
          },
          "nullable": true
        }
      }
    },
    "Camera_GetCameraDetailsWSResponse": {
      "type": "object",
      "description": "Response containing detailed information for multiple cameras.",
      "properties": {
        "cameras": {
          "type": "array",
          "description": "List of camera details",
          "items": {
            "$ref": "#/components/schemas/Camera_CameraExternalType"
          },
          "nullable": true
        },
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Camera_GetCloudArchivedMediaInfoWSRequest": {
      "type": "object",
      "description": "Request to retrieve cloud archived media information for a camera.",
      "properties": {
        "cameraUuid": {
          "type": "string",
          "format": "DeviceFacetUuid",
          "description": "RUUID with optional appended facet information",
          "example": "AAAAAAAAAAAAAAAAAAAAAA.v0",
          "nullable": true
        }
      }
    },
    "Camera_GetCloudArchivedMediaInfoWSResponse": {
      "type": "object",
      "description": "Response containing cloud archived media information for a camera.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "oldestArchivedVideoSegmentSecs": {
          "type": "integer",
          "format": "int64",
          "description": "Timestamp of the oldest archived video segment in seconds since epoch",
          "example": 1640995200,
          "nullable": true
        }
      }
    },
    "Camera_GetCloudArchivingConfigWSRequest": {
      "type": "object",
      "description": "Request to get cloud archiving configuration.",
      "properties": {
        "deviceUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Camera_GetCloudArchivingConfigWSResponse": {
      "type": "object",
      "description": "Response containing cloud archiving configuration.",
      "properties": {
        "archivingConfig": {
          "$ref": "#/components/schemas/ScopedCloudArchivingConfig"
        },
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Camera_GetConfigWSRequest": {
      "type": "object",
      "description": "Request to retrieve camera configuration settings.",
      "properties": {
        "cameraUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Camera_GetConfigWSResponse": {
      "type": "object",
      "description": "Response containing camera configuration settings.",
      "properties": {
        "config": {
          "$ref": "#/components/schemas/Deviceconfig_userconfig_IExternalReadableAudioVideoUserConfig"
        },
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Camera_GetCurrentStateWSRequest": {
      "type": "object",
      "description": "Request to retrieve the current state of a camera (deprecated).",
      "properties": {
        "cameraUuid": {
          "type": "string",
          "format": "DeviceFacetUuid",
          "description": "RUUID with optional appended facet information",
          "example": "AAAAAAAAAAAAAAAAAAAAAA.v0",
          "nullable": true
        },
        "force": {
          "type": "boolean",
          "description": "Whether to force a refresh of the camera state",
          "example": false,
          "nullable": true
        }
      }
    },
    "Camera_GetCurrentStateWSResponse": {
      "type": "object",
      "description": "Response containing the current state of a camera (deprecated).",
      "properties": {
        "cameraState": {
          "$ref": "#/components/schemas/Camera_CameraCurrentStateType"
        },
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Camera_GetCustomFootageSeekpointsV2WSRequest": {
      "type": "object",
      "description": "Request to retrieve custom footage seek points V2 for cameras within a time range.",
      "properties": {
        "customDescription": {
          "type": "string",
          "description": "Filters which custom footage seek point to search for by description",
          "example": "Motion detected in camera view",
          "nullable": true
        },
        "customDisplayName": {
          "type": "string",
          "description": "Filters which custom footage seek point to search for by name",
          "example": "motion_event",
          "nullable": true
        },
        "deviceUuids": {
          "type": "array",
          "description": "List of device UUIDs to filter the search",
          "items": {
            "type": "string",
            "format": "DeviceFacetUuid",
            "description": "RUUID with optional appended facet information",
            "example": "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable": true
          },
          "nullable": true
        },
        "duration": {
          "type": "integer",
          "format": "int64",
          "description": "How far from the start timestamp to search in seconds",
          "example": 3600,
          "nullable": true
        },
        "locationUuids": {
          "type": "array",
          "description": "List of location UUIDs to filter the search",
          "items": {
            "type": "string",
            "format": "RUUID",
            "description": "base 64 (url-safe) uuid string",
            "example": "AAAAAAAAAAAAAAAAAAAAAA",
            "nullable": true
          },
          "nullable": true
        },
        "startTime": {
          "type": "integer",
          "format": "int64",
          "description": "Starting timestamp of the search in UNIX seconds",
          "example": 1640995200,
          "nullable": true
        }
      }
    },
    "Camera_GetCustomFootageSeekpointsV2WSResponse": {
      "type": "object",
      "description": "Response containing custom footage seek points V2 for cameras.",
      "properties": {
        "customFootageSeekPoints": {
          "type": "array",
          "description": "List of custom footage seek points V2",
          "items": {
            "$ref": "#/components/schemas/SeekpointIndexType"
          },
          "nullable": true
        },
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Camera_GetFootageBoundingBoxesForMultipleWSRequest": {
      "type": "object",
      "description": "Request to retrieve footage bounding boxes for multiple cameras within a time range.",
      "properties": {
        "cameraUuids": {
          "type": "array",
          "description": "List of camera UUIDs to retrieve bounding boxes for",
          "items": {
            "type": "string",
            "format": "DeviceFacetUuid",
            "description": "RUUID with optional appended facet information",
            "example": "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable": true
          },
          "nullable": true
        },
        "durationSec": {
          "type": "integer",
          "format": "int32",
          "description": "Duration in seconds",
          "example": 3600,
          "nullable": true
        },
        "startTimeSec": {
          "type": "integer",
          "format": "int64",
          "description": "Start time in seconds since epoch",
          "example": 1640995200,
          "nullable": true
        }
      }
    },
    "Camera_GetFootageBoundingBoxesForMultipleWSResponse": {
      "type": "object",
      "description": "Response containing footage bounding boxes for multiple cameras.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "footageBoundingBoxMap": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/components/schemas/Camera_FootageBoundingBoxSummaryType"
          },
          "description": "Mapping of timestamps to footage bounding box summaries",
          "nullable": true
        }
      }
    },
    "Camera_GetFootageBoundingBoxesWSRequest": {
      "type": "object",
      "description": "Request to retrieve footage bounding boxes for a camera within a time range.",
      "properties": {
        "cameraUuid": {
          "type": "string",
          "format": "DeviceFacetUuid",
          "description": "RUUID with optional appended facet information",
          "example": "AAAAAAAAAAAAAAAAAAAAAA.v0",
          "nullable": true
        },
        "duration": {
          "type": "integer",
          "format": "int32",
          "description": "Duration in seconds",
          "example": 3600,
          "nullable": true
        },
        "startTime": {
          "type": "integer",
          "format": "int64",
          "description": "Start time in seconds since epoch",
          "example": 1640995200,
          "nullable": true
        }
      }
    },
    "Camera_GetFootageBoundingBoxesWSResponse": {
      "type": "object",
      "description": "Response containing footage bounding boxes for a camera.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "footageBoundingBoxes": {
          "type": "array",
          "description": "List of footage bounding boxes",
          "items": {
            "$ref": "#/components/schemas/FootageBoundingBoxType"
          },
          "nullable": true
        }
      }
    },
    "Camera_GetFootageSeekpointsForMultipleWSRequest": {
      "type": "object",
      "description": "Request to retrieve footage seek points for multiple cameras within a time range.",
      "properties": {
        "cameraUuids": {
          "type": "array",
          "description": "List of camera UUIDs to retrieve seek points for",
          "items": {
            "type": "string",
            "format": "DeviceFacetUuid",
            "description": "RUUID with optional appended facet information",
            "example": "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable": true
          },
          "nullable": true
        },
        "durationSec": {
          "type": "integer",
          "format": "int32",
          "description": "Duration in seconds",
          "example": 3600,
          "nullable": true
        },
        "includeAnyMotion": {
          "type": "boolean",
          "description": "Whether to include any motion events",
          "example": true,
          "nullable": true
        },
        "startTimeSec": {
          "type": "integer",
          "format": "int64",
          "description": "Start time in seconds since epoch",
          "example": 1640995200,
          "nullable": true
        }
      }
    },
    "Camera_GetFootageSeekpointsForMultipleWSResponse": {
      "type": "object",
      "description": "Response containing footage seek points for multiple cameras.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "footageSeekPointMap": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/components/schemas/Camera_FootageSeekPointSummaryType"
          },
          "description": "Mapping of timestamps to footage seek point summaries",
          "nullable": true
        }
      }
    },
    "Camera_GetFootageSeekpointsV2WSRequest": {
      "type": "object",
      "description": "Request to retrieve footage seek points V2 for a camera within a time range.",
      "properties": {
        "cameraUuid": {
          "type": "string",
          "format": "DeviceFacetUuid",
          "description": "RUUID with optional appended facet information",
          "example": "AAAAAAAAAAAAAAAAAAAAAA.v0",
          "nullable": true
        },
        "duration": {
          "type": "integer",
          "format": "int32",
          "description": "Duration in seconds",
          "example": 3600,
          "nullable": true
        },
        "includeAnyMotion": {
          "type": "boolean",
          "description": "Whether to include any motion events",
          "example": true,
          "nullable": true
        },
        "startTime": {
          "type": "integer",
          "format": "int64",
          "description": "Start time in seconds since epoch",
          "example": 1640995200,
          "nullable": true
        }
      }
    },
    "Camera_GetFootageSeekpointsV2WSResponse": {
      "type": "object",
      "description": "Response containing footage seek points V2 for a camera.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "footageSeekPoints": {
          "type": "array",
          "description": "List of footage seek points V2",
          "items": {
            "$ref": "#/components/schemas/FootageSeekPointV2Type"
          },
          "nullable": true
        }
      }
    },
    "Camera_GetFullCameraStateWSRequest": {
      "type": "object",
      "description": "Request to retrieve the full state information of a camera.",
      "properties": {
        "cameraUuid": {
          "type": "string",
          "format": "DeviceFacetUuid",
          "description": "RUUID with optional appended facet information",
          "example": "AAAAAAAAAAAAAAAAAAAAAA.v0",
          "nullable": true
        },
        "force": {
          "type": "boolean",
          "description": "Whether to force a refresh of the camera state",
          "example": false,
          "nullable": true
        }
      }
    },
    "Camera_GetFullCameraStateWSResponse": {
      "type": "object",
      "description": "Response containing the full state information of a camera.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "fullCameraState": {
          "$ref": "#/components/schemas/FullDeviceStateType"
        }
      }
    },
    "Camera_GetMediaUrisWSRequest": {
      "type": "object",
      "description": "Request to get media URIs for a camera device.",
      "properties": {
        "cameraUuid": {
          "type": "string",
          "format": "DeviceFacetUuid",
          "description": "RUUID with optional appended facet information",
          "example": "AAAAAAAAAAAAAAAAAAAAAA.v0",
          "nullable": true
        }
      }
    },
    "Camera_GetMediaUrisWSResponse": {
      "type": "object",
      "description": "Response containing media URIs for camera streaming and playback.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "lanCheckUrls": {
          "type": "array",
          "description": "List of LAN check URLs to verify device availability",
          "items": {
            "type": "string",
            "description": "List of LAN check URLs to verify device availability",
            "nullable": true
          },
          "nullable": true
        },
        "lanLiveH264Uris": {
          "type": "array",
          "description": "List of LAN H.264 live streaming URIs",
          "items": {
            "type": "string",
            "description": "List of LAN H.264 live streaming URIs",
            "nullable": true
          },
          "nullable": true
        },
        "lanLiveM3u8Uris": {
          "type": "array",
          "description": "List of LAN M3U8 live streaming URIs",
          "items": {
            "type": "string",
            "description": "List of LAN M3U8 live streaming URIs",
            "nullable": true
          },
          "nullable": true
        },
        "lanLiveMpdUris": {
          "type": "array",
          "description": "List of LAN MPD live streaming URIs",
          "items": {
            "type": "string",
            "description": "List of LAN MPD live streaming URIs",
            "nullable": true
          },
          "nullable": true
        },
        "lanVodM3u8UrisTemplates": {
          "type": "array",
          "description": "List of LAN M3U8 VOD URI templates",
          "items": {
            "type": "string",
            "description": "List of LAN M3U8 VOD URI templates",
            "nullable": true
          },
          "nullable": true
        },
        "lanVodMpdUrisTemplates": {
          "type": "array",
          "description": "List of LAN MPD VOD URI templates",
          "items": {
            "type": "string",
            "description": "List of LAN MPD VOD URI templates",
            "nullable": true
          },
          "nullable": true
        },
        "wanLiveH264Uri": {
          "type": "string",
          "description": "WAN H.264 live streaming URI",
          "example": "rtsp://camera.example.com/live",
          "nullable": true
        },
        "wanLiveM3u8Uri": {
          "type": "string",
          "description": "WAN M3U8 live streaming URI",
          "example": "https://camera.example.com/live.m3u8",
          "nullable": true
        },
        "wanLiveMpdUri": {
          "type": "string",
          "description": "WAN MPD live streaming URI",
          "example": "https://camera.example.com/live.mpd",
          "nullable": true
        },
        "wanVodH264UriTemplate": {
          "type": "string",
          "description": "WAN H.264 VOD URI template",
          "example": "https://camera.example.com/vod/{timestamp}.h264",
          "nullable": true
        },
        "wanVodM3u8UriTemplate": {
          "type": "string",
          "description": "WAN M3U8 VOD URI template",
          "example": "https://camera.example.com/vod/{timestamp}.m3u8",
          "nullable": true
        },
        "wanVodMpdUriTemplate": {
          "type": "string",
          "description": "WAN MPD VOD URI template",
          "example": "https://camera.example.com/vod/{timestamp}.mpd",
          "nullable": true
        }
      }
    },
    "Camera_GetMinimalCameraLocationMapWSRequest": {
      "type": "object",
      "description": "Request to retrieve a mapping of cameras to their location information."
    },
    "Camera_GetMinimalCameraLocationMapWSResponse": {
      "type": "object",
      "description": "Response containing a mapping of cameras to their location information.",
      "properties": {
        "cameraLocationMap": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/components/schemas/Camera_GetMinimalCameraLocationMapWSResponse_CameraLocationInfo"
          },
          "description": "Mapping of camera UUIDs to location information",
          "nullable": true
        },
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Camera_GetMinimalCameraStateListWSRequest": {
      "type": "object",
      "description": "Request to retrieve a minimal list of camera states.",
      "properties": {
        "includeMummified": {
          "type": "boolean",
          "description": "Whether to include mummified cameras in the response",
          "example": false,
          "nullable": true
        }
      }
    },
    "Camera_GetMinimalCameraStateListWSResponse": {
      "type": "object",
      "description": "Response containing a minimal list of camera states.",
      "properties": {
        "cameraStates": {
          "type": "array",
          "description": "List of minimal camera state information",
          "items": {
            "$ref": "#/components/schemas/MinimalDeviceStateType"
          },
          "nullable": true
        },
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Camera_GetMinimalListWSRequest": {
      "type": "object",
      "description": "Request to retrieve a minimal list of cameras (deprecated).",
      "properties": {
        "includeMummified": {
          "type": "boolean",
          "description": "Whether to include mummified cameras in the response",
          "example": false,
          "nullable": true
        }
      }
    },
    "Camera_GetMinimalListWSResponse": {
      "type": "object",
      "description": "Response containing a minimal list of cameras (deprecated).",
      "properties": {
        "cameras": {
          "type": "array",
          "description": "List of minimal camera information",
          "items": {
            "$ref": "#/components/schemas/Camera_MinimalCameraType"
          },
          "nullable": true
        },
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Camera_GetOfflineLanStreamingInfoWSRequest": {
      "type": "object",
      "description": "Request to retrieve offline LAN streaming information for cameras."
    },
    "Camera_GetOfflineLanStreamingInfoWSResponse": {
      "type": "object",
      "description": "Response containing offline LAN streaming information for cameras.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "info": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/components/schemas/Camera_CameraOfflineLanStreamingInfo"
          },
          "description": "Mapping of camera UUIDs to offline LAN streaming information",
          "nullable": true
        }
      }
    },
    "Camera_GetPresenceWindowsWSRequest": {
      "type": "object",
      "description": "Request to retrieve presence windows for a camera within a time range.",
      "properties": {
        "cameraUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        },
        "durationSec": {
          "type": "integer",
          "format": "int64",
          "description": "Duration in seconds",
          "example": 3600,
          "nullable": true
        },
        "startTimeSec": {
          "type": "integer",
          "format": "int64",
          "description": "Start time in seconds since epoch",
          "example": 1640995200,
          "nullable": true
        }
      }
    },
    "Camera_GetPresenceWindowsWSResponse": {
      "type": "object",
      "description": "Response containing presence windows for a camera.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "presenceWindows": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "description": "Mapping of presence types to time windows",
            "items": {
              "$ref": "#/components/schemas/TimeWindowSeconds"
            },
            "nullable": true
          },
          "description": "Mapping of presence types to time windows",
          "nullable": true
        }
      }
    },
    "Camera_GetStorageRecoveryFileWSRequest": {
      "type": "object",
      "description": "Request to get storage recovery file for a device.",
      "properties": {
        "deviceUuid": {
          "type": "string",
          "format": "DeviceFacetUuid",
          "description": "RUUID with optional appended facet information",
          "example": "AAAAAAAAAAAAAAAAAAAAAA.v0",
          "nullable": true
        }
      }
    },
    "Camera_GetStorageRecoveryFileWSResponse": {
      "type": "object",
      "description": "Response containing storage recovery file contents.",
      "properties": {
        "fileContents": {
          "type": "array",
          "description": "Binary contents of the storage recovery file",
          "example": "[binary data]",
          "items": {
            "type": "string",
            "format": "byte",
            "description": "Binary contents of the storage recovery file",
            "example": "W2JpbmFyeSBkYXRhXQ==",
            "nullable": true
          },
          "nullable": true
        }
      }
    },
    "Camera_GetUptimeWindowsWSRequest": {
      "type": "object",
      "description": "Request to retrieve uptime windows for a camera within a time range.",
      "properties": {
        "cameraUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        },
        "endTime": {
          "type": "integer",
          "format": "int64",
          "description": "End time in seconds since epoch",
          "example": 1641081600,
          "nullable": true
        },
        "startTime": {
          "type": "integer",
          "format": "int64",
          "description": "Start time in seconds since epoch",
          "example": 1640995200,
          "nullable": true
        }
      }
    },
    "Camera_GetUptimeWindowsWSResponse": {
      "type": "object",
      "description": "Response containing uptime windows for a camera.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "uptimeWindows": {
          "type": "array",
          "description": "List of uptime windows",
          "items": {
            "$ref": "#/components/schemas/TimeWindowSeconds"
          },
          "nullable": true
        }
      }
    },
    "Camera_GetVideoWallsWSRequest": {
      "type": "object",
      "description": "Request to retrieve all video wall configurations."
    },
    "Camera_GetVideoWallsWSResponse": {
      "type": "object",
      "description": "Response containing video wall configurations and associated user name mappings.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "userNameMap": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "description": "Mapping of user UUIDs to user names",
            "nullable": true
          },
          "description": "Mapping of user UUIDs to user names",
          "nullable": true
        },
        "videoWalls": {
          "type": "array",
          "description": "List of video wall summary information",
          "items": {
            "$ref": "#/components/schemas/Camera_VideoWallSummaryType"
          },
          "nullable": true
        }
      }
    },
    "Camera_RebootCameraWSRequest": {
      "type": "object",
      "description": "Request to reboot a camera device.",
      "properties": {
        "cameraUuid": {
          "type": "string",
          "format": "DeviceFacetUuid",
          "description": "RUUID with optional appended facet information",
          "example": "AAAAAAAAAAAAAAAAAAAAAA.v0",
          "nullable": true
        }
      }
    },
    "Camera_RebootCameraWSResponse": {
      "type": "object",
      "description": "Response from rebooting a camera device.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "status": {
          "type": "string",
          "description": "Status enumeration for reboot web service responses.",
          "enum": [
            "SUCCESS_REBOOT_SENT",
            "FAILED_CAMERA_OFFLINE",
            "FAILED_CAMERA_NOT_AUTHORIZED"
          ],
          "nullable": true
        }
      }
    },
    "Camera_RevertCameraToDefaultsWSRequest": {
      "type": "object",
      "properties": {
        "cameraUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Camera_RevertCameraToDefaultsWSResponse": {
      "type": "object",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Camera_UpdateCameraAIThresholdsWSRequest": {
      "type": "object",
      "description": "Request to update AI thresholds for a camera.",
      "properties": {
        "cameraUuid": {
          "type": "string",
          "format": "DeviceFacetUuid",
          "description": "RUUID with optional appended facet information",
          "example": "AAAAAAAAAAAAAAAAAAAAAA.v0",
          "nullable": true
        },
        "consecutiveHumanFilter": {
          "type": "integer",
          "format": "int32",
          "description": "Require this many consecutive frames of seeing a human to include that human detection in results. Set to 1 to always include detections, or higher to avoid false positives due to transient motion like bugs/spiders/rain. Default is 2 consecutive frames.",
          "example": 3,
          "nullable": true
        },
        "consecutiveVehicleFilter": {
          "type": "integer",
          "format": "int32",
          "description": "Require this many consecutive frames of seeing a vehicle to include that vehicle detection in results. Set to 1 to always include detections, or higher to avoid false positives due to transient motion like bugs/spiders/rain. Default is 2 consecutive frames.",
          "example": 3,
          "nullable": true
        },
        "faceConfidenceThreshold": {
          "type": "number",
          "format": "float",
          "description": "Confidence threshold for face detection. Set to 0 or null to use the default. Maximum range of 1. Default = 0.7",
          "example": 0.8,
          "nullable": true
        },
        "faceMatchConfidenceThreshold": {
          "type": "number",
          "format": "float",
          "description": "Confidence threshold for face matching (determining if two faces are the same person). Set to 0 or null to use the default. Maximum range of 1. Default = 0.7. We no longer support device specific face matching threshold. This property is deprecated and will be removed.",
          "example": 0.8,
          "nullable": true
        },
        "humanConfidenceThreshold": {
          "type": "number",
          "format": "float",
          "description": "Confidence threshold for human detection. Set to 0 or null to use the default. Maximum range of 1. Default = 0.6",
          "example": 0.7,
          "nullable": true
        },
        "lprConfidenceThreshold": {
          "type": "number",
          "format": "float",
          "description": "Confidence threshold for license plate detection and character recognition. Set to 0 or null to use the default. Maximum range of 1. Default = 0.8",
          "example": 0.9,
          "nullable": true
        },
        "maxEventDurationMs": {
          "type": "integer",
          "format": "int32",
          "description": "Set the max event duration for an alert in milliseconds. Default is 30000, lowering down to 4000 will result in faster alert delivery but shorter alert clips.",
          "example": 15000,
          "nullable": true
        },
        "vehicleConfidenceThreshold": {
          "type": "number",
          "format": "float",
          "description": "Confidence threshold for vehicle detection. Set to 0 or null to use the default. Maximum range of 1. Default = 0.6",
          "example": 0.7,
          "nullable": true
        }
      }
    },
    "Camera_UpdateCameraAIThresholdsWSResponse": {
      "type": "object",
      "description": "Response indicating the result of updating camera AI thresholds.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Camera_UpdateCameraFirmwareWSRequest": {
      "type": "object",
      "description": "Request to update camera firmware.",
      "properties": {
        "cameraUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Camera_UpdateCameraFirmwareWSResponse": {
      "type": "object",
      "description": "Response containing the status of camera firmware update.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "status": {
          "type": "string",
          "description": "Status of the firmware update operation",
          "enum": [
            "ALREADY_ON_THE_LATEST_FIRMWARE",
            "DEVICE_ON_A_SPECIAL_FIRMWARE_AND_CANNOT_BE_UPDATED",
            "UPDATE_STARTED",
            "UNABLE_TO_REACH_DEVICE",
            "FIRMWARE_UPDATE_ALREADY_IN_PROGESS",
            "DEVICE_NOT_AUTHROIZED"
          ],
          "nullable": true
        }
      }
    },
    "Camera_UpdateCameraLineCrossingThresholdsWSRequest": {
      "type": "object",
      "description": "Request to update line crossing thresholds for a camera.",
      "properties": {
        "cameraUuid": {
          "type": "string",
          "format": "DeviceFacetUuid",
          "description": "RUUID with optional appended facet information",
          "example": "AAAAAAAAAAAAAAAAAAAAAA.v0",
          "nullable": true
        },
        "directions": {
          "type": "array",
          "description": "Set of crossing directions to monitor.",
          "items": {
            "type": "string",
            "description": "Set of crossing directions to monitor.",
            "enum": [
              "INGRESS",
              "EGRESS"
            ],
            "nullable": true
          },
          "nullable": true,
          "uniqueItems": true
        },
        "inverted": {
          "type": "boolean",
          "description": "By default, INGRESS events occur when the following condition is met for the following line types: an entity moves from top -> bottom when a horizontal line is defined, an entity moves from left -> right when a vertical line is defined, an entity moves from top-left -> bottom-right when an upwards sloping line is defined, and an entity moves from top-right to bottom-left when a downwards sloping line is defined. Setting this value to true will switch INGRESS to EGRESS events and vice-versa.",
          "example": false,
          "nullable": true
        },
        "objectType": {
          "type": "string",
          "description": "Type of object to monitor for line crossing.",
          "enum": [
            "HUMAN",
            "VEHICLE",
            "FACE",
            "LPR",
            "POSE",
            "CLIP_EMBED",
            "UNKNOWN"
          ],
          "nullable": true
        },
        "pointA": {
          "$ref": "#/components/schemas/Camera_UpdateCameraLineCrossingThresholdsWSRequest_Coordinate"
        },
        "pointB": {
          "$ref": "#/components/schemas/Camera_UpdateCameraLineCrossingThresholdsWSRequest_Coordinate"
        }
      }
    },
    "Camera_UpdateCameraLineCrossingThresholdsWSResponse": {
      "type": "object",
      "description": "Response indicating the result of updating camera line crossing thresholds.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Camera_UpdateCameraV2WSRequest": {
      "type": "object",
      "description": "Request to update camera information V2 with partial update support.",
      "properties": {
        "customData": {
          "type": "string",
          "description": "Custom data for the camera",
          "nullable": true
        },
        "customDataUpdated": {
          "type": "boolean",
          "description": "Whether custom data was updated",
          "example": false,
          "nullable": true
        },
        "deleted": {
          "type": "boolean",
          "description": "Whether the camera is deleted",
          "example": false,
          "nullable": true
        },
        "deletedUpdated": {
          "type": "boolean",
          "description": "Whether deleted status was updated",
          "example": false,
          "nullable": true
        },
        "description": {
          "type": "string",
          "description": "Description of the camera",
          "example": "Camera monitoring the front entrance",
          "nullable": true
        },
        "descriptionUpdated": {
          "type": "boolean",
          "description": "Whether description was updated",
          "example": false,
          "nullable": true
        },
        "directionRadians": {
          "type": "number",
          "format": "float",
          "description": "Direction in radians",
          "example": 1.5708,
          "nullable": true
        },
        "directionRadiansUpdated": {
          "type": "boolean",
          "description": "Whether direction radians was updated",
          "example": false,
          "nullable": true
        },
        "facetNameMap": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "description": "Mapping of device facets to names",
            "nullable": true
          },
          "description": "Mapping of device facets to names",
          "nullable": true
        },
        "facetNameMapUpdated": {
          "type": "boolean",
          "description": "Whether facet name map was updated",
          "example": false,
          "nullable": true
        },
        "floorNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Floor number",
          "example": 1,
          "nullable": true
        },
        "floorNumberUpdated": {
          "type": "boolean",
          "description": "Whether floor number was updated",
          "example": false,
          "nullable": true
        },
        "latitude": {
          "type": "number",
          "format": "double",
          "description": "Latitude coordinate",
          "example": 37.7749,
          "nullable": true
        },
        "latitudeUpdated": {
          "type": "boolean",
          "description": "Whether latitude was updated",
          "example": false,
          "nullable": true
        },
        "locationUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        },
        "locationUuidUpdated": {
          "type": "boolean",
          "description": "Whether location UUID was updated",
          "example": false,
          "nullable": true
        },
        "longitude": {
          "type": "number",
          "format": "double",
          "description": "Longitude coordinate",
          "example": -122.4194,
          "nullable": true
        },
        "longitudeUpdated": {
          "type": "boolean",
          "description": "Whether longitude was updated",
          "example": false,
          "nullable": true
        },
        "mummified": {
          "type": "boolean",
          "description": "Whether the camera is mummified",
          "example": false,
          "nullable": true
        },
        "mummifiedUpdated": {
          "type": "boolean",
          "description": "Whether mummified status was updated",
          "example": false,
          "nullable": true
        },
        "name": {
          "type": "string",
          "description": "Name of the camera",
          "example": "Front Door Camera",
          "nullable": true
        },
        "nameUpdated": {
          "type": "boolean",
          "description": "Whether name was updated",
          "example": false,
          "nullable": true
        },
        "policyUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        },
        "policyUuidUpdated": {
          "type": "boolean",
          "description": "Whether policy UUID was updated",
          "example": false,
          "nullable": true
        },
        "subLocationsHierarchyKey": {
          "$ref": "#/components/schemas/SubLocationsHierarchyKey"
        },
        "subLocationsHierarchyKeyUpdated": {
          "type": "boolean",
          "description": "Whether sub-locations hierarchy key was updated",
          "example": false,
          "nullable": true
        },
        "uuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        }
      }
    },
    "Camera_UpdateCameraV2WSResponse": {
      "type": "object",
      "description": "Response indicating the result of updating camera information V2.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Camera_UpdateCameraWSRequest": {
      "type": "object",
      "description": "Request to update camera information (deprecated).",
      "properties": {
        "camera": {
          "$ref": "#/components/schemas/Camera_CameraBackwardsCompatUpdateType"
        }
      }
    },
    "Camera_UpdateCameraWSResponse": {
      "type": "object",
      "description": "Response indicating the result of updating camera information (deprecated).",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Camera_UpdateCamerasBulkV2WSRequest": {
      "type": "object",
      "description": "Request to update multiple cameras in bulk V2.",
      "properties": {
        "cameraBulkDetails": {
          "type": "array",
          "description": "List of camera bulk update details",
          "items": {
            "$ref": "#/components/schemas/Camera_UpdateCameraV2WSRequest"
          },
          "nullable": true
        }
      }
    },
    "Camera_UpdateConfigWSRequest": {
      "type": "object",
      "description": "Request to update camera configuration settings.",
      "properties": {
        "config": {
          "$ref": "#/components/schemas/Deviceconfig_userconfig_IExternalUpdateableAudioVideoUserConfig"
        }
      }
    },
    "Camera_UpdateVideoWallWSRequest": {
      "type": "object",
      "description": "Request to update a video wall configuration.",
      "properties": {
        "videoWall": {
          "$ref": "#/components/schemas/VideoWallType"
        }
      }
    },
    "Camera_UpdateVideoWallWSResponse": {
      "type": "object",
      "description": "Response indicating the result of updating a video wall configuration.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Camera_UpdateWifiWSRequest": {
      "type": "object",
      "description": "Request to update WiFi settings for one or more cameras.",
      "properties": {
        "cameraUuid": {
          "type": "string",
          "format": "DeviceFacetUuid",
          "description": "RUUID with optional appended facet information",
          "example": "AAAAAAAAAAAAAAAAAAAAAA.v0",
          "nullable": true
        },
        "cameraUuids": {
          "type": "array",
          "description": "List of camera UUIDs to update WiFi settings for",
          "items": {
            "type": "string",
            "format": "DeviceFacetUuid",
            "description": "RUUID with optional appended facet information",
            "example": "AAAAAAAAAAAAAAAAAAAAAA.v0",
            "nullable": true
          },
          "nullable": true
        },
        "password": {
          "type": "string",
          "description": "WiFi network password",
          "example": "password123",
          "nullable": true
        },
        "ssid": {
          "type": "string",
          "description": "WiFi network SSID",
          "example": "MyWiFiNetwork",
          "nullable": true
        }
      }
    },
    "Camera_UpdateWifiWSResponse": {
      "type": "object",
      "description": "Response containing the status of WiFi update operations for each camera.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "status": {
          "type": "object",
          "additionalProperties": {
            "type": "boolean",
            "description": "Mapping of camera UUIDs to WiFi update success status",
            "nullable": true
          },
          "description": "Mapping of camera UUIDs to WiFi update success status",
          "nullable": true
        }
      }
    },
    "Common_devices_CalibrateFloorplanProjectionWSRequest": {
      "type": "object",
      "description": "Request to calibrate floorplan projection for a device.",
      "properties": {
        "cameraImagePointsPermyriad": {
          "type": "array",
          "description": "List of camera image points in permyriad coordinates",
          "items": {
            "type": "array",
            "description": "List of camera image points in permyriad coordinates",
            "items": {
              "type": "integer",
              "format": "int32",
              "description": "List of camera image points in permyriad coordinates",
              "nullable": true
            },
            "nullable": true
          },
          "nullable": true
        },
        "deviceUuid": {
          "type": "string",
          "format": "RUUID",
          "description": "base 64 (url-safe) uuid string",
          "example": "AAAAAAAAAAAAAAAAAAAAAA",
          "nullable": true
        },
        "floorplanImagePointsPermyriad": {
          "type": "array",
          "description": "List of floorplan image points in permyriad coordinates",
          "items": {
            "type": "array",
            "description": "List of floorplan image points in permyriad coordinates",
            "items": {
              "type": "integer",
              "format": "int32",
              "description": "List of floorplan image points in permyriad coordinates",
              "nullable": true
            },
            "nullable": true
          },
          "nullable": true
        }
      }
    },
    "Common_devices_CalibrateFloorplanProjectionWSResponse": {
      "type": "object",
      "description": "Response containing the calibrated floorplan projection homography.",
      "properties": {
        "homography": {
          "type": "array",
          "description": "3x3 homography matrix for floorplan projection",
          "items": {
            "type": "array",
            "description": "3x3 homography matrix for floorplan projection",
            "items": {
              "type": "number",
              "format": "double",
              "description": "3x3 homography matrix for floorplan projection",
              "nullable": true
            },
            "nullable": true
          },
          "nullable": true
        }
      }
    },
    "Common_devices_UpdateConfigWSResponse": {
      "type": "object",
      "description": "Response indicating the result of updating device configuration.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Common_devices_rawstream_CreateRawHttpStreamWSRequest": {
      "type": "object",
      "description": "Request to create a raw HTTP stream for a device.",
      "properties": {
        "deviceUuid": {
          "type": "string",
          "format": "DeviceFacetUuid",
          "description": "RUUID with optional appended facet information",
          "example": "AAAAAAAAAAAAAAAAAAAAAA.v0",
          "nullable": true
        },
        "rawStreamName": {
          "type": "string",
          "description": "Name for the raw stream",
          "example": "my_raw_stream",
          "nullable": true
        },
        "streamType": {
          "$ref": "#/components/schemas/StreamTypeEnum"
        }
      }
    },
    "Common_devices_rawstream_CreateRawHttpStreamWSResponse": {
      "type": "object",
      "description": "Response containing raw HTTP stream URLs for a device.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "lanAudioUrl": {
          "type": "string",
          "description": "LAN audio URL for the raw stream",
          "example": "http://ip-192-168-0-1.lan.rhombussystems.com/audio",
          "nullable": true
        },
        "lanVideoLowResUrl": {
          "type": "string",
          "description": "LAN low resolution video URL for the raw stream",
          "example": "http://ip-192-168-0-1.lan.rhombussystems.com/video_low",
          "nullable": true
        },
        "lanVideoUrl": {
          "type": "string",
          "description": "LAN video URL for the raw stream",
          "example": "http://ip-192-168-0-1.lan.rhombussystems.com/video",
          "nullable": true
        }
      }
    },
    "Common_devices_rawstream_DeleteRawHttpStreamWSRequest": {
      "type": "object",
      "description": "Request to delete raw HTTP streams for a device.",
      "properties": {
        "customPathPart": {
          "type": "string",
          "description": "Custom path part to identify specific stream",
          "example": "my_stream",
          "nullable": true
        },
        "deviceUuid": {
          "type": "string",
          "format": "DeviceFacetUuid",
          "description": "RUUID with optional appended facet information",
          "example": "AAAAAAAAAAAAAAAAAAAAAA.v0",
          "nullable": true
        }
      }
    },
    "Common_devices_rawstream_DeleteRawHttpStreamWSResponse": {
      "type": "object",
      "description": "Response indicating the result of deleting raw HTTP streams.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        }
      }
    },
    "Common_devices_rawstream_FindAllRawHttpStreamsWSRequest": {
      "type": "object",
      "description": "Request to retrieve all raw HTTP streams."
    },
    "Common_devices_rawstream_FindAllRawHttpStreamsWSResponse": {
      "type": "object",
      "description": "Response containing all raw HTTP streams.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "rawHttpStreams": {
          "type": "array",
          "description": "List of all raw HTTP streams",
          "items": {
            "$ref": "#/components/schemas/Common_devices_rawstream_LanSpecificRawStreamType"
          },
          "nullable": true
        }
      }
    },
    "Common_devices_rawstream_GetRawHttpStreamsWSRequest": {
      "type": "object",
      "description": "Request to retrieve raw HTTP streams for a device.",
      "properties": {
        "deviceUuid": {
          "type": "string",
          "format": "DeviceFacetUuid",
          "description": "RUUID with optional appended facet information",
          "example": "AAAAAAAAAAAAAAAAAAAAAA.v0",
          "nullable": true
        }
      }
    },
    "Common_devices_rawstream_GetRawHttpStreamsWSResponse": {
      "type": "object",
      "description": "Response containing raw HTTP streams for a device.",
      "properties": {
        "error": {
          "type": "boolean",
          "nullable": true
        },
        "errorMsg": {
          "type": "string",
          "nullable": true
        },
        "rawHttpStreams": {
          "type": "array",
          "description": "List of raw HTTP streams",
          "items": {
            "$ref": "#/components/schemas/Common_devices_rawstream_LanSpecificRawStreamType"
          },
          "nullable": true
        }
      }
    },
    "DeleteSharedLiveVideoStreamForDeviceResponse": {
      "type": "object"
    }
  },
  "schemaCount": 107
}
