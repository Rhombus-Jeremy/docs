{
  "tag": "User Webservice",
  "description": "API endpoints for User Webservice",
  "paths": {
    "/api/customer/updateCurrentUserNotificationSettings": {
      "post": {
        "description": "Update notification settings for user",
        "operationId": "updateCurrentUserNotificationSettings",
        "parameters": [
          {
            "$ref": "#/components/parameters/XAuthSchemeParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User_UpdateUserNotificationSettingsWSRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User_UpdateUserNotificationSettingsWSResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Update notification settings for user",
        "tags": [
          "User Webservice",
          "Customer Webservice"
        ]
      }
    },
    "/api/user/assignEmailToUser": {
      "post": {
        "description": "Assign a user to an email as long as the user is not currently assigned to one, with validation to prevent duplicate email associations.",
        "operationId": "assignEmailToUser",
        "parameters": [
          {
            "$ref": "#/components/parameters/XAuthSchemeParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User_AssignEmailToUserWSRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User_AssignEmailToUserWSResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Assign email to user",
        "tags": [
          "User Webservice"
        ]
      }
    },
    "/api/user/createUser": {
      "post": {
        "description": "Create a user for organization with specified name, email, and role permissions, supporting both client and partner user types with proper validation and audit logging.",
        "operationId": "createUser",
        "parameters": [
          {
            "$ref": "#/components/parameters/XAuthSchemeParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User_CreateUserWSRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User_CreateUserWSResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Create user for organization",
        "tags": [
          "User Webservice"
        ]
      }
    },
    "/api/user/deleteUser": {
      "post": {
        "description": "Delete a user from the organization with proper validation to prevent deletion of the last super admin and current user.",
        "operationId": "deleteUser",
        "parameters": [
          {
            "$ref": "#/components/parameters/XAuthSchemeParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User_DeleteUserWSRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User_DeleteUserWSResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Delete user",
        "tags": [
          "User Webservice"
        ]
      }
    },
    "/api/user/getPartnerUsersInOrg": {
      "post": {
        "description": "Get list of all partners in organization with partner-specific user details and permissions.",
        "operationId": "getPartnerUsersInOrg",
        "parameters": [
          {
            "$ref": "#/components/parameters/XAuthSchemeParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Partner_GetPartnerUsersInOrgWSRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Partner_GetPartnerUsersInOrgWSResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Get partner users in organization",
        "tags": [
          "User Webservice"
        ]
      }
    },
    "/api/user/getUsersInOrg": {
      "post": {
        "description": "Get list of all users in organization with complete user details, permissions, notification settings, and partner information.",
        "operationId": "getUsersInOrg",
        "parameters": [
          {
            "$ref": "#/components/parameters/XAuthSchemeParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User_GetUsersInOrgWSRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User_GetUsersInOrgWSResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Get users in organization",
        "tags": [
          "User Webservice"
        ]
      }
    },
    "/api/user/updatePartnerUser": {
      "post": {
        "description": "Update a partner's details with partner-specific validation and audit logging.",
        "operationId": "updatePartnerUser",
        "parameters": [
          {
            "$ref": "#/components/parameters/XAuthSchemeParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User_UpdatePartnerWSRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User_UpdatePartnerWSResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Update partner user details",
        "tags": [
          "User Webservice"
        ]
      }
    },
    "/api/user/updatePartnerUserNotificationSettings": {
      "post": {
        "description": "Update notification settings for partner user with partner-specific notification configurations.",
        "operationId": "updatePartnerUserNotificationSettings",
        "parameters": [
          {
            "$ref": "#/components/parameters/XAuthSchemeParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User_UpdatePartnerUserNotificationSettingsWSRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User_UpdatePartnerUserNotificationSettingsWSResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Update partner user notification settings",
        "tags": [
          "User Webservice"
        ]
      }
    },
    "/api/user/updateRhombusKeySettingsForUser": {
      "post": {
        "description": "Update the RhombusKey mobile app settings for the user, including access permissions and app configuration.",
        "operationId": "updateRhombusKeySettingsForUser",
        "parameters": [
          {
            "$ref": "#/components/parameters/XAuthSchemeParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User_UpdateRhombusKeySettingsForUserWSRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User_UpdateRhombusKeySettingsForUserWSResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Update Rhombus key settings for user",
        "tags": [
          "User Webservice"
        ]
      }
    },
    "/api/user/updateUser": {
      "post": {
        "deprecated": true,
        "description": "Update a user's details, DEPRECATED[4/28/2025]: use updateUserSelective for better field-level control.",
        "operationId": "updateUser",
        "parameters": [
          {
            "$ref": "#/components/parameters/XAuthSchemeParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User_UpdateUserWSRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User_UpdateUserWSResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Update user details",
        "tags": [
          "User Webservice"
        ]
      }
    },
    "/api/user/updateUserNotificationSettings": {
      "post": {
        "description": "Update notification settings for user with various notification channels and preferences.",
        "operationId": "updateUserNotificationSettings",
        "parameters": [
          {
            "$ref": "#/components/parameters/XAuthSchemeParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User_UpdateUserNotificationSettingsWSRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User_UpdateUserNotificationSettingsWSResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Update user notification settings",
        "tags": [
          "User Webservice"
        ]
      }
    },
    "/api/user/updateUserSelective": {
      "post": {
        "description": "Selectively updates a user's details. Omitted fields are ignored but fields with null will unset a value, providing granular control over user updates.",
        "operationId": "updateUserSelective",
        "parameters": [
          {
            "$ref": "#/components/parameters/XAuthSchemeParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User_UpdateUserSelectiveWSRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User_UpdateUserSelectiveWSResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Update user details selectively",
        "tags": [
          "User Webservice"
        ]
      }
    }
  },
  "endpoints": [
    {
      "path": "/api/customer/updateCurrentUserNotificationSettings",
      "methods": [
        "post"
      ]
    },
    {
      "path": "/api/user/assignEmailToUser",
      "methods": [
        "post"
      ]
    },
    {
      "path": "/api/user/createUser",
      "methods": [
        "post"
      ]
    },
    {
      "path": "/api/user/deleteUser",
      "methods": [
        "post"
      ]
    },
    {
      "path": "/api/user/getPartnerUsersInOrg",
      "methods": [
        "post"
      ]
    },
    {
      "path": "/api/user/getUsersInOrg",
      "methods": [
        "post"
      ]
    },
    {
      "path": "/api/user/updatePartnerUser",
      "methods": [
        "post"
      ]
    },
    {
      "path": "/api/user/updatePartnerUserNotificationSettings",
      "methods": [
        "post"
      ]
    },
    {
      "path": "/api/user/updateRhombusKeySettingsForUser",
      "methods": [
        "post"
      ]
    },
    {
      "path": "/api/user/updateUser",
      "methods": [
        "post"
      ]
    },
    {
      "path": "/api/user/updateUserNotificationSettings",
      "methods": [
        "post"
      ]
    },
    {
      "path": "/api/user/updateUserSelective",
      "methods": [
        "post"
      ]
    }
  ],
  "endpointCount": 12,
  "referencedSchemas": [
    "Partner_GetPartnerUsersInOrgWSRequest",
    "Partner_GetPartnerUsersInOrgWSResponse",
    "User_AssignEmailToUserWSRequest",
    "User_AssignEmailToUserWSResponse",
    "User_CreateUserWSRequest",
    "User_CreateUserWSResponse",
    "User_DeleteUserWSRequest",
    "User_DeleteUserWSResponse",
    "User_GetUsersInOrgWSRequest",
    "User_GetUsersInOrgWSResponse",
    "User_UpdatePartnerUserNotificationSettingsWSRequest",
    "User_UpdatePartnerUserNotificationSettingsWSResponse",
    "User_UpdatePartnerWSRequest",
    "User_UpdatePartnerWSResponse",
    "User_UpdateRhombusKeySettingsForUserWSRequest",
    "User_UpdateRhombusKeySettingsForUserWSResponse",
    "User_UpdateUserNotificationSettingsWSRequest",
    "User_UpdateUserNotificationSettingsWSResponse",
    "User_UpdateUserSelectiveWSRequest",
    "User_UpdateUserSelectiveWSResponse",
    "User_UpdateUserWSRequest",
    "User_UpdateUserWSResponse"
  ]
}
