{
  "tag": "Component Webservice",
  "description": "API endpoints for Component Webservice",
  "paths": {
    "/api/component/addAccessControlledDoorLabel": {
      "post": {
        "description": "Create a label that can be assigned to an access controlled door and referenced by an access grant or access revocation",
        "operationId": "addAccessControlledDoorLabel",
        "parameters": [
          {
            "$ref": "#/components/parameters/XAuthSchemeParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Component_AddAccessControlledDoorLabelWSRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Component_AddAccessControlledDoorLabelWSResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Create a label that can be assigned to an access controlled door",
        "tags": [
          "Component Webservice"
        ]
      }
    },
    "/api/component/createAccessControlledDoor": {
      "post": {
        "description": "Create an access controlled door",
        "operationId": "createAccessControlledDoor",
        "parameters": [
          {
            "$ref": "#/components/parameters/XAuthSchemeParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Component_CreateAccessControlledDoorWSRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Component_CreateAccessControlledDoorWSResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Create an access controlled door",
        "tags": [
          "Component Webservice"
        ]
      }
    },
    "/api/component/createAccessControlledDoorSeekpoints": {
      "post": {
        "description": "Create custom activity seekpoints for a specified access controlled door",
        "operationId": "createAccessControlledDoorSeekpoints",
        "parameters": [
          {
            "$ref": "#/components/parameters/XAuthSchemeParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Component_CreateAccessControlledDoorSeekpointsWSRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Component_CreateAccessControlledDoorSeekpointsWSResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Create custom activity seekpoints for a specified access controlled door",
        "tags": [
          "Component Webservice"
        ]
      }
    },
    "/api/component/createIntegratedDoorPositionIndicator": {
      "post": {
        "description": "Create a door position indicator component",
        "operationId": "createIntegratedDoorPositionIndicator",
        "parameters": [
          {
            "$ref": "#/components/parameters/XAuthSchemeParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Component_CreateIntegratedDoorPositionIndicatorWSRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Component_CreateIntegratedDoorPositionIndicatorWSResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Create a door position indicator component",
        "tags": [
          "Component Webservice"
        ]
      }
    },
    "/api/component/createIntegratedDoorRelay": {
      "post": {
        "description": "Create a door relay component",
        "operationId": "createIntegratedDoorRelay",
        "parameters": [
          {
            "$ref": "#/components/parameters/XAuthSchemeParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Component_CreateIntegratedDoorRelayWSRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Component_CreateIntegratedDoorRelayWSResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Create a door relay component",
        "tags": [
          "Component Webservice"
        ]
      }
    },
    "/api/component/createIntegratedGenericButton": {
      "post": {
        "description": "Create a generic button component",
        "operationId": "createIntegratedGenericButton",
        "parameters": [
          {
            "$ref": "#/components/parameters/XAuthSchemeParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Component_CreateIntegratedGenericButtonWSRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Component_CreateIntegratedGenericButtonWSResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Create a generic button component",
        "tags": [
          "Component Webservice"
        ]
      }
    },
    "/api/component/createIntegratedGenericInput": {
      "post": {
        "description": "Create a generic input component",
        "operationId": "createIntegratedGenericInput",
        "parameters": [
          {
            "$ref": "#/components/parameters/XAuthSchemeParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Component_CreateIntegratedGenericInputWSRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Component_CreateIntegratedGenericInputWSResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Create a generic input component",
        "tags": [
          "Component Webservice"
        ]
      }
    },
    "/api/component/createIntegratedGenericRelay": {
      "post": {
        "description": "Create a generic relay component",
        "operationId": "createIntegratedGenericRelay",
        "parameters": [
          {
            "$ref": "#/components/parameters/XAuthSchemeParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Component_CreateIntegratedGenericRelayWSRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Component_CreateIntegratedGenericRelayWSResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Create a generic relay component",
        "tags": [
          "Component Webservice"
        ]
      }
    },
    "/api/component/createIntegratedRequestToExit": {
      "post": {
        "description": "Create a request to exit component",
        "operationId": "createIntegratedRequestToExit",
        "parameters": [
          {
            "$ref": "#/components/parameters/XAuthSchemeParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Component_CreateIntegratedRequestToExitWSRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Component_CreateIntegratedRequestToExitWSResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Create a request to exit component",
        "tags": [
          "Component Webservice"
        ]
      }
    },
    "/api/component/createOsdpDoorReader": {
      "post": {
        "description": "Create a third party OSDP Reader component",
        "operationId": "createOsdpDoorReader",
        "parameters": [
          {
            "$ref": "#/components/parameters/XAuthSchemeParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Component_CreateOsdpReaderWSRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Component_CreateOsdpReaderWSResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Create a third party OSDP Reader component",
        "tags": [
          "Component Webservice"
        ]
      }
    },
    "/api/component/createRhombusOsdpDoorReader": {
      "post": {
        "description": "Create a Rhombus OSDP Reader component",
        "operationId": "createRhombusOsdpDoorReader",
        "parameters": [
          {
            "$ref": "#/components/parameters/XAuthSchemeParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Component_CreateRhombusOsdpReaderWSRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Component_CreateRhombusOsdpReaderWSResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Create a Rhombus OSDP Reader component",
        "tags": [
          "Component Webservice"
        ]
      }
    },
    "/api/component/createWiegandReader": {
      "post": {
        "description": "Create a third party Wiegand Reader component",
        "operationId": "createWiegandReader",
        "parameters": [
          {
            "$ref": "#/components/parameters/XAuthSchemeParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Component_CreateWiegandReaderWSRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Component_CreateWiegandReaderWSResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Create a third party Wiegand Reader component",
        "tags": [
          "Component Webservice"
        ]
      }
    },
    "/api/component/deleteAccessControlledDoor": {
      "post": {
        "description": "Delete the specified access controlled door",
        "operationId": "deleteAccessControlledDoor",
        "parameters": [
          {
            "$ref": "#/components/parameters/XAuthSchemeParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Component_DeleteAccessControlledDoorWSRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Component_DeleteAccessControlledDoorWSResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Delete the specified access controlled door",
        "tags": [
          "Component Webservice"
        ]
      }
    },
    "/api/component/deleteComponent": {
      "post": {
        "description": "Delete a component",
        "operationId": "deleteComponent",
        "parameters": [
          {
            "$ref": "#/components/parameters/XAuthSchemeParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Component_DeleteComponentWSRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Component_DeleteComponentWSResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Delete a component",
        "tags": [
          "Component Webservice"
        ]
      }
    },
    "/api/component/deleteComponentsByOwnerDevice": {
      "post": {
        "description": "Delete all components owned by the specified device",
        "operationId": "deleteComponentsByOwnerDevice",
        "parameters": [
          {
            "$ref": "#/components/parameters/XAuthSchemeParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Component_DeleteComponentsByOwnerDeviceWSRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Component_DeleteComponentsByOwnerDeviceWSResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Delete all components owned by the specified device",
        "tags": [
          "Component Webservice"
        ]
      }
    },
    "/api/component/findAccessControlledDoorShadows": {
      "post": {
        "description": "Find access controlled door shadows within the org",
        "operationId": "findAccessControlledDoorShadows",
        "parameters": [
          {
            "$ref": "#/components/parameters/XAuthSchemeParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Component_FindAccessControlledDoorShadowsWSRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Component_FindAccessControlledDoorShadowsWSResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Find access controlled door shadows within the org",
        "tags": [
          "Component Webservice"
        ]
      }
    },
    "/api/component/findAccessControlledDoorShadowsByLocation": {
      "post": {
        "description": "Find access controlled door shadows within the specified location",
        "operationId": "findAccessControlledDoorShadowsByLocation",
        "parameters": [
          {
            "$ref": "#/components/parameters/XAuthSchemeParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Component_FindAccessControlledDoorShadowsByLocationWSRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Component_FindAccessControlledDoorShadowsByLocationWSResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Find access controlled door shadows within the specified location",
        "tags": [
          "Component Webservice"
        ]
      }
    },
    "/api/component/findAccessControlledDoors": {
      "post": {
        "description": "Find access controlled doors within the org",
        "operationId": "findAccessControlledDoors",
        "parameters": [
          {
            "$ref": "#/components/parameters/XAuthSchemeParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Component_FindAccessControlledDoorsWSRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Component_FindAccessControlledDoorsWSResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Find access controlled doors within the org",
        "tags": [
          "Component Webservice"
        ]
      }
    },
    "/api/component/findAccessControlledDoorsByLocation": {
      "post": {
        "description": "Find access controlled doors within the specified location",
        "operationId": "findAccessControlledDoorsByLocation",
        "parameters": [
          {
            "$ref": "#/components/parameters/XAuthSchemeParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Component_FindAccessControlledDoorsByLocationWSRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Component_FindAccessControlledDoorsByLocationWSResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Find access controlled doors within the specified location",
        "tags": [
          "Component Webservice"
        ]
      }
    },
    "/api/component/findAccessControlledDoorsByOwnerDevice": {
      "post": {
        "description": "Find access controlled doors for the specified owner device",
        "operationId": "findAccessControlledDoorsByOwnerDevice",
        "parameters": [
          {
            "$ref": "#/components/parameters/XAuthSchemeParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Component_FindAccessControlledDoorsByOwnerDeviceWSRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Component_FindAccessControlledDoorsByOwnerDeviceWSResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Find access controlled doors for the specified owner device",
        "tags": [
          "Component Webservice"
        ]
      }
    },
    "/api/component/findAllComponentShadows": {
      "post": {
        "description": "Retrieve all component shadows for the specified component uuids",
        "operationId": "findAllComponentShadows",
        "parameters": [
          {
            "$ref": "#/components/parameters/XAuthSchemeParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Component_FindAllComponentShadowsWSRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Component_FindAllComponentShadowsWSResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Retrieve all component shadows for the specified component uuids",
        "tags": [
          "Component Webservice"
        ]
      }
    },
    "/api/component/findComponentEventsByAccessControlledDoor": {
      "post": {
        "description": "Retrieve all component events relevant to the specified AccessControlledDoor",
        "operationId": "findComponentEventsByAccessControlledDoor",
        "parameters": [
          {
            "$ref": "#/components/parameters/XAuthSchemeParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Component_FindComponentEventsByAccessControlledDoorWSRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Component_FindComponentEventsByAccessControlledDoorWSResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Retrieve all component events relevant to the specified AccessControlledDoor",
        "tags": [
          "Component Webservice"
        ]
      }
    },
    "/api/component/findComponentEventsByApiToken": {
      "post": {
        "description": "Retrieve all component events relevant to the specified api token",
        "operationId": "findComponentEventsByApiToken",
        "parameters": [
          {
            "$ref": "#/components/parameters/XAuthSchemeParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Component_FindComponentEventsByApiTokenWSRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Component_FindComponentEventsByApiTokenWSResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Retrieve all component events relevant to the specified api token",
        "tags": [
          "Component Webservice"
        ]
      }
    },
    "/api/component/findComponentEventsByComponent": {
      "post": {
        "description": "Retrieve all component events relevant to the specified component",
        "operationId": "findComponentEventsByComponent",
        "parameters": [
          {
            "$ref": "#/components/parameters/XAuthSchemeParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Component_FindComponentEventsByComponentWSRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Component_FindComponentEventsByComponentWSResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Retrieve all component events relevant to the specified component",
        "tags": [
          "Component Webservice"
        ]
      }
    },
    "/api/component/findComponentEventsByCorrelation": {
      "post": {
        "description": "Retrieve all component events relevant to the specified correlation id",
        "operationId": "findComponentEventsByCorrelation",
        "parameters": [
          {
            "$ref": "#/components/parameters/XAuthSchemeParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Component_FindComponentEventsByCorrelationWSRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Component_FindComponentEventsByCorrelationWSResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Retrieve all component events relevant to the specified correlation id",
        "tags": [
          "Component Webservice"
        ]
      }
    },
    "/api/component/findComponentEventsByCredentialHexValue": {
      "post": {
        "description": "Retrieve all component events relevant to the specified credential hex value",
        "operationId": "findComponentEventsByCredentialHexValue",
        "parameters": [
          {
            "$ref": "#/components/parameters/XAuthSchemeParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Component_FindComponentEventsByCredentialHexValueWSRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Component_FindComponentEventsByCredentialHexValueWSResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Retrieve all component events relevant to the specified credential hex value",
        "tags": [
          "Component Webservice"
        ]
      }
    },
    "/api/component/findComponentEventsByCredentialUuid": {
      "post": {
        "description": "Retrieve all component events relevant to the specified credential uuid",
        "operationId": "findComponentEventsByCredentialUuid",
        "parameters": [
          {
            "$ref": "#/components/parameters/XAuthSchemeParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Component_FindComponentEventsByCredentialUuidWSRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Component_FindComponentEventsByCredentialUuidWSResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Retrieve all component events relevant to the specified credential uuid",
        "tags": [
          "Component Webservice"
        ]
      }
    },
    "/api/component/findComponentEventsByCredentialValue": {
      "post": {
        "description": "Retrieve all component events relevant to the specified credential value",
        "operationId": "findComponentEventsByCredentialValue",
        "parameters": [
          {
            "$ref": "#/components/parameters/XAuthSchemeParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Component_FindComponentEventsByCredentialValueWSRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Component_FindComponentEventsByCredentialValueWSResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Retrieve all component events relevant to the specified credential value",
        "tags": [
          "Component Webservice"
        ]
      }
    },
    "/api/component/findComponentEventsByLocation": {
      "post": {
        "description": "Retrieve all component events relevant to the specified location",
        "operationId": "findComponentEventsByLocation",
        "parameters": [
          {
            "$ref": "#/components/parameters/XAuthSchemeParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Component_FindComponentEventsByLocationWSRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Component_FindComponentEventsByLocationWSResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Retrieve all component events relevant to the specified location",
        "tags": [
          "Component Webservice"
        ]
      }
    },
    "/api/component/findComponentEventsByOwnerDevice": {
      "post": {
        "deprecated": true,
        "description": "Retrieve all component events relevant to the specified owner device (i.e. DC20's device uuid)",
        "operationId": "findComponentEventsByOwnerDevice",
        "parameters": [
          {
            "$ref": "#/components/parameters/XAuthSchemeParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Component_FindComponentEventsByOwnerDeviceWSRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Component_FindComponentEventsByOwnerDeviceWSResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Retrieve all component events relevant to the specified owner device (deprecated)",
        "tags": [
          "Component Webservice"
        ]
      }
    },
    "/api/component/findComponentEventsBySupportAuthority": {
      "post": {
        "description": "Retrieve all component events relevant to the specified api token",
        "operationId": "findComponentEventsBySupportAuthority",
        "parameters": [
          {
            "$ref": "#/components/parameters/XAuthSchemeParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Component_FindComponentEventsBySupportAuthorityWSRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Component_FindComponentEventsBySupportAuthorityWSResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Retrieve all component events relevant to the specified support authority",
        "tags": [
          "Component Webservice"
        ]
      }
    },
    "/api/component/findComponentEventsByUser": {
      "post": {
        "description": "Retrieve all component events relevant to the specified User",
        "operationId": "findComponentEventsByUser",
        "parameters": [
          {
            "$ref": "#/components/parameters/XAuthSchemeParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Component_FindComponentEventsByUserWSRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Component_FindComponentEventsByUserWSResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Retrieve all component events relevant to the specified User",
        "tags": [
          "Component Webservice"
        ]
      }
    },
    "/api/component/findComponentEventsForVideoIntercom": {
      "post": {
        "description": "Retrieve all component events relevant to the specified Video Intercom and optional AccessControlledDoor",
        "operationId": "findComponentEventsForVideoIntercom",
        "parameters": [
          {
            "$ref": "#/components/parameters/XAuthSchemeParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Component_FindComponentEventsForVideoIntercomWSRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Component_FindComponentEventsForVideoIntercomWSResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Retrieve all component events relevant to the specified Video Intercom and optional AccessControlledDoor",
        "tags": [
          "Component Webservice"
        ]
      }
    },
    "/api/component/findComponentSeekPointsByAccessControlledDoor": {
      "post": {
        "description": "Find component seekpoints by access controlled door",
        "operationId": "findComponentSeekPointsByAccessControlledDoor",
        "parameters": [
          {
            "$ref": "#/components/parameters/XAuthSchemeParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Component_FindComponentSeekPointsByAccessControlledDoorWSRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Component_FindComponentSeekPointsByAccessControlledDoorWSResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Find component seekpoints by access controlled door",
        "tags": [
          "Component Webservice"
        ]
      }
    },
    "/api/component/findComponentSeekPointsByAccessControlledDoors": {
      "post": {
        "description": "Find component seekpoints by access controlled doors",
        "operationId": "findComponentSeekPointsByAccessControlledDoors",
        "parameters": [
          {
            "$ref": "#/components/parameters/XAuthSchemeParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Component_FindComponentSeekPointsByAccessControlledDoorsWSRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Component_FindComponentSeekPointsByAccessControlledDoorsWSResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Find component seekpoints by access controlled doors",
        "tags": [
          "Component Webservice"
        ]
      }
    },
    "/api/component/findComponentSeekPointsByComponent": {
      "post": {
        "description": "Find component seekpoints by component",
        "operationId": "findComponentSeekPointsByComponent",
        "parameters": [
          {
            "$ref": "#/components/parameters/XAuthSchemeParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Component_FindComponentSeekPointsByComponentWSRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Component_FindComponentSeekPointsByComponentWSResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Find component seekpoints by component",
        "tags": [
          "Component Webservice"
        ]
      }
    },
    "/api/component/findComponentSeekPointsByLocation": {
      "post": {
        "description": "Find component seekpoints by location",
        "operationId": "findComponentSeekPointsByLocation",
        "parameters": [
          {
            "$ref": "#/components/parameters/XAuthSchemeParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Component_FindComponentSeekPointsByLocationWSRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Component_FindComponentSeekPointsByLocationWSResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Find component seekpoints by location",
        "tags": [
          "Component Webservice"
        ]
      }
    },
    "/api/component/findComponentSeekPointsByOwnerDevice": {
      "post": {
        "description": "Find component seekpoints by owner device",
        "operationId": "findComponentSeekPointsByOwnerDevice",
        "parameters": [
          {
            "$ref": "#/components/parameters/XAuthSchemeParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Component_FindComponentSeekPointsByOwnerDeviceWSRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Component_FindComponentSeekPointsByOwnerDeviceWSResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Find component seekpoints by owner device",
        "tags": [
          "Component Webservice"
        ]
      }
    },
    "/api/component/findComponentSeekPointsByUser": {
      "post": {
        "description": "Find component seekpoints by user",
        "operationId": "findComponentSeekPointsByUser",
        "parameters": [
          {
            "$ref": "#/components/parameters/XAuthSchemeParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Component_FindComponentSeekPointsByUserWSRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Component_FindComponentSeekPointsByUserWSResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Find component seekpoints by user",
        "tags": [
          "Component Webservice"
        ]
      }
    },
    "/api/component/findComponentShadowsByOwnerDevice": {
      "post": {
        "description": "Retrieve component shadows by the specified owner device uuid",
        "operationId": "findComponentShadowsByOwnerDevice",
        "parameters": [
          {
            "$ref": "#/components/parameters/XAuthSchemeParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Component_FindComponentShadowsByOwnerDeviceWSRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Component_FindComponentShadowsByOwnerDeviceWSResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Retrieve component shadows by the specified owner device uuid",
        "tags": [
          "Component Webservice"
        ]
      }
    },
    "/api/component/findComponentsByOwnerDevice": {
      "post": {
        "description": "Retrieve a list of components owned by a Rhombus device (i.e. DC20's device uuid)",
        "operationId": "findComponentsByOwnerDevice",
        "parameters": [
          {
            "$ref": "#/components/parameters/XAuthSchemeParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Component_FindComponentsByOwnerDeviceWSRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Component_FindComponentsByOwnerDeviceWSResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Retrieve a list of components owned by a Rhombus device",
        "tags": [
          "Component Webservice"
        ]
      }
    },
    "/api/component/findMinimalStateAccessControlledDoors": {
      "post": {
        "description": "Find minimal state access controlled doors within the org",
        "operationId": "findMinimalStateAccessControlledDoors",
        "parameters": [
          {
            "$ref": "#/components/parameters/XAuthSchemeParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Component_FindMinimalStateAccessControlledDoorsWSRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Component_FindMinimalStateAccessControlledDoorsWSResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Find minimal state access controlled doors within the org",
        "tags": [
          "Component Webservice"
        ]
      }
    },
    "/api/component/findMinimalStateAccessControlledDoorsByLocation": {
      "post": {
        "description": "Find minimal state access controlled doors within the specified location",
        "operationId": "findMinimalStateAccessControlledDoorsByLocation",
        "parameters": [
          {
            "$ref": "#/components/parameters/XAuthSchemeParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Component_FindMinimalStateAccessControlledDoorsByLocationWSRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Component_FindMinimalStateAccessControlledDoorsByLocationWSResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Find minimal state access controlled doors within the specified location",
        "tags": [
          "Component Webservice"
        ]
      }
    },
    "/api/component/getAccessControlledDoorLabelsForOrg": {
      "post": {
        "description": "Get all access controlled door labels for the organization",
        "operationId": "getAccessControlledDoorLabelsForOrg",
        "parameters": [
          {
            "$ref": "#/components/parameters/XAuthSchemeParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Component_GetAccessControlledDoorLabelsForOrgWSRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Component_GetAccessControlledDoorLabelsForOrgWSResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Get all access controlled door labels for the organization",
        "tags": [
          "Component Webservice"
        ]
      }
    },
    "/api/component/getOrCreateDevicePhysicalPortConfig": {
      "post": {
        "description": "Gets a physical port layout for the specified device, components owned by that device and details about the port configuration validity. Map is instantiated if it doesn't currently exist as part of the call.",
        "operationId": "getOrCreateDevicePhysicalPortConfig",
        "parameters": [
          {
            "$ref": "#/components/parameters/XAuthSchemeParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Component_GetOrCreateDevicePhysicalPortConfigWSRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Component_GetOrCreateDevicePhysicalPortConfigWSResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Get or create device physical port config",
        "tags": [
          "Component Webservice"
        ]
      }
    },
    "/api/component/removeAccessControlledDoorLabel": {
      "post": {
        "description": "Remove a label to an access controlled door",
        "operationId": "removeAccessControlledDoorLabel",
        "parameters": [
          {
            "$ref": "#/components/parameters/XAuthSchemeParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Component_RemoveAccessControlledDoorLabelWSRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Component_RemoveAccessControlledDoorLabelWSResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Remove a label to an access controlled door",
        "tags": [
          "Component Webservice"
        ]
      }
    },
    "/api/component/updateAccessControlledDoor": {
      "post": {
        "description": "Updates an access controlled door",
        "operationId": "updateAccessControlledDoor",
        "parameters": [
          {
            "$ref": "#/components/parameters/XAuthSchemeParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Component_UpdateAccessControlledDoorWSRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Component_UpdateAccessControlledDoorWSResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Updates an access controlled door",
        "tags": [
          "Component Webservice"
        ]
      }
    },
    "/api/component/updateIntegratedDoorPositionIndicator": {
      "post": {
        "description": "Update a door position indicator component",
        "operationId": "updateIntegratedDoorPositionIndicator",
        "parameters": [
          {
            "$ref": "#/components/parameters/XAuthSchemeParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Component_UpdateIntegratedDoorPositionIndicatorWSRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Component_UpdateIntegratedDoorPositionIndicatorWSResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Update a door position indicator component",
        "tags": [
          "Component Webservice"
        ]
      }
    },
    "/api/component/updateIntegratedDoorRelay": {
      "post": {
        "description": "Update a door relay component",
        "operationId": "updateIntegratedDoorRelay",
        "parameters": [
          {
            "$ref": "#/components/parameters/XAuthSchemeParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Component_UpdateIntegratedDoorRelayWSRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Component_UpdateIntegratedDoorRelayWSResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Update a door relay component",
        "tags": [
          "Component Webservice"
        ]
      }
    },
    "/api/component/updateIntegratedGenericButton": {
      "post": {
        "description": "Update a generic button component",
        "operationId": "updateIntegratedGenericButton",
        "parameters": [
          {
            "$ref": "#/components/parameters/XAuthSchemeParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Component_UpdateIntegratedGenericButtonWSRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Component_UpdateIntegratedGenericButtonWSResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Update a generic button component",
        "tags": [
          "Component Webservice"
        ]
      }
    },
    "/api/component/updateIntegratedGenericInput": {
      "post": {
        "description": "Update a generic input component",
        "operationId": "updateIntegratedGenericInput",
        "parameters": [
          {
            "$ref": "#/components/parameters/XAuthSchemeParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Component_UpdateIntegratedGenericInputWSRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Component_UpdateIntegratedGenericInputWSResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Update a generic input component",
        "tags": [
          "Component Webservice"
        ]
      }
    },
    "/api/component/updateIntegratedGenericRelay": {
      "post": {
        "description": "Update a generic relay component",
        "operationId": "updateIntegratedGenericRelay",
        "parameters": [
          {
            "$ref": "#/components/parameters/XAuthSchemeParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Component_UpdateIntegratedGenericRelayWSRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Component_UpdateIntegratedGenericRelayWSResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Update a generic relay component",
        "tags": [
          "Component Webservice"
        ]
      }
    },
    "/api/component/updateIntegratedGenericRelaySteadyState": {
      "post": {
        "description": "Update a generic relay component's steady state",
        "operationId": "updateIntegratedGenericRelaySteadyState",
        "parameters": [
          {
            "$ref": "#/components/parameters/XAuthSchemeParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Component_UpdateIntegratedGenericRelaySteadyStateWSRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Component_UpdateIntegratedGenericRelaySteadyStateWSResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Update a generic relay component's steady state",
        "tags": [
          "Component Webservice"
        ]
      }
    },
    "/api/component/updateIntegratedGenericRelayTransientState": {
      "post": {
        "description": "Activate a generic relay for a brief period",
        "operationId": "updateIntegratedGenericRelayTransientState",
        "parameters": [
          {
            "$ref": "#/components/parameters/XAuthSchemeParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Component_UpdateIntegratedGenericRelayTransientStateWSRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Component_UpdateIntegratedGenericRelayTransientStateWSResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Activate a generic relay for a brief period",
        "tags": [
          "Component Webservice"
        ]
      }
    },
    "/api/component/updateIntegratedRequestToExit": {
      "post": {
        "description": "Update a request to exit component",
        "operationId": "updateIntegratedRequestToExit",
        "parameters": [
          {
            "$ref": "#/components/parameters/XAuthSchemeParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Component_UpdateIntegratedRequestToExitWSRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Component_UpdateIntegratedRequestToExitWSResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Update a request to exit component",
        "tags": [
          "Component Webservice"
        ]
      }
    },
    "/api/component/updateOsdpDoorReader": {
      "post": {
        "description": "Update a third party OSDP Reader component",
        "operationId": "updateOsdpDoorReader",
        "parameters": [
          {
            "$ref": "#/components/parameters/XAuthSchemeParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Component_UpdateOsdpReaderWSRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Component_UpdateOsdpReaderWSResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Update a third party OSDP Reader component",
        "tags": [
          "Component Webservice"
        ]
      }
    },
    "/api/component/updateRhombusOsdpDoorReader": {
      "post": {
        "description": "Update a Rhombus OSDP Reader component",
        "operationId": "updateRhombusOsdpDoorReader",
        "parameters": [
          {
            "$ref": "#/components/parameters/XAuthSchemeParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Component_UpdateRhombusOsdpReaderWSRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Component_UpdateRhombusOsdpReaderWSResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Update a Rhombus OSDP Reader component",
        "tags": [
          "Component Webservice"
        ]
      }
    },
    "/api/component/updateWiegandDoorReader": {
      "post": {
        "description": "Update a third party Wiegand Reader component",
        "operationId": "updateWiegandDoorReader",
        "parameters": [
          {
            "$ref": "#/components/parameters/XAuthSchemeParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Component_UpdateWiegandReaderWSRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Component_UpdateWiegandReaderWSResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Update a third party Wiegand Reader component",
        "tags": [
          "Component Webservice"
        ]
      }
    }
  },
  "endpoints": [
    {
      "path": "/api/component/addAccessControlledDoorLabel",
      "methods": [
        "post"
      ]
    },
    {
      "path": "/api/component/createAccessControlledDoor",
      "methods": [
        "post"
      ]
    },
    {
      "path": "/api/component/createAccessControlledDoorSeekpoints",
      "methods": [
        "post"
      ]
    },
    {
      "path": "/api/component/createIntegratedDoorPositionIndicator",
      "methods": [
        "post"
      ]
    },
    {
      "path": "/api/component/createIntegratedDoorRelay",
      "methods": [
        "post"
      ]
    },
    {
      "path": "/api/component/createIntegratedGenericButton",
      "methods": [
        "post"
      ]
    },
    {
      "path": "/api/component/createIntegratedGenericInput",
      "methods": [
        "post"
      ]
    },
    {
      "path": "/api/component/createIntegratedGenericRelay",
      "methods": [
        "post"
      ]
    },
    {
      "path": "/api/component/createIntegratedRequestToExit",
      "methods": [
        "post"
      ]
    },
    {
      "path": "/api/component/createOsdpDoorReader",
      "methods": [
        "post"
      ]
    },
    {
      "path": "/api/component/createRhombusOsdpDoorReader",
      "methods": [
        "post"
      ]
    },
    {
      "path": "/api/component/createWiegandReader",
      "methods": [
        "post"
      ]
    },
    {
      "path": "/api/component/deleteAccessControlledDoor",
      "methods": [
        "post"
      ]
    },
    {
      "path": "/api/component/deleteComponent",
      "methods": [
        "post"
      ]
    },
    {
      "path": "/api/component/deleteComponentsByOwnerDevice",
      "methods": [
        "post"
      ]
    },
    {
      "path": "/api/component/findAccessControlledDoorShadows",
      "methods": [
        "post"
      ]
    },
    {
      "path": "/api/component/findAccessControlledDoorShadowsByLocation",
      "methods": [
        "post"
      ]
    },
    {
      "path": "/api/component/findAccessControlledDoors",
      "methods": [
        "post"
      ]
    },
    {
      "path": "/api/component/findAccessControlledDoorsByLocation",
      "methods": [
        "post"
      ]
    },
    {
      "path": "/api/component/findAccessControlledDoorsByOwnerDevice",
      "methods": [
        "post"
      ]
    },
    {
      "path": "/api/component/findAllComponentShadows",
      "methods": [
        "post"
      ]
    },
    {
      "path": "/api/component/findComponentEventsByAccessControlledDoor",
      "methods": [
        "post"
      ]
    },
    {
      "path": "/api/component/findComponentEventsByApiToken",
      "methods": [
        "post"
      ]
    },
    {
      "path": "/api/component/findComponentEventsByComponent",
      "methods": [
        "post"
      ]
    },
    {
      "path": "/api/component/findComponentEventsByCorrelation",
      "methods": [
        "post"
      ]
    },
    {
      "path": "/api/component/findComponentEventsByCredentialHexValue",
      "methods": [
        "post"
      ]
    },
    {
      "path": "/api/component/findComponentEventsByCredentialUuid",
      "methods": [
        "post"
      ]
    },
    {
      "path": "/api/component/findComponentEventsByCredentialValue",
      "methods": [
        "post"
      ]
    },
    {
      "path": "/api/component/findComponentEventsByLocation",
      "methods": [
        "post"
      ]
    },
    {
      "path": "/api/component/findComponentEventsByOwnerDevice",
      "methods": [
        "post"
      ]
    },
    {
      "path": "/api/component/findComponentEventsBySupportAuthority",
      "methods": [
        "post"
      ]
    },
    {
      "path": "/api/component/findComponentEventsByUser",
      "methods": [
        "post"
      ]
    },
    {
      "path": "/api/component/findComponentEventsForVideoIntercom",
      "methods": [
        "post"
      ]
    },
    {
      "path": "/api/component/findComponentSeekPointsByAccessControlledDoor",
      "methods": [
        "post"
      ]
    },
    {
      "path": "/api/component/findComponentSeekPointsByAccessControlledDoors",
      "methods": [
        "post"
      ]
    },
    {
      "path": "/api/component/findComponentSeekPointsByComponent",
      "methods": [
        "post"
      ]
    },
    {
      "path": "/api/component/findComponentSeekPointsByLocation",
      "methods": [
        "post"
      ]
    },
    {
      "path": "/api/component/findComponentSeekPointsByOwnerDevice",
      "methods": [
        "post"
      ]
    },
    {
      "path": "/api/component/findComponentSeekPointsByUser",
      "methods": [
        "post"
      ]
    },
    {
      "path": "/api/component/findComponentShadowsByOwnerDevice",
      "methods": [
        "post"
      ]
    },
    {
      "path": "/api/component/findComponentsByOwnerDevice",
      "methods": [
        "post"
      ]
    },
    {
      "path": "/api/component/findMinimalStateAccessControlledDoors",
      "methods": [
        "post"
      ]
    },
    {
      "path": "/api/component/findMinimalStateAccessControlledDoorsByLocation",
      "methods": [
        "post"
      ]
    },
    {
      "path": "/api/component/getAccessControlledDoorLabelsForOrg",
      "methods": [
        "post"
      ]
    },
    {
      "path": "/api/component/getOrCreateDevicePhysicalPortConfig",
      "methods": [
        "post"
      ]
    },
    {
      "path": "/api/component/removeAccessControlledDoorLabel",
      "methods": [
        "post"
      ]
    },
    {
      "path": "/api/component/updateAccessControlledDoor",
      "methods": [
        "post"
      ]
    },
    {
      "path": "/api/component/updateIntegratedDoorPositionIndicator",
      "methods": [
        "post"
      ]
    },
    {
      "path": "/api/component/updateIntegratedDoorRelay",
      "methods": [
        "post"
      ]
    },
    {
      "path": "/api/component/updateIntegratedGenericButton",
      "methods": [
        "post"
      ]
    },
    {
      "path": "/api/component/updateIntegratedGenericInput",
      "methods": [
        "post"
      ]
    },
    {
      "path": "/api/component/updateIntegratedGenericRelay",
      "methods": [
        "post"
      ]
    },
    {
      "path": "/api/component/updateIntegratedGenericRelaySteadyState",
      "methods": [
        "post"
      ]
    },
    {
      "path": "/api/component/updateIntegratedGenericRelayTransientState",
      "methods": [
        "post"
      ]
    },
    {
      "path": "/api/component/updateIntegratedRequestToExit",
      "methods": [
        "post"
      ]
    },
    {
      "path": "/api/component/updateOsdpDoorReader",
      "methods": [
        "post"
      ]
    },
    {
      "path": "/api/component/updateRhombusOsdpDoorReader",
      "methods": [
        "post"
      ]
    },
    {
      "path": "/api/component/updateWiegandDoorReader",
      "methods": [
        "post"
      ]
    }
  ],
  "endpointCount": 58,
  "referencedSchemas": [
    "Component_AddAccessControlledDoorLabelWSRequest",
    "Component_AddAccessControlledDoorLabelWSResponse",
    "Component_CreateAccessControlledDoorSeekpointsWSRequest",
    "Component_CreateAccessControlledDoorSeekpointsWSResponse",
    "Component_CreateAccessControlledDoorWSRequest",
    "Component_CreateAccessControlledDoorWSResponse",
    "Component_CreateIntegratedDoorPositionIndicatorWSRequest",
    "Component_CreateIntegratedDoorPositionIndicatorWSResponse",
    "Component_CreateIntegratedDoorRelayWSRequest",
    "Component_CreateIntegratedDoorRelayWSResponse",
    "Component_CreateIntegratedGenericButtonWSRequest",
    "Component_CreateIntegratedGenericButtonWSResponse",
    "Component_CreateIntegratedGenericInputWSRequest",
    "Component_CreateIntegratedGenericInputWSResponse",
    "Component_CreateIntegratedGenericRelayWSRequest",
    "Component_CreateIntegratedGenericRelayWSResponse",
    "Component_CreateIntegratedRequestToExitWSRequest",
    "Component_CreateIntegratedRequestToExitWSResponse",
    "Component_CreateOsdpReaderWSRequest",
    "Component_CreateOsdpReaderWSResponse",
    "Component_CreateRhombusOsdpReaderWSRequest",
    "Component_CreateRhombusOsdpReaderWSResponse",
    "Component_CreateWiegandReaderWSRequest",
    "Component_CreateWiegandReaderWSResponse",
    "Component_DeleteAccessControlledDoorWSRequest",
    "Component_DeleteAccessControlledDoorWSResponse",
    "Component_DeleteComponentWSRequest",
    "Component_DeleteComponentWSResponse",
    "Component_DeleteComponentsByOwnerDeviceWSRequest",
    "Component_DeleteComponentsByOwnerDeviceWSResponse",
    "Component_FindAccessControlledDoorShadowsByLocationWSRequest",
    "Component_FindAccessControlledDoorShadowsByLocationWSResponse",
    "Component_FindAccessControlledDoorShadowsWSRequest",
    "Component_FindAccessControlledDoorShadowsWSResponse",
    "Component_FindAccessControlledDoorsByLocationWSRequest",
    "Component_FindAccessControlledDoorsByLocationWSResponse",
    "Component_FindAccessControlledDoorsByOwnerDeviceWSRequest",
    "Component_FindAccessControlledDoorsByOwnerDeviceWSResponse",
    "Component_FindAccessControlledDoorsWSRequest",
    "Component_FindAccessControlledDoorsWSResponse",
    "Component_FindAllComponentShadowsWSRequest",
    "Component_FindAllComponentShadowsWSResponse",
    "Component_FindComponentEventsByAccessControlledDoorWSRequest",
    "Component_FindComponentEventsByAccessControlledDoorWSResponse",
    "Component_FindComponentEventsByApiTokenWSRequest",
    "Component_FindComponentEventsByApiTokenWSResponse",
    "Component_FindComponentEventsByComponentWSRequest",
    "Component_FindComponentEventsByComponentWSResponse",
    "Component_FindComponentEventsByCorrelationWSRequest",
    "Component_FindComponentEventsByCorrelationWSResponse",
    "Component_FindComponentEventsByCredentialHexValueWSRequest",
    "Component_FindComponentEventsByCredentialHexValueWSResponse",
    "Component_FindComponentEventsByCredentialUuidWSRequest",
    "Component_FindComponentEventsByCredentialUuidWSResponse",
    "Component_FindComponentEventsByCredentialValueWSRequest",
    "Component_FindComponentEventsByCredentialValueWSResponse",
    "Component_FindComponentEventsByLocationWSRequest",
    "Component_FindComponentEventsByLocationWSResponse",
    "Component_FindComponentEventsByOwnerDeviceWSRequest",
    "Component_FindComponentEventsByOwnerDeviceWSResponse",
    "Component_FindComponentEventsBySupportAuthorityWSRequest",
    "Component_FindComponentEventsBySupportAuthorityWSResponse",
    "Component_FindComponentEventsByUserWSRequest",
    "Component_FindComponentEventsByUserWSResponse",
    "Component_FindComponentEventsForVideoIntercomWSRequest",
    "Component_FindComponentEventsForVideoIntercomWSResponse",
    "Component_FindComponentSeekPointsByAccessControlledDoorWSRequest",
    "Component_FindComponentSeekPointsByAccessControlledDoorWSResponse",
    "Component_FindComponentSeekPointsByAccessControlledDoorsWSRequest",
    "Component_FindComponentSeekPointsByAccessControlledDoorsWSResponse",
    "Component_FindComponentSeekPointsByComponentWSRequest",
    "Component_FindComponentSeekPointsByComponentWSResponse",
    "Component_FindComponentSeekPointsByLocationWSRequest",
    "Component_FindComponentSeekPointsByLocationWSResponse",
    "Component_FindComponentSeekPointsByOwnerDeviceWSRequest",
    "Component_FindComponentSeekPointsByOwnerDeviceWSResponse",
    "Component_FindComponentSeekPointsByUserWSRequest",
    "Component_FindComponentSeekPointsByUserWSResponse",
    "Component_FindComponentShadowsByOwnerDeviceWSRequest",
    "Component_FindComponentShadowsByOwnerDeviceWSResponse",
    "Component_FindComponentsByOwnerDeviceWSRequest",
    "Component_FindComponentsByOwnerDeviceWSResponse",
    "Component_FindMinimalStateAccessControlledDoorsByLocationWSRequest",
    "Component_FindMinimalStateAccessControlledDoorsByLocationWSResponse",
    "Component_FindMinimalStateAccessControlledDoorsWSRequest",
    "Component_FindMinimalStateAccessControlledDoorsWSResponse",
    "Component_GetAccessControlledDoorLabelsForOrgWSRequest",
    "Component_GetAccessControlledDoorLabelsForOrgWSResponse",
    "Component_GetOrCreateDevicePhysicalPortConfigWSRequest",
    "Component_GetOrCreateDevicePhysicalPortConfigWSResponse",
    "Component_RemoveAccessControlledDoorLabelWSRequest",
    "Component_RemoveAccessControlledDoorLabelWSResponse",
    "Component_UpdateAccessControlledDoorWSRequest",
    "Component_UpdateAccessControlledDoorWSResponse",
    "Component_UpdateIntegratedDoorPositionIndicatorWSRequest",
    "Component_UpdateIntegratedDoorPositionIndicatorWSResponse",
    "Component_UpdateIntegratedDoorRelayWSRequest",
    "Component_UpdateIntegratedDoorRelayWSResponse",
    "Component_UpdateIntegratedGenericButtonWSRequest",
    "Component_UpdateIntegratedGenericButtonWSResponse",
    "Component_UpdateIntegratedGenericInputWSRequest",
    "Component_UpdateIntegratedGenericInputWSResponse",
    "Component_UpdateIntegratedGenericRelaySteadyStateWSRequest",
    "Component_UpdateIntegratedGenericRelaySteadyStateWSResponse",
    "Component_UpdateIntegratedGenericRelayTransientStateWSRequest",
    "Component_UpdateIntegratedGenericRelayTransientStateWSResponse",
    "Component_UpdateIntegratedGenericRelayWSRequest",
    "Component_UpdateIntegratedGenericRelayWSResponse",
    "Component_UpdateIntegratedRequestToExitWSRequest",
    "Component_UpdateIntegratedRequestToExitWSResponse",
    "Component_UpdateOsdpReaderWSRequest",
    "Component_UpdateOsdpReaderWSResponse",
    "Component_UpdateRhombusOsdpReaderWSRequest",
    "Component_UpdateRhombusOsdpReaderWSResponse",
    "Component_UpdateWiegandReaderWSRequest",
    "Component_UpdateWiegandReaderWSResponse"
  ]
}
